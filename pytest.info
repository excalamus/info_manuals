This is pytest.info, produced by makeinfo version 6.7 from pytest.texi.

     pytest 7.1, Sep 24, 2022

     Holger Krekel
     Benjamin Peterson
     Ronny Pfannschmidt
     Floris Bruynooghe
     others

     Copyright © 2015, holger krekel and pytest-dev team

INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* pytest: (pytest.info). simple powerful testing with Python
END-INFO-DIR-ENTRY


   Generated by Sphinx 5.1.1.


File: pytest.info,  Node: Top,  Next: Get Started,  Up: (dir)

pytest Documentation
********************

     pytest 7.1, Sep 24, 2022

     Holger Krekel
     Benjamin Peterson
     Ronny Pfannschmidt
     Floris Bruynooghe
     others

     Copyright © 2015, holger krekel and pytest-dev team

* Menu:

* Get Started::
* How to invoke pytest::
* How to write and report assertions in tests::
* How to use fixtures::
* How to mark test functions with attributes::
* How to parametrize fixtures and test functions::
* How to use temporary directories and files in tests::
* How to monkeypatch/mock modules and environments::
* How to run doctests::
* How to re-run failed tests and maintain state between test runs::
* How to manage logging::
* How to capture stdout/stderr output::
* How to capture warnings::
* How to use skip and xfail to deal with tests that cannot succeed::
* How to install and use plugins::
* Writing plugins::
* Writing hook functions::
* How to use pytest with an existing test suite::
* How to use unittest-based tests with pytest::
* How to run tests written for nose::
* How to implement xunit-style set-up::
* How to set up bash completion::
* Fixtures reference::
* Plugin List::
* Configuration::
* API Reference: API Reference<2>.
* Anatomy of a test::
* About fixtures::
* Good Integration Practices::
* Flaky tests::
* pytest import mechanisms and sys.path/PYTHONPATH: pytest import mechanisms and sys path/PYTHONPATH.
* Examples and customization tricks::
* Backwards Compatibility Policy::
* History::
* Python version support::
* Deprecations and Removals::
* Contribution getting started::
* Development Guide::
* Sponsor::
* pytest for enterprise::
* License::
* Contact channels::
* History: History<2>.
* Historical Notes::
* Talks and Tutorials::
* Release announcements::
* Changelog::
* Index::

 — The Detailed Node Listing —

Get Started

* Install pytest::
* Create your first test::
* Run multiple tests::
* Assert that a certain exception is raised::
* Group multiple tests in a class::
* Request a unique temporary directory for functional tests::
* Continue reading::

How to invoke pytest

* Specifying which tests to run::
* Getting help on version, option names, environment variables: Getting help on version option names environment variables.
* Profiling test execution duration::
* Managing loading of plugins::
* Other ways of calling pytest::

Managing loading of plugins

* Early loading plugins::
* Disabling plugins::

Other ways of calling pytest

* Calling pytest through python -m pytest::
* Calling pytest from Python code::

How to write and report assertions in tests

* Asserting with the assert statement::
* Assertions about expected exceptions::
* Assertions about expected warnings::
* Making use of context-sensitive comparisons::
* Defining your own explanation for failed assertions::
* Assertion introspection details::

Assertion introspection details

* Assertion rewriting caches files on disk::
* Disabling assert rewriting::

How to use fixtures

* “Requesting” fixtures::
* Autouse fixtures (fixtures you don’t have to request): Autouse fixtures fixtures you don’t have to request.
* Scope; sharing fixtures across classes, modules, packages or session: Scope sharing fixtures across classes modules packages or session.
* Teardown/Cleanup (AKA Fixture finalization): Teardown/Cleanup AKA Fixture finalization.
* Safe teardowns::
* Running multiple assert statements safely::
* Fixtures can introspect the requesting test context::
* Using markers to pass data to fixtures::
* Factories as fixtures::
* Parametrizing fixtures::
* Using marks with parametrized fixtures::
* Modularity; using fixtures from a fixture function: Modularity using fixtures from a fixture function.
* Automatic grouping of tests by fixture instances::
* Use fixtures in classes and modules with usefixtures::
* Overriding fixtures on various levels::
* Using fixtures from other projects::

“Requesting” fixtures

* Quick example::
* Fixtures can request other fixtures::
* Fixtures are reusable::
* A test/fixture can request more than one fixture at a time::
* Fixtures can be requested more than once per test (return values are cached): Fixtures can be requested more than once per test return values are cached.

Scope: sharing fixtures across classes, modules, packages or session

* Fixture scopes::
* Dynamic scope::

Teardown/Cleanup (AKA Fixture finalization)

* 1. yield fixtures (recommended): 1 yield fixtures recommended.
* 2. Adding finalizers directly: 2 Adding finalizers directly.

1. yield fixtures (recommended)

* Handling errors for yield fixture::

2. Adding finalizers directly

* Note on finalizer order::

Safe teardowns

* Safe fixture structure::

Overriding fixtures on various levels

* Override a fixture on a folder (conftest) level: Override a fixture on a folder conftest level.
* Override a fixture on a test module level::
* Override a fixture with direct test parametrization::
* Override a parametrized fixture with non-parametrized one and vice versa::

How to mark test functions with attributes

* Registering marks::
* Raising errors on unknown marks::

How to parametrize fixtures and test functions

* @pytest.mark.parametrize; parametrizing test functions: @pytest mark parametrize parametrizing test functions.
* Basic pytest_generate_tests example::
* More examples::

How to use temporary directories and files in tests

* The tmp_path fixture::
* The tmp_path_factory fixture::
* The tmpdir and tmpdir_factory fixtures::
* The default base temporary directory::

How to monkeypatch/mock modules and environments

* Monkeypatching functions::
* Monkeypatching returned objects; building mock classes: Monkeypatching returned objects building mock classes.
* Global patch example; preventing “requests” from remote operations: Global patch example preventing “requests” from remote operations.
* Monkeypatching environment variables::
* Monkeypatching dictionaries::
* API Reference::

How to run doctests

* Encoding::
* Using ‘doctest’ options::
* Continue on failure::
* Output format::
* pytest-specific features::
* Alternatives::

pytest-specific features

* Using fixtures::
* ‘doctest_namespace’ fixture::
* Skipping tests::

How to re-run failed tests and maintain state between test runs

* Usage::
* Rerunning only failures or failures first::
* Behavior when no tests failed in the last run::
* The new config.cache object: The new config cache object.
* Inspecting Cache content::
* Clearing Cache content::
* Stepwise::

How to manage logging

* caplog fixture::
* Live Logs::
* Customizing Colors::
* Release notes::
* Incompatible changes in pytest 3.4: Incompatible changes in pytest 3 4.

How to capture stdout/stderr output

* Default stdout/stderr/stdin capturing behaviour::
* Setting capturing methods or disabling capturing::
* Using print statements for debugging::
* Accessing captured output from a test function::

How to capture warnings

* Controlling warnings::
* @pytest.mark.filterwarnings: @pytest mark filterwarnings.
* Disabling warnings summary::
* Disabling warning capture entirely::
* DeprecationWarning and PendingDeprecationWarning::
* Ensuring code triggers a deprecation warning::
* Asserting warnings with the warns function::
* Recording warnings::
* Additional use cases of warnings in tests::
* Custom failure messages::
* Internal pytest warnings::
* Resource Warnings::

How to use skip and xfail to deal with tests that cannot succeed

* Skipping test functions::
* XFail; mark test functions as expected to fail: XFail mark test functions as expected to fail.
* Skip/xfail with parametrize::

Skipping test functions

* skipif::
* Skip all test functions of a class or module::
* Skipping files or directories::
* Skipping on a missing import dependency::
* Summary::

XFail: mark test functions as expected to fail

* condition parameter::
* reason parameter::
* raises parameter::
* run parameter::
* strict parameter::
* Ignoring xfail::
* Examples::

How to install and use plugins

* Requiring/Loading plugins in a test module or conftest file::
* Finding out which plugins are active::
* Deactivating / unregistering a plugin by name::

Writing plugins

* Plugin discovery order at tool startup::
* conftest.py; local per-directory plugins: conftest py local per-directory plugins.
* Writing your own plugin::
* Making your plugin installable by others::
* Assertion Rewriting::
* Requiring/Loading plugins in a test module or conftest file: Requiring/Loading plugins in a test module or conftest file<2>.
* Accessing another plugin by name::
* Registering custom markers::
* Testing plugins::

Writing hook functions

* hook function validation and execution::
* firstresult; stop at first non-None result: firstresult stop at first non-None result.
* hookwrapper; executing around other hooks: hookwrapper executing around other hooks.
* Hook function ordering / call example::
* Declaring new hooks::
* Using hooks in pytest_addoption::
* Optionally using hooks from 3rd party plugins::
* Storing data on items across hook functions::

How to use pytest with an existing test suite

* Running an existing test suite with pytest::

How to use unittest-based tests with pytest

* Benefits out of the box::
* pytest features in unittest.TestCase subclasses: pytest features in unittest TestCase subclasses.
* Mixing pytest fixtures into unittest.TestCase subclasses using marks: Mixing pytest fixtures into unittest TestCase subclasses using marks.
* Using autouse fixtures and accessing other fixtures::

How to run tests written for nose

* Usage: Usage<2>.
* Supported nose Idioms::
* Unsupported idioms / known issues::
* Migrating from nose to pytest::

How to implement xunit-style set-up

* Module level setup/teardown::
* Class level setup/teardown::
* Method and function level setup/teardown::

Fixtures reference

* Built-in fixtures::
* Fixture availability::
* Fixture instantiation order::

Fixture availability

* conftest.py; sharing fixtures across multiple files: conftest py sharing fixtures across multiple files.
* Fixtures from third-party plugins::

Fixture instantiation order

* Higher-scoped fixtures are executed first::
* Fixtures of the same order execute based on dependencies::
* Autouse fixtures are executed first within their scope::

Configuration

* Command line options and configuration file settings::
* Configuration file formats::
* Initialization; determining rootdir and configfile: Initialization determining rootdir and configfile.
* Builtin configuration file options::
* Syntax highlighting theme customization::

Configuration file formats

* pytest.ini: pytest ini.
* pyproject.toml: pyproject toml.
* tox.ini: tox ini.
* setup.cfg: setup cfg.

Initialization: determining rootdir and configfile

* Finding the rootdir::

API Reference

* Constants::
* Functions::
* Marks::
* Fixtures::
* Hooks::
* Objects::
* Global Variables::
* Environment Variables::
* Exceptions::
* Warnings::
* Configuration Options::
* Command-line Flags::

Constants

* pytest.__version__: pytest __version__.
* pytest.version_tuple: pytest version_tuple.

Functions

* pytest.approx: pytest approx.
* pytest.fail: pytest fail.
* pytest.skip: pytest skip.
* pytest.importorskip: pytest importorskip.
* pytest.xfail: pytest xfail.
* pytest.exit: pytest exit.
* pytest.main: pytest main.
* pytest.param: pytest param.
* pytest.raises: pytest raises.
* pytest.deprecated_call: pytest deprecated_call.
* pytest.register_assert_rewrite: pytest register_assert_rewrite.
* pytest.warns: pytest warns.
* pytest.freeze_includes: pytest freeze_includes.

Marks

* pytest.mark.filterwarnings: pytest mark filterwarnings.
* pytest.mark.parametrize: pytest mark parametrize.
* pytest.mark.skip: pytest mark skip.
* pytest.mark.skipif: pytest mark skipif.
* pytest.mark.usefixtures: pytest mark usefixtures.
* pytest.mark.xfail: pytest mark xfail.
* Custom marks::

Fixtures

* @pytest.fixture: @pytest fixture.
* capfd::
* capfdbinary::
* caplog::
* capsys::
* capsysbinary::
* config.cache: config cache.
* doctest_namespace::
* monkeypatch::
* pytestconfig::
* pytester::
* record_property::
* record_testsuite_property::
* recwarn::
* request::
* testdir::
* tmp_path::
* tmp_path_factory::
* tmpdir::
* tmpdir_factory::

Hooks

* Bootstrapping hooks::
* Initialization hooks::
* Collection hooks::
* Test running (runtest) hooks: Test running runtest hooks.
* Reporting hooks::
* Debugging/Interaction hooks::

Objects

* CallInfo::
* Class::
* Collector::
* CollectReport::
* Config::
* ExceptionInfo::
* ExitCode::
* File::
* FixtureDef::
* FSCollector::
* Function::
* FunctionDefinition::
* Item::
* MarkDecorator::
* MarkGenerator::
* Mark::
* Metafunc::
* Module::
* Node::
* Parser::
* OptionGroup::
* PytestPluginManager::
* Session::
* TestReport::
* _Result::
* Stash::

About fixtures

* What fixtures are::
* Improvements over xUnit-style setup/teardown functions::
* Fixture errors::
* Sharing test data::
* A note about fixture cleanup::

Good Integration Practices

* Install package with pip::
* Conventions for Python test discovery::
* Choosing a test layout / import rules::
* tox::
* Do not run via setuptools::

Choosing a test layout / import rules

* Tests outside application code::
* Tests as part of application code::
* Choosing an import mode::

Flaky tests

* Why flaky tests are a problem::
* Potential root causes::
* Pytest features::
* Other general strategies::
* Research::
* Resources::

Potential root causes

* System state::
* Overly strict assertion::

Pytest features

* Xfail strict::
* PYTEST_CURRENT_TEST::
* Plugins::

Other general strategies

* Split up test suites::
* Video/screenshot on failure::
* Delete or rewrite the test::
* Quarantine::
* CI tools that rerun on failure::

pytest import mechanisms and sys.path/PYTHONPATH

* Import modes::
* prepend and append import modes scenarios::
* Invoking pytest versus python -m pytest::

prepend and append import modes scenarios

* Test modules / conftest.py files inside packages: Test modules / conftest py files inside packages.
* Standalone test modules / conftest.py files: Standalone test modules / conftest py files.

Examples and customization tricks

* Demo of Python failure reports with pytest::
* Basic patterns and examples::
* Parametrizing tests::
* Working with custom markers::
* A session-fixture which can look at all collected tests::
* Changing standard (Python) test discovery: Changing standard Python test discovery.
* Working with non-python tests::

Basic patterns and examples

* How to change command line options defaults::
* Pass different values to a test function, depending on command line options: Pass different values to a test function depending on command line options.
* Dynamically adding command line options::
* Control skipping of tests according to command line option::
* Writing well integrated assertion helpers::
* Detect if running from within a pytest run::
* Adding info to test report header::
* Profiling test duration::
* Incremental testing - test steps::
* Package/Directory-level fixtures (setups): Package/Directory-level fixtures setups.
* Post-process test reports / failures::
* Making test result information available in fixtures::
* PYTEST_CURRENT_TEST environment variable::
* Freezing pytest::

Parametrizing tests

* Generating parameters combinations, depending on command line: Generating parameters combinations depending on command line.
* Different options for test IDs::
* A quick port of “testscenarios”::
* Deferring the setup of parametrized resources::
* Indirect parametrization::
* Apply indirect on particular arguments::
* Parametrizing test methods through per-class configuration::
* Indirect parametrization with multiple fixtures::
* Indirect parametrization of optional implementations/imports::
* Set marks or test ID for individual parametrized test::
* Parametrizing conditional raising::

Working with custom markers

* Marking test functions and selecting them for a run::
* Selecting tests based on their node ID::
* Using -k expr to select tests based on their name::
* Registering markers::
* Marking whole classes or modules::
* Marking individual tests when using parametrize::
* Custom marker and command line option to control test runs::
* Passing a callable to custom markers::
* Reading markers which were set from multiple places::
* Marking platform specific tests with pytest::
* Automatically adding markers based on test names::

Changing standard (Python) test discovery

* Ignore paths during test collection::
* Deselect tests during test collection::
* Keeping duplicate paths specified from command line::
* Changing directory recursion::
* Changing naming conventions::
* Interpreting cmdline arguments as Python packages::
* Finding out what is collected::
* Customizing test collection::

Working with non-python tests

* A basic example for specifying tests in Yaml files::

History

* Focus primary on smooth transition - stance (pre 6.0): Focus primary on smooth transition - stance pre 6 0.

Focus primary on smooth transition - stance (pre 6.0)

* Deprecation Roadmap::

Deprecations and Removals

* Deprecated Features::
* Removed Features::

Deprecated Features

* The pytest.Instance collector: The pytest Instance collector.
* fspath argument for Node constructors replaced with pathlib.Path: fspath argument for Node constructors replaced with pathlib Path.
* py.path.local arguments for hooks replaced with pathlib.Path: py path local arguments for hooks replaced with pathlib Path.
* Directly constructing internal classes::
* Passing msg= to pytest.skip, pytest.fail or pytest.exit: Passing msg= to pytest skip pytest fail or pytest exit.
* Implementing the pytest_cmdline_preparse hook::
* Diamond inheritance between pytest.Collector and pytest.Item: Diamond inheritance between pytest Collector and pytest Item.
* Constructors of custom pytest.Node subclasses should take **kwargs: Constructors of custom pytest Node subclasses should take **kwargs.
* Backward compatibilities in Parser.addoption: Backward compatibilities in Parser addoption.
* Using pytest.warns(None): Using pytest warns None.
* Returning non-None value in test functions::
* The --strict command-line option::
* The yield_fixture function/decorator::

Removed Features

* The pytest.collect module: The pytest collect module.
* The pytest_warning_captured hook::
* The pytest._fillfuncargs function: The pytest _fillfuncargs function.
* --no-print-logs command-line option::
* Result log (–result-log): Result log --result-log.
* pytest_collect_directory hook::
* TerminalReporter.writer: TerminalReporter writer.
* junit_family default value change to “xunit2”::
* Node Construction changed to Node.from_parent: Node Construction changed to Node from_parent.
* pytest.fixture arguments are keyword only: pytest fixture arguments are keyword only.
* funcargnames alias for fixturenames::
* pytest.config global: pytest config global.
* "message" parameter of pytest.raises: "message" parameter of pytest raises.
* raises / warns with a string as the second argument::
* Using Class in custom Collectors::
* marks in pytest.mark.parametrize: marks in pytest mark parametrize.
* pytest_funcarg__ prefix::
* [pytest] section in setup.cfg files: [pytest] section in setup cfg files.
* Metafunc.addcall: Metafunc addcall.
* cached_setup::
* pytest_plugins in non-top-level conftest files::
* Config.warn and Node.warn: Config warn and Node warn.
* record_xml_property::
* Passing command-line string to pytest.main(): Passing command-line string to pytest main.
* Calling fixtures directly::
* yield tests::
* Internal classes accessed through Node::
* Node.get_marker: Node get_marker.
* somefunction.markname: somefunction markname.
* pytest_namespace::

Contribution getting started

* Feature requests and feedback::
* Report bugs::
* Fix bugs::
* Implement features::
* Write documentation::
* Submitting Plugins to pytest-dev::
* Preparing Pull Requests::
* Joining the Development Team::
* Backporting bug fixes for the next patch release::
* Handling stale issues/PRs::
* Closing Issues::

Preparing Pull Requests

* Short version::
* Long version::
* Writing Tests::

Backporting bug fixes for the next patch release

* Who does the backporting::

Handling stale issues/PRs

* When to close::
* Closing pull requests::

Sponsor

* OpenCollective::

Historical Notes

* Marker revamp and iteration::
* cache plugin integrated into the core::
* funcargs and pytest_funcarg__::
* @pytest.yield_fixture decorator: @pytest yield_fixture decorator.
* [pytest] header in setup.cfg: [pytest] header in setup cfg.
* Applying marks to @pytest.mark.parametrize parameters: Applying marks to @pytest mark parametrize parameters.
* @pytest.mark.parametrize argument names as a tuple: @pytest mark parametrize argument names as a tuple.
* setup; is now an “autouse fixture”: setup is now an “autouse fixture”.
* Conditions as strings instead of booleans::
* pytest.set_trace(): pytest set_trace.
* “compat” properties::

Marker revamp and iteration

* Updating code::
* Related issues::

Talks and Tutorials

* Books::
* Talks and blog postings::

Release announcements

* pytest-7.1.3: pytest-7 1 3.
* pytest-7.1.2: pytest-7 1 2.
* pytest-7.1.1: pytest-7 1 1.
* pytest-7.1.0: pytest-7 1 0.
* pytest-7.0.1: pytest-7 0 1.
* pytest-7.0.0: pytest-7 0 0.
* pytest-7.0.0rc1: pytest-7 0 0rc1.
* pytest-6.2.5: pytest-6 2 5.
* pytest-6.2.4: pytest-6 2 4.
* pytest-6.2.3: pytest-6 2 3.
* pytest-6.2.2: pytest-6 2 2.
* pytest-6.2.1: pytest-6 2 1.
* pytest-6.2.0: pytest-6 2 0.
* pytest-6.1.2: pytest-6 1 2.
* pytest-6.1.1: pytest-6 1 1.
* pytest-6.1.0: pytest-6 1 0.
* pytest-6.0.2: pytest-6 0 2.
* pytest-6.0.1: pytest-6 0 1.
* pytest-6.0.0: pytest-6 0 0.
* pytest-6.0.0rc1: pytest-6 0 0rc1.
* pytest-5.4.3: pytest-5 4 3.
* pytest-5.4.2: pytest-5 4 2.
* pytest-5.4.1: pytest-5 4 1.
* pytest-5.4.0: pytest-5 4 0.
* pytest-5.3.5: pytest-5 3 5.
* pytest-5.3.4: pytest-5 3 4.
* pytest-5.3.3: pytest-5 3 3.
* pytest-5.3.2: pytest-5 3 2.
* pytest-5.3.1: pytest-5 3 1.
* pytest-5.3.0: pytest-5 3 0.
* pytest-5.2.4: pytest-5 2 4.
* pytest-5.2.3: pytest-5 2 3.
* pytest-5.2.2: pytest-5 2 2.
* pytest-5.2.1: pytest-5 2 1.
* pytest-5.2.0: pytest-5 2 0.
* pytest-5.1.3: pytest-5 1 3.
* pytest-5.1.2: pytest-5 1 2.
* pytest-5.1.1: pytest-5 1 1.
* pytest-5.1.0: pytest-5 1 0.
* pytest-5.0.1: pytest-5 0 1.
* pytest-5.0.0: pytest-5 0 0.
* pytest-4.6.9: pytest-4 6 9.
* pytest-4.6.8: pytest-4 6 8.
* pytest-4.6.7: pytest-4 6 7.
* pytest-4.6.6: pytest-4 6 6.
* pytest-4.6.5: pytest-4 6 5.
* pytest-4.6.4: pytest-4 6 4.
* pytest-4.6.3: pytest-4 6 3.
* pytest-4.6.2: pytest-4 6 2.
* pytest-4.6.1: pytest-4 6 1.
* pytest-4.6.0: pytest-4 6 0.
* pytest-4.5.0: pytest-4 5 0.
* pytest-4.4.2: pytest-4 4 2.
* pytest-4.4.1: pytest-4 4 1.
* pytest-4.4.0: pytest-4 4 0.
* pytest-4.3.1: pytest-4 3 1.
* pytest-4.3.0: pytest-4 3 0.
* pytest-4.2.1: pytest-4 2 1.
* pytest-4.2.0: pytest-4 2 0.
* pytest-4.1.1: pytest-4 1 1.
* pytest-4.1.0: pytest-4 1 0.
* pytest-4.0.2: pytest-4 0 2.
* pytest-4.0.1: pytest-4 0 1.
* pytest-4.0.0: pytest-4 0 0.
* pytest-3.10.1: pytest-3 10 1.
* pytest-3.10.0: pytest-3 10 0.
* pytest-3.9.3: pytest-3 9 3.
* pytest-3.9.2: pytest-3 9 2.
* pytest-3.9.1: pytest-3 9 1.
* pytest-3.9.0: pytest-3 9 0.
* pytest-3.8.2: pytest-3 8 2.
* pytest-3.8.1: pytest-3 8 1.
* pytest-3.8.0: pytest-3 8 0.
* pytest-3.7.4: pytest-3 7 4.
* pytest-3.7.3: pytest-3 7 3.
* pytest-3.7.2: pytest-3 7 2.
* pytest-3.7.1: pytest-3 7 1.
* pytest-3.7.0: pytest-3 7 0.
* pytest-3.6.4: pytest-3 6 4.
* pytest-3.6.3: pytest-3 6 3.
* pytest-3.6.2: pytest-3 6 2.
* pytest-3.6.1: pytest-3 6 1.
* pytest-3.6.0: pytest-3 6 0.
* pytest-3.5.1: pytest-3 5 1.
* pytest-3.5.0: pytest-3 5 0.
* pytest-3.4.2: pytest-3 4 2.
* pytest-3.4.1: pytest-3 4 1.
* pytest-3.4.0: pytest-3 4 0.
* pytest-3.3.2: pytest-3 3 2.
* pytest-3.3.1: pytest-3 3 1.
* pytest-3.3.0: pytest-3 3 0.
* pytest-3.2.5: pytest-3 2 5.
* pytest-3.2.4: pytest-3 2 4.
* pytest-3.2.3: pytest-3 2 3.
* pytest-3.2.2: pytest-3 2 2.
* pytest-3.2.1: pytest-3 2 1.
* pytest-3.2.0: pytest-3 2 0.
* pytest-3.1.3: pytest-3 1 3.
* pytest-3.1.2: pytest-3 1 2.
* pytest-3.1.1: pytest-3 1 1.
* pytest-3.1.0: pytest-3 1 0.
* pytest-3.0.7: pytest-3 0 7.
* pytest-3.0.6: pytest-3 0 6.
* pytest-3.0.5: pytest-3 0 5.
* pytest-3.0.4: pytest-3 0 4.
* pytest-3.0.3: pytest-3 0 3.
* pytest-3.0.2: pytest-3 0 2.
* pytest-3.0.1: pytest-3 0 1.
* pytest-3.0.0: pytest-3 0 0.
* python testing sprint June 20th-26th 2016::
* pytest-2.9.2: pytest-2 9 2.
* pytest-2.9.1: pytest-2 9 1.
* pytest-2.9.0: pytest-2 9 0.
* pytest-2.8.7: pytest-2 8 7.
* pytest-2.8.6: pytest-2 8 6.
* pytest-2.8.5: pytest-2 8 5.
* pytest-2.8.4: pytest-2 8 4.
* pytest-2.8.3; bug fixes: pytest-2 8 3 bug fixes.
* pytest-2.8.2; bug fixes: pytest-2 8 2 bug fixes.
* pytest-2.7.2; bug fixes: pytest-2 7 2 bug fixes.
* pytest-2.7.1; bug fixes: pytest-2 7 1 bug fixes.
* pytest-2.7.0; fixes, features, speed improvements: pytest-2 7 0 fixes features speed improvements.
* pytest-2.6.3; fixes and little improvements: pytest-2 6 3 fixes and little improvements.
* Changes 2.6.3: Changes 2 6 3.
* pytest-2.6.2; few fixes and cx_freeze support: pytest-2 6 2 few fixes and cx_freeze support.
* pytest-2.6.1; fixes and new xfail feature: pytest-2 6 1 fixes and new xfail feature.
* Changes 2.6.1: Changes 2 6 1.
* pytest-2.6.0; shorter tracebacks, new warning system, test runner compat: pytest-2 6 0 shorter tracebacks new warning system test runner compat.
* pytest-2.5.2; fixes: pytest-2 5 2 fixes.
* pytest-2.5.1; fixes and new home page styling: pytest-2 5 1 fixes and new home page styling.
* pytest-2.5.0; now down to ZERO reported bugs!: pytest-2 5 0 now down to ZERO reported bugs!.
* pytest-2.4.2; colorama on windows, plugin/tmpdir fixes: pytest-2 4 2 colorama on windows plugin/tmpdir fixes.
* pytest-2.4.1; fixing three regressions compared to 2.3.5: pytest-2 4 1 fixing three regressions compared to 2 3 5.
* pytest-2.4.0; new fixture features/hooks and bug fixes: pytest-2 4 0 new fixture features/hooks and bug fixes.
* pytest-2.3.5; bug fixes and little improvements: pytest-2 3 5 bug fixes and little improvements.
* pytest-2.3.4; stabilization, more flexible selection via “-k expr”: pytest-2 3 4 stabilization more flexible selection via “-k expr”.
* pytest-2.3.3; integration fixes, py24 support, */** shown in traceback: pytest-2 3 3 integration fixes py24 support */** shown in traceback.
* pytest-2.3.2; some fixes and more traceback-printing speed: pytest-2 3 2 some fixes and more traceback-printing speed.
* pytest-2.3.1; fix regression with factory functions: pytest-2 3 1 fix regression with factory functions.
* pytest-2.3; improved fixtures / better unittest integration: pytest-2 3 improved fixtures / better unittest integration.
* pytest-2.2.4; bug fixes, better junitxml/unittest/python3 compat: pytest-2 2 4 bug fixes better junitxml/unittest/python3 compat.
* pytest-2.2.2; bug fixes: pytest-2 2 2 bug fixes.
* pytest-2.2.1; bug fixes, perfect teardowns: pytest-2 2 1 bug fixes perfect teardowns.
* py.test 2.2.0; test marking++, parametrization++ and duration profiling: py test 2 2 0 test marking++ parametrization++ and duration profiling.
* py.test 2.1.3; just some more fixes: py test 2 1 3 just some more fixes.
* py.test 2.1.2; bug fixes and fixes for jython: py test 2 1 2 bug fixes and fixes for jython.
* py.test 2.1.1; assertion fixes and improved junitxml output: py test 2 1 1 assertion fixes and improved junitxml output.
* py.test 2.1.0; perfected assertions and bug fixes: py test 2 1 0 perfected assertions and bug fixes.
* py.test 2.0.3; bug fixes and speed ups: py test 2 0 3 bug fixes and speed ups.
* py.test 2.0.2; bug fixes, improved xfail/skip expressions, speed ups: py test 2 0 2 bug fixes improved xfail/skip expressions speed ups.
* py.test 2.0.1; bug fixes: py test 2 0 1 bug fixes.
* py.test 2.0.0; asserts++, unittest++, reporting++, config++, docs++: py test 2 0 0 asserts++ unittest++ reporting++ config++ docs++.

python testing sprint June 20th-26th 2016

* Participants::
* Sprint organisation, schedule: Sprint organisation schedule.
* Money / funding::

pytest-2.9.2

* 2.9.2 (compared to 2.9.1): 2 9 2 compared to 2 9 1.

pytest-2.9.1

* 2.9.1 (compared to 2.9.0): 2 9 1 compared to 2 9 0.

pytest-2.9.0

* 2.9.0 (compared to 2.8.7): 2 9 0 compared to 2 8 7.

pytest-2.8.7

* 2.8.7 (compared to 2.8.6): 2 8 7 compared to 2 8 6.

pytest-2.8.6

* 2.8.6 (compared to 2.8.5): 2 8 6 compared to 2 8 5.

pytest-2.8.5

* 2.8.5 (compared to 2.8.4): 2 8 5 compared to 2 8 4.

pytest-2.8.4

* 2.8.4 (compared to 2.8.3): 2 8 4 compared to 2 8 3.

pytest-2.8.3: bug fixes

* 2.8.3 (compared to 2.8.2): 2 8 3 compared to 2 8 2.

pytest-2.8.2: bug fixes

* 2.8.2 (compared to 2.7.2): 2 8 2 compared to 2 7 2.

pytest-2.7.2: bug fixes

* 2.7.2 (compared to 2.7.1): 2 7 2 compared to 2 7 1.

pytest-2.7.1: bug fixes

* 2.7.1 (compared to 2.7.0): 2 7 1 compared to 2 7 0.

pytest-2.7.0: fixes, features, speed improvements

* 2.7.0 (compared to 2.6.4): 2 7 0 compared to 2 6 4.

pytest-2.6.2: few fixes and cx_freeze support

* 2.6.2: 2 6 2.

pytest-2.6.0: shorter tracebacks, new warning system, test runner compat

* 2.6.0: 2 6 0.

pytest-2.5.2: fixes

* 2.5.2: 2 5 2.

pytest-2.5.1: fixes and new home page styling

* 2.5.1: 2 5 1.

pytest-2.5.0: now down to ZERO reported bugs!

* 2.5.0: 2 5 0.

pytest-2.4.0: new fixture features/hooks and bug fixes

* Changes between 2.3.5 and 2.4: Changes between 2 3 5 and 2 4.

pytest-2.3.5: bug fixes and little improvements

* Changes between 2.3.4 and 2.3.5: Changes between 2 3 4 and 2 3 5.

pytest-2.3.3: integration fixes, py24 support, */** shown in traceback

* Changes between 2.3.2 and 2.3.3: Changes between 2 3 2 and 2 3 3.

pytest-2.3.2: some fixes and more traceback-printing speed

* Changes between 2.3.1 and 2.3.2: Changes between 2 3 1 and 2 3 2.

pytest-2.3.1: fix regression with factory functions

* Changes between 2.3.0 and 2.3.1: Changes between 2 3 0 and 2 3 1.

pytest-2.3: improved fixtures / better unittest integration

* Changes between 2.2.4 and 2.3.0: Changes between 2 2 4 and 2 3 0.

pytest-2.2.4: bug fixes, better junitxml/unittest/python3 compat

* Changes between 2.2.3 and 2.2.4: Changes between 2 2 3 and 2 2 4.

pytest-2.2.2: bug fixes

* Changes between 2.2.1 and 2.2.2: Changes between 2 2 1 and 2 2 2.

pytest-2.2.1: bug fixes, perfect teardowns

* Changes between 2.2.0 and 2.2.1: Changes between 2 2 0 and 2 2 1.

py.test 2.2.0: test marking++, parametrization++ and duration profiling

* notes on incompatibility::
* Changes between 2.1.3 and 2.2.0: Changes between 2 1 3 and 2 2 0.

py.test 2.1.3: just some more fixes

* Changes between 2.1.2 and 2.1.3: Changes between 2 1 2 and 2 1 3.

py.test 2.1.2: bug fixes and fixes for jython

* Changes between 2.1.1 and 2.1.2: Changes between 2 1 1 and 2 1 2.

py.test 2.1.1: assertion fixes and improved junitxml output

* Changes between 2.1.0 and 2.1.1: Changes between 2 1 0 and 2 1 1.

py.test 2.1.0: perfected assertions and bug fixes

* Changes between 2.0.3 and 2.1.0: Changes between 2 0 3 and 2 1 0.

py.test 2.0.3: bug fixes and speed ups

* Changes between 2.0.2 and 2.0.3: Changes between 2 0 2 and 2 0 3.

py.test 2.0.2: bug fixes, improved xfail/skip expressions, speed ups

* Changes between 2.0.1 and 2.0.2: Changes between 2 0 1 and 2 0 2.

py.test 2.0.1: bug fixes

* Changes between 2.0.0 and 2.0.1: Changes between 2 0 0 and 2 0 1.

py.test 2.0.0: asserts++, unittest++, reporting++, config++, docs++

* New Features::
* Fixes::
* Important Notes::
* (Incompatible) Removals: Incompatible Removals.

Changelog

* pytest 7.1.3 (2022-08-31): pytest 7 1 3 2022-08-31.
* pytest 7.1.2 (2022-04-23): pytest 7 1 2 2022-04-23.
* pytest 7.1.1 (2022-03-17): pytest 7 1 1 2022-03-17.
* pytest 7.1.0 (2022-03-13): pytest 7 1 0 2022-03-13.
* pytest 7.0.1 (2022-02-11): pytest 7 0 1 2022-02-11.
* pytest 7.0.0 (2022-02-03): pytest 7 0 0 2022-02-03.
* pytest 7.0.0rc1 (2021-12-06): pytest 7 0 0rc1 2021-12-06.
* pytest 6.2.5 (2021-08-29): pytest 6 2 5 2021-08-29.
* pytest 6.2.4 (2021-05-04): pytest 6 2 4 2021-05-04.
* pytest 6.2.3 (2021-04-03): pytest 6 2 3 2021-04-03.
* pytest 6.2.2 (2021-01-25): pytest 6 2 2 2021-01-25.
* pytest 6.2.1 (2020-12-15): pytest 6 2 1 2020-12-15.
* pytest 6.2.0 (2020-12-12): pytest 6 2 0 2020-12-12.
* pytest 6.1.2 (2020-10-28): pytest 6 1 2 2020-10-28.
* pytest 6.1.1 (2020-10-03): pytest 6 1 1 2020-10-03.
* pytest 6.1.0 (2020-09-26): pytest 6 1 0 2020-09-26.
* pytest 6.0.2 (2020-09-04): pytest 6 0 2 2020-09-04.
* pytest 6.0.1 (2020-07-30): pytest 6 0 1 2020-07-30.
* pytest 6.0.0 (2020-07-28): pytest 6 0 0 2020-07-28.
* pytest 6.0.0rc1 (2020-07-08): pytest 6 0 0rc1 2020-07-08.
* pytest 5.4.3 (2020-06-02): pytest 5 4 3 2020-06-02.
* pytest 5.4.2 (2020-05-08): pytest 5 4 2 2020-05-08.
* pytest 5.4.1 (2020-03-13): pytest 5 4 1 2020-03-13.
* pytest 5.4.0 (2020-03-12): pytest 5 4 0 2020-03-12.
* pytest 5.3.5 (2020-01-29): pytest 5 3 5 2020-01-29.
* pytest 5.3.4 (2020-01-20): pytest 5 3 4 2020-01-20.
* pytest 5.3.3 (2020-01-16): pytest 5 3 3 2020-01-16.
* pytest 5.3.2 (2019-12-13): pytest 5 3 2 2019-12-13.
* pytest 5.3.1 (2019-11-25): pytest 5 3 1 2019-11-25.
* pytest 5.3.0 (2019-11-19): pytest 5 3 0 2019-11-19.
* pytest 5.2.4 (2019-11-15): pytest 5 2 4 2019-11-15.
* pytest 5.2.3 (2019-11-14): pytest 5 2 3 2019-11-14.
* pytest 5.2.2 (2019-10-24): pytest 5 2 2 2019-10-24.
* pytest 5.2.1 (2019-10-06): pytest 5 2 1 2019-10-06.
* pytest 5.2.0 (2019-09-28): pytest 5 2 0 2019-09-28.
* pytest 5.1.3 (2019-09-18): pytest 5 1 3 2019-09-18.
* pytest 5.1.2 (2019-08-30): pytest 5 1 2 2019-08-30.
* pytest 5.1.1 (2019-08-20): pytest 5 1 1 2019-08-20.
* pytest 5.1.0 (2019-08-15): pytest 5 1 0 2019-08-15.
* pytest 5.0.1 (2019-07-04): pytest 5 0 1 2019-07-04.
* pytest 5.0.0 (2019-06-28): pytest 5 0 0 2019-06-28.
* pytest 4.6.11 (2020-06-04): pytest 4 6 11 2020-06-04.
* pytest 4.6.10 (2020-05-08): pytest 4 6 10 2020-05-08.
* pytest 4.6.9 (2020-01-04): pytest 4 6 9 2020-01-04.
* pytest 4.6.8 (2019-12-19): pytest 4 6 8 2019-12-19.
* pytest 4.6.7 (2019-12-05): pytest 4 6 7 2019-12-05.
* pytest 4.6.6 (2019-10-11): pytest 4 6 6 2019-10-11.
* pytest 4.6.5 (2019-08-05): pytest 4 6 5 2019-08-05.
* pytest 4.6.4 (2019-06-28): pytest 4 6 4 2019-06-28.
* pytest 4.6.3 (2019-06-11): pytest 4 6 3 2019-06-11.
* pytest 4.6.2 (2019-06-03): pytest 4 6 2 2019-06-03.
* pytest 4.6.1 (2019-06-02): pytest 4 6 1 2019-06-02.
* pytest 4.6.0 (2019-05-31): pytest 4 6 0 2019-05-31.
* pytest 4.5.0 (2019-05-11): pytest 4 5 0 2019-05-11.
* pytest 4.4.2 (2019-05-08): pytest 4 4 2 2019-05-08.
* pytest 4.4.1 (2019-04-15): pytest 4 4 1 2019-04-15.
* pytest 4.4.0 (2019-03-29): pytest 4 4 0 2019-03-29.
* pytest 4.3.1 (2019-03-11): pytest 4 3 1 2019-03-11.
* pytest 4.3.0 (2019-02-16): pytest 4 3 0 2019-02-16.
* pytest 4.2.1 (2019-02-12): pytest 4 2 1 2019-02-12.
* pytest 4.2.0 (2019-01-30): pytest 4 2 0 2019-01-30.
* pytest 4.1.1 (2019-01-12): pytest 4 1 1 2019-01-12.
* pytest 4.1.0 (2019-01-05): pytest 4 1 0 2019-01-05.
* pytest 4.0.2 (2018-12-13): pytest 4 0 2 2018-12-13.
* pytest 4.0.1 (2018-11-23): pytest 4 0 1 2018-11-23.
* pytest 4.0.0 (2018-11-13): pytest 4 0 0 2018-11-13.
* pytest 3.10.1 (2018-11-11): pytest 3 10 1 2018-11-11.
* pytest 3.10.0 (2018-11-03): pytest 3 10 0 2018-11-03.
* pytest 3.9.3 (2018-10-27): pytest 3 9 3 2018-10-27.
* pytest 3.9.2 (2018-10-22): pytest 3 9 2 2018-10-22.
* pytest 3.9.1 (2018-10-16): pytest 3 9 1 2018-10-16.
* pytest 3.9.0 (2018-10-15 - not published due to a release automation bug): pytest 3 9 0 2018-10-15 - not published due to a release automation bug.
* pytest 3.8.2 (2018-10-02): pytest 3 8 2 2018-10-02.
* pytest 3.8.1 (2018-09-22): pytest 3 8 1 2018-09-22.
* pytest 3.8.0 (2018-09-05): pytest 3 8 0 2018-09-05.
* pytest 3.7.4 (2018-08-29): pytest 3 7 4 2018-08-29.
* pytest 3.7.3 (2018-08-26): pytest 3 7 3 2018-08-26.
* pytest 3.7.2 (2018-08-16): pytest 3 7 2 2018-08-16.
* pytest 3.7.1 (2018-08-02): pytest 3 7 1 2018-08-02.
* pytest 3.7.0 (2018-07-30): pytest 3 7 0 2018-07-30.
* pytest 3.6.4 (2018-07-28): pytest 3 6 4 2018-07-28.
* pytest 3.6.3 (2018-07-04): pytest 3 6 3 2018-07-04.
* pytest 3.6.2 (2018-06-20): pytest 3 6 2 2018-06-20.
* pytest 3.6.1 (2018-06-05): pytest 3 6 1 2018-06-05.
* pytest 3.6.0 (2018-05-23): pytest 3 6 0 2018-05-23.
* pytest 3.5.1 (2018-04-23): pytest 3 5 1 2018-04-23.
* pytest 3.5.0 (2018-03-21): pytest 3 5 0 2018-03-21.
* pytest 3.4.2 (2018-03-04): pytest 3 4 2 2018-03-04.
* pytest 3.4.1 (2018-02-20): pytest 3 4 1 2018-02-20.
* pytest 3.4.0 (2018-01-30): pytest 3 4 0 2018-01-30.
* pytest 3.3.2 (2017-12-25): pytest 3 3 2 2017-12-25.
* pytest 3.3.1 (2017-12-05): pytest 3 3 1 2017-12-05.
* pytest 3.3.0 (2017-11-23): pytest 3 3 0 2017-11-23.
* pytest 3.2.5 (2017-11-15): pytest 3 2 5 2017-11-15.
* pytest 3.2.4 (2017-11-13): pytest 3 2 4 2017-11-13.
* pytest 3.2.3 (2017-10-03): pytest 3 2 3 2017-10-03.
* pytest 3.2.2 (2017-09-06): pytest 3 2 2 2017-09-06.
* pytest 3.2.1 (2017-08-08): pytest 3 2 1 2017-08-08.
* pytest 3.2.0 (2017-07-30): pytest 3 2 0 2017-07-30.
* pytest 3.1.3 (2017-07-03): pytest 3 1 3 2017-07-03.
* pytest 3.1.2 (2017-06-08): pytest 3 1 2 2017-06-08.
* pytest 3.1.1 (2017-05-30): pytest 3 1 1 2017-05-30.
* 3.1.0 (2017-05-22): 3 1 0 2017-05-22.
* 3.0.7 (2017-03-14): 3 0 7 2017-03-14.
* 3.0.6 (2017-01-22): 3 0 6 2017-01-22.
* 3.0.5 (2016-12-05): 3 0 5 2016-12-05.
* 3.0.4 (2016-11-09): 3 0 4 2016-11-09.
* 3.0.3 (2016-09-28): 3 0 3 2016-09-28.
* 3.0.2 (2016-09-01): 3 0 2 2016-09-01.
* 3.0.1 (2016-08-23): 3 0 1 2016-08-23.
* 3.0.0 (2016-08-18): 3 0 0 2016-08-18.
* 2.9.2 (2016-05-31): 2 9 2 2016-05-31.
* 2.9.1 (2016-03-17): 2 9 1 2016-03-17.
* 2.9.0 (2016-02-29): 2 9 0 2016-02-29.
* 2.8.7 (2016-01-24): 2 8 7 2016-01-24.
* 2.8.6 (2016-01-21): 2 8 6 2016-01-21.
* 2.8.5 (2015-12-11): 2 8 5 2015-12-11.
* 2.8.4 (2015-12-06): 2 8 4 2015-12-06.
* 2.8.3 (2015-11-18): 2 8 3 2015-11-18.
* 2.8.2 (2015-10-07): 2 8 2 2015-10-07.
* 2.8.1 (2015-09-29): 2 8 1 2015-09-29.
* 2.8.0 (2015-09-18): 2 8 0 2015-09-18.
* 2.7.3 (2015-09-15): 2 7 3 2015-09-15.
* 2.7.2 (2015-06-23): 2 7 2 2015-06-23.
* 2.7.1 (2015-05-19): 2 7 1 2015-05-19.
* 2.7.0 (2015-03-26): 2 7 0 2015-03-26.
* 2.6.4 (2014-10-24): 2 6 4 2014-10-24.
* 2.6.3 (2014-09-24): 2 6 3 2014-09-24.
* 2.6.2 (2014-09-05): 2 6 2 2014-09-05.
* 2.6.1 (2014-08-07): 2 6 1 2014-08-07.
* 2.6: 2 6.
* 2.5.2 (2014-01-29): 2 5 2 2014-01-29.
* 2.5.1 (2013-12-17): 2 5 1 2013-12-17.
* 2.5.0 (2013-12-12): 2 5 0 2013-12-12.
* 2.4.2 (2013-10-04): 2 4 2 2013-10-04.
* 2.4.1 (2013-10-02): 2 4 1 2013-10-02.
* 2.4: 2 4.
* 2.3.5 (2013-04-30): 2 3 5 2013-04-30.
* 2.3.4 (2012-11-20): 2 3 4 2012-11-20.
* 2.3.3 (2012-11-06): 2 3 3 2012-11-06.
* 2.3.2 (2012-10-25): 2 3 2 2012-10-25.
* 2.3.1 (2012-10-20): 2 3 1 2012-10-20.
* 2.3.0 (2012-10-19): 2 3 0 2012-10-19.
* 2.2.4 (2012-05-22): 2 2 4 2012-05-22.
* 2.2.3 (2012-02-05): 2 2 3 2012-02-05.
* 2.2.2 (2012-02-05): 2 2 2 2012-02-05.
* 2.2.1 (2011-12-16): 2 2 1 2011-12-16.
* 2.2.0 (2011-11-18): 2 2 0 2011-11-18.
* 2.1.3 (2011-10-18): 2 1 3 2011-10-18.
* 2.1.2 (2011-09-24): 2 1 2 2011-09-24.
* 2.1.1: 2 1 1.
* 2.1.0 (2011-07-09): 2 1 0 2011-07-09.
* 2.0.3 (2011-05-11): 2 0 3 2011-05-11.
* 2.0.2 (2011-03-09): 2 0 2 2011-03-09.
* 2.0.1 (2011-02-07): 2 0 1 2011-02-07.
* 2.0.0 (2010-11-25): 2 0 0 2010-11-25.
* 1.3.4 (2010-09-14): 1 3 4 2010-09-14.
* 1.3.3 (2010-07-30): 1 3 3 2010-07-30.
* 1.3.2 (2010-07-08): 1 3 2 2010-07-08.
* 1.3.1 (2010-05-25): 1 3 1 2010-05-25.
* 1.3.0 (2010-05-05): 1 3 0 2010-05-05.
* 1.2.0 (2010-01-18): 1 2 0 2010-01-18.
* 1.1.1 (2009-11-24): 1 1 1 2009-11-24.
* 1.1.0 (2009-11-05): 1 1 0 2009-11-05.
* 1.0.3: 1 0 3.
* 1.0.2 (2009-08-27): 1 0 2 2009-08-27.
* 1.0.1 (2009-08-19): 1 0 1 2009-08-19.
* 1.0.0 (2009-08-04): 1 0 0 2009-08-04.
* 1.0.0b9 (2009-07-31): 1 0 0b9 2009-07-31.
* 1.0.0b8 (2009-07-22): 1 0 0b8 2009-07-22.
* 1.0.0b7: 1 0 0b7.
* 1.0.0b3 (2009-06-19): 1 0 0b3 2009-06-19.
* 1.0.0b1: 1 0 0b1.
* 0.9.2: 0 9 2.
* 0.9.1: 0 9 1.

pytest 7.1.3 (2022-08-31)

* Bug Fixes::
* Improved Documentation::
* Trivial/Internal Changes::

pytest 7.1.2 (2022-04-23)

* Bug Fixes: Bug Fixes<2>.

pytest 7.1.1 (2022-03-17)

* Bug Fixes: Bug Fixes<3>.

pytest 7.1.0 (2022-03-13)

* Breaking Changes::
* Improvements::
* Bug Fixes: Bug Fixes<4>.

pytest 7.0.1 (2022-02-11)

* Bug Fixes: Bug Fixes<5>.

pytest 7.0.0 (2022-02-03)

* Deprecations::
* Bug Fixes: Bug Fixes<6>.
* Improved Documentation: Improved Documentation<2>.
* Trivial/Internal Changes: Trivial/Internal Changes<2>.

pytest 7.0.0rc1 (2021-12-06)

* Breaking Changes: Breaking Changes<2>.
* Deprecations: Deprecations<2>.
* Features::
* Improvements: Improvements<2>.
* Bug Fixes: Bug Fixes<7>.
* Improved Documentation: Improved Documentation<3>.
* Trivial/Internal Changes: Trivial/Internal Changes<3>.

pytest 6.2.5 (2021-08-29)

* Trivial/Internal Changes: Trivial/Internal Changes<4>.

pytest 6.2.4 (2021-05-04)

* Bug Fixes: Bug Fixes<8>.

pytest 6.2.3 (2021-04-03)

* Bug Fixes: Bug Fixes<9>.

pytest 6.2.2 (2021-01-25)

* Bug Fixes: Bug Fixes<10>.

pytest 6.2.1 (2020-12-15)

* Bug Fixes: Bug Fixes<11>.

pytest 6.2.0 (2020-12-12)

* Breaking Changes: Breaking Changes<3>.
* Deprecations: Deprecations<3>.
* Features: Features<2>.
* Improvements: Improvements<3>.
* Bug Fixes: Bug Fixes<12>.
* Improved Documentation: Improved Documentation<4>.
* Trivial/Internal Changes: Trivial/Internal Changes<5>.

pytest 6.1.2 (2020-10-28)

* Bug Fixes: Bug Fixes<13>.
* Improved Documentation: Improved Documentation<5>.

pytest 6.1.1 (2020-10-03)

* Bug Fixes: Bug Fixes<14>.

pytest 6.1.0 (2020-09-26)

* Breaking Changes: Breaking Changes<4>.
* Deprecations: Deprecations<4>.
* Features: Features<3>.
* Improvements: Improvements<4>.
* Bug Fixes: Bug Fixes<15>.
* Improved Documentation: Improved Documentation<6>.
* Trivial/Internal Changes: Trivial/Internal Changes<6>.

pytest 6.0.2 (2020-09-04)

* Bug Fixes: Bug Fixes<16>.

pytest 6.0.1 (2020-07-30)

* Bug Fixes: Bug Fixes<17>.

pytest 6.0.0 (2020-07-28)

* Breaking Changes: Breaking Changes<5>.
* Features: Features<4>.
* Improvements: Improvements<5>.
* Bug Fixes: Bug Fixes<18>.
* Improved Documentation: Improved Documentation<7>.
* Trivial/Internal Changes: Trivial/Internal Changes<7>.

pytest 6.0.0rc1 (2020-07-08)

* Breaking Changes: Breaking Changes<6>.
* Deprecations: Deprecations<5>.
* Features: Features<5>.
* Improvements: Improvements<6>.
* Bug Fixes: Bug Fixes<19>.
* Improved Documentation: Improved Documentation<8>.
* Trivial/Internal Changes: Trivial/Internal Changes<8>.

pytest 5.4.3 (2020-06-02)

* Bug Fixes: Bug Fixes<20>.

pytest 5.4.2 (2020-05-08)

* Bug Fixes: Bug Fixes<21>.

pytest 5.4.1 (2020-03-13)

* Bug Fixes: Bug Fixes<22>.

pytest 5.4.0 (2020-03-12)

* Breaking Changes: Breaking Changes<7>.
* Deprecations: Deprecations<6>.
* Features: Features<6>.
* Improvements: Improvements<7>.
* Bug Fixes: Bug Fixes<23>.
* Improved Documentation: Improved Documentation<9>.
* Trivial/Internal Changes: Trivial/Internal Changes<9>.

pytest 5.3.5 (2020-01-29)

* Bug Fixes: Bug Fixes<24>.

pytest 5.3.4 (2020-01-20)

* Bug Fixes: Bug Fixes<25>.

pytest 5.3.3 (2020-01-16)

* Bug Fixes: Bug Fixes<26>.
* Trivial/Internal Changes: Trivial/Internal Changes<10>.

pytest 5.3.2 (2019-12-13)

* Improvements: Improvements<8>.
* Bug Fixes: Bug Fixes<27>.

pytest 5.3.1 (2019-11-25)

* Improvements: Improvements<9>.
* Bug Fixes: Bug Fixes<28>.

pytest 5.3.0 (2019-11-19)

* Deprecations: Deprecations<7>.
* Features: Features<7>.
* Improvements: Improvements<10>.
* Bug Fixes: Bug Fixes<29>.
* Trivial/Internal Changes: Trivial/Internal Changes<11>.

pytest 5.2.4 (2019-11-15)

* Bug Fixes: Bug Fixes<30>.

pytest 5.2.3 (2019-11-14)

* Bug Fixes: Bug Fixes<31>.

pytest 5.2.2 (2019-10-24)

* Bug Fixes: Bug Fixes<32>.

pytest 5.2.1 (2019-10-06)

* Bug Fixes: Bug Fixes<33>.

pytest 5.2.0 (2019-09-28)

* Deprecations: Deprecations<8>.
* Features: Features<8>.
* Bug Fixes: Bug Fixes<34>.
* Trivial/Internal Changes: Trivial/Internal Changes<12>.

pytest 5.1.3 (2019-09-18)

* Bug Fixes: Bug Fixes<35>.

pytest 5.1.2 (2019-08-30)

* Bug Fixes: Bug Fixes<36>.

pytest 5.1.1 (2019-08-20)

* Bug Fixes: Bug Fixes<37>.

pytest 5.1.0 (2019-08-15)

* Removals::
* Features: Features<9>.
* Improvements: Improvements<11>.
* Bug Fixes: Bug Fixes<38>.
* Improved Documentation: Improved Documentation<10>.
* Trivial/Internal Changes: Trivial/Internal Changes<13>.

pytest 5.0.1 (2019-07-04)

* Bug Fixes: Bug Fixes<39>.
* Improved Documentation: Improved Documentation<11>.

pytest 5.0.0 (2019-06-28)

* Important::
* Removals: Removals<2>.
* Deprecations: Deprecations<9>.
* Features: Features<10>.
* Bug Fixes: Bug Fixes<40>.
* Improved Documentation: Improved Documentation<12>.

pytest 4.6.11 (2020-06-04)

* Bug Fixes: Bug Fixes<41>.

pytest 4.6.10 (2020-05-08)

* Features: Features<11>.
* Trivial/Internal Changes: Trivial/Internal Changes<14>.

pytest 4.6.9 (2020-01-04)

* Bug Fixes: Bug Fixes<42>.

pytest 4.6.8 (2019-12-19)

* Features: Features<12>.
* Bug Fixes: Bug Fixes<43>.
* Trivial/Internal Changes: Trivial/Internal Changes<15>.

pytest 4.6.7 (2019-12-05)

* Bug Fixes: Bug Fixes<44>.

pytest 4.6.6 (2019-10-11)

* Bug Fixes: Bug Fixes<45>.
* Trivial/Internal Changes: Trivial/Internal Changes<16>.

pytest 4.6.5 (2019-08-05)

* Bug Fixes: Bug Fixes<46>.

pytest 4.6.4 (2019-06-28)

* Bug Fixes: Bug Fixes<47>.

pytest 4.6.3 (2019-06-11)

* Bug Fixes: Bug Fixes<48>.

pytest 4.6.2 (2019-06-03)

* Bug Fixes: Bug Fixes<49>.

pytest 4.6.1 (2019-06-02)

* Bug Fixes: Bug Fixes<50>.

pytest 4.6.0 (2019-05-31)

* Important: Important<2>.
* Features: Features<13>.
* Bug Fixes: Bug Fixes<51>.
* Improved Documentation: Improved Documentation<13>.

pytest 4.5.0 (2019-05-11)

* Features: Features<14>.
* Bug Fixes: Bug Fixes<52>.
* Improved Documentation: Improved Documentation<14>.
* Trivial/Internal Changes: Trivial/Internal Changes<17>.

pytest 4.4.2 (2019-05-08)

* Bug Fixes: Bug Fixes<53>.
* Improved Documentation: Improved Documentation<15>.
* Trivial/Internal Changes: Trivial/Internal Changes<18>.

pytest 4.4.1 (2019-04-15)

* Bug Fixes: Bug Fixes<54>.

pytest 4.4.0 (2019-03-29)

* Features: Features<15>.
* Bug Fixes: Bug Fixes<55>.
* Improved Documentation: Improved Documentation<16>.
* Trivial/Internal Changes: Trivial/Internal Changes<19>.

pytest 4.3.1 (2019-03-11)

* Bug Fixes: Bug Fixes<56>.
* Trivial/Internal Changes: Trivial/Internal Changes<20>.

pytest 4.3.0 (2019-02-16)

* Deprecations: Deprecations<10>.
* Features: Features<16>.
* Bug Fixes: Bug Fixes<57>.

pytest 4.2.1 (2019-02-12)

* Bug Fixes: Bug Fixes<58>.
* Improved Documentation: Improved Documentation<17>.
* Trivial/Internal Changes: Trivial/Internal Changes<21>.

pytest 4.2.0 (2019-01-30)

* Features: Features<17>.
* Bug Fixes: Bug Fixes<59>.
* Trivial/Internal Changes: Trivial/Internal Changes<22>.

pytest 4.1.1 (2019-01-12)

* Bug Fixes: Bug Fixes<60>.
* Improved Documentation: Improved Documentation<18>.
* Trivial/Internal Changes: Trivial/Internal Changes<23>.

pytest 4.1.0 (2019-01-05)

* Removals: Removals<3>.
* Deprecations: Deprecations<11>.
* Features: Features<18>.
* Bug Fixes: Bug Fixes<61>.
* Improved Documentation: Improved Documentation<19>.
* Trivial/Internal Changes: Trivial/Internal Changes<24>.

pytest 4.0.2 (2018-12-13)

* Bug Fixes: Bug Fixes<62>.
* Improved Documentation: Improved Documentation<20>.

pytest 4.0.1 (2018-11-23)

* Bug Fixes: Bug Fixes<63>.
* Trivial/Internal Changes: Trivial/Internal Changes<25>.

pytest 4.0.0 (2018-11-13)

* Removals: Removals<4>.
* Features: Features<19>.
* Bug Fixes: Bug Fixes<64>.

pytest 3.10.1 (2018-11-11)

* Bug Fixes: Bug Fixes<65>.
* Trivial/Internal Changes: Trivial/Internal Changes<26>.

pytest 3.10.0 (2018-11-03)

* Features: Features<20>.
* Bug Fixes: Bug Fixes<66>.
* Improved Documentation: Improved Documentation<21>.
* Trivial/Internal Changes: Trivial/Internal Changes<27>.

pytest 3.9.3 (2018-10-27)

* Bug Fixes: Bug Fixes<67>.
* Improved Documentation: Improved Documentation<22>.
* Trivial/Internal Changes: Trivial/Internal Changes<28>.

pytest 3.9.2 (2018-10-22)

* Bug Fixes: Bug Fixes<68>.

pytest 3.9.1 (2018-10-16)

* Features: Features<21>.

pytest 3.9.0 (2018-10-15 - not published due to a release automation bug)

* Deprecations: Deprecations<12>.
* Features: Features<22>.
* Bug Fixes: Bug Fixes<69>.
* Improved Documentation: Improved Documentation<23>.
* Trivial/Internal Changes: Trivial/Internal Changes<29>.

pytest 3.8.2 (2018-10-02)

* Deprecations and Removals: Deprecations and Removals<2>.
* Bug Fixes: Bug Fixes<70>.
* Improved Documentation: Improved Documentation<24>.

pytest 3.8.1 (2018-09-22)

* Bug Fixes: Bug Fixes<71>.
* Improved Documentation: Improved Documentation<25>.
* Trivial/Internal Changes: Trivial/Internal Changes<30>.

pytest 3.8.0 (2018-09-05)

* Deprecations and Removals: Deprecations and Removals<3>.
* Features: Features<23>.
* Bug Fixes: Bug Fixes<72>.
* Improved Documentation: Improved Documentation<26>.
* Trivial/Internal Changes: Trivial/Internal Changes<31>.

pytest 3.7.4 (2018-08-29)

* Bug Fixes: Bug Fixes<73>.
* Improved Documentation: Improved Documentation<27>.

pytest 3.7.3 (2018-08-26)

* Bug Fixes: Bug Fixes<74>.
* Improved Documentation: Improved Documentation<28>.
* Trivial/Internal Changes: Trivial/Internal Changes<32>.

pytest 3.7.2 (2018-08-16)

* Bug Fixes: Bug Fixes<75>.
* Improved Documentation: Improved Documentation<29>.

pytest 3.7.1 (2018-08-02)

* Bug Fixes: Bug Fixes<76>.

pytest 3.7.0 (2018-07-30)

* Deprecations and Removals: Deprecations and Removals<4>.
* Features: Features<24>.
* Bug Fixes: Bug Fixes<77>.
* Improved Documentation: Improved Documentation<30>.
* Trivial/Internal Changes: Trivial/Internal Changes<33>.

pytest 3.6.4 (2018-07-28)

* Bug Fixes: Bug Fixes<78>.
* Improved Documentation: Improved Documentation<31>.
* Trivial/Internal Changes: Trivial/Internal Changes<34>.

pytest 3.6.3 (2018-07-04)

* Bug Fixes: Bug Fixes<79>.
* Improved Documentation: Improved Documentation<32>.
* Trivial/Internal Changes: Trivial/Internal Changes<35>.

pytest 3.6.2 (2018-06-20)

* Bug Fixes: Bug Fixes<80>.
* Improved Documentation: Improved Documentation<33>.
* Trivial/Internal Changes: Trivial/Internal Changes<36>.

pytest 3.6.1 (2018-06-05)

* Bug Fixes: Bug Fixes<81>.
* Improved Documentation: Improved Documentation<34>.
* Trivial/Internal Changes: Trivial/Internal Changes<37>.

pytest 3.6.0 (2018-05-23)

* Features: Features<25>.
* Bug Fixes: Bug Fixes<82>.
* Improved Documentation: Improved Documentation<35>.
* Trivial/Internal Changes: Trivial/Internal Changes<38>.

pytest 3.5.1 (2018-04-23)

* Bug Fixes: Bug Fixes<83>.
* Improved Documentation: Improved Documentation<36>.
* Trivial/Internal Changes: Trivial/Internal Changes<39>.

pytest 3.5.0 (2018-03-21)

* Deprecations and Removals: Deprecations and Removals<5>.
* Features: Features<26>.
* Bug Fixes: Bug Fixes<84>.
* Improved Documentation: Improved Documentation<37>.
* Trivial/Internal Changes: Trivial/Internal Changes<40>.

pytest 3.4.2 (2018-03-04)

* Bug Fixes: Bug Fixes<85>.
* Improved Documentation: Improved Documentation<38>.
* Trivial/Internal Changes: Trivial/Internal Changes<41>.

pytest 3.4.1 (2018-02-20)

* Bug Fixes: Bug Fixes<86>.
* Improved Documentation: Improved Documentation<39>.
* Trivial/Internal Changes: Trivial/Internal Changes<42>.

pytest 3.4.0 (2018-01-30)

* Deprecations and Removals: Deprecations and Removals<6>.
* Features: Features<27>.
* Bug Fixes: Bug Fixes<87>.
* Improved Documentation: Improved Documentation<40>.
* Trivial/Internal Changes: Trivial/Internal Changes<43>.

pytest 3.3.2 (2017-12-25)

* Bug Fixes: Bug Fixes<88>.
* Improved Documentation: Improved Documentation<41>.
* Trivial/Internal Changes: Trivial/Internal Changes<44>.

pytest 3.3.1 (2017-12-05)

* Bug Fixes: Bug Fixes<89>.
* Improved Documentation: Improved Documentation<42>.
* Trivial/Internal Changes: Trivial/Internal Changes<45>.

pytest 3.3.0 (2017-11-23)

* Deprecations and Removals: Deprecations and Removals<7>.
* Features: Features<28>.
* Bug Fixes: Bug Fixes<90>.
* Trivial/Internal Changes: Trivial/Internal Changes<46>.

pytest 3.2.5 (2017-11-15)

* Bug Fixes: Bug Fixes<91>.

pytest 3.2.4 (2017-11-13)

* Bug Fixes: Bug Fixes<92>.
* Improved Documentation: Improved Documentation<43>.

pytest 3.2.3 (2017-10-03)

* Bug Fixes: Bug Fixes<93>.
* Improved Documentation: Improved Documentation<44>.
* Trivial/Internal Changes: Trivial/Internal Changes<47>.

pytest 3.2.2 (2017-09-06)

* Bug Fixes: Bug Fixes<94>.
* Improved Documentation: Improved Documentation<45>.
* Trivial/Internal Changes: Trivial/Internal Changes<48>.

pytest 3.2.1 (2017-08-08)

* Bug Fixes: Bug Fixes<95>.
* Improved Documentation: Improved Documentation<46>.

pytest 3.2.0 (2017-07-30)

* Deprecations and Removals: Deprecations and Removals<8>.
* Features: Features<29>.
* Bug Fixes: Bug Fixes<96>.
* Improved Documentation: Improved Documentation<47>.
* Trivial/Internal Changes: Trivial/Internal Changes<49>.

pytest 3.1.3 (2017-07-03)

* Bug Fixes: Bug Fixes<97>.
* Improved Documentation: Improved Documentation<48>.
* Trivial/Internal Changes: Trivial/Internal Changes<50>.

pytest 3.1.2 (2017-06-08)

* Bug Fixes: Bug Fixes<98>.
* Improved Documentation: Improved Documentation<49>.

pytest 3.1.1 (2017-05-30)

* Bug Fixes: Bug Fixes<99>.
* Improved Documentation: Improved Documentation<50>.

3.1.0 (2017-05-22)

* New Features: New Features<2>.
* Changes::
* Bug Fixes: Bug Fixes<100>.



File: pytest.info,  Node: Get Started,  Next: How to invoke pytest,  Prev: Top,  Up: Top

1 Get Started
*************

* Menu:

* Install pytest::
* Create your first test::
* Run multiple tests::
* Assert that a certain exception is raised::
* Group multiple tests in a class::
* Request a unique temporary directory for functional tests::
* Continue reading::


File: pytest.info,  Node: Install pytest,  Next: Create your first test,  Up: Get Started

1.1 Install ‘pytest’
====================

‘pytest’ requires: Python 3.7+ or PyPy3.

  1. Run the following command in your command line:

     pip install -U pytest

  2. Check that you installed the correct version:

     $ pytest --version
     pytest 7.1.3


File: pytest.info,  Node: Create your first test,  Next: Run multiple tests,  Prev: Install pytest,  Up: Get Started

1.2 Create your first test
==========================

Create a new file called ‘test_sample.py’, containing a function, and a
test:

     # content of test_sample.py
     def func(x):
         return x + 1


     def test_answer():
         assert func(3) == 5

The test

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_sample.py F                                                     [100%]

     ================================= FAILURES =================================
     _______________________________ test_answer ________________________________

         def test_answer():
     >       assert func(3) == 5
     E       assert 4 == 5
     E        +  where 4 = func(3)

     test_sample.py:6: AssertionError
     ========================= short test summary info ==========================
     FAILED test_sample.py::test_answer - assert 4 == 5
     ============================ 1 failed in 0.12s =============================

The ‘[100%]’ refers to the overall progress of running all test cases.
After it finishes, pytest then shows a failure report because ‘func(3)’
does not return ‘5’.

     Note: You can use the ‘assert’ statement to verify test
     expectations.  pytest’s Advanced assertion introspection(1) will
     intelligently report intermediate values of the assert expression
     so you can avoid the many names of JUnit legacy methods(2).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/reference/simple_stmts.html#assert

   (2) https://docs.python.org/3/library/unittest.html#testcase-objects


File: pytest.info,  Node: Run multiple tests,  Next: Assert that a certain exception is raised,  Prev: Create your first test,  Up: Get Started

1.3 Run multiple tests
======================

‘pytest’ will run all files of the form test_*.py or *_test.py in the
current directory and its subdirectories.  More generally, it follows
*note standard test discovery rules: a.


File: pytest.info,  Node: Assert that a certain exception is raised,  Next: Group multiple tests in a class,  Prev: Run multiple tests,  Up: Get Started

1.4 Assert that a certain exception is raised
=============================================

Use the *note raises: c. helper to assert that some code raises an
exception:

     # content of test_sysexit.py
     import pytest


     def f():
         raise SystemExit(1)


     def test_mytest():
         with pytest.raises(SystemExit):
             f()

Execute the test function with “quiet” reporting mode:

     $ pytest -q test_sysexit.py
     .                                                                    [100%]
     1 passed in 0.12s

     Note: The ‘-q/--quiet’ flag keeps the output brief in this and
     following examples.


File: pytest.info,  Node: Group multiple tests in a class,  Next: Request a unique temporary directory for functional tests,  Prev: Assert that a certain exception is raised,  Up: Get Started

1.5 Group multiple tests in a class
===================================

Once you develop multiple tests, you may want to group them into a
class.  pytest makes it easy to create a class containing more than one
test:

     # content of test_class.py
     class TestClass:
         def test_one(self):
             x = "this"
             assert "h" in x

         def test_two(self):
             x = "hello"
             assert hasattr(x, "check")

‘pytest’ discovers all tests following its *note Conventions for Python
test discovery: a, so it finds both ‘test_’ prefixed functions.  There
is no need to subclass anything, but make sure to prefix your class with
‘Test’ otherwise the class will be skipped.  We can simply run the
module by passing its filename:

     $ pytest -q test_class.py
     .F                                                                   [100%]
     ================================= FAILURES =================================
     ____________________________ TestClass.test_two ____________________________

     self = <test_class.TestClass object at 0xdeadbeef0001>

         def test_two(self):
             x = "hello"
     >       assert hasattr(x, "check")
     E       AssertionError: assert False
     E        +  where False = hasattr('hello', 'check')

     test_class.py:8: AssertionError
     ========================= short test summary info ==========================
     FAILED test_class.py::TestClass::test_two - AssertionError: assert False
     1 failed, 1 passed in 0.12s

The first test passed and the second failed.  You can easily see the
intermediate values in the assertion to help you understand the reason
for the failure.

Grouping tests in classes can be beneficial for the following reasons:

        * Test organization

        * Sharing fixtures for tests only in that particular class

        * Applying marks at the class level and having them implicitly
          apply to all tests

Something to be aware of when grouping tests inside classes is that each
test has a unique instance of the class.  Having each test share the
same class instance would be very detrimental to test isolation and
would promote poor test practices.  This is outlined below:

     # content of test_class_demo.py
     class TestClassDemoInstance:
         value = 0

         def test_one(self):
             self.value = 1
             assert self.value == 1

         def test_two(self):
             assert self.value == 1

     $ pytest -k TestClassDemoInstance -q
     .F                                                                   [100%]
     ================================= FAILURES =================================
     ______________________ TestClassDemoInstance.test_two ______________________

     self = <test_class_demo.TestClassDemoInstance object at 0xdeadbeef0002>

         def test_two(self):
     >       assert self.value == 1
     E       assert 0 == 1
     E        +  where 0 = <test_class_demo.TestClassDemoInstance object at 0xdeadbeef0002>.value

     test_class_demo.py:9: AssertionError
     ========================= short test summary info ==========================
     FAILED test_class_demo.py::TestClassDemoInstance::test_two - assert 0 == 1
     1 failed, 1 passed in 0.12s

Note that attributes added at class level are ‘class attributes’, so
they will be shared between tests.


File: pytest.info,  Node: Request a unique temporary directory for functional tests,  Next: Continue reading,  Prev: Group multiple tests in a class,  Up: Get Started

1.6 Request a unique temporary directory for functional tests
=============================================================

‘pytest’ provides Builtin fixtures/function arguments to request
arbitrary resources, like a unique temporary directory:

     # content of test_tmp_path.py
     def test_needsfiles(tmp_path):
         print(tmp_path)
         assert 0

List the name ‘tmp_path’ in the test function signature and ‘pytest’
will lookup and call a fixture factory to create the resource before
performing the test function call.  Before the test runs, ‘pytest’
creates a unique-per-test-invocation temporary directory:

     $ pytest -q test_tmp_path.py
     F                                                                    [100%]
     ================================= FAILURES =================================
     _____________________________ test_needsfiles ______________________________

     tmp_path = PosixPath('PYTEST_TMPDIR/test_needsfiles0')

         def test_needsfiles(tmp_path):
             print(tmp_path)
     >       assert 0
     E       assert 0

     test_tmp_path.py:3: AssertionError
     --------------------------- Captured stdout call ---------------------------
     PYTEST_TMPDIR/test_needsfiles0
     ========================= short test summary info ==========================
     FAILED test_tmp_path.py::test_needsfiles - assert 0
     1 failed in 0.12s

More info on temporary directory handling is available at *note
Temporary directories and files: f.

Find out what kind of builtin *note pytest fixtures: 10. exist with the
command:

     pytest --fixtures   # shows builtin and custom fixtures

Note that this command omits fixtures with leading ‘_’ unless the ‘-v’
option is added.


File: pytest.info,  Node: Continue reading,  Prev: Request a unique temporary directory for functional tests,  Up: Get Started

1.7 Continue reading
====================

Check out additional pytest resources to help you customize tests for
your unique workflow:

   * “*note How to invoke pytest: 12.” for command line invocation
     examples

   * “*note How to use pytest with an existing test suite: 13.” for
     working with pre-existing tests

   * “*note How to mark test functions with attributes: 14.” for
     information on the ‘pytest.mark’ mechanism

   * “*note Fixtures reference: 10.” for providing a functional baseline
     to your tests

   * “*note Writing plugins: 15.” for managing and writing plugins

   * “*note Good Integration Practices: 16.” for virtualenv and test
     layouts


File: pytest.info,  Node: How to invoke pytest,  Next: How to write and report assertions in tests,  Prev: Get Started,  Up: Top

2 How to invoke pytest
**********************

See also
........

*note Complete pytest command-line flag reference: 19.

In general, pytest is invoked with the command ‘pytest’ (see below for
*note other ways to invoke pytest: 1a.).  This will execute all tests in
all files whose names follow the form ‘test_*.py’ or ‘\*_test.py’ in the
current directory and its subdirectories.  More generally, pytest
follows *note standard test discovery rules: a.

* Menu:

* Specifying which tests to run::
* Getting help on version, option names, environment variables: Getting help on version option names environment variables.
* Profiling test execution duration::
* Managing loading of plugins::
* Other ways of calling pytest::


File: pytest.info,  Node: Specifying which tests to run,  Next: Getting help on version option names environment variables,  Up: How to invoke pytest

2.1 Specifying which tests to run
=================================

Pytest supports several ways to run and select tests from the
command-line.

‘Run tests in a module’

     pytest test_mod.py

‘Run tests in a directory’

     pytest testing/

‘Run tests by keyword expressions’

     pytest -k "MyClass and not method"

This will run tests which contain names that match the given ‘string
expression’ (case-insensitive), which can include Python operators that
use filenames, class names and function names as variables.  The example
above will run ‘TestMyClass.test_something’ but not
‘TestMyClass.test_method_simple’.  ‘Run tests by node ids’

Each collected test is assigned a unique ‘nodeid’ which consist of the
module filename followed by specifiers like class names, function names
and parameters from parametrization, separated by ‘::’ characters.

To run a specific test within a module:

     pytest test_mod.py::test_func

Another example specifying a test method in the command line:

     pytest test_mod.py::TestClass::test_method

‘Run tests by marker expressions’

     pytest -m slow

Will run all tests which are decorated with the ‘@pytest.mark.slow’
decorator.

For more information see *note marks: 14.

‘Run tests from packages’

     pytest --pyargs pkg.testing

This will import ‘pkg.testing’ and use its filesystem location to find
and run tests from.


File: pytest.info,  Node: Getting help on version option names environment variables,  Next: Profiling test execution duration,  Prev: Specifying which tests to run,  Up: How to invoke pytest

2.2 Getting help on version, option names, environment variables
================================================================

     pytest --version   # shows where pytest was imported from
     pytest --fixtures  # show available builtin function arguments
     pytest -h | --help # show help on command line and config file options


File: pytest.info,  Node: Profiling test execution duration,  Next: Managing loading of plugins,  Prev: Getting help on version option names environment variables,  Up: How to invoke pytest

2.3 Profiling test execution duration
=====================================

Changed in version 6.0.

To get a list of the slowest 10 test durations over 1.0s long:

     pytest --durations=10 --durations-min=1.0

By default, pytest will not show test durations that are too small
(<0.005s) unless ‘-vv’ is passed on the command-line.


File: pytest.info,  Node: Managing loading of plugins,  Next: Other ways of calling pytest,  Prev: Profiling test execution duration,  Up: How to invoke pytest

2.4 Managing loading of plugins
===============================

* Menu:

* Early loading plugins::
* Disabling plugins::


File: pytest.info,  Node: Early loading plugins,  Next: Disabling plugins,  Up: Managing loading of plugins

2.4.1 Early loading plugins
---------------------------

You can early-load plugins (internal and external) explicitly in the
command-line with the ‘-p’ option:

     pytest -p mypluginmodule

The option receives a ‘name’ parameter, which can be:

   * A full module dotted name, for example ‘myproject.plugins’.  This
     dotted name must be importable.

   * The entry-point name of a plugin.  This is the name passed to
     ‘setuptools’ when the plugin is registered.  For example to
     early-load the pytest-cov(1) plugin you can use:

          pytest -p pytest_cov

   ---------- Footnotes ----------

   (1) https://pypi.org/project/pytest-cov/


File: pytest.info,  Node: Disabling plugins,  Prev: Early loading plugins,  Up: Managing loading of plugins

2.4.2 Disabling plugins
-----------------------

To disable loading specific plugins at invocation time, use the ‘-p’
option together with the prefix ‘no:’.

Example: to disable loading the plugin ‘doctest’, which is responsible
for executing doctest tests from text files, invoke pytest like this:

     pytest -p no:doctest


File: pytest.info,  Node: Other ways of calling pytest,  Prev: Managing loading of plugins,  Up: How to invoke pytest

2.5 Other ways of calling pytest
================================

* Menu:

* Calling pytest through python -m pytest::
* Calling pytest from Python code::


File: pytest.info,  Node: Calling pytest through python -m pytest,  Next: Calling pytest from Python code,  Up: Other ways of calling pytest

2.5.1 Calling pytest through ‘python -m pytest’
-----------------------------------------------

You can invoke testing through the Python interpreter from the command
line:

     python -m pytest [...]

This is almost equivalent to invoking the command line script ‘pytest
[...]’ directly, except that calling via ‘python’ will also add the
current directory to ‘sys.path’.


File: pytest.info,  Node: Calling pytest from Python code,  Prev: Calling pytest through python -m pytest,  Up: Other ways of calling pytest

2.5.2 Calling pytest from Python code
-------------------------------------

You can invoke ‘pytest’ from Python code directly:

     retcode = pytest.main()

this acts as if you would call “pytest” from the command line.  It will
not raise SystemExit(1) but return the exit code instead.  You can pass
in options and arguments:

     retcode = pytest.main(["-x", "mytestdir"])

You can specify additional plugins to ‘pytest.main’:

     # content of myinvoke.py
     import sys

     import pytest


     class MyPlugin:
         def pytest_sessionfinish(self):
             print("*** test run reporting finishing")


     if __name__ == "__main__":
         sys.exit(pytest.main(["-qq"], plugins=[MyPlugin()]))

Running it will show that ‘MyPlugin’ was added and its hook was invoked:

     $ python myinvoke.py
     *** test run reporting finishing

     Note: Calling ‘pytest.main()’ will result in importing your tests
     and any modules that they import.  Due to the caching mechanism of
     python’s import system, making subsequent calls to ‘pytest.main()’
     from the same process will not reflect changes to those files
     between the calls.  For this reason, making multiple calls to
     ‘pytest.main()’ from the same process (in order to re-run tests,
     for example) is not recommended.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#SystemExit


File: pytest.info,  Node: How to write and report assertions in tests,  Next: How to use fixtures,  Prev: How to invoke pytest,  Up: Top

3 How to write and report assertions in tests
*********************************************

* Menu:

* Asserting with the assert statement::
* Assertions about expected exceptions::
* Assertions about expected warnings::
* Making use of context-sensitive comparisons::
* Defining your own explanation for failed assertions::
* Assertion introspection details::


File: pytest.info,  Node: Asserting with the assert statement,  Next: Assertions about expected exceptions,  Up: How to write and report assertions in tests

3.1 Asserting with the ‘assert’ statement
=========================================

‘pytest’ allows you to use the standard Python ‘assert’ for verifying
expectations and values in Python tests.  For example, you can write the
following:

     # content of test_assert1.py
     def f():
         return 3


     def test_function():
         assert f() == 4

to assert that your function returns a certain value.  If this assertion
fails you will see the return value of the function call:

     $ pytest test_assert1.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_assert1.py F                                                    [100%]

     ================================= FAILURES =================================
     ______________________________ test_function _______________________________

         def test_function():
     >       assert f() == 4
     E       assert 3 == 4
     E        +  where 3 = f()

     test_assert1.py:6: AssertionError
     ========================= short test summary info ==========================
     FAILED test_assert1.py::test_function - assert 3 == 4
     ============================ 1 failed in 0.12s =============================

‘pytest’ has support for showing the values of the most common
subexpressions including calls, attributes, comparisons, and binary and
unary operators.  (See *note Demo of Python failure reports with pytest:
2e.).  This allows you to use the idiomatic python constructs without
boilerplate code while not losing introspection information.

However, if you specify a message with the assertion like this:

     assert a % 2 == 0, "value was odd, should be even"

then no assertion introspection takes places at all and the message will
be simply shown in the traceback.

See *note Assertion introspection details: 2f. for more information on
assertion introspection.


File: pytest.info,  Node: Assertions about expected exceptions,  Next: Assertions about expected warnings,  Prev: Asserting with the assert statement,  Up: How to write and report assertions in tests

3.2 Assertions about expected exceptions
========================================

In order to write assertions about raised exceptions, you can use *note
pytest.raises(): 31. as a context manager like this:

     import pytest


     def test_zero_division():
         with pytest.raises(ZeroDivisionError):
             1 / 0

and if you need to have access to the actual exception info you may use:

     def test_recursion_depth():
         with pytest.raises(RuntimeError) as excinfo:

             def f():
                 f()

             f()
         assert "maximum recursion" in str(excinfo.value)

‘excinfo’ is an *note ExceptionInfo: 32. instance, which is a wrapper
around the actual exception raised.  The main attributes of interest are
‘.type’, ‘.value’ and ‘.traceback’.

You can pass a ‘match’ keyword parameter to the context-manager to test
that a regular expression matches on the string representation of an
exception (similar to the ‘TestCase.assertRaisesRegex’ method from
‘unittest’):

     import pytest


     def myfunc():
         raise ValueError("Exception 123 raised")


     def test_match():
         with pytest.raises(ValueError, match=r".* 123 .*"):
             myfunc()

The regexp parameter of the ‘match’ method is matched with the
‘re.search’ function, so in the above example ‘match='123'’ would have
worked as well.

There’s an alternate form of the *note pytest.raises(): 31. function
where you pass a function that will be executed with the given ‘*args’
and ‘**kwargs’ and assert that the given exception is raised:

     pytest.raises(ExpectedException, func, *args, **kwargs)

The reporter will provide you with helpful output in case of failures
such as ‘no exception’ or ‘wrong exception’.

Note that it is also possible to specify a “raises” argument to
‘pytest.mark.xfail’, which checks that the test is failing in a more
specific way than just having any exception raised:

     @pytest.mark.xfail(raises=IndexError)
     def test_f():
         f()

Using *note pytest.raises(): 31. is likely to be better for cases where
you are testing exceptions your own code is deliberately raising,
whereas using ‘@pytest.mark.xfail’ with a check function is probably
better for something like documenting unfixed bugs (where the test
describes what “should” happen) or bugs in dependencies.


File: pytest.info,  Node: Assertions about expected warnings,  Next: Making use of context-sensitive comparisons,  Prev: Assertions about expected exceptions,  Up: How to write and report assertions in tests

3.3 Assertions about expected warnings
======================================

You can check that code raises a particular warning using *note
pytest.warns: 35.


File: pytest.info,  Node: Making use of context-sensitive comparisons,  Next: Defining your own explanation for failed assertions,  Prev: Assertions about expected warnings,  Up: How to write and report assertions in tests

3.4 Making use of context-sensitive comparisons
===============================================

‘pytest’ has rich support for providing context-sensitive information
when it encounters comparisons.  For example:

     # content of test_assert2.py
     def test_set_comparison():
         set1 = set("1308")
         set2 = set("8035")
         assert set1 == set2

if you run this module:

     $ pytest test_assert2.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_assert2.py F                                                    [100%]

     ================================= FAILURES =================================
     ___________________________ test_set_comparison ____________________________

         def test_set_comparison():
             set1 = set("1308")
             set2 = set("8035")
     >       assert set1 == set2
     E       AssertionError: assert {'0', '1', '3', '8'} == {'0', '3', '5', '8'}
     E         Extra items in the left set:
     E         '1'
     E         Extra items in the right set:
     E         '5'
     E         Use -v to get more diff

     test_assert2.py:4: AssertionError
     ========================= short test summary info ==========================
     FAILED test_assert2.py::test_set_comparison - AssertionError: assert {'0'...
     ============================ 1 failed in 0.12s =============================

Special comparisons are done for a number of cases:

   * comparing long strings: a context diff is shown

   * comparing long sequences: first failing indices

   * comparing dicts: different entries

See the *note reporting demo: 2e. for many more examples.


File: pytest.info,  Node: Defining your own explanation for failed assertions,  Next: Assertion introspection details,  Prev: Making use of context-sensitive comparisons,  Up: How to write and report assertions in tests

3.5 Defining your own explanation for failed assertions
=======================================================

It is possible to add your own detailed explanations by implementing the
‘pytest_assertrepr_compare’ hook.

 -- Function: pytest_assertrepr_compare (config, op, left, right)

     Return explanation for comparisons in failing assert expressions.

     Return None for no custom explanation, otherwise return a list of
     strings.  The strings will be joined by newlines but any newlines
     ‘in’ a string will be escaped.  Note that all but the first line
     will be indented slightly, the intention is for the first line to
     be a summary.


     Parameters: ‘config’ (*note pytest.Config: 39.) – The pytest config
     object.

As an example consider adding the following hook in a *note conftest.py:
3a. file which provides an alternative explanation for ‘Foo’ objects:

     # content of conftest.py
     from test_foocompare import Foo


     def pytest_assertrepr_compare(op, left, right):
         if isinstance(left, Foo) and isinstance(right, Foo) and op == "==":
             return [
                 "Comparing Foo instances:",
                 f"   vals: {left.val} != {right.val}",
             ]

now, given this test module:

     # content of test_foocompare.py
     class Foo:
         def __init__(self, val):
             self.val = val

         def __eq__(self, other):
             return self.val == other.val


     def test_compare():
         f1 = Foo(1)
         f2 = Foo(2)
         assert f1 == f2

you can run the test module and get the custom output defined in the
conftest file:

     $ pytest -q test_foocompare.py
     F                                                                    [100%]
     ================================= FAILURES =================================
     _______________________________ test_compare _______________________________

         def test_compare():
             f1 = Foo(1)
             f2 = Foo(2)
     >       assert f1 == f2
     E       assert Comparing Foo instances:
     E            vals: 1 != 2

     test_foocompare.py:12: AssertionError
     ========================= short test summary info ==========================
     FAILED test_foocompare.py::test_compare - assert Comparing Foo instances:
     1 failed in 0.12s


File: pytest.info,  Node: Assertion introspection details,  Prev: Defining your own explanation for failed assertions,  Up: How to write and report assertions in tests

3.6 Assertion introspection details
===================================

Reporting details about a failing assertion is achieved by rewriting
assert statements before they are run.  Rewritten assert statements put
introspection information into the assertion failure message.  ‘pytest’
only rewrites test modules directly discovered by its test collection
process, so ‘asserts in supporting modules which are not themselves test
modules will not be rewritten’.

You can manually enable assertion rewriting for an imported module by
calling *note register_assert_rewrite: 3d. before you import it (a good
place to do that is in your root ‘conftest.py’).

For further information, Benjamin Peterson wrote up Behind the scenes of
pytest’s new assertion rewriting(1).

* Menu:

* Assertion rewriting caches files on disk::
* Disabling assert rewriting::

   ---------- Footnotes ----------

   (1) 
http://pybites.blogspot.com/2011/07/behind-scenes-of-pytests-new-assertion.html


File: pytest.info,  Node: Assertion rewriting caches files on disk,  Next: Disabling assert rewriting,  Up: Assertion introspection details

3.6.1 Assertion rewriting caches files on disk
----------------------------------------------

‘pytest’ will write back the rewritten modules to disk for caching.  You
can disable this behavior (for example to avoid leaving stale ‘.pyc’
files around in projects that move files around a lot) by adding this to
the top of your ‘conftest.py’ file:

     import sys

     sys.dont_write_bytecode = True

Note that you still get the benefits of assertion introspection, the
only change is that the ‘.pyc’ files won’t be cached on disk.

Additionally, rewriting will silently skip caching if it cannot write
new ‘.pyc’ files, i.e.  in a read-only filesystem or a zipfile.


File: pytest.info,  Node: Disabling assert rewriting,  Prev: Assertion rewriting caches files on disk,  Up: Assertion introspection details

3.6.2 Disabling assert rewriting
--------------------------------

‘pytest’ rewrites test modules on import by using an import hook to
write new ‘pyc’ files.  Most of the time this works transparently.
However, if you are working with the import machinery yourself, the
import hook may interfere.

If this is the case you have two options:

   * Disable rewriting for a specific module by adding the string
     ‘PYTEST_DONT_REWRITE’ to its docstring.

   * Disable rewriting for all modules by using ‘--assert=plain’.


File: pytest.info,  Node: How to use fixtures,  Next: How to mark test functions with attributes,  Prev: How to write and report assertions in tests,  Up: Top

4 How to use fixtures
*********************

See also
........

*note About fixtures: 43.

See also
........

*note Fixtures reference: 44.

* Menu:

* “Requesting” fixtures::
* Autouse fixtures (fixtures you don’t have to request): Autouse fixtures fixtures you don’t have to request.
* Scope; sharing fixtures across classes, modules, packages or session: Scope sharing fixtures across classes modules packages or session.
* Teardown/Cleanup (AKA Fixture finalization): Teardown/Cleanup AKA Fixture finalization.
* Safe teardowns::
* Running multiple assert statements safely::
* Fixtures can introspect the requesting test context::
* Using markers to pass data to fixtures::
* Factories as fixtures::
* Parametrizing fixtures::
* Using marks with parametrized fixtures::
* Modularity; using fixtures from a fixture function: Modularity using fixtures from a fixture function.
* Automatic grouping of tests by fixture instances::
* Use fixtures in classes and modules with usefixtures::
* Overriding fixtures on various levels::
* Using fixtures from other projects::


File: pytest.info,  Node: “Requesting” fixtures,  Next: Autouse fixtures fixtures you don’t have to request,  Up: How to use fixtures

4.1 “Requesting” fixtures
=========================

At a basic level, test functions request fixtures they require by
declaring them as arguments.

When pytest goes to run a test, it looks at the parameters in that test
function’s signature, and then searches for fixtures that have the same
names as those parameters.  Once pytest finds them, it runs those
fixtures, captures what they returned (if anything), and passes those
objects into the test function as arguments.

* Menu:

* Quick example::
* Fixtures can request other fixtures::
* Fixtures are reusable::
* A test/fixture can request more than one fixture at a time::
* Fixtures can be requested more than once per test (return values are cached): Fixtures can be requested more than once per test return values are cached.


File: pytest.info,  Node: Quick example,  Next: Fixtures can request other fixtures,  Up: “Requesting” fixtures

4.1.1 Quick example
-------------------

     import pytest


     class Fruit:
         def __init__(self, name):
             self.name = name
             self.cubed = False

         def cube(self):
             self.cubed = True


     class FruitSalad:
         def __init__(self, *fruit_bowl):
             self.fruit = fruit_bowl
             self._cube_fruit()

         def _cube_fruit(self):
             for fruit in self.fruit:
                 fruit.cube()


     # Arrange
     @pytest.fixture
     def fruit_bowl():
         return [Fruit("apple"), Fruit("banana")]


     def test_fruit_salad(fruit_bowl):
         # Act
         fruit_salad = FruitSalad(*fruit_bowl)

         # Assert
         assert all(fruit.cubed for fruit in fruit_salad.fruit)

In this example, ‘test_fruit_salad’ “‘requests’” ‘fruit_bowl’ (i.e.
‘def test_fruit_salad(fruit_bowl):’), and when pytest sees this, it will
execute the ‘fruit_bowl’ fixture function and pass the object it returns
into ‘test_fruit_salad’ as the ‘fruit_bowl’ argument.

Here’s roughly what’s happening if we were to do it by hand:

     def fruit_bowl():
         return [Fruit("apple"), Fruit("banana")]


     def test_fruit_salad(fruit_bowl):
         # Act
         fruit_salad = FruitSalad(*fruit_bowl)

         # Assert
         assert all(fruit.cubed for fruit in fruit_salad.fruit)


     # Arrange
     bowl = fruit_bowl()
     test_fruit_salad(fruit_bowl=bowl)


File: pytest.info,  Node: Fixtures can request other fixtures,  Next: Fixtures are reusable,  Prev: Quick example,  Up: “Requesting” fixtures

4.1.2 Fixtures can ‘request’ other fixtures
-------------------------------------------

One of pytest’s greatest strengths is its extremely flexible fixture
system.  It allows us to boil down complex requirements for tests into
more simple and organized functions, where we only need to have each one
describe the things they are dependent on.  We’ll get more into this
further down, but for now, here’s a quick example to demonstrate how
fixtures can use other fixtures:

     # contents of test_append.py
     import pytest


     # Arrange
     @pytest.fixture
     def first_entry():
         return "a"


     # Arrange
     @pytest.fixture
     def order(first_entry):
         return [first_entry]


     def test_string(order):
         # Act
         order.append("b")

         # Assert
         assert order == ["a", "b"]

Notice that this is the same example from above, but very little
changed.  The fixtures in pytest ‘request’ fixtures just like tests.
All the same ‘requesting’ rules apply to fixtures that do for tests.
Here’s how this example would work if we did it by hand:

     def first_entry():
         return "a"


     def order(first_entry):
         return [first_entry]


     def test_string(order):
         # Act
         order.append("b")

         # Assert
         assert order == ["a", "b"]


     entry = first_entry()
     the_list = order(first_entry=entry)
     test_string(order=the_list)


File: pytest.info,  Node: Fixtures are reusable,  Next: A test/fixture can request more than one fixture at a time,  Prev: Fixtures can request other fixtures,  Up: “Requesting” fixtures

4.1.3 Fixtures are reusable
---------------------------

One of the things that makes pytest’s fixture system so powerful, is
that it gives us the ability to define a generic setup step that can be
reused over and over, just like a normal function would be used.  Two
different tests can request the same fixture and have pytest give each
test their own result from that fixture.

This is extremely useful for making sure tests aren’t affected by each
other.  We can use this system to make sure each test gets its own fresh
batch of data and is starting from a clean state so it can provide
consistent, repeatable results.

Here’s an example of how this can come in handy:

     # contents of test_append.py
     import pytest


     # Arrange
     @pytest.fixture
     def first_entry():
         return "a"


     # Arrange
     @pytest.fixture
     def order(first_entry):
         return [first_entry]


     def test_string(order):
         # Act
         order.append("b")

         # Assert
         assert order == ["a", "b"]


     def test_int(order):
         # Act
         order.append(2)

         # Assert
         assert order == ["a", 2]

Each test here is being given its own copy of that ‘list’ object, which
means the ‘order’ fixture is getting executed twice (the same is true
for the ‘first_entry’ fixture).  If we were to do this by hand as well,
it would look something like this:

     def first_entry():
         return "a"


     def order(first_entry):
         return [first_entry]


     def test_string(order):
         # Act
         order.append("b")

         # Assert
         assert order == ["a", "b"]


     def test_int(order):
         # Act
         order.append(2)

         # Assert
         assert order == ["a", 2]


     entry = first_entry()
     the_list = order(first_entry=entry)
     test_string(order=the_list)

     entry = first_entry()
     the_list = order(first_entry=entry)
     test_int(order=the_list)


File: pytest.info,  Node: A test/fixture can request more than one fixture at a time,  Next: Fixtures can be requested more than once per test return values are cached,  Prev: Fixtures are reusable,  Up: “Requesting” fixtures

4.1.4 A test/fixture can ‘request’ more than one fixture at a time
------------------------------------------------------------------

Tests and fixtures aren’t limited to ‘requesting’ a single fixture at a
time.  They can request as many as they like.  Here’s another quick
example to demonstrate:

     # contents of test_append.py
     import pytest


     # Arrange
     @pytest.fixture
     def first_entry():
         return "a"


     # Arrange
     @pytest.fixture
     def second_entry():
         return 2


     # Arrange
     @pytest.fixture
     def order(first_entry, second_entry):
         return [first_entry, second_entry]


     # Arrange
     @pytest.fixture
     def expected_list():
         return ["a", 2, 3.0]


     def test_string(order, expected_list):
         # Act
         order.append(3.0)

         # Assert
         assert order == expected_list


File: pytest.info,  Node: Fixtures can be requested more than once per test return values are cached,  Prev: A test/fixture can request more than one fixture at a time,  Up: “Requesting” fixtures

4.1.5 Fixtures can be ‘requested’ more than once per test (return values are cached)
------------------------------------------------------------------------------------

Fixtures can also be ‘requested’ more than once during the same test,
and pytest won’t execute them again for that test.  This means we can
‘request’ fixtures in multiple fixtures that are dependent on them (and
even again in the test itself) without those fixtures being executed
more than once.

     # contents of test_append.py
     import pytest


     # Arrange
     @pytest.fixture
     def first_entry():
         return "a"


     # Arrange
     @pytest.fixture
     def order():
         return []


     # Act
     @pytest.fixture
     def append_first(order, first_entry):
         return order.append(first_entry)


     def test_string_only(append_first, order, first_entry):
         # Assert
         assert order == [first_entry]

If a ‘requested’ fixture was executed once for every time it was
‘requested’ during a test, then this test would fail because both
‘append_first’ and ‘test_string_only’ would see ‘order’ as an empty list
(i.e.  ‘[]’), but since the return value of ‘order’ was cached (along
with any side effects executing it may have had) after the first time it
was called, both the test and ‘append_first’ were referencing the same
object, and the test saw the effect ‘append_first’ had on that object.


File: pytest.info,  Node: Autouse fixtures fixtures you don’t have to request,  Next: Scope sharing fixtures across classes modules packages or session,  Prev: “Requesting” fixtures,  Up: How to use fixtures

4.2 Autouse fixtures (fixtures you don’t have to request)
=========================================================

Sometimes you may want to have a fixture (or even several) that you know
all your tests will depend on.  “Autouse” fixtures are a convenient way
to make all tests automatically ‘request’ them.  This can cut out a lot
of redundant ‘requests’, and can even provide more advanced fixture
usage (more on that further down).

We can make a fixture an autouse fixture by passing in ‘autouse=True’ to
the fixture’s decorator.  Here’s a simple example for how they can be
used:

     # contents of test_append.py
     import pytest


     @pytest.fixture
     def first_entry():
         return "a"


     @pytest.fixture
     def order(first_entry):
         return []


     @pytest.fixture(autouse=True)
     def append_first(order, first_entry):
         return order.append(first_entry)


     def test_string_only(order, first_entry):
         assert order == [first_entry]


     def test_string_and_int(order, first_entry):
         order.append(2)
         assert order == [first_entry, 2]

In this example, the ‘append_first’ fixture is an autouse fixture.
Because it happens automatically, both tests are affected by it, even
though neither test ‘requested’ it.  That doesn’t mean they ‘can’t’ be
‘requested’ though; just that it isn’t ‘necessary’.


File: pytest.info,  Node: Scope sharing fixtures across classes modules packages or session,  Next: Teardown/Cleanup AKA Fixture finalization,  Prev: Autouse fixtures fixtures you don’t have to request,  Up: How to use fixtures

4.3 Scope: sharing fixtures across classes, modules, packages or session
========================================================================

Fixtures requiring network access depend on connectivity and are usually
time-expensive to create.  Extending the previous example, we can add a
‘scope="module"’ parameter to the *note @pytest.fixture: 50. invocation
to cause a ‘smtp_connection’ fixture function, responsible to create a
connection to a preexisting SMTP server, to only be invoked once per
test ‘module’ (the default is to invoke once per test ‘function’).
Multiple test functions in a test module will thus each receive the same
‘smtp_connection’ fixture instance, thus saving time.  Possible values
for ‘scope’ are: ‘function’, ‘class’, ‘module’, ‘package’ or ‘session’.

The next example puts the fixture function into a separate ‘conftest.py’
file so that tests from multiple test modules in the directory can
access the fixture function:

     # content of conftest.py
     import smtplib

     import pytest


     @pytest.fixture(scope="module")
     def smtp_connection():
         return smtplib.SMTP("smtp.gmail.com", 587, timeout=5)

     # content of test_module.py


     def test_ehlo(smtp_connection):
         response, msg = smtp_connection.ehlo()
         assert response == 250
         assert b"smtp.gmail.com" in msg
         assert 0  # for demo purposes


     def test_noop(smtp_connection):
         response, msg = smtp_connection.noop()
         assert response == 250
         assert 0  # for demo purposes

Here, the ‘test_ehlo’ needs the ‘smtp_connection’ fixture value.  pytest
will discover and call the *note @pytest.fixture: 50. marked
‘smtp_connection’ fixture function.  Running the test looks like this:

     $ pytest test_module.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items

     test_module.py FF                                                    [100%]

     ================================= FAILURES =================================
     ________________________________ test_ehlo _________________________________

     smtp_connection = <smtplib.SMTP object at 0xdeadbeef0001>

         def test_ehlo(smtp_connection):
             response, msg = smtp_connection.ehlo()
             assert response == 250
             assert b"smtp.gmail.com" in msg
     >       assert 0  # for demo purposes
     E       assert 0

     test_module.py:7: AssertionError
     ________________________________ test_noop _________________________________

     smtp_connection = <smtplib.SMTP object at 0xdeadbeef0001>

         def test_noop(smtp_connection):
             response, msg = smtp_connection.noop()
             assert response == 250
     >       assert 0  # for demo purposes
     E       assert 0

     test_module.py:13: AssertionError
     ========================= short test summary info ==========================
     FAILED test_module.py::test_ehlo - assert 0
     FAILED test_module.py::test_noop - assert 0
     ============================ 2 failed in 0.12s =============================

You see the two ‘assert 0’ failing and more importantly you can also see
that the ‘exactly same’ ‘smtp_connection’ object was passed into the two
test functions because pytest shows the incoming argument values in the
traceback.  As a result, the two test functions using ‘smtp_connection’
run as quick as a single one because they reuse the same instance.

If you decide that you rather want to have a session-scoped
‘smtp_connection’ instance, you can simply declare it:

     @pytest.fixture(scope="session")
     def smtp_connection():
         # the returned fixture value will be shared for
         # all tests requesting it
         ...

* Menu:

* Fixture scopes::
* Dynamic scope::


File: pytest.info,  Node: Fixture scopes,  Next: Dynamic scope,  Up: Scope sharing fixtures across classes modules packages or session

4.3.1 Fixture scopes
--------------------

Fixtures are created when first requested by a test, and are destroyed
based on their ‘scope’:

   * ‘function’: the default scope, the fixture is destroyed at the end
     of the test.

   * ‘class’: the fixture is destroyed during teardown of the last test
     in the class.

   * ‘module’: the fixture is destroyed during teardown of the last test
     in the module.

   * ‘package’: the fixture is destroyed during teardown of the last
     test in the package.

   * ‘session’: the fixture is destroyed at the end of the test session.

     Note: Pytest only caches one instance of a fixture at a time, which
     means that when using a parametrized fixture, pytest may invoke a
     fixture more than once in the given scope.


File: pytest.info,  Node: Dynamic scope,  Prev: Fixture scopes,  Up: Scope sharing fixtures across classes modules packages or session

4.3.2 Dynamic scope
-------------------

New in version 5.2.

In some cases, you might want to change the scope of the fixture without
changing the code.  To do that, pass a callable to ‘scope’.  The
callable must return a string with a valid scope and will be executed
only once - during the fixture definition.  It will be called with two
keyword arguments - ‘fixture_name’ as a string and ‘config’ with a
configuration object.

This can be especially useful when dealing with fixtures that need time
for setup, like spawning a docker container.  You can use the
command-line argument to control the scope of the spawned containers for
different environments.  See the example below.

     def determine_scope(fixture_name, config):
         if config.getoption("--keep-containers", None):
             return "session"
         return "function"


     @pytest.fixture(scope=determine_scope)
     def docker_container():
         yield spawn_container()


File: pytest.info,  Node: Teardown/Cleanup AKA Fixture finalization,  Next: Safe teardowns,  Prev: Scope sharing fixtures across classes modules packages or session,  Up: How to use fixtures

4.4 Teardown/Cleanup (AKA Fixture finalization)
===============================================

When we run our tests, we’ll want to make sure they clean up after
themselves so they don’t mess with any other tests (and also so that we
don’t leave behind a mountain of test data to bloat the system).
Fixtures in pytest offer a very useful teardown system, which allows us
to define the specific steps necessary for each fixture to clean up
after itself.

This system can be leveraged in two ways.

* Menu:

* 1. yield fixtures (recommended): 1 yield fixtures recommended.
* 2. Adding finalizers directly: 2 Adding finalizers directly.


File: pytest.info,  Node: 1 yield fixtures recommended,  Next: 2 Adding finalizers directly,  Up: Teardown/Cleanup AKA Fixture finalization

4.4.1 1. ‘yield’ fixtures (recommended)
---------------------------------------

“Yield” fixtures ‘yield’ instead of ‘return’.  With these fixtures, we
can run some code and pass an object back to the requesting
fixture/test, just like with the other fixtures.  The only differences
are:

  1. ‘return’ is swapped out for ‘yield’.

  2. Any teardown code for that fixture is placed ‘after’ the ‘yield’.

Once pytest figures out a linear order for the fixtures, it will run
each one up until it returns or yields, and then move on to the next
fixture in the list to do the same thing.

Once the test is finished, pytest will go back down the list of
fixtures, but in the ‘reverse order’, taking each one that yielded, and
running the code inside it that was ‘after’ the ‘yield’ statement.

As a simple example, consider this basic email module:

     # content of emaillib.py
     class MailAdminClient:
         def create_user(self):
             return MailUser()

         def delete_user(self, user):
             # do some cleanup
             pass


     class MailUser:
         def __init__(self):
             self.inbox = []

         def send_email(self, email, other):
             other.inbox.append(email)

         def clear_mailbox(self):
             self.inbox.clear()


     class Email:
         def __init__(self, subject, body):
             self.subject = subject
             self.body = body

Let’s say we want to test sending email from one user to another.  We’ll
have to first make each user, then send the email from one user to the
other, and finally assert that the other user received that message in
their inbox.  If we want to clean up after the test runs, we’ll likely
have to make sure the other user’s mailbox is emptied before deleting
that user, otherwise the system may complain.

Here’s what that might look like:

     # content of test_emaillib.py
     from emaillib import Email, MailAdminClient

     import pytest


     @pytest.fixture
     def mail_admin():
         return MailAdminClient()


     @pytest.fixture
     def sending_user(mail_admin):
         user = mail_admin.create_user()
         yield user
         mail_admin.delete_user(user)


     @pytest.fixture
     def receiving_user(mail_admin):
         user = mail_admin.create_user()
         yield user
         user.clear_mailbox()
         mail_admin.delete_user(user)


     def test_email_received(sending_user, receiving_user):
         email = Email(subject="Hey!", body="How's it going?")
         sending_user.send_email(email, receiving_user)
         assert email in receiving_user.inbox

Because ‘receiving_user’ is the last fixture to run during setup, it’s
the first to run during teardown.

There is a risk that even having the order right on the teardown side of
things doesn’t guarantee a safe cleanup.  That’s covered in a bit more
detail in *note Safe teardowns: 58.

     $ pytest -q test_emaillib.py
     .                                                                    [100%]
     1 passed in 0.12s

* Menu:

* Handling errors for yield fixture::


File: pytest.info,  Node: Handling errors for yield fixture,  Up: 1 yield fixtures recommended

4.4.1.1 Handling errors for yield fixture
.........................................

If a yield fixture raises an exception before yielding, pytest won’t try
to run the teardown code after that yield fixture’s ‘yield’ statement.
But, for every fixture that has already run successfully for that test,
pytest will still attempt to tear them down as it normally would.


File: pytest.info,  Node: 2 Adding finalizers directly,  Prev: 1 yield fixtures recommended,  Up: Teardown/Cleanup AKA Fixture finalization

4.4.2 2. Adding finalizers directly
-----------------------------------

While yield fixtures are considered to be the cleaner and more
straightforward option, there is another choice, and that is to add
“finalizer” functions directly to the test’s *note request-context: 5b.
object.  It brings a similar result as yield fixtures, but requires a
bit more verbosity.

In order to use this approach, we have to request the *note
request-context: 5b. object (just like we would request another fixture)
in the fixture we need to add teardown code for, and then pass a
callable, containing that teardown code, to its ‘addfinalizer’ method.

We have to be careful though, because pytest will run that finalizer
once it’s been added, even if that fixture raises an exception after
adding the finalizer.  So to make sure we don’t run the finalizer code
when we wouldn’t need to, we would only add the finalizer once the
fixture would have done something that we’d need to teardown.

Here’s how the previous example would look using the ‘addfinalizer’
method:

     # content of test_emaillib.py
     from emaillib import Email, MailAdminClient

     import pytest


     @pytest.fixture
     def mail_admin():
         return MailAdminClient()


     @pytest.fixture
     def sending_user(mail_admin):
         user = mail_admin.create_user()
         yield user
         mail_admin.delete_user(user)


     @pytest.fixture
     def receiving_user(mail_admin, request):
         user = mail_admin.create_user()

         def delete_user():
             mail_admin.delete_user(user)

         request.addfinalizer(delete_user)
         return user


     @pytest.fixture
     def email(sending_user, receiving_user, request):
         _email = Email(subject="Hey!", body="How's it going?")
         sending_user.send_email(_email, receiving_user)

         def empty_mailbox():
             receiving_user.clear_mailbox()

         request.addfinalizer(empty_mailbox)
         return _email


     def test_email_received(receiving_user, email):
         assert email in receiving_user.inbox

It’s a bit longer than yield fixtures and a bit more complex, but it
does offer some nuances for when you’re in a pinch.

     $ pytest -q test_emaillib.py
     .                                                                    [100%]
     1 passed in 0.12s

* Menu:

* Note on finalizer order::


File: pytest.info,  Node: Note on finalizer order,  Up: 2 Adding finalizers directly

4.4.2.1 Note on finalizer order
...............................

Finalizers are executed in a first-in-last-out order.  For yield
fixtures, the first teardown code to run is from the right-most fixture,
i.e.  the last test parameter.

     # content of test_finalizers.py
     import pytest


     def test_bar(fix_w_yield1, fix_w_yield2):
         print("test_bar")


     @pytest.fixture
     def fix_w_yield1():
         yield
         print("after_yield_1")


     @pytest.fixture
     def fix_w_yield2():
         yield
         print("after_yield_2")

     $ pytest -s test_finalizers.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_finalizers.py test_bar
     .after_yield_2
     after_yield_1


     ============================ 1 passed in 0.12s =============================

For finalizers, the first fixture to run is last call to
‘request.addfinalizer’.

     # content of test_finalizers.py
     from functools import partial
     import pytest


     @pytest.fixture
     def fix_w_finalizers(request):
         request.addfinalizer(partial(print, "finalizer_2"))
         request.addfinalizer(partial(print, "finalizer_1"))


     def test_bar(fix_w_finalizers):
         print("test_bar")

     $ pytest -s test_finalizers.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_finalizers.py test_bar
     .finalizer_1
     finalizer_2


     ============================ 1 passed in 0.12s =============================

This is so because yield fixtures use ‘addfinalizer’ behind the scenes:
when the fixture executes, ‘addfinalizer’ registers a function that
resumes the generator, which in turn calls the teardown code.


File: pytest.info,  Node: Safe teardowns,  Next: Running multiple assert statements safely,  Prev: Teardown/Cleanup AKA Fixture finalization,  Up: How to use fixtures

4.5 Safe teardowns
==================

The fixture system of pytest is ‘very’ powerful, but it’s still being
run by a computer, so it isn’t able to figure out how to safely teardown
everything we throw at it.  If we aren’t careful, an error in the wrong
spot might leave stuff from our tests behind, and that can cause further
issues pretty quickly.

For example, consider the following tests (based off of the mail example
from above):

     # content of test_emaillib.py
     from emaillib import Email, MailAdminClient

     import pytest


     @pytest.fixture
     def setup():
         mail_admin = MailAdminClient()
         sending_user = mail_admin.create_user()
         receiving_user = mail_admin.create_user()
         email = Email(subject="Hey!", body="How's it going?")
         sending_user.send_email(email, receiving_user)
         yield receiving_user, email
         receiving_user.clear_mailbox()
         mail_admin.delete_user(sending_user)
         mail_admin.delete_user(receiving_user)


     def test_email_received(setup):
         receiving_user, email = setup
         assert email in receiving_user.inbox

This version is a lot more compact, but it’s also harder to read,
doesn’t have a very descriptive fixture name, and none of the fixtures
can be reused easily.

There’s also a more serious issue, which is that if any of those steps
in the setup raise an exception, none of the teardown code will run.

One option might be to go with the ‘addfinalizer’ method instead of
yield fixtures, but that might get pretty complex and difficult to
maintain (and it wouldn’t be compact anymore).

     $ pytest -q test_emaillib.py
     .                                                                    [100%]
     1 passed in 0.12s

* Menu:

* Safe fixture structure::


File: pytest.info,  Node: Safe fixture structure,  Up: Safe teardowns

4.5.1 Safe fixture structure
----------------------------

The safest and simplest fixture structure requires limiting fixtures to
only making one state-changing action each, and then bundling them
together with their teardown code, as *note the email examples above:
56. showed.

The chance that a state-changing operation can fail but still modify
state is negligible, as most of these operations tend to be
transaction(1)-based (at least at the level of testing where state could
be left behind).  So if we make sure that any successful state-changing
action gets torn down by moving it to a separate fixture function and
separating it from other, potentially failing state-changing actions,
then our tests will stand the best chance at leaving the test
environment the way they found it.

For an example, let’s say we have a website with a login page, and we
have access to an admin API where we can generate users.  For our test,
we want to:

  1. Create a user through that admin API

  2. Launch a browser using Selenium

  3. Go to the login page of our site

  4. Log in as the user we created

  5. Assert that their name is in the header of the landing page

We wouldn’t want to leave that user in the system, nor would we want to
leave that browser session running, so we’ll want to make sure the
fixtures that create those things clean up after themselves.

Here’s what that might look like:

     Note: For this example, certain fixtures (i.e.  ‘base_url’ and
     ‘admin_credentials’) are implied to exist elsewhere.  So for now,
     let’s assume they exist, and we’re just not looking at them.

     from uuid import uuid4
     from urllib.parse import urljoin

     from selenium.webdriver import Chrome
     import pytest

     from src.utils.pages import LoginPage, LandingPage
     from src.utils import AdminApiClient
     from src.utils.data_types import User


     @pytest.fixture
     def admin_client(base_url, admin_credentials):
         return AdminApiClient(base_url, **admin_credentials)


     @pytest.fixture
     def user(admin_client):
         _user = User(name="Susan", username=f"testuser-{uuid4()}", password="P4$$word")
         admin_client.create_user(_user)
         yield _user
         admin_client.delete_user(_user)


     @pytest.fixture
     def driver():
         _driver = Chrome()
         yield _driver
         _driver.quit()


     @pytest.fixture
     def login(driver, base_url, user):
         driver.get(urljoin(base_url, "/login"))
         page = LoginPage(driver)
         page.login(user)


     @pytest.fixture
     def landing_page(driver, login):
         return LandingPage(driver)


     def test_name_on_landing_page_after_login(landing_page, user):
         assert landing_page.header == f"Welcome, {user.name}!"

The way the dependencies are laid out means it’s unclear if the ‘user’
fixture would execute before the ‘driver’ fixture.  But that’s ok,
because those are atomic operations, and so it doesn’t matter which one
runs first because the sequence of events for the test is still
linearizable(2).  But what ‘does’ matter is that, no matter which one
runs first, if the one raises an exception while the other would not
have, neither will have left anything behind.  If ‘driver’ executes
before ‘user’, and ‘user’ raises an exception, the driver will still
quit, and the user was never made.  And if ‘driver’ was the one to raise
the exception, then the driver would never have been started and the
user would never have been made.

   ---------- Footnotes ----------

   (1) https://en.wikipedia.org/wiki/Transaction_processing

   (2) https://en.wikipedia.org/wiki/Linearizability


File: pytest.info,  Node: Running multiple assert statements safely,  Next: Fixtures can introspect the requesting test context,  Prev: Safe teardowns,  Up: How to use fixtures

4.6 Running multiple ‘assert’ statements safely
===============================================

Sometimes you may want to run multiple asserts after doing all that
setup, which makes sense as, in more complex systems, a single action
can kick off multiple behaviors.  pytest has a convenient way of
handling this and it combines a bunch of what we’ve gone over so far.

All that’s needed is stepping up to a larger scope, then having the
‘act’ step defined as an autouse fixture, and finally, making sure all
the fixtures are targeting that higher level scope.

Let’s pull *note an example from above: 5f, and tweak it a bit.  Let’s
say that in addition to checking for a welcome message in the header, we
also want to check for a sign out button, and a link to the user’s
profile.

Let’s take a look at how we can structure that so we can run multiple
asserts without having to repeat all those steps again.

     Note: For this example, certain fixtures (i.e.  ‘base_url’ and
     ‘admin_credentials’) are implied to exist elsewhere.  So for now,
     let’s assume they exist, and we’re just not looking at them.

     # contents of tests/end_to_end/test_login.py
     from uuid import uuid4
     from urllib.parse import urljoin

     from selenium.webdriver import Chrome
     import pytest

     from src.utils.pages import LoginPage, LandingPage
     from src.utils import AdminApiClient
     from src.utils.data_types import User


     @pytest.fixture(scope="class")
     def admin_client(base_url, admin_credentials):
         return AdminApiClient(base_url, **admin_credentials)


     @pytest.fixture(scope="class")
     def user(admin_client):
         _user = User(name="Susan", username=f"testuser-{uuid4()}", password="P4$$word")
         admin_client.create_user(_user)
         yield _user
         admin_client.delete_user(_user)


     @pytest.fixture(scope="class")
     def driver():
         _driver = Chrome()
         yield _driver
         _driver.quit()


     @pytest.fixture(scope="class")
     def landing_page(driver, login):
         return LandingPage(driver)


     class TestLandingPageSuccess:
         @pytest.fixture(scope="class", autouse=True)
         def login(self, driver, base_url, user):
             driver.get(urljoin(base_url, "/login"))
             page = LoginPage(driver)
             page.login(user)

         def test_name_in_header(self, landing_page, user):
             assert landing_page.header == f"Welcome, {user.name}!"

         def test_sign_out_button(self, landing_page):
             assert landing_page.sign_out_button.is_displayed()

         def test_profile_link(self, landing_page, user):
             profile_href = urljoin(base_url, f"/profile?id={user.profile_id}")
             assert landing_page.profile_link.get_attribute("href") == profile_href

Notice that the methods are only referencing ‘self’ in the signature as
a formality.  No state is tied to the actual test class as it might be
in the ‘unittest.TestCase’ framework.  Everything is managed by the
pytest fixture system.

Each method only has to request the fixtures that it actually needs
without worrying about order.  This is because the ‘act’ fixture is an
autouse fixture, and it made sure all the other fixtures executed before
it.  There’s no more changes of state that need to take place, so the
tests are free to make as many non-state-changing queries as they want
without risking stepping on the toes of the other tests.

The ‘login’ fixture is defined inside the class as well, because not
every one of the other tests in the module will be expecting a
successful login, and the ‘act’ may need to be handled a little
differently for another test class.  For example, if we wanted to write
another test scenario around submitting bad credentials, we could handle
it by adding something like this to the test file:

     class TestLandingPageBadCredentials:
         @pytest.fixture(scope="class")
         def faux_user(self, user):
             _user = deepcopy(user)
             _user.password = "badpass"
             return _user

         def test_raises_bad_credentials_exception(self, login_page, faux_user):
             with pytest.raises(BadCredentialsException):
                 login_page.login(faux_user)


File: pytest.info,  Node: Fixtures can introspect the requesting test context,  Next: Using markers to pass data to fixtures,  Prev: Running multiple assert statements safely,  Up: How to use fixtures

4.7 Fixtures can introspect the requesting test context
=======================================================

Fixture functions can accept the *note request: 62. object to introspect
the “requesting” test function, class or module context.  Further
extending the previous ‘smtp_connection’ fixture example, let’s read an
optional server URL from the test module which uses our fixture:

     # content of conftest.py
     import smtplib

     import pytest


     @pytest.fixture(scope="module")
     def smtp_connection(request):
         server = getattr(request.module, "smtpserver", "smtp.gmail.com")
         smtp_connection = smtplib.SMTP(server, 587, timeout=5)
         yield smtp_connection
         print(f"finalizing {smtp_connection} ({server})")
         smtp_connection.close()

We use the ‘request.module’ attribute to optionally obtain an
‘smtpserver’ attribute from the test module.  If we just execute again,
nothing much has changed:

     $ pytest -s -q --tb=no test_module.py
     FFfinalizing <smtplib.SMTP object at 0xdeadbeef0002> (smtp.gmail.com)

     ========================= short test summary info ==========================
     FAILED test_module.py::test_ehlo - assert 0
     FAILED test_module.py::test_noop - assert 0
     2 failed in 0.12s

Let’s quickly create another test module that actually sets the server
URL in its module namespace:

     # content of test_anothersmtp.py

     smtpserver = "mail.python.org"  # will be read by smtp fixture


     def test_showhelo(smtp_connection):
         assert 0, smtp_connection.helo()

Running it:

     $ pytest -qq --tb=short test_anothersmtp.py
     F                                                                    [100%]
     ================================= FAILURES =================================
     ______________________________ test_showhelo _______________________________
     test_anothersmtp.py:6: in test_showhelo
         assert 0, smtp_connection.helo()
     E   AssertionError: (250, b'mail.python.org')
     E   assert 0
     ------------------------- Captured stdout teardown -------------------------
     finalizing <smtplib.SMTP object at 0xdeadbeef0003> (mail.python.org)
     ========================= short test summary info ==========================
     FAILED test_anothersmtp.py::test_showhelo - AssertionError: (250, b'mail....

voila!  The ‘smtp_connection’ fixture function picked up our mail server
name from the module namespace.


File: pytest.info,  Node: Using markers to pass data to fixtures,  Next: Factories as fixtures,  Prev: Fixtures can introspect the requesting test context,  Up: How to use fixtures

4.8 Using markers to pass data to fixtures
==========================================

Using the *note request: 62. object, a fixture can also access markers
which are applied to a test function.  This can be useful to pass data
into a fixture from a test:

     import pytest


     @pytest.fixture
     def fixt(request):
         marker = request.node.get_closest_marker("fixt_data")
         if marker is None:
             # Handle missing marker in some way...
             data = None
         else:
             data = marker.args[0]

         # Do something with the data
         return data


     @pytest.mark.fixt_data(42)
     def test_fixt(fixt):
         assert fixt == 42


File: pytest.info,  Node: Factories as fixtures,  Next: Parametrizing fixtures,  Prev: Using markers to pass data to fixtures,  Up: How to use fixtures

4.9 Factories as fixtures
=========================

The “factory as fixture” pattern can help in situations where the result
of a fixture is needed multiple times in a single test.  Instead of
returning data directly, the fixture instead returns a function which
generates the data.  This function can then be called multiple times in
the test.

Factories can have parameters as needed:

     @pytest.fixture
     def make_customer_record():
         def _make_customer_record(name):
             return {"name": name, "orders": []}

         return _make_customer_record


     def test_customer_records(make_customer_record):
         customer_1 = make_customer_record("Lisa")
         customer_2 = make_customer_record("Mike")
         customer_3 = make_customer_record("Meredith")

If the data created by the factory requires managing, the fixture can
take care of that:

     @pytest.fixture
     def make_customer_record():

         created_records = []

         def _make_customer_record(name):
             record = models.Customer(name=name, orders=[])
             created_records.append(record)
             return record

         yield _make_customer_record

         for record in created_records:
             record.destroy()


     def test_customer_records(make_customer_record):
         customer_1 = make_customer_record("Lisa")
         customer_2 = make_customer_record("Mike")
         customer_3 = make_customer_record("Meredith")


File: pytest.info,  Node: Parametrizing fixtures,  Next: Using marks with parametrized fixtures,  Prev: Factories as fixtures,  Up: How to use fixtures

4.10 Parametrizing fixtures
===========================

Fixture functions can be parametrized in which case they will be called
multiple times, each time executing the set of dependent tests, i.e.
the tests that depend on this fixture.  Test functions usually do not
need to be aware of their re-running.  Fixture parametrization helps to
write exhaustive functional tests for components which themselves can be
configured in multiple ways.

Extending the previous example, we can flag the fixture to create two
‘smtp_connection’ fixture instances which will cause all tests using the
fixture to run twice.  The fixture function gets access to each
parameter through the special ‘request’ object:

     # content of conftest.py
     import smtplib

     import pytest


     @pytest.fixture(scope="module", params=["smtp.gmail.com", "mail.python.org"])
     def smtp_connection(request):
         smtp_connection = smtplib.SMTP(request.param, 587, timeout=5)
         yield smtp_connection
         print(f"finalizing {smtp_connection}")
         smtp_connection.close()

The main change is the declaration of ‘params’ with *note
@pytest.fixture: 50, a list of values for each of which the fixture
function will execute and can access a value via ‘request.param’.  No
test function code needs to change.  So let’s just do another run:

     $ pytest -q test_module.py
     FFFF                                                                 [100%]
     ================================= FAILURES =================================
     ________________________ test_ehlo[smtp.gmail.com] _________________________

     smtp_connection = <smtplib.SMTP object at 0xdeadbeef0004>

         def test_ehlo(smtp_connection):
             response, msg = smtp_connection.ehlo()
             assert response == 250
             assert b"smtp.gmail.com" in msg
     >       assert 0  # for demo purposes
     E       assert 0

     test_module.py:7: AssertionError
     ________________________ test_noop[smtp.gmail.com] _________________________

     smtp_connection = <smtplib.SMTP object at 0xdeadbeef0004>

         def test_noop(smtp_connection):
             response, msg = smtp_connection.noop()
             assert response == 250
     >       assert 0  # for demo purposes
     E       assert 0

     test_module.py:13: AssertionError
     ________________________ test_ehlo[mail.python.org] ________________________

     smtp_connection = <smtplib.SMTP object at 0xdeadbeef0005>

         def test_ehlo(smtp_connection):
             response, msg = smtp_connection.ehlo()
             assert response == 250
     >       assert b"smtp.gmail.com" in msg
     E       AssertionError: assert b'smtp.gmail.com' in b'mail.python.org\nPIPELINING\nSIZE 51200000\nETRN\nSTARTTLS\nAUTH DIGEST-MD5 NTLM CRAM-MD5\nENHANCEDSTATUSCODES\n8BITMIME\nDSN\nSMTPUTF8\nCHUNKING'

     test_module.py:6: AssertionError
     -------------------------- Captured stdout setup ---------------------------
     finalizing <smtplib.SMTP object at 0xdeadbeef0004>
     ________________________ test_noop[mail.python.org] ________________________

     smtp_connection = <smtplib.SMTP object at 0xdeadbeef0005>

         def test_noop(smtp_connection):
             response, msg = smtp_connection.noop()
             assert response == 250
     >       assert 0  # for demo purposes
     E       assert 0

     test_module.py:13: AssertionError
     ------------------------- Captured stdout teardown -------------------------
     finalizing <smtplib.SMTP object at 0xdeadbeef0005>
     ========================= short test summary info ==========================
     FAILED test_module.py::test_ehlo[smtp.gmail.com] - assert 0
     FAILED test_module.py::test_noop[smtp.gmail.com] - assert 0
     FAILED test_module.py::test_ehlo[mail.python.org] - AssertionError: asser...
     FAILED test_module.py::test_noop[mail.python.org] - assert 0
     4 failed in 0.12s

We see that our two test functions each ran twice, against the different
‘smtp_connection’ instances.  Note also, that with the ‘mail.python.org’
connection the second test fails in ‘test_ehlo’ because a different
server string is expected than what arrived.

pytest will build a string that is the test ID for each fixture value in
a parametrized fixture, e.g.  ‘test_ehlo[smtp.gmail.com]’ and
‘test_ehlo[mail.python.org]’ in the above examples.  These IDs can be
used with ‘-k’ to select specific cases to run, and they will also
identify the specific case when one is failing.  Running pytest with
‘--collect-only’ will show the generated IDs.

Numbers, strings, booleans and ‘None’ will have their usual string
representation used in the test ID. For other objects, pytest will make
a string based on the argument name.  It is possible to customise the
string used in a test ID for a certain fixture value by using the ‘ids’
keyword argument:

     # content of test_ids.py
     import pytest


     @pytest.fixture(params=[0, 1], ids=["spam", "ham"])
     def a(request):
         return request.param


     def test_a(a):
         pass


     def idfn(fixture_value):
         if fixture_value == 0:
             return "eggs"
         else:
             return None


     @pytest.fixture(params=[0, 1], ids=idfn)
     def b(request):
         return request.param


     def test_b(b):
         pass

The above shows how ‘ids’ can be either a list of strings to use or a
function which will be called with the fixture value and then has to
return a string to use.  In the latter case if the function returns
‘None’ then pytest’s auto-generated ID will be used.

Running the above tests results in the following test IDs being used:

     $ pytest --collect-only
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 12 items

     <Module test_anothersmtp.py>
       <Function test_showhelo[smtp.gmail.com]>
       <Function test_showhelo[mail.python.org]>
     <Module test_emaillib.py>
       <Function test_email_received>
     <Module test_finalizers.py>
       <Function test_bar>
     <Module test_ids.py>
       <Function test_a[spam]>
       <Function test_a[ham]>
       <Function test_b[eggs]>
       <Function test_b[1]>
     <Module test_module.py>
       <Function test_ehlo[smtp.gmail.com]>
       <Function test_noop[smtp.gmail.com]>
       <Function test_ehlo[mail.python.org]>
       <Function test_noop[mail.python.org]>

     ======================= 12 tests collected in 0.12s ========================


File: pytest.info,  Node: Using marks with parametrized fixtures,  Next: Modularity using fixtures from a fixture function,  Prev: Parametrizing fixtures,  Up: How to use fixtures

4.11 Using marks with parametrized fixtures
===========================================

*note pytest.param(): 6b. can be used to apply marks in values sets of
parametrized fixtures in the same way that they can be used with *note
@pytest.mark.parametrize: 6c.

Example:

     # content of test_fixture_marks.py
     import pytest


     @pytest.fixture(params=[0, 1, pytest.param(2, marks=pytest.mark.skip)])
     def data_set(request):
         return request.param


     def test_data(data_set):
         pass

Running this test will ‘skip’ the invocation of ‘data_set’ with value
‘2’:

     $ pytest test_fixture_marks.py -v
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 3 items

     test_fixture_marks.py::test_data[0] PASSED                           [ 33%]
     test_fixture_marks.py::test_data[1] PASSED                           [ 66%]
     test_fixture_marks.py::test_data[2] SKIPPED (unconditional skip)     [100%]

     ======================= 2 passed, 1 skipped in 0.12s =======================


File: pytest.info,  Node: Modularity using fixtures from a fixture function,  Next: Automatic grouping of tests by fixture instances,  Prev: Using marks with parametrized fixtures,  Up: How to use fixtures

4.12 Modularity: using fixtures from a fixture function
=======================================================

In addition to using fixtures in test functions, fixture functions can
use other fixtures themselves.  This contributes to a modular design of
your fixtures and allows re-use of framework-specific fixtures across
many projects.  As a simple example, we can extend the previous example
and instantiate an object ‘app’ where we stick the already defined
‘smtp_connection’ resource into it:

     # content of test_appsetup.py

     import pytest


     class App:
         def __init__(self, smtp_connection):
             self.smtp_connection = smtp_connection


     @pytest.fixture(scope="module")
     def app(smtp_connection):
         return App(smtp_connection)


     def test_smtp_connection_exists(app):
         assert app.smtp_connection

Here we declare an ‘app’ fixture which receives the previously defined
‘smtp_connection’ fixture and instantiates an ‘App’ object with it.
Let’s run it:

     $ pytest -v test_appsetup.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 2 items

     test_appsetup.py::test_smtp_connection_exists[smtp.gmail.com] PASSED [ 50%]
     test_appsetup.py::test_smtp_connection_exists[mail.python.org] PASSED [100%]

     ============================ 2 passed in 0.12s =============================

Due to the parametrization of ‘smtp_connection’, the test will run twice
with two different ‘App’ instances and respective smtp servers.  There
is no need for the ‘app’ fixture to be aware of the ‘smtp_connection’
parametrization because pytest will fully analyse the fixture dependency
graph.

Note that the ‘app’ fixture has a scope of ‘module’ and uses a
module-scoped ‘smtp_connection’ fixture.  The example would still work
if ‘smtp_connection’ was cached on a ‘session’ scope: it is fine for
fixtures to use “broader” scoped fixtures but not the other way round: A
session-scoped fixture could not use a module-scoped one in a meaningful
way.


File: pytest.info,  Node: Automatic grouping of tests by fixture instances,  Next: Use fixtures in classes and modules with usefixtures,  Prev: Modularity using fixtures from a fixture function,  Up: How to use fixtures

4.13 Automatic grouping of tests by fixture instances
=====================================================

pytest minimizes the number of active fixtures during test runs.  If you
have a parametrized fixture, then all the tests using it will first
execute with one instance and then finalizers are called before the next
fixture instance is created.  Among other things, this eases testing of
applications which create and use global state.

The following example uses two parametrized fixtures, one of which is
scoped on a per-module basis, and all the functions perform ‘print’
calls to show the setup/teardown flow:

     # content of test_module.py
     import pytest


     @pytest.fixture(scope="module", params=["mod1", "mod2"])
     def modarg(request):
         param = request.param
         print("  SETUP modarg", param)
         yield param
         print("  TEARDOWN modarg", param)


     @pytest.fixture(scope="function", params=[1, 2])
     def otherarg(request):
         param = request.param
         print("  SETUP otherarg", param)
         yield param
         print("  TEARDOWN otherarg", param)


     def test_0(otherarg):
         print("  RUN test0 with otherarg", otherarg)


     def test_1(modarg):
         print("  RUN test1 with modarg", modarg)


     def test_2(otherarg, modarg):
         print(f"  RUN test2 with otherarg {otherarg} and modarg {modarg}")

Let’s run the tests in verbose mode and with looking at the
print-output:

     $ pytest -v -s test_module.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 8 items

     test_module.py::test_0[1]   SETUP otherarg 1
       RUN test0 with otherarg 1
     PASSED  TEARDOWN otherarg 1

     test_module.py::test_0[2]   SETUP otherarg 2
       RUN test0 with otherarg 2
     PASSED  TEARDOWN otherarg 2

     test_module.py::test_1[mod1]   SETUP modarg mod1
       RUN test1 with modarg mod1
     PASSED
     test_module.py::test_2[mod1-1]   SETUP otherarg 1
       RUN test2 with otherarg 1 and modarg mod1
     PASSED  TEARDOWN otherarg 1

     test_module.py::test_2[mod1-2]   SETUP otherarg 2
       RUN test2 with otherarg 2 and modarg mod1
     PASSED  TEARDOWN otherarg 2

     test_module.py::test_1[mod2]   TEARDOWN modarg mod1
       SETUP modarg mod2
       RUN test1 with modarg mod2
     PASSED
     test_module.py::test_2[mod2-1]   SETUP otherarg 1
       RUN test2 with otherarg 1 and modarg mod2
     PASSED  TEARDOWN otherarg 1

     test_module.py::test_2[mod2-2]   SETUP otherarg 2
       RUN test2 with otherarg 2 and modarg mod2
     PASSED  TEARDOWN otherarg 2
       TEARDOWN modarg mod2


     ============================ 8 passed in 0.12s =============================

You can see that the parametrized module-scoped ‘modarg’ resource caused
an ordering of test execution that lead to the fewest possible “active”
resources.  The finalizer for the ‘mod1’ parametrized resource was
executed before the ‘mod2’ resource was setup.

In particular notice that test_0 is completely independent and finishes
first.  Then test_1 is executed with ‘mod1’, then test_2 with ‘mod1’,
then test_1 with ‘mod2’ and finally test_2 with ‘mod2’.

The ‘otherarg’ parametrized resource (having function scope) was set up
before and teared down after every test that used it.


File: pytest.info,  Node: Use fixtures in classes and modules with usefixtures,  Next: Overriding fixtures on various levels,  Prev: Automatic grouping of tests by fixture instances,  Up: How to use fixtures

4.14 Use fixtures in classes and modules with ‘usefixtures’
===========================================================

Sometimes test functions do not directly need access to a fixture
object.  For example, tests may require to operate with an empty
directory as the current working directory but otherwise do not care for
the concrete directory.  Here is how you can use the standard
tempfile(1) and pytest fixtures to achieve it.  We separate the creation
of the fixture into a ‘conftest.py’ file:

     # content of conftest.py

     import os
     import tempfile

     import pytest


     @pytest.fixture
     def cleandir():
         with tempfile.TemporaryDirectory() as newpath:
             old_cwd = os.getcwd()
             os.chdir(newpath)
             yield
             os.chdir(old_cwd)

and declare its use in a test module via a ‘usefixtures’ marker:

     # content of test_setenv.py
     import os

     import pytest


     @pytest.mark.usefixtures("cleandir")
     class TestDirectoryInit:
         def test_cwd_starts_empty(self):
             assert os.listdir(os.getcwd()) == []
             with open("myfile", "w") as f:
                 f.write("hello")

         def test_cwd_again_starts_empty(self):
             assert os.listdir(os.getcwd()) == []

Due to the ‘usefixtures’ marker, the ‘cleandir’ fixture will be required
for the execution of each test method, just as if you specified a
“cleandir” function argument to each of them.  Let’s run it to verify
our fixture is activated and the tests pass:

     $ pytest -q
     ..                                                                   [100%]
     2 passed in 0.12s

You can specify multiple fixtures like this:

     @pytest.mark.usefixtures("cleandir", "anotherfixture")
     def test():
         ...

and you may specify fixture usage at the test module level using *note
pytestmark: 73.:

     pytestmark = pytest.mark.usefixtures("cleandir")

It is also possible to put fixtures required by all tests in your
project into an ini-file:

     # content of pytest.ini
     [pytest]
     usefixtures = cleandir

     Warning: Note this mark has no effect in ‘fixture functions’.  For
     example, this ‘will not work as expected’:

          @pytest.mark.usefixtures("my_other_fixture")
          @pytest.fixture
          def my_fixture_that_sadly_wont_use_my_other_fixture():
              ...

     Currently this will not generate any error or warning, but this is
     intended to be handled by issue #3664(2).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/tempfile.html#module-tempfile

   (2) https://github.com/pytest-dev/pytest/issues/3664


File: pytest.info,  Node: Overriding fixtures on various levels,  Next: Using fixtures from other projects,  Prev: Use fixtures in classes and modules with usefixtures,  Up: How to use fixtures

4.15 Overriding fixtures on various levels
==========================================

In relatively large test suite, you most likely need to ‘override’ a
‘global’ or ‘root’ fixture with a ‘locally’ defined one, keeping the
test code readable and maintainable.

* Menu:

* Override a fixture on a folder (conftest) level: Override a fixture on a folder conftest level.
* Override a fixture on a test module level::
* Override a fixture with direct test parametrization::
* Override a parametrized fixture with non-parametrized one and vice versa::


File: pytest.info,  Node: Override a fixture on a folder conftest level,  Next: Override a fixture on a test module level,  Up: Overriding fixtures on various levels

4.15.1 Override a fixture on a folder (conftest) level
------------------------------------------------------

Given the tests file structure is:

     tests/
         conftest.py
             # content of tests/conftest.py
             import pytest

             @pytest.fixture
             def username():
                 return 'username'

         test_something.py
             # content of tests/test_something.py
             def test_username(username):
                 assert username == 'username'

         subfolder/
             conftest.py
                 # content of tests/subfolder/conftest.py
                 import pytest

                 @pytest.fixture
                 def username(username):
                     return 'overridden-' + username

             test_something_else.py
                 # content of tests/subfolder/test_something_else.py
                 def test_username(username):
                     assert username == 'overridden-username'

As you can see, a fixture with the same name can be overridden for
certain test folder level.  Note that the ‘base’ or ‘super’ fixture can
be accessed from the ‘overriding’ fixture easily - used in the example
above.


File: pytest.info,  Node: Override a fixture on a test module level,  Next: Override a fixture with direct test parametrization,  Prev: Override a fixture on a folder conftest level,  Up: Overriding fixtures on various levels

4.15.2 Override a fixture on a test module level
------------------------------------------------

Given the tests file structure is:

     tests/
         conftest.py
             # content of tests/conftest.py
             import pytest

             @pytest.fixture
             def username():
                 return 'username'

         test_something.py
             # content of tests/test_something.py
             import pytest

             @pytest.fixture
             def username(username):
                 return 'overridden-' + username

             def test_username(username):
                 assert username == 'overridden-username'

         test_something_else.py
             # content of tests/test_something_else.py
             import pytest

             @pytest.fixture
             def username(username):
                 return 'overridden-else-' + username

             def test_username(username):
                 assert username == 'overridden-else-username'

In the example above, a fixture with the same name can be overridden for
certain test module.


File: pytest.info,  Node: Override a fixture with direct test parametrization,  Next: Override a parametrized fixture with non-parametrized one and vice versa,  Prev: Override a fixture on a test module level,  Up: Overriding fixtures on various levels

4.15.3 Override a fixture with direct test parametrization
----------------------------------------------------------

Given the tests file structure is:

     tests/
         conftest.py
             # content of tests/conftest.py
             import pytest

             @pytest.fixture
             def username():
                 return 'username'

             @pytest.fixture
             def other_username(username):
                 return 'other-' + username

         test_something.py
             # content of tests/test_something.py
             import pytest

             @pytest.mark.parametrize('username', ['directly-overridden-username'])
             def test_username(username):
                 assert username == 'directly-overridden-username'

             @pytest.mark.parametrize('username', ['directly-overridden-username-other'])
             def test_username_other(other_username):
                 assert other_username == 'other-directly-overridden-username-other'

In the example above, a fixture value is overridden by the test
parameter value.  Note that the value of the fixture can be overridden
this way even if the test doesn’t use it directly (doesn’t mention it in
the function prototype).


File: pytest.info,  Node: Override a parametrized fixture with non-parametrized one and vice versa,  Prev: Override a fixture with direct test parametrization,  Up: Overriding fixtures on various levels

4.15.4 Override a parametrized fixture with non-parametrized one and vice versa
-------------------------------------------------------------------------------

Given the tests file structure is:

     tests/
         conftest.py
             # content of tests/conftest.py
             import pytest

             @pytest.fixture(params=['one', 'two', 'three'])
             def parametrized_username(request):
                 return request.param

             @pytest.fixture
             def non_parametrized_username(request):
                 return 'username'

         test_something.py
             # content of tests/test_something.py
             import pytest

             @pytest.fixture
             def parametrized_username():
                 return 'overridden-username'

             @pytest.fixture(params=['one', 'two', 'three'])
             def non_parametrized_username(request):
                 return request.param

             def test_username(parametrized_username):
                 assert parametrized_username == 'overridden-username'

             def test_parametrized_username(non_parametrized_username):
                 assert non_parametrized_username in ['one', 'two', 'three']

         test_something_else.py
             # content of tests/test_something_else.py
             def test_username(parametrized_username):
                 assert parametrized_username in ['one', 'two', 'three']

             def test_username(non_parametrized_username):
                 assert non_parametrized_username == 'username'

In the example above, a parametrized fixture is overridden with a
non-parametrized version, and a non-parametrized fixture is overridden
with a parametrized version for certain test module.  The same applies
for the test folder level obviously.


File: pytest.info,  Node: Using fixtures from other projects,  Prev: Overriding fixtures on various levels,  Up: How to use fixtures

4.16 Using fixtures from other projects
=======================================

Usually projects that provide pytest support will use *note entry
points: 7b, so just installing those projects into an environment will
make those fixtures available for use.

In case you want to use fixtures from a project that does not use entry
points, you can define *note pytest_plugins: 7c. in your top
‘conftest.py’ file to register that module as a plugin.

Suppose you have some fixtures in ‘mylibrary.fixtures’ and you want to
reuse them into your ‘app/tests’ directory.

All you need to do is to define *note pytest_plugins: 7c. in
‘app/tests/conftest.py’ pointing to that module.

     pytest_plugins = "mylibrary.fixtures"

This effectively registers ‘mylibrary.fixtures’ as a plugin, making all
its fixtures and hooks available to tests in ‘app/tests’.

     Note: Sometimes users will ‘import’ fixtures from other projects
     for use, however this is not recommended: importing fixtures into a
     module will register them in pytest as ‘defined’ in that module.

     This has minor consequences, such as appearing multiple times in
     ‘pytest --help’, but it is not ‘recommended’ because this behavior
     might change/stop working in future versions.


File: pytest.info,  Node: How to mark test functions with attributes,  Next: How to parametrize fixtures and test functions,  Prev: How to use fixtures,  Up: Top

5 How to mark test functions with attributes
********************************************

By using the ‘pytest.mark’ helper you can easily set metadata on your
test functions.  You can find the full list of builtin markers in the
*note API Reference: 7f.  Or you can list all the markers, including
builtin and custom, using the CLI - ‘pytest --markers’.

Here are some of the builtin markers:

   * *note usefixtures: 72. - use fixtures on a test function or class

   * *note filterwarnings: 80. - filter certain warnings of a test
     function

   * *note skip: 81. - always skip a test function

   * *note skipif: 82. - skip a test function if a certain condition is
     met

   * *note xfail: 83. - produce an “expected failure” outcome if a
     certain condition is met

   * *note parametrize: 84. - perform multiple calls to the same test
     function.

It’s easy to create custom markers or to apply markers to whole test
classes or modules.  Those markers can be used by plugins, and also are
commonly used to *note select tests: 85. on the command-line with the
‘-m’ option.

See *note Working with custom markers: 86. for examples which also serve
as documentation.

     Note: Marks can only be applied to tests, having no effect on *note
     fixtures: 10.

* Menu:

* Registering marks::
* Raising errors on unknown marks::


File: pytest.info,  Node: Registering marks,  Next: Raising errors on unknown marks,  Up: How to mark test functions with attributes

5.1 Registering marks
=====================

You can register custom marks in your ‘pytest.ini’ file like this:

     [pytest]
     markers =
         slow: marks tests as slow (deselect with '-m "not slow"')
         serial

or in your ‘pyproject.toml’ file like this:

     [tool.pytest.ini_options]
     markers = [
         "slow: marks tests as slow (deselect with '-m \"not slow\"')",
         "serial",
     ]

Note that everything past the ‘:’ after the mark name is an optional
description.

Alternatively, you can register new markers programmatically in a *note
pytest_configure: 88. hook:

     def pytest_configure(config):
         config.addinivalue_line(
             "markers", "env(name): mark test to run only on named environment"
         )

Registered marks appear in pytest’s help text and do not emit warnings
(see the next section).  It is recommended that third-party plugins
always *note register their markers: 89.


File: pytest.info,  Node: Raising errors on unknown marks,  Prev: Registering marks,  Up: How to mark test functions with attributes

5.2 Raising errors on unknown marks
===================================

Unregistered marks applied with the ‘@pytest.mark.name_of_the_mark’
decorator will always emit a warning in order to avoid silently doing
something surprising due to mistyped names.  As described in the
previous section, you can disable the warning for custom marks by
registering them in your ‘pytest.ini’ file or using a custom
‘pytest_configure’ hook.

When the ‘--strict-markers’ command-line flag is passed, any unknown
marks applied with the ‘@pytest.mark.name_of_the_mark’ decorator will
trigger an error.  You can enforce this validation in your project by
adding ‘--strict-markers’ to ‘addopts’:

     [pytest]
     addopts = --strict-markers
     markers =
         slow: marks tests as slow (deselect with '-m "not slow"')
         serial


File: pytest.info,  Node: How to parametrize fixtures and test functions,  Next: How to use temporary directories and files in tests,  Prev: How to mark test functions with attributes,  Up: Top

6 How to parametrize fixtures and test functions
************************************************

pytest enables test parametrization at several levels:

   - *note pytest.fixture(): 50. allows one to *note parametrize fixture
     functions: 67.

   * *note @pytest.mark.parametrize: 6c. allows one to define multiple
     sets of arguments and fixtures at the test function or class.

   * *note pytest_generate_tests: 93. allows one to define custom
     parametrization schemes or extensions.
* Menu:

* @pytest.mark.parametrize; parametrizing test functions: @pytest mark parametrize parametrizing test functions.
* Basic pytest_generate_tests example::
* More examples::


File: pytest.info,  Node: @pytest mark parametrize parametrizing test functions,  Next: Basic pytest_generate_tests example,  Up: How to parametrize fixtures and test functions

6.1 ‘@pytest.mark.parametrize’: parametrizing test functions
============================================================

The builtin *note pytest.mark.parametrize: 95. decorator enables
parametrization of arguments for a test function.  Here is a typical
example of a test function that implements checking that a certain input
leads to an expected output:

     # content of test_expectation.py
     import pytest


     @pytest.mark.parametrize("test_input,expected", [("3+5", 8), ("2+4", 6), ("6*9", 42)])
     def test_eval(test_input, expected):
         assert eval(test_input) == expected

Here, the ‘@parametrize’ decorator defines three different
‘(test_input,expected)’ tuples so that the ‘test_eval’ function will run
three times using them in turn:

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 3 items

     test_expectation.py ..F                                              [100%]

     ================================= FAILURES =================================
     ____________________________ test_eval[6*9-42] _____________________________

     test_input = '6*9', expected = 42

         @pytest.mark.parametrize("test_input,expected", [("3+5", 8), ("2+4", 6), ("6*9", 42)])
         def test_eval(test_input, expected):
     >       assert eval(test_input) == expected
     E       AssertionError: assert 54 == 42
     E        +  where 54 = eval('6*9')

     test_expectation.py:6: AssertionError
     ========================= short test summary info ==========================
     FAILED test_expectation.py::test_eval[6*9-42] - AssertionError: assert 54...
     ======================= 1 failed, 2 passed in 0.12s ========================

     Note: Parameter values are passed as-is to tests (no copy
     whatsoever).

     For example, if you pass a list or a dict as a parameter value, and
     the test case code mutates it, the mutations will be reflected in
     subsequent test case calls.

     Note: pytest by default escapes any non-ascii characters used in
     unicode strings for the parametrization because it has several
     downsides.  If however you would like to use unicode strings in
     parametrization and see them in the terminal as is (non-escaped),
     use this option in your ‘pytest.ini’:

          [pytest]
          disable_test_id_escaping_and_forfeit_all_rights_to_community_support = True

     Keep in mind however that this might cause unwanted side effects
     and even bugs depending on the OS used and plugins currently
     installed, so use it at your own risk.

As designed in this example, only one pair of input/output values fails
the simple test function.  And as usual with test function arguments,
you can see the ‘input’ and ‘output’ values in the traceback.

Note that you could also use the parametrize marker on a class or a
module (see *note How to mark test functions with attributes: 14.) which
would invoke several functions with the argument sets, for instance:

     import pytest


     @pytest.mark.parametrize("n,expected", [(1, 2), (3, 4)])
     class TestClass:
         def test_simple_case(self, n, expected):
             assert n + 1 == expected

         def test_weird_simple_case(self, n, expected):
             assert (n * 1) + 1 == expected

To parametrize all tests in a module, you can assign to the *note
pytestmark: 73. global variable:

     import pytest

     pytestmark = pytest.mark.parametrize("n,expected", [(1, 2), (3, 4)])


     class TestClass:
         def test_simple_case(self, n, expected):
             assert n + 1 == expected

         def test_weird_simple_case(self, n, expected):
             assert (n * 1) + 1 == expected

It is also possible to mark individual test instances within
parametrize, for example with the builtin ‘mark.xfail’:

     # content of test_expectation.py
     import pytest


     @pytest.mark.parametrize(
         "test_input,expected",
         [("3+5", 8), ("2+4", 6), pytest.param("6*9", 42, marks=pytest.mark.xfail)],
     )
     def test_eval(test_input, expected):
         assert eval(test_input) == expected

Let’s run this:

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 3 items

     test_expectation.py ..x                                              [100%]

     ======================= 2 passed, 1 xfailed in 0.12s =======================

The one parameter set which caused a failure previously now shows up as
an “xfailed” (expected to fail) test.

In case the values provided to ‘parametrize’ result in an empty list -
for example, if they’re dynamically generated by some function - the
behaviour of pytest is defined by the *note empty_parameter_set_mark:
96. option.

To get all combinations of multiple parametrized arguments you can stack
‘parametrize’ decorators:

     import pytest


     @pytest.mark.parametrize("x", [0, 1])
     @pytest.mark.parametrize("y", [2, 3])
     def test_foo(x, y):
         pass

This will run the test with the arguments set to ‘x=0/y=2’, ‘x=1/y=2’,
‘x=0/y=3’, and ‘x=1/y=3’ exhausting parameters in the order of the
decorators.


File: pytest.info,  Node: Basic pytest_generate_tests example,  Next: More examples,  Prev: @pytest mark parametrize parametrizing test functions,  Up: How to parametrize fixtures and test functions

6.2 Basic ‘pytest_generate_tests’ example
=========================================

Sometimes you may want to implement your own parametrization scheme or
implement some dynamism for determining the parameters or scope of a
fixture.  For this, you can use the ‘pytest_generate_tests’ hook which
is called when collecting a test function.  Through the passed in
‘metafunc’ object you can inspect the requesting test context and, most
importantly, you can call ‘metafunc.parametrize()’ to cause
parametrization.

For example, let’s say we want to run a test taking string inputs which
we want to set via a new ‘pytest’ command line option.  Let’s first
write a simple test accepting a ‘stringinput’ fixture function argument:

     # content of test_strings.py


     def test_valid_string(stringinput):
         assert stringinput.isalpha()

Now we add a ‘conftest.py’ file containing the addition of a command
line option and the parametrization of our test function:

     # content of conftest.py


     def pytest_addoption(parser):
         parser.addoption(
             "--stringinput",
             action="append",
             default=[],
             help="list of stringinputs to pass to test functions",
         )


     def pytest_generate_tests(metafunc):
         if "stringinput" in metafunc.fixturenames:
             metafunc.parametrize("stringinput", metafunc.config.getoption("stringinput"))

If we now pass two stringinput values, our test will run twice:

     $ pytest -q --stringinput="hello" --stringinput="world" test_strings.py
     ..                                                                   [100%]
     2 passed in 0.12s

Let’s also run with a stringinput that will lead to a failing test:

     $ pytest -q --stringinput="!" test_strings.py
     F                                                                    [100%]
     ================================= FAILURES =================================
     ___________________________ test_valid_string[!] ___________________________

     stringinput = '!'

         def test_valid_string(stringinput):
     >       assert stringinput.isalpha()
     E       AssertionError: assert False
     E        +  where False = <built-in method isalpha of str object at 0xdeadbeef0001>()
     E        +    where <built-in method isalpha of str object at 0xdeadbeef0001> = '!'.isalpha

     test_strings.py:4: AssertionError
     ========================= short test summary info ==========================
     FAILED test_strings.py::test_valid_string[!] - AssertionError: assert False
     1 failed in 0.12s

As expected our test function fails.

If you don’t specify a stringinput it will be skipped because
‘metafunc.parametrize()’ will be called with an empty parameter list:

     $ pytest -q -rs test_strings.py
     s                                                                    [100%]
     ========================= short test summary info ==========================
     SKIPPED [1] test_strings.py: got empty parameter set ['stringinput'], function test_valid_string at /home/sweet/project/test_strings.py:2
     1 skipped in 0.12s

Note that when calling ‘metafunc.parametrize’ multiple times with
different parameter sets, all parameter names across those sets cannot
be duplicated, otherwise an error will be raised.


File: pytest.info,  Node: More examples,  Prev: Basic pytest_generate_tests example,  Up: How to parametrize fixtures and test functions

6.3 More examples
=================

For further examples, you might want to look at *note more
parametrization examples: 99.


File: pytest.info,  Node: How to use temporary directories and files in tests,  Next: How to monkeypatch/mock modules and environments,  Prev: How to parametrize fixtures and test functions,  Up: Top

7 How to use temporary directories and files in tests
*****************************************************

* Menu:

* The tmp_path fixture::
* The tmp_path_factory fixture::
* The tmpdir and tmpdir_factory fixtures::
* The default base temporary directory::


File: pytest.info,  Node: The tmp_path fixture,  Next: The tmp_path_factory fixture,  Up: How to use temporary directories and files in tests

7.1 The ‘tmp_path’ fixture
==========================

You can use the ‘tmp_path’ fixture which will provide a temporary
directory unique to the test invocation, created in the *note base
temporary directory: 9e.

‘tmp_path’ is a pathlib.Path(1) object.  Here is an example test usage:

     # content of test_tmp_path.py
     CONTENT = "content"


     def test_create_file(tmp_path):
         d = tmp_path / "sub"
         d.mkdir()
         p = d / "hello.txt"
         p.write_text(CONTENT)
         assert p.read_text() == CONTENT
         assert len(list(tmp_path.iterdir())) == 1
         assert 0

Running this would result in a passed test except for the last ‘assert
0’ line which we use to look at values:

     $ pytest test_tmp_path.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_tmp_path.py F                                                   [100%]

     ================================= FAILURES =================================
     _____________________________ test_create_file _____________________________

     tmp_path = PosixPath('PYTEST_TMPDIR/test_create_file0')

         def test_create_file(tmp_path):
             d = tmp_path / "sub"
             d.mkdir()
             p = d / "hello.txt"
             p.write_text(CONTENT)
             assert p.read_text() == CONTENT
             assert len(list(tmp_path.iterdir())) == 1
     >       assert 0
     E       assert 0

     test_tmp_path.py:11: AssertionError
     ========================= short test summary info ==========================
     FAILED test_tmp_path.py::test_create_file - assert 0
     ============================ 1 failed in 0.12s =============================

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path


File: pytest.info,  Node: The tmp_path_factory fixture,  Next: The tmpdir and tmpdir_factory fixtures,  Prev: The tmp_path fixture,  Up: How to use temporary directories and files in tests

7.2 The ‘tmp_path_factory’ fixture
==================================

The ‘tmp_path_factory’ is a session-scoped fixture which can be used to
create arbitrary temporary directories from any other fixture or test.

For example, suppose your test suite needs a large image on disk, which
is generated procedurally.  Instead of computing the same image for each
test that uses it into its own ‘tmp_path’, you can generate it once
per-session to save time:

     # contents of conftest.py
     import pytest


     @pytest.fixture(scope="session")
     def image_file(tmp_path_factory):
         img = compute_expensive_image()
         fn = tmp_path_factory.mktemp("data") / "img.png"
         img.save(fn)
         return fn


     # contents of test_image.py
     def test_histogram(image_file):
         img = load_image(image_file)
         # compute and test histogram

See *note tmp_path_factory API: a1. for details.


File: pytest.info,  Node: The tmpdir and tmpdir_factory fixtures,  Next: The default base temporary directory,  Prev: The tmp_path_factory fixture,  Up: How to use temporary directories and files in tests

7.3 The ‘tmpdir’ and ‘tmpdir_factory’ fixtures
==============================================

The ‘tmpdir’ and ‘tmpdir_factory’ fixtures are similar to ‘tmp_path’ and
‘tmp_path_factory’, but use/return legacy py.path.local(1) objects
rather than standard pathlib.Path(2) objects.

     Note: These days, it is preferred to use ‘tmp_path’ and
     ‘tmp_path_factory’.

See *note tmpdir: a5. *note tmpdir_factory: a6. API for details.

   ---------- Footnotes ----------

   (1) https://py.readthedocs.io/en/latest/path.html

   (2) https://docs.python.org/3/library/pathlib.html#pathlib.Path


File: pytest.info,  Node: The default base temporary directory,  Prev: The tmpdir and tmpdir_factory fixtures,  Up: How to use temporary directories and files in tests

7.4 The default base temporary directory
========================================

Temporary directories are by default created as sub-directories of the
system temporary directory.  The base name will be ‘pytest-NUM’ where
‘NUM’ will be incremented with each test run.  Moreover, entries older
than 3 temporary directories will be removed.

The number of entries currently cannot be changed, but using the
‘--basetemp’ option will remove the directory before every run,
effectively meaning the temporary directories of only the most recent
run will be kept.

You can override the default temporary directory setting like this:

     pytest --basetemp=mydir

     Warning: The contents of ‘mydir’ will be completely removed, so
     make sure to use a directory for that purpose only.

When distributing tests on the local machine using ‘pytest-xdist’, care
is taken to automatically configure a basetemp directory for the sub
processes such that all temporary data lands below a single per-test run
basetemp directory.


File: pytest.info,  Node: How to monkeypatch/mock modules and environments,  Next: How to run doctests,  Prev: How to use temporary directories and files in tests,  Up: Top

8 How to monkeypatch/mock modules and environments
**************************************************

Sometimes tests need to invoke functionality which depends on global
settings or which invokes code which cannot be easily tested such as
network access.  The ‘monkeypatch’ fixture helps you to safely
set/delete an attribute, dictionary item or environment variable, or to
modify ‘sys.path’ for importing.

The ‘monkeypatch’ fixture provides these helper methods for safely
patching and mocking functionality in tests:

   * *note monkeypatch.setattr(obj, name, value, raising=True): ac.

   * *note monkeypatch.delattr(obj, name, raising=True): ad.

   * *note monkeypatch.setitem(mapping, name, value): ae.

   * *note monkeypatch.delitem(obj, name, raising=True): af.

   * *note monkeypatch.setenv(name, value, prepend=None): b0.

   * *note monkeypatch.delenv(name, raising=True): b1.

   * *note monkeypatch.syspath_prepend(path): b2.

   * *note monkeypatch.chdir(path): b3.

   * *note monkeypatch.context(): b4.

All modifications will be undone after the requesting test function or
fixture has finished.  The ‘raising’ parameter determines if a
‘KeyError’ or ‘AttributeError’ will be raised if the target of the
set/deletion operation does not exist.

Consider the following scenarios:

1.  Modifying the behavior of a function or the property of a class for
a test e.g.  there is an API call or database connection you will not
make for a test but you know what the expected output should be.  Use
*note monkeypatch.setattr: ac. to patch the function or property with
your desired testing behavior.  This can include your own functions.
Use *note monkeypatch.delattr: ad. to remove the function or property
for the test.

2.  Modifying the values of dictionaries e.g.  you have a global
configuration that you want to modify for certain test cases.  Use *note
monkeypatch.setitem: ae. to patch the dictionary for the test.  *note
monkeypatch.delitem: af. can be used to remove items.

3.  Modifying environment variables for a test e.g.  to test program
behavior if an environment variable is missing, or to set multiple
values to a known variable.  *note monkeypatch.setenv: b0. and *note
monkeypatch.delenv: b1. can be used for these patches.

4.  Use ‘monkeypatch.setenv("PATH", value, prepend=os.pathsep)’ to
modify ‘$PATH’, and *note monkeypatch.chdir: b3. to change the context
of the current working directory during a test.

5.  Use *note monkeypatch.syspath_prepend: b2. to modify ‘sys.path’
which will also call ‘pkg_resources.fixup_namespace_packages’ and
importlib.invalidate_caches()(1).

6.  Use *note monkeypatch.context: b4. to apply patches only in a
specific scope, which can help control teardown of complex fixtures or
patches to the stdlib.

See the monkeypatch blog post(2) for some introduction material and a
discussion of its motivation.

* Menu:

* Monkeypatching functions::
* Monkeypatching returned objects; building mock classes: Monkeypatching returned objects building mock classes.
* Global patch example; preventing “requests” from remote operations: Global patch example preventing “requests” from remote operations.
* Monkeypatching environment variables::
* Monkeypatching dictionaries::
* API Reference::

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/importlib.html#importlib.invalidate_caches

   (2) 
https://tetamap.wordpress.com//2009/03/03/monkeypatching-in-unit-tests-done-right/


File: pytest.info,  Node: Monkeypatching functions,  Next: Monkeypatching returned objects building mock classes,  Up: How to monkeypatch/mock modules and environments

8.1 Monkeypatching functions
============================

Consider a scenario where you are working with user directories.  In the
context of testing, you do not want your test to depend on the running
user.  ‘monkeypatch’ can be used to patch functions dependent on the
user to always return a specific value.

In this example, *note monkeypatch.setattr: ac. is used to patch
‘Path.home’ so that the known testing path ‘Path("/abc")’ is always used
when the test is run.  This removes any dependency on the running user
for testing purposes.  *note monkeypatch.setattr: ac. must be called
before the function which will use the patched function is called.
After the test function finishes the ‘Path.home’ modification will be
undone.

     # contents of test_module.py with source code and the test
     from pathlib import Path


     def getssh():
         """Simple function to return expanded homedir ssh path."""
         return Path.home() / ".ssh"


     def test_getssh(monkeypatch):
         # mocked return function to replace Path.home
         # always return '/abc'
         def mockreturn():
             return Path("/abc")

         # Application of the monkeypatch to replace Path.home
         # with the behavior of mockreturn defined above.
         monkeypatch.setattr(Path, "home", mockreturn)

         # Calling getssh() will use mockreturn in place of Path.home
         # for this test with the monkeypatch.
         x = getssh()
         assert x == Path("/abc/.ssh")


File: pytest.info,  Node: Monkeypatching returned objects building mock classes,  Next: Global patch example preventing “requests” from remote operations,  Prev: Monkeypatching functions,  Up: How to monkeypatch/mock modules and environments

8.2 Monkeypatching returned objects: building mock classes
==========================================================

*note monkeypatch.setattr: ac. can be used in conjunction with classes
to mock returned objects from functions instead of values.  Imagine a
simple function to take an API url and return the json response.

     # contents of app.py, a simple API retrieval example
     import requests


     def get_json(url):
         """Takes a URL, and returns the JSON."""
         r = requests.get(url)
         return r.json()

We need to mock ‘r’, the returned response object for testing purposes.
The mock of ‘r’ needs a ‘.json()’ method which returns a dictionary.
This can be done in our test file by defining a class to represent ‘r’.

     # contents of test_app.py, a simple test for our API retrieval
     # import requests for the purposes of monkeypatching
     import requests

     # our app.py that includes the get_json() function
     # this is the previous code block example
     import app

     # custom class to be the mock return value
     # will override the requests.Response returned from requests.get
     class MockResponse:

         # mock json() method always returns a specific testing dictionary
         @staticmethod
         def json():
             return {"mock_key": "mock_response"}


     def test_get_json(monkeypatch):

         # Any arguments may be passed and mock_get() will always return our
         # mocked object, which only has the .json() method.
         def mock_get(*args, **kwargs):
             return MockResponse()

         # apply the monkeypatch for requests.get to mock_get
         monkeypatch.setattr(requests, "get", mock_get)

         # app.get_json, which contains requests.get, uses the monkeypatch
         result = app.get_json("https://fakeurl")
         assert result["mock_key"] == "mock_response"

‘monkeypatch’ applies the mock for ‘requests.get’ with our ‘mock_get’
function.  The ‘mock_get’ function returns an instance of the
‘MockResponse’ class, which has a ‘json()’ method defined to return a
known testing dictionary and does not require any outside API
connection.

You can build the ‘MockResponse’ class with the appropriate degree of
complexity for the scenario you are testing.  For instance, it could
include an ‘ok’ property that always returns ‘True’, or return different
values from the ‘json()’ mocked method based on input strings.

This mock can be shared across tests using a ‘fixture’:

     # contents of test_app.py, a simple test for our API retrieval
     import pytest
     import requests

     # app.py that includes the get_json() function
     import app

     # custom class to be the mock return value of requests.get()
     class MockResponse:
         @staticmethod
         def json():
             return {"mock_key": "mock_response"}


     # monkeypatched requests.get moved to a fixture
     @pytest.fixture
     def mock_response(monkeypatch):
         """Requests.get() mocked to return {'mock_key':'mock_response'}."""

         def mock_get(*args, **kwargs):
             return MockResponse()

         monkeypatch.setattr(requests, "get", mock_get)


     # notice our test uses the custom fixture instead of monkeypatch directly
     def test_get_json(mock_response):
         result = app.get_json("https://fakeurl")
         assert result["mock_key"] == "mock_response"

Furthermore, if the mock was designed to be applied to all tests, the
‘fixture’ could be moved to a ‘conftest.py’ file and use the with
‘autouse=True’ option.


File: pytest.info,  Node: Global patch example preventing “requests” from remote operations,  Next: Monkeypatching environment variables,  Prev: Monkeypatching returned objects building mock classes,  Up: How to monkeypatch/mock modules and environments

8.3 Global patch example: preventing “requests” from remote operations
======================================================================

If you want to prevent the “requests” library from performing http
requests in all your tests, you can do:

     # contents of conftest.py
     import pytest


     @pytest.fixture(autouse=True)
     def no_requests(monkeypatch):
         """Remove requests.sessions.Session.request for all tests."""
         monkeypatch.delattr("requests.sessions.Session.request")

This autouse fixture will be executed for each test function and it will
delete the method ‘request.session.Session.request’ so that any attempts
within tests to create http requests will fail.

     Note: Be advised that it is not recommended to patch builtin
     functions such as ‘open’, ‘compile’, etc., because it might break
     pytest’s internals.  If that’s unavoidable, passing ‘--tb=native’,
     ‘--assert=plain’ and ‘--capture=no’ might help although there’s no
     guarantee.

     Note: Mind that patching ‘stdlib’ functions and some third-party
     libraries used by pytest might break pytest itself, therefore in
     those cases it is recommended to use *note MonkeyPatch.context():
     b4. to limit the patching to the block you want tested:

          import functools


          def test_partial(monkeypatch):
              with monkeypatch.context() as m:
                  m.setattr(functools, "partial", 3)
                  assert functools.partial == 3

     See issue #3290(1) for details.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3290


File: pytest.info,  Node: Monkeypatching environment variables,  Next: Monkeypatching dictionaries,  Prev: Global patch example preventing “requests” from remote operations,  Up: How to monkeypatch/mock modules and environments

8.4 Monkeypatching environment variables
========================================

If you are working with environment variables you often need to safely
change the values or delete them from the system for testing purposes.
‘monkeypatch’ provides a mechanism to do this using the ‘setenv’ and
‘delenv’ method.  Our example code to test:

     # contents of our original code file e.g. code.py
     import os


     def get_os_user_lower():
         """Simple retrieval function.
         Returns lowercase USER or raises OSError."""
         username = os.getenv("USER")

         if username is None:
             raise OSError("USER environment is not set.")

         return username.lower()

There are two potential paths.  First, the ‘USER’ environment variable
is set to a value.  Second, the ‘USER’ environment variable does not
exist.  Using ‘monkeypatch’ both paths can be safely tested without
impacting the running environment:

     # contents of our test file e.g. test_code.py
     import pytest


     def test_upper_to_lower(monkeypatch):
         """Set the USER env var to assert the behavior."""
         monkeypatch.setenv("USER", "TestingUser")
         assert get_os_user_lower() == "testinguser"


     def test_raise_exception(monkeypatch):
         """Remove the USER env var and assert OSError is raised."""
         monkeypatch.delenv("USER", raising=False)

         with pytest.raises(OSError):
             _ = get_os_user_lower()

This behavior can be moved into ‘fixture’ structures and shared across
tests:

     # contents of our test file e.g. test_code.py
     import pytest


     @pytest.fixture
     def mock_env_user(monkeypatch):
         monkeypatch.setenv("USER", "TestingUser")


     @pytest.fixture
     def mock_env_missing(monkeypatch):
         monkeypatch.delenv("USER", raising=False)


     # notice the tests reference the fixtures for mocks
     def test_upper_to_lower(mock_env_user):
         assert get_os_user_lower() == "testinguser"


     def test_raise_exception(mock_env_missing):
         with pytest.raises(OSError):
             _ = get_os_user_lower()


File: pytest.info,  Node: Monkeypatching dictionaries,  Next: API Reference,  Prev: Monkeypatching environment variables,  Up: How to monkeypatch/mock modules and environments

8.5 Monkeypatching dictionaries
===============================

*note monkeypatch.setitem: ae. can be used to safely set the values of
dictionaries to specific values during tests.  Take this simplified
connection string example:

     # contents of app.py to generate a simple connection string
     DEFAULT_CONFIG = {"user": "user1", "database": "db1"}


     def create_connection_string(config=None):
         """Creates a connection string from input or defaults."""
         config = config or DEFAULT_CONFIG
         return f"User Id={config['user']}; Location={config['database']};"

For testing purposes we can patch the ‘DEFAULT_CONFIG’ dictionary to
specific values.

     # contents of test_app.py
     # app.py with the connection string function (prior code block)
     import app


     def test_connection(monkeypatch):

         # Patch the values of DEFAULT_CONFIG to specific
         # testing values only for this test.
         monkeypatch.setitem(app.DEFAULT_CONFIG, "user", "test_user")
         monkeypatch.setitem(app.DEFAULT_CONFIG, "database", "test_db")

         # expected result based on the mocks
         expected = "User Id=test_user; Location=test_db;"

         # the test uses the monkeypatched dictionary settings
         result = app.create_connection_string()
         assert result == expected

You can use the *note monkeypatch.delitem: af. to remove values.

     # contents of test_app.py
     import pytest

     # app.py with the connection string function
     import app


     def test_missing_user(monkeypatch):

         # patch the DEFAULT_CONFIG t be missing the 'user' key
         monkeypatch.delitem(app.DEFAULT_CONFIG, "user", raising=False)

         # Key error expected because a config is not passed, and the
         # default is now missing the 'user' entry.
         with pytest.raises(KeyError):
             _ = app.create_connection_string()

The modularity of fixtures gives you the flexibility to define separate
fixtures for each potential mock and reference them in the needed tests.

     # contents of test_app.py
     import pytest

     # app.py with the connection string function
     import app

     # all of the mocks are moved into separated fixtures
     @pytest.fixture
     def mock_test_user(monkeypatch):
         """Set the DEFAULT_CONFIG user to test_user."""
         monkeypatch.setitem(app.DEFAULT_CONFIG, "user", "test_user")


     @pytest.fixture
     def mock_test_database(monkeypatch):
         """Set the DEFAULT_CONFIG database to test_db."""
         monkeypatch.setitem(app.DEFAULT_CONFIG, "database", "test_db")


     @pytest.fixture
     def mock_missing_default_user(monkeypatch):
         """Remove the user key from DEFAULT_CONFIG"""
         monkeypatch.delitem(app.DEFAULT_CONFIG, "user", raising=False)


     # tests reference only the fixture mocks that are needed
     def test_connection(mock_test_user, mock_test_database):

         expected = "User Id=test_user; Location=test_db;"

         result = app.create_connection_string()
         assert result == expected


     def test_missing_user(mock_missing_default_user):

         with pytest.raises(KeyError):
             _ = app.create_connection_string()


File: pytest.info,  Node: API Reference,  Prev: Monkeypatching dictionaries,  Up: How to monkeypatch/mock modules and environments

8.6 API Reference
=================

Consult the docs for the *note MonkeyPatch: bc. class.


File: pytest.info,  Node: How to run doctests,  Next: How to re-run failed tests and maintain state between test runs,  Prev: How to monkeypatch/mock modules and environments,  Up: Top

9 How to run doctests
*********************

By default, all files matching the ‘test*.txt’ pattern will be run
through the python standard doctest(1) module.  You can change the
pattern by issuing:

     pytest --doctest-glob="*.rst"

on the command line.  ‘--doctest-glob’ can be given multiple times in
the command-line.

If you then have a text file like this:

     # content of test_example.txt

     hello this is a doctest
     >>> x = 3
     >>> x
     3

then you can just invoke ‘pytest’ directly:

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_example.txt .                                                   [100%]

     ============================ 1 passed in 0.12s =============================

By default, pytest will collect ‘test*.txt’ files looking for doctest
directives, but you can pass additional globs using the ‘--doctest-glob’
option (multi-allowed).

In addition to text files, you can also execute doctests directly from
docstrings of your classes and functions, including from test modules:

     # content of mymodule.py
     def something():
         """a doctest in a docstring
         >>> something()
         42
         """
         return 42

     $ pytest --doctest-modules
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items

     mymodule.py .                                                        [ 50%]
     test_example.txt .                                                   [100%]

     ============================ 2 passed in 0.12s =============================

You can make these changes permanent in your project by putting them
into a pytest.ini file like this:

     # content of pytest.ini
     [pytest]
     addopts = --doctest-modules

* Menu:

* Encoding::
* Using ‘doctest’ options::
* Continue on failure::
* Output format::
* pytest-specific features::
* Alternatives::

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/doctest.html#module-doctest


File: pytest.info,  Node: Encoding,  Next: Using ‘doctest’ options,  Up: How to run doctests

9.1 Encoding
============

The default encoding is ‘UTF-8’, but you can specify the encoding that
will be used for those doctest files using the ‘doctest_encoding’ ini
option:

     # content of pytest.ini
     [pytest]
     doctest_encoding = latin1


File: pytest.info,  Node: Using ‘doctest’ options,  Next: Continue on failure,  Prev: Encoding,  Up: How to run doctests

9.2 Using ‘doctest’ options
===========================

Python’s standard doctest(1) module provides some options(2) to
configure the strictness of doctest tests.  In pytest, you can enable
those flags using the configuration file.

For example, to make pytest ignore trailing whitespaces and ignore
lengthy exception stack traces you can just write:

     [pytest]
     doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

Alternatively, options can be enabled by an inline comment in the doc
test itself:

     >>> something_that_raises()  # doctest: +IGNORE_EXCEPTION_DETAIL
     Traceback (most recent call last):
     ValueError: ...

pytest also introduces new options:

   * ‘ALLOW_UNICODE’: when enabled, the ‘u’ prefix is stripped from
     unicode strings in expected doctest output.  This allows doctests
     to run in Python 2 and Python 3 unchanged.

   * ‘ALLOW_BYTES’: similarly, the ‘b’ prefix is stripped from byte
     strings in expected doctest output.

   * ‘NUMBER’: when enabled, floating-point numbers only need to match
     as far as the precision you have written in the expected doctest
     output.  The numbers are compared using *note pytest.approx(): c3.
     with relative tolerance equal to the precision.  For example, the
     following output would only need to match to 2 decimal places when
     comparing ‘3.14’ to ‘pytest.approx(math.pi, rel=10**-2)’:

          >>> math.pi
          3.14

     If you wrote ‘3.1416’ then the actual output would need to match to
     approximately 4 decimal places; and so on.

     This avoids false positives caused by limited floating-point
     precision, like this:

          Expected:
              0.233
          Got:
              0.23300000000000001

     ‘NUMBER’ also supports lists of floating-point numbers – in fact,
     it matches floating-point numbers appearing anywhere in the output,
     even inside a string!  This means that it may not be appropriate to
     enable globally in ‘doctest_optionflags’ in your configuration
     file.

     New in version 5.1.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/doctest.html#module-doctest

   (2) 
https://docs.python.org/3/library/doctest.html#option-flags-and-directives


File: pytest.info,  Node: Continue on failure,  Next: Output format,  Prev: Using ‘doctest’ options,  Up: How to run doctests

9.3 Continue on failure
=======================

By default, pytest would report only the first failure for a given
doctest.  If you want to continue the test even when you have failures,
do:

     pytest --doctest-modules --doctest-continue-on-failure


File: pytest.info,  Node: Output format,  Next: pytest-specific features,  Prev: Continue on failure,  Up: How to run doctests

9.4 Output format
=================

You can change the diff output format on failure for your doctests by
using one of standard doctest modules format in options (see
doctest.REPORT_UDIFF(1), doctest.REPORT_CDIFF(2),
doctest.REPORT_NDIFF(3), doctest.REPORT_ONLY_FIRST_FAILURE(4)):

     pytest --doctest-modules --doctest-report none
     pytest --doctest-modules --doctest-report udiff
     pytest --doctest-modules --doctest-report cdiff
     pytest --doctest-modules --doctest-report ndiff
     pytest --doctest-modules --doctest-report only_first_failure

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/doctest.html#doctest.REPORT_UDIFF

   (2) 
https://docs.python.org/3/library/doctest.html#doctest.REPORT_CDIFF

   (3) 
https://docs.python.org/3/library/doctest.html#doctest.REPORT_NDIFF

   (4) 
https://docs.python.org/3/library/doctest.html#doctest.REPORT_ONLY_FIRST_FAILURE


File: pytest.info,  Node: pytest-specific features,  Next: Alternatives,  Prev: Output format,  Up: How to run doctests

9.5 pytest-specific features
============================

Some features are provided to make writing doctests easier or with
better integration with your existing test suite.  Keep in mind however
that by using those features you will make your doctests incompatible
with the standard ‘doctests’ module.

* Menu:

* Using fixtures::
* ‘doctest_namespace’ fixture::
* Skipping tests::


File: pytest.info,  Node: Using fixtures,  Next: ‘doctest_namespace’ fixture,  Up: pytest-specific features

9.5.1 Using fixtures
--------------------

It is possible to use fixtures using the ‘getfixture’ helper:

     # content of example.rst
     >>> tmp = getfixture('tmp_path')
     >>> ...
     >>>

Note that the fixture needs to be defined in a place visible by pytest,
for example, a ‘conftest.py’ file or plugin; normal python files
containing docstrings are not normally scanned for fixtures unless
explicitly configured by *note python_files: c8.

Also, the *note usefixtures: 72. mark and fixtures marked as *note
autouse: 4b. are supported when executing text doctest files.


File: pytest.info,  Node: ‘doctest_namespace’ fixture,  Next: Skipping tests,  Prev: Using fixtures,  Up: pytest-specific features

9.5.2 ‘doctest_namespace’ fixture
---------------------------------

The ‘doctest_namespace’ fixture can be used to inject items into the
namespace in which your doctests run.  It is intended to be used within
your own fixtures to provide the tests that use them with context.

‘doctest_namespace’ is a standard ‘dict’ object into which you place the
objects you want to appear in the doctest namespace:

     # content of conftest.py
     import numpy


     @pytest.fixture(autouse=True)
     def add_np(doctest_namespace):
         doctest_namespace["np"] = numpy

which can then be used in your doctests directly:

     # content of numpy.py
     def arange():
         """
         >>> a = np.arange(10)
         >>> len(a)
         10
         """

Note that like the normal ‘conftest.py’, the fixtures are discovered in
the directory tree conftest is in.  Meaning that if you put your doctest
with your source code, the relevant conftest.py needs to be in the same
directory tree.  Fixtures will not be discovered in a sibling directory
tree!


File: pytest.info,  Node: Skipping tests,  Prev: ‘doctest_namespace’ fixture,  Up: pytest-specific features

9.5.3 Skipping tests
--------------------

For the same reasons one might want to skip normal tests, it is also
possible to skip tests inside doctests.

To skip a single check inside a doctest you can use the standard
doctest.SKIP(1) directive:

     def test_random(y):
         """
         >>> random.random()  # doctest: +SKIP
         0.156231223

         >>> 1 + 1
         2
         """

This will skip the first check, but not the second.

pytest also allows using the standard pytest functions *note
pytest.skip(): cc. and *note pytest.xfail(): cd. inside doctests, which
might be useful because you can then skip/xfail tests based on external
conditions:

     >>> import sys, pytest
     >>> if sys.platform.startswith('win'):
     ...     pytest.skip('this doctest does not work on Windows')
     ...
     >>> import fcntl
     >>> ...

However using those functions is discouraged because it reduces the
readability of the docstring.

     Note: *note pytest.skip(): cc. and *note pytest.xfail(): cd. behave
     differently depending if the doctests are in a Python file (in
     docstrings) or a text file containing doctests intermingled with
     text:

        * Python modules (docstrings): the functions only act in that
          specific docstring, letting the other docstrings in the same
          module execute as normal.

        * Text files: the functions will skip/xfail the checks for the
          rest of the entire file.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/doctest.html#doctest.SKIP


File: pytest.info,  Node: Alternatives,  Prev: pytest-specific features,  Up: How to run doctests

9.6 Alternatives
================

While the built-in pytest support provides a good set of functionalities
for using doctests, if you use them extensively you might be interested
in those external packages which add many more features, and include
pytest integration:

   * pytest-doctestplus(1): provides advanced doctest support and
     enables the testing of reStructuredText (“.rst”) files.

   * Sybil(2): provides a way to test examples in your documentation by
     parsing them from the documentation source and evaluating the
     parsed examples as part of your normal test run.

   ---------- Footnotes ----------

   (1) https://github.com/astropy/pytest-doctestplus

   (2) https://sybil.readthedocs.io


File: pytest.info,  Node: How to re-run failed tests and maintain state between test runs,  Next: How to manage logging,  Prev: How to run doctests,  Up: Top

10 How to re-run failed tests and maintain state between test runs
******************************************************************

* Menu:

* Usage::
* Rerunning only failures or failures first::
* Behavior when no tests failed in the last run::
* The new config.cache object: The new config cache object.
* Inspecting Cache content::
* Clearing Cache content::
* Stepwise::


File: pytest.info,  Node: Usage,  Next: Rerunning only failures or failures first,  Up: How to re-run failed tests and maintain state between test runs

10.1 Usage
==========

The plugin provides two command line options to rerun failures from the
last ‘pytest’ invocation:

   * ‘--lf’, ‘--last-failed’ - to only re-run the failures.

   * ‘--ff’, ‘--failed-first’ - to run the failures first and then the
     rest of the tests.

For cleanup (usually not needed), a ‘--cache-clear’ option allows to
remove all cross-session cache contents ahead of a test run.

Other plugins may access the *note config.cache: d4. object to set/get
‘json encodable’ values between ‘pytest’ invocations.

     Note: This plugin is enabled by default, but can be disabled if
     needed: see *note Deactivating / unregistering a plugin by name:
     d5. (the internal name for this plugin is ‘cacheprovider’).


File: pytest.info,  Node: Rerunning only failures or failures first,  Next: Behavior when no tests failed in the last run,  Prev: Usage,  Up: How to re-run failed tests and maintain state between test runs

10.2 Rerunning only failures or failures first
==============================================

First, let’s create 50 test invocation of which only 2 fail:

     # content of test_50.py
     import pytest


     @pytest.mark.parametrize("i", range(50))
     def test_num(i):
         if i in (17, 25):
             pytest.fail("bad luck")

If you run this for the first time you will see two failures:

     $ pytest -q
     .................F.......F........................                   [100%]
     ================================= FAILURES =================================
     _______________________________ test_num[17] _______________________________

     i = 17

         @pytest.mark.parametrize("i", range(50))
         def test_num(i):
             if i in (17, 25):
     >           pytest.fail("bad luck")
     E           Failed: bad luck

     test_50.py:7: Failed
     _______________________________ test_num[25] _______________________________

     i = 25

         @pytest.mark.parametrize("i", range(50))
         def test_num(i):
             if i in (17, 25):
     >           pytest.fail("bad luck")
     E           Failed: bad luck

     test_50.py:7: Failed
     ========================= short test summary info ==========================
     FAILED test_50.py::test_num[17] - Failed: bad luck
     FAILED test_50.py::test_num[25] - Failed: bad luck
     2 failed, 48 passed in 0.12s

If you then run it with ‘--lf’:

     $ pytest --lf
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items
     run-last-failure: rerun previous 2 failures

     test_50.py FF                                                        [100%]

     ================================= FAILURES =================================
     _______________________________ test_num[17] _______________________________

     i = 17

         @pytest.mark.parametrize("i", range(50))
         def test_num(i):
             if i in (17, 25):
     >           pytest.fail("bad luck")
     E           Failed: bad luck

     test_50.py:7: Failed
     _______________________________ test_num[25] _______________________________

     i = 25

         @pytest.mark.parametrize("i", range(50))
         def test_num(i):
             if i in (17, 25):
     >           pytest.fail("bad luck")
     E           Failed: bad luck

     test_50.py:7: Failed
     ========================= short test summary info ==========================
     FAILED test_50.py::test_num[17] - Failed: bad luck
     FAILED test_50.py::test_num[25] - Failed: bad luck
     ============================ 2 failed in 0.12s =============================

You have run only the two failing tests from the last run, while the 48
passing tests have not been run (“deselected”).

Now, if you run with the ‘--ff’ option, all tests will be run but the
first previous failures will be executed first (as can be seen from the
series of ‘FF’ and dots):

     $ pytest --ff
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 50 items
     run-last-failure: rerun previous 2 failures first

     test_50.py FF................................................        [100%]

     ================================= FAILURES =================================
     _______________________________ test_num[17] _______________________________

     i = 17

         @pytest.mark.parametrize("i", range(50))
         def test_num(i):
             if i in (17, 25):
     >           pytest.fail("bad luck")
     E           Failed: bad luck

     test_50.py:7: Failed
     _______________________________ test_num[25] _______________________________

     i = 25

         @pytest.mark.parametrize("i", range(50))
         def test_num(i):
             if i in (17, 25):
     >           pytest.fail("bad luck")
     E           Failed: bad luck

     test_50.py:7: Failed
     ========================= short test summary info ==========================
     FAILED test_50.py::test_num[17] - Failed: bad luck
     FAILED test_50.py::test_num[25] - Failed: bad luck
     ======================= 2 failed, 48 passed in 0.12s =======================
New ‘--nf’, ‘--new-first’ options: run new tests first followed by the
rest of the tests, in both cases tests are also sorted by the file
modified time, with more recent files coming first.


File: pytest.info,  Node: Behavior when no tests failed in the last run,  Next: The new config cache object,  Prev: Rerunning only failures or failures first,  Up: How to re-run failed tests and maintain state between test runs

10.3 Behavior when no tests failed in the last run
==================================================

When no tests failed in the last run, or when no cached ‘lastfailed’
data was found, ‘pytest’ can be configured either to run all of the
tests or no tests, using the ‘--last-failed-no-failures’ option, which
takes one of the following values:

     pytest --last-failed --last-failed-no-failures all    # run all tests (default behavior)
     pytest --last-failed --last-failed-no-failures none   # run no tests and exit


File: pytest.info,  Node: The new config cache object,  Next: Inspecting Cache content,  Prev: Behavior when no tests failed in the last run,  Up: How to re-run failed tests and maintain state between test runs

10.4 The new config.cache object
================================

Plugins or conftest.py support code can get a cached value using the
pytest ‘config’ object.  Here is a basic example plugin which implements
a *note fixture: d9. which re-uses previously created state across
pytest invocations:

     # content of test_caching.py
     import pytest


     def expensive_computation():
         print("running expensive computation...")


     @pytest.fixture
     def mydata(request):
         val = request.config.cache.get("example/value", None)
         if val is None:
             expensive_computation()
             val = 42
             request.config.cache.set("example/value", val)
         return val


     def test_function(mydata):
         assert mydata == 23

If you run this command for the first time, you can see the print
statement:

     $ pytest -q
     F                                                                    [100%]
     ================================= FAILURES =================================
     ______________________________ test_function _______________________________

     mydata = 42

         def test_function(mydata):
     >       assert mydata == 23
     E       assert 42 == 23

     test_caching.py:20: AssertionError
     -------------------------- Captured stdout setup ---------------------------
     running expensive computation...
     ========================= short test summary info ==========================
     FAILED test_caching.py::test_function - assert 42 == 23
     1 failed in 0.12s

If you run it a second time, the value will be retrieved from the cache
and nothing will be printed:

     $ pytest -q
     F                                                                    [100%]
     ================================= FAILURES =================================
     ______________________________ test_function _______________________________

     mydata = 42

         def test_function(mydata):
     >       assert mydata == 23
     E       assert 42 == 23

     test_caching.py:20: AssertionError
     ========================= short test summary info ==========================
     FAILED test_caching.py::test_function - assert 42 == 23
     1 failed in 0.12s

See the *note config.cache fixture: da. for more details.


File: pytest.info,  Node: Inspecting Cache content,  Next: Clearing Cache content,  Prev: The new config cache object,  Up: How to re-run failed tests and maintain state between test runs

10.5 Inspecting Cache content
=============================

You can always peek at the content of the cache using the ‘--cache-show’
command line option:

     $ pytest --cache-show
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     cachedir: /home/sweet/project/.pytest_cache
     --------------------------- cache values for '*' ---------------------------
     cache/lastfailed contains:
       {'test_caching.py::test_function': True}
     cache/nodeids contains:
       ['test_caching.py::test_function']
     cache/stepwise contains:
       []
     example/value contains:
       42

     ========================== no tests ran in 0.12s ===========================

‘--cache-show’ takes an optional argument to specify a glob pattern for
filtering:

     $ pytest --cache-show example/*
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     cachedir: /home/sweet/project/.pytest_cache
     ----------------------- cache values for 'example/*' -----------------------
     example/value contains:
       42

     ========================== no tests ran in 0.12s ===========================


File: pytest.info,  Node: Clearing Cache content,  Next: Stepwise,  Prev: Inspecting Cache content,  Up: How to re-run failed tests and maintain state between test runs

10.6 Clearing Cache content
===========================

You can instruct pytest to clear all cache files and values by adding
the ‘--cache-clear’ option like this:

     pytest --cache-clear

This is recommended for invocations from Continuous Integration servers
where isolation and correctness is more important than speed.


File: pytest.info,  Node: Stepwise,  Prev: Clearing Cache content,  Up: How to re-run failed tests and maintain state between test runs

10.7 Stepwise
=============

As an alternative to ‘--lf -x’, especially for cases where you expect a
large part of the test suite will fail, ‘--sw’, ‘--stepwise’ allows you
to fix them one at a time.  The test suite will run until the first
failure and then stop.  At the next invocation, tests will continue from
the last failing test and then run until the next failing test.  You may
use the ‘--stepwise-skip’ option to ignore one failing test and stop the
test execution on the second failing test instead.  This is useful if
you get stuck on a failing test and just want to ignore it until later.
Providing ‘--stepwise-skip’ will also enable ‘--stepwise’ implicitly.


File: pytest.info,  Node: How to manage logging,  Next: How to capture stdout/stderr output,  Prev: How to re-run failed tests and maintain state between test runs,  Up: Top

11 How to manage logging
************************

pytest captures log messages of level ‘WARNING’ or above automatically
and displays them in their own section for each failed test in the same
manner as captured stdout and stderr.

Running without options:

     pytest

Shows failed tests like so:

     ----------------------- Captured stdlog call ----------------------
     test_reporting.py    26 WARNING  text going to logger
     ----------------------- Captured stdout call ----------------------
     text going to stdout
     ----------------------- Captured stderr call ----------------------
     text going to stderr
     ==================== 2 failed in 0.02 seconds =====================

By default each captured log message shows the module, line number, log
level and message.

If desired the log and date format can be specified to anything that the
logging module supports by passing specific formatting options:

     pytest --log-format="%(asctime)s %(levelname)s %(message)s" \
             --log-date-format="%Y-%m-%d %H:%M:%S"

Shows failed tests like so:

     ----------------------- Captured stdlog call ----------------------
     2010-04-10 14:48:44 WARNING text going to logger
     ----------------------- Captured stdout call ----------------------
     text going to stdout
     ----------------------- Captured stderr call ----------------------
     text going to stderr
     ==================== 2 failed in 0.02 seconds =====================

These options can also be customized through ‘pytest.ini’ file:

     [pytest]
     log_format = %(asctime)s %(levelname)s %(message)s
     log_date_format = %Y-%m-%d %H:%M:%S

Further it is possible to disable reporting of captured content (stdout,
stderr and logs) on failed tests completely with:

     pytest --show-capture=no

* Menu:

* caplog fixture::
* Live Logs::
* Customizing Colors::
* Release notes::
* Incompatible changes in pytest 3.4: Incompatible changes in pytest 3 4.


File: pytest.info,  Node: caplog fixture,  Next: Live Logs,  Up: How to manage logging

11.1 caplog fixture
===================

Inside tests it is possible to change the log level for the captured log
messages.  This is supported by the ‘caplog’ fixture:

     def test_foo(caplog):
         caplog.set_level(logging.INFO)

By default the level is set on the root logger, however as a convenience
it is also possible to set the log level of any logger:

     def test_foo(caplog):
         caplog.set_level(logging.CRITICAL, logger="root.baz")

The log levels set are restored automatically at the end of the test.

It is also possible to use a context manager to temporarily change the
log level inside a ‘with’ block:

     def test_bar(caplog):
         with caplog.at_level(logging.INFO):
             pass

Again, by default the level of the root logger is affected but the level
of any logger can be changed instead with:

     def test_bar(caplog):
         with caplog.at_level(logging.CRITICAL, logger="root.baz"):
             pass

Lastly all the logs sent to the logger during the test run are made
available on the fixture in the form of both the ‘logging.LogRecord’
instances and the final log text.  This is useful for when you want to
assert on the contents of a message:

     def test_baz(caplog):
         func_under_test()
         for record in caplog.records:
             assert record.levelname != "CRITICAL"
         assert "wally" not in caplog.text

For all the available attributes of the log records see the
‘logging.LogRecord’ class.

You can also resort to ‘record_tuples’ if all you want to do is to
ensure, that certain messages have been logged under a given logger name
with a given severity and message:

     def test_foo(caplog):
         logging.getLogger().info("boo %s", "arg")

         assert caplog.record_tuples == [("root", logging.INFO, "boo arg")]

You can call ‘caplog.clear()’ to reset the captured log records in a
test:

     def test_something_with_clearing_records(caplog):
         some_method_that_creates_log_records()
         caplog.clear()
         your_test_method()
         assert ["Foo"] == [rec.message for rec in caplog.records]

The ‘caplog.records’ attribute contains records from the current stage
only, so inside the ‘setup’ phase it contains only setup logs, same with
the ‘call’ and ‘teardown’ phases.

To access logs from other stages, use the ‘caplog.get_records(when)’
method.  As an example, if you want to make sure that tests which use a
certain fixture never log any warnings, you can inspect the records for
the ‘setup’ and ‘call’ stages during teardown like so:

     @pytest.fixture
     def window(caplog):
         window = create_window()
         yield window
         for when in ("setup", "call"):
             messages = [
                 x.message for x in caplog.get_records(when) if x.levelno == logging.WARNING
             ]
             if messages:
                 pytest.fail(f"warning messages encountered during testing: {messages}")

The full API is available at *note pytest.LogCaptureFixture: e3.


File: pytest.info,  Node: Live Logs,  Next: Customizing Colors,  Prev: caplog fixture,  Up: How to manage logging

11.2 Live Logs
==============

By setting the *note log_cli: e6. configuration option to ‘true’, pytest
will output logging records as they are emitted directly into the
console.

You can specify the logging level for which log records with equal or
higher level are printed to the console by passing ‘--log-cli-level’.
This setting accepts the logging level names or numeric values as seen
in logging’s documentation(1).

Additionally, you can also specify ‘--log-cli-format’ and
‘--log-cli-date-format’ which mirror and default to ‘--log-format’ and
‘--log-date-format’ if not provided, but are applied only to the console
logging handler.

All of the CLI log options can also be set in the configuration INI
file.  The option names are:

   * ‘log_cli_level’

   * ‘log_cli_format’

   * ‘log_cli_date_format’

If you need to record the whole test suite logging calls to a file, you
can pass ‘--log-file=/path/to/log/file’.  This log file is opened in
write mode which means that it will be overwritten at each run tests
session.  Note that relative paths for the log-file location, whether
passed on the CLI or declared in a config file, are always resolved
relative to the current working directory.

You can also specify the logging level for the log file by passing
‘--log-file-level’.  This setting accepts the logging level names or
numeric values as seen in logging’s documentation(2).

Additionally, you can also specify ‘--log-file-format’ and
‘--log-file-date-format’ which are equal to ‘--log-format’ and
‘--log-date-format’ but are applied to the log file logging handler.

All of the log file options can also be set in the configuration INI
file.  The option names are:

   * ‘log_file’

   * ‘log_file_level’

   * ‘log_file_format’

   * ‘log_file_date_format’

You can call ‘set_log_path()’ to customize the log_file path
dynamically.  This functionality is considered ‘experimental’.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/logging.html#levels

   (2) https://docs.python.org/3/library/logging.html#levels


File: pytest.info,  Node: Customizing Colors,  Next: Release notes,  Prev: Live Logs,  Up: How to manage logging

11.3 Customizing Colors
=======================

Log levels are colored if colored terminal output is enabled.  Changing
from default colors or putting color on custom log levels is supported
through ‘add_color_level()’.  Example:

     @pytest.hookimpl
     def pytest_configure(config):
         logging_plugin = config.pluginmanager.get_plugin("logging-plugin")

         # Change color on existing log level
         logging_plugin.log_cli_handler.formatter.add_color_level(logging.INFO, "cyan")

         # Add color to a custom log level (a custom log level `SPAM` is already set up)
         logging_plugin.log_cli_handler.formatter.add_color_level(logging.SPAM, "blue")

     Warning: This feature and its API are considered ‘experimental’ and
     might change between releases without a deprecation notice.


File: pytest.info,  Node: Release notes,  Next: Incompatible changes in pytest 3 4,  Prev: Customizing Colors,  Up: How to manage logging

11.4 Release notes
==================

This feature was introduced as a drop-in replacement for the
pytest-catchlog(1) plugin and they conflict with each other.  The
backward compatibility API with ‘pytest-capturelog’ has been dropped
when this feature was introduced, so if for that reason you still need
‘pytest-catchlog’ you can disable the internal feature by adding to your
‘pytest.ini’:

     [pytest]
         addopts=-p no:logging

   ---------- Footnotes ----------

   (1) https://pypi.org/project/pytest-catchlog/


File: pytest.info,  Node: Incompatible changes in pytest 3 4,  Prev: Release notes,  Up: How to manage logging

11.5 Incompatible changes in pytest 3.4
=======================================

This feature was introduced in ‘3.3’ and some ‘incompatible changes’
have been made in ‘3.4’ after community feedback:

   * Log levels are no longer changed unless explicitly requested by the
     *note log_level: ed. configuration or ‘--log-level’ command-line
     options.  This allows users to configure logger objects themselves.
     Setting *note log_level: ed. will set the level that is captured
     globally so if a specific test requires a lower level than this,
     use the ‘caplog.set_level()’ functionality otherwise that test will
     be prone to failure.

   * *note Live Logs: e5. is now disabled by default and can be enabled
     setting the *note log_cli: e6. configuration option to ‘true’.
     When enabled, the verbosity is increased so logging for each test
     is visible.

   * *note Live Logs: e5. are now sent to ‘sys.stdout’ and no longer
     require the ‘-s’ command-line option to work.

If you want to partially restore the logging behavior of version ‘3.3’,
you can add this options to your ‘ini’ file:

     [pytest]
     log_cli=true
     log_level=NOTSET

More details about the discussion that lead to this changes can be read
in issue #3013(1).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3013


File: pytest.info,  Node: How to capture stdout/stderr output,  Next: How to capture warnings,  Prev: How to manage logging,  Up: Top

12 How to capture stdout/stderr output
**************************************

* Menu:

* Default stdout/stderr/stdin capturing behaviour::
* Setting capturing methods or disabling capturing::
* Using print statements for debugging::
* Accessing captured output from a test function::


File: pytest.info,  Node: Default stdout/stderr/stdin capturing behaviour,  Next: Setting capturing methods or disabling capturing,  Up: How to capture stdout/stderr output

12.1 Default stdout/stderr/stdin capturing behaviour
====================================================

During test execution any output sent to ‘stdout’ and ‘stderr’ is
captured.  If a test or a setup method fails its according captured
output will usually be shown along with the failure traceback.  (this
behavior can be configured by the ‘--show-capture’ command-line option).

In addition, ‘stdin’ is set to a “null” object which will fail on
attempts to read from it because it is rarely desired to wait for
interactive input when running automated tests.

By default capturing is done by intercepting writes to low level file
descriptors.  This allows to capture output from simple print statements
as well as output from a subprocess started by a test.


File: pytest.info,  Node: Setting capturing methods or disabling capturing,  Next: Using print statements for debugging,  Prev: Default stdout/stderr/stdin capturing behaviour,  Up: How to capture stdout/stderr output

12.2 Setting capturing methods or disabling capturing
=====================================================

There are three ways in which ‘pytest’ can perform capturing:

   * ‘fd’ (file descriptor) level capturing (default): All writes going
     to the operating system file descriptors 1 and 2 will be captured.

   * ‘sys’ level capturing: Only writes to Python files ‘sys.stdout’ and
     ‘sys.stderr’ will be captured.  No capturing of writes to
     filedescriptors is performed.

   * ‘tee-sys’ capturing: Python writes to ‘sys.stdout’ and ‘sys.stderr’
     will be captured, however the writes will also be passed-through to
     the actual ‘sys.stdout’ and ‘sys.stderr’.  This allows output to be
     ‘live printed’ and captured for plugin use, such as junitxml (new
     in pytest 5.4).
You can influence output capturing mechanisms from the command line:

     pytest -s                  # disable all capturing
     pytest --capture=sys       # replace sys.stdout/stderr with in-mem files
     pytest --capture=fd        # also point filedescriptors 1 and 2 to temp file
     pytest --capture=tee-sys   # combines 'sys' and '-s', capturing sys.stdout/stderr
                                # and passing it along to the actual sys.stdout/stderr


File: pytest.info,  Node: Using print statements for debugging,  Next: Accessing captured output from a test function,  Prev: Setting capturing methods or disabling capturing,  Up: How to capture stdout/stderr output

12.3 Using print statements for debugging
=========================================

One primary benefit of the default capturing of stdout/stderr output is
that you can use print statements for debugging:

     # content of test_module.py


     def setup_function(function):
         print("setting up", function)


     def test_func1():
         assert True


     def test_func2():
         assert False

and running this module will show you precisely the output of the
failing function and hide the other one:

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items

     test_module.py .F                                                    [100%]

     ================================= FAILURES =================================
     ________________________________ test_func2 ________________________________

         def test_func2():
     >       assert False
     E       assert False

     test_module.py:12: AssertionError
     -------------------------- Captured stdout setup ---------------------------
     setting up <function test_func2 at 0xdeadbeef0001>
     ========================= short test summary info ==========================
     FAILED test_module.py::test_func2 - assert False
     ======================= 1 failed, 1 passed in 0.12s ========================


File: pytest.info,  Node: Accessing captured output from a test function,  Prev: Using print statements for debugging,  Up: How to capture stdout/stderr output

12.4 Accessing captured output from a test function
===================================================

The ‘capsys’, ‘capsysbinary’, ‘capfd’, and ‘capfdbinary’ fixtures allow
access to stdout/stderr output created during test execution.  Here is
an example test function that performs some output related checks:

     def test_myoutput(capsys):  # or use "capfd" for fd-level
         print("hello")
         sys.stderr.write("world\n")
         captured = capsys.readouterr()
         assert captured.out == "hello\n"
         assert captured.err == "world\n"
         print("next")
         captured = capsys.readouterr()
         assert captured.out == "next\n"

The ‘readouterr()’ call snapshots the output so far - and capturing will
be continued.  After the test function finishes the original streams
will be restored.  Using ‘capsys’ this way frees your test from having
to care about setting/resetting output streams and also interacts well
with pytest’s own per-test capturing.

If you want to capture on filedescriptor level you can use the ‘capfd’
fixture which offers the exact same interface but allows to also capture
output from libraries or subprocesses that directly write to operating
system level output streams (FD1 and FD2).

The return value from ‘readouterr’ changed to a ‘namedtuple’ with two
attributes, ‘out’ and ‘err’.

If the code under test writes non-textual data, you can capture this
using the ‘capsysbinary’ fixture which instead returns ‘bytes’ from the
‘readouterr’ method.

If the code under test writes non-textual data, you can capture this
using the ‘capfdbinary’ fixture which instead returns ‘bytes’ from the
‘readouterr’ method.  The ‘capfdbinary’ fixture operates on the
filedescriptor level.

To temporarily disable capture within a test, both ‘capsys’ and ‘capfd’
have a ‘disabled()’ method that can be used as a context manager,
disabling capture inside the ‘with’ block:

     def test_disabling_capturing(capsys):
         print("this output is captured")
         with capsys.disabled():
             print("output not captured, going directly to sys.stdout")
         print("this output is also captured")


File: pytest.info,  Node: How to capture warnings,  Next: How to use skip and xfail to deal with tests that cannot succeed,  Prev: How to capture stdout/stderr output,  Up: Top

13 How to capture warnings
**************************

Starting from version ‘3.1’, pytest now automatically catches warnings
during test execution and displays them at the end of the session:

     # content of test_show_warnings.py
     import warnings


     def api_v1():
         warnings.warn(UserWarning("api v1, should use functions from v2"))
         return 1


     def test_one():
         assert api_v1() == 1

Running pytest now produces this output:

     $ pytest test_show_warnings.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_show_warnings.py .                                              [100%]

     ============================= warnings summary =============================
     test_show_warnings.py::test_one
       /home/sweet/project/test_show_warnings.py:5: UserWarning: api v1, should use functions from v2
         warnings.warn(UserWarning("api v1, should use functions from v2"))

     -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
     ======================= 1 passed, 1 warning in 0.12s =======================

* Menu:

* Controlling warnings::
* @pytest.mark.filterwarnings: @pytest mark filterwarnings.
* Disabling warnings summary::
* Disabling warning capture entirely::
* DeprecationWarning and PendingDeprecationWarning::
* Ensuring code triggers a deprecation warning::
* Asserting warnings with the warns function::
* Recording warnings::
* Additional use cases of warnings in tests::
* Custom failure messages::
* Internal pytest warnings::
* Resource Warnings::


File: pytest.info,  Node: Controlling warnings,  Next: @pytest mark filterwarnings,  Up: How to capture warnings

13.1 Controlling warnings
=========================

Similar to Python’s warning filter(1) and -W option(2) flag, pytest
provides its own ‘-W’ flag to control which warnings are ignored,
displayed, or turned into errors.  See the warning filter(3)
documentation for more advanced use-cases.

This code sample shows how to treat any ‘UserWarning’ category class of
warning as an error:

     $ pytest -q test_show_warnings.py -W error::UserWarning
     F                                                                    [100%]
     ================================= FAILURES =================================
     _________________________________ test_one _________________________________

         def test_one():
     >       assert api_v1() == 1

     test_show_warnings.py:10:
     _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

         def api_v1():
     >       warnings.warn(UserWarning("api v1, should use functions from v2"))
     E       UserWarning: api v1, should use functions from v2

     test_show_warnings.py:5: UserWarning
     ========================= short test summary info ==========================
     FAILED test_show_warnings.py::test_one - UserWarning: api v1, should use ...
     1 failed in 0.12s

The same option can be set in the ‘pytest.ini’ or ‘pyproject.toml’ file
using the ‘filterwarnings’ ini option.  For example, the configuration
below will ignore all user warnings and specific deprecation warnings
matching a regex, but will transform all other warnings into errors.

     # pytest.ini
     [pytest]
     filterwarnings =
         error
         ignore::UserWarning
         ignore:function ham\(\) is deprecated:DeprecationWarning

     # pyproject.toml
     [tool.pytest.ini_options]
     filterwarnings = [
         "error",
         "ignore::UserWarning",
         # note the use of single quote below to denote "raw" strings in TOML
         'ignore:function ham\(\) is deprecated:DeprecationWarning',
     ]

When a warning matches more than one option in the list, the action for
the last matching option is performed.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/warnings.html#warning-filter

   (2) https://docs.python.org/3/using/cmdline.html#cmdoption-W

   (3) https://docs.python.org/3/library/warnings.html#warning-filter


File: pytest.info,  Node: @pytest mark filterwarnings,  Next: Disabling warnings summary,  Prev: Controlling warnings,  Up: How to capture warnings

13.2 ‘@pytest.mark.filterwarnings’
==================================

You can use the ‘@pytest.mark.filterwarnings’ to add warning filters to
specific test items, allowing you to have finer control of which
warnings should be captured at test, class or even module level:

     import warnings


     def api_v1():
         warnings.warn(UserWarning("api v1, should use functions from v2"))
         return 1


     @pytest.mark.filterwarnings("ignore:api v1")
     def test_one():
         assert api_v1() == 1

Filters applied using a mark take precedence over filters passed on the
command line or configured by the ‘filterwarnings’ ini option.

You may apply a filter to all tests of a class by using the
‘filterwarnings’ mark as a class decorator or to all tests in a module
by setting the *note pytestmark: 73. variable:

     # turns all warnings into errors for this module
     pytestmark = pytest.mark.filterwarnings("error")

‘Credits go to Florian Schulze for the reference implementation in the’
pytest-warnings(1) ‘plugin.’

   ---------- Footnotes ----------

   (1) https://github.com/fschulze/pytest-warnings


File: pytest.info,  Node: Disabling warnings summary,  Next: Disabling warning capture entirely,  Prev: @pytest mark filterwarnings,  Up: How to capture warnings

13.3 Disabling warnings summary
===============================

Although not recommended, you can use the ‘--disable-warnings’
command-line option to suppress the warning summary entirely from the
test run output.


File: pytest.info,  Node: Disabling warning capture entirely,  Next: DeprecationWarning and PendingDeprecationWarning,  Prev: Disabling warnings summary,  Up: How to capture warnings

13.4 Disabling warning capture entirely
=======================================

This plugin is enabled by default but can be disabled entirely in your
‘pytest.ini’ file with:

          [pytest]
          addopts = -p no:warnings

Or passing ‘-p no:warnings’ in the command-line.  This might be useful
if your test suites handles warnings using an external system.


File: pytest.info,  Node: DeprecationWarning and PendingDeprecationWarning,  Next: Ensuring code triggers a deprecation warning,  Prev: Disabling warning capture entirely,  Up: How to capture warnings

13.5 DeprecationWarning and PendingDeprecationWarning
=====================================================

By default pytest will display ‘DeprecationWarning’ and
‘PendingDeprecationWarning’ warnings from user code and third-party
libraries, as recommended by PEP 565(1).  This helps users keep their
code modern and avoid breakages when deprecated warnings are effectively
removed.

However, in the specific case where users capture any type of warnings
in their test, either with *note pytest.warns(): 103, *note
pytest.deprecated_call(): 104. or using the *note recwarn: 105. fixture,
no warning will be displayed at all.

Sometimes it is useful to hide some specific deprecation warnings that
happen in code that you have no control over (such as third-party
libraries), in which case you might use the warning filters options (ini
or marks) to ignore those warnings.

For example:

     [pytest]
     filterwarnings =
         ignore:.*U.*mode is deprecated:DeprecationWarning

This will ignore all warnings of type ‘DeprecationWarning’ where the
start of the message matches the regular expression ‘".*U.*mode is
deprecated"’.

See *note @pytest.mark.filterwarnings: 80. and *note Controlling
warnings: fb. for more examples.

     Note: If warnings are configured at the interpreter level, using
     the PYTHONWARNINGS(2) environment variable or the ‘-W’ command-line
     option, pytest will not configure any filters by default.

     Also pytest doesn’t follow PEP 506(3) suggestion of resetting all
     warning filters because it might break test suites that configure
     warning filters themselves by calling warnings.simplefilter()(4)
     (see issue #2430(5) for an example of that).

   ---------- Footnotes ----------

   (1) https://peps.python.org/pep-0565/

   (2) 
https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS

   (3) https://peps.python.org/pep-0506/

   (4) 
https://docs.python.org/3/library/warnings.html#warnings.simplefilter

   (5) https://github.com/pytest-dev/pytest/issues/2430


File: pytest.info,  Node: Ensuring code triggers a deprecation warning,  Next: Asserting warnings with the warns function,  Prev: DeprecationWarning and PendingDeprecationWarning,  Up: How to capture warnings

13.6 Ensuring code triggers a deprecation warning
=================================================

You can also use *note pytest.deprecated_call(): 104. for checking that
a certain function call triggers a ‘DeprecationWarning’ or
‘PendingDeprecationWarning’:

     import pytest


     def test_myfunction_deprecated():
         with pytest.deprecated_call():
             myfunction(17)

This test will fail if ‘myfunction’ does not issue a deprecation warning
when called with a ‘17’ argument.


File: pytest.info,  Node: Asserting warnings with the warns function,  Next: Recording warnings,  Prev: Ensuring code triggers a deprecation warning,  Up: How to capture warnings

13.7 Asserting warnings with the warns function
===============================================

You can check that code raises a particular warning using *note
pytest.warns(): 103, which works in a similar manner to *note raises: c.
(except that *note raises: c. does not capture all exceptions, only the
‘expected_exception’):

     import warnings

     import pytest


     def test_warning():
         with pytest.warns(UserWarning):
             warnings.warn("my warning", UserWarning)

The test will fail if the warning in question is not raised.  Use the
keyword argument ‘match’ to assert that the warning matches a text or
regex:

     >>> with warns(UserWarning, match='must be 0 or None'):
     ...     warnings.warn("value must be 0 or None", UserWarning)

     >>> with warns(UserWarning, match=r'must be \d+$'):
     ...     warnings.warn("value must be 42", UserWarning)

     >>> with warns(UserWarning, match=r'must be \d+$'):
     ...     warnings.warn("this is not here", UserWarning)
     Traceback (most recent call last):
       ...
     Failed: DID NOT WARN. No warnings of type ...UserWarning... were emitted...

You can also call *note pytest.warns(): 103. on a function or code
string:

     pytest.warns(expected_warning, func, *args, **kwargs)
     pytest.warns(expected_warning, "func(*args, **kwargs)")

The function also returns a list of all raised warnings (as
‘warnings.WarningMessage’ objects), which you can query for additional
information:

     with pytest.warns(RuntimeWarning) as record:
         warnings.warn("another warning", RuntimeWarning)

     # check that only one warning was raised
     assert len(record) == 1
     # check that the message matches
     assert record[0].message.args[0] == "another warning"

Alternatively, you can examine raised warnings in detail using the *note
recwarn: 105. fixture (see below).

The *note recwarn: 105. fixture automatically ensures to reset the
warnings filter at the end of the test, so no global state is leaked.


File: pytest.info,  Node: Recording warnings,  Next: Additional use cases of warnings in tests,  Prev: Asserting warnings with the warns function,  Up: How to capture warnings

13.8 Recording warnings
=======================

You can record raised warnings either using *note pytest.warns(): 103.
or with the ‘recwarn’ fixture.

To record with *note pytest.warns(): 103. without asserting anything
about the warnings, pass no arguments as the expected warning type and
it will default to a generic Warning:

     with pytest.warns() as record:
         warnings.warn("user", UserWarning)
         warnings.warn("runtime", RuntimeWarning)

     assert len(record) == 2
     assert str(record[0].message) == "user"
     assert str(record[1].message) == "runtime"

The ‘recwarn’ fixture will record warnings for the whole function:

     import warnings


     def test_hello(recwarn):
         warnings.warn("hello", UserWarning)
         assert len(recwarn) == 1
         w = recwarn.pop(UserWarning)
         assert issubclass(w.category, UserWarning)
         assert str(w.message) == "hello"
         assert w.filename
         assert w.lineno

Both ‘recwarn’ and *note pytest.warns(): 103. return the same interface
for recorded warnings: a WarningsRecorder instance.  To view the
recorded warnings, you can iterate over this instance, call ‘len’ on it
to get the number of recorded warnings, or index into it to get a
particular recorded warning.

Full API: *note WarningsRecorder: 10f.


File: pytest.info,  Node: Additional use cases of warnings in tests,  Next: Custom failure messages,  Prev: Recording warnings,  Up: How to capture warnings

13.9 Additional use cases of warnings in tests
==============================================

Here are some use cases involving warnings that often come up in tests,
and suggestions on how to deal with them:

   - To ensure that ‘at least one’ of the indicated warnings is issued,
     use:

     def test_warning():
         with pytest.warns((RuntimeWarning, UserWarning)):
             ...

   - To ensure that ‘only’ certain warnings are issued, use:

     def test_warning(recwarn):
         ...
         assert len(recwarn) == 1
         user_warning = recwarn.pop(UserWarning)
         assert issubclass(user_warning.category, UserWarning)

   - To ensure that ‘no’ warnings are emitted, use:

     def test_warning():
         with warnings.catch_warnings():
             warnings.simplefilter("error")
             ...

   - To suppress warnings, use:

     with warnings.catch_warnings():
         warnings.simplefilter("ignore")
         ...


File: pytest.info,  Node: Custom failure messages,  Next: Internal pytest warnings,  Prev: Additional use cases of warnings in tests,  Up: How to capture warnings

13.10 Custom failure messages
=============================

Recording warnings provides an opportunity to produce custom test
failure messages for when no warnings are issued or other conditions are
met.

     def test():
         with pytest.warns(Warning) as record:
             f()
             if not record:
                 pytest.fail("Expected a warning!")

If no warnings are issued when calling ‘f’, then ‘not record’ will
evaluate to ‘True’.  You can then call *note pytest.fail(): 114. with a
custom error message.


File: pytest.info,  Node: Internal pytest warnings,  Next: Resource Warnings,  Prev: Custom failure messages,  Up: How to capture warnings

13.11 Internal pytest warnings
==============================

pytest may generate its own warnings in some situations, such as
improper usage or deprecated features.

For example, pytest will emit a warning if it encounters a class that
matches *note python_classes: 117. but also defines an ‘__init__’
constructor, as this prevents the class from being instantiated:

     # content of test_pytest_warnings.py
     class Test:
         def __init__(self):
             pass

         def test_foo(self):
             assert 1 == 1

     $ pytest test_pytest_warnings.py -q

     ============================= warnings summary =============================
     test_pytest_warnings.py:1
       /home/sweet/project/test_pytest_warnings.py:1: PytestCollectionWarning: cannot collect test class 'Test' because it has a __init__ constructor (from: test_pytest_warnings.py)
         class Test:

     -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
     1 warning in 0.12s

These warnings might be filtered using the same builtin mechanisms used
to filter other types of warnings.

Please read our *note Backwards Compatibility Policy: 118. to learn how
we proceed about deprecating and eventually removing features.

The full list of warnings is listed in *note the reference
documentation: 119.


File: pytest.info,  Node: Resource Warnings,  Prev: Internal pytest warnings,  Up: How to capture warnings

13.12 Resource Warnings
=======================

Additional information of the source of a ResourceWarning(1) can be
obtained when captured by pytest if tracemalloc(2) module is enabled.

One convenient way to enable tracemalloc(3) when running tests is to set
the PYTHONTRACEMALLOC(4) to a large enough number of frames (say ‘20’,
but that number is application dependent).

For more information, consult the Python Development Mode(5) section in
the Python documentation.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#ResourceWarning

   (2) 
https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc

   (3) 
https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc

   (4) 
https://docs.python.org/3/using/cmdline.html#envvar-PYTHONTRACEMALLOC

   (5) https://docs.python.org/3/library/devmode.html


File: pytest.info,  Node: How to use skip and xfail to deal with tests that cannot succeed,  Next: How to install and use plugins,  Prev: How to capture warnings,  Up: Top

14 How to use skip and xfail to deal with tests that cannot succeed
*******************************************************************

You can mark test functions that cannot be run on certain platforms or
that you expect to fail so pytest can deal with them accordingly and
present a summary of the test session, while keeping the test suite
‘green’.

A ‘skip’ means that you expect your test to pass only if some conditions
are met, otherwise pytest should skip running the test altogether.
Common examples are skipping windows-only tests on non-windows
platforms, or skipping tests that depend on an external resource which
is not available at the moment (for example a database).

An ‘xfail’ means that you expect a test to fail for some reason.  A
common example is a test for a feature not yet implemented, or a bug not
yet fixed.  When a test passes despite being expected to fail (marked
with ‘pytest.mark.xfail’), it’s an ‘xpass’ and will be reported in the
test summary.

‘pytest’ counts and lists ‘skip’ and ‘xfail’ tests separately.  Detailed
information about skipped/xfailed tests is not shown by default to avoid
cluttering the output.  You can use the ‘-r’ option to see details
corresponding to the “short” letters shown in the test progress:

     pytest -rxXs  # show extra info on xfailed, xpassed, and skipped tests

More details on the ‘-r’ option can be found by running ‘pytest -h’.

(See *note Builtin configuration file options: 120.)
* Menu:

* Skipping test functions::
* XFail; mark test functions as expected to fail: XFail mark test functions as expected to fail.
* Skip/xfail with parametrize::


File: pytest.info,  Node: Skipping test functions,  Next: XFail mark test functions as expected to fail,  Up: How to use skip and xfail to deal with tests that cannot succeed

14.1 Skipping test functions
============================

The simplest way to skip a test function is to mark it with the ‘skip’
decorator which may be passed an optional ‘reason’:

     @pytest.mark.skip(reason="no way of currently testing this")
     def test_the_unknown():
         ...

Alternatively, it is also possible to skip imperatively during test
execution or setup by calling the ‘pytest.skip(reason)’ function:

     def test_function():
         if not valid_config():
             pytest.skip("unsupported configuration")

The imperative method is useful when it is not possible to evaluate the
skip condition during import time.

It is also possible to skip the whole module using ‘pytest.skip(reason,
allow_module_level=True)’ at the module level:

     import sys

     import pytest

     if not sys.platform.startswith("win"):
         pytest.skip("skipping windows-only tests", allow_module_level=True)

‘Reference’: *note pytest.mark.skip: 123.

* Menu:

* skipif::
* Skip all test functions of a class or module::
* Skipping files or directories::
* Skipping on a missing import dependency::
* Summary::


File: pytest.info,  Node: skipif,  Next: Skip all test functions of a class or module,  Up: Skipping test functions

14.1.1 ‘skipif’
---------------

If you wish to skip something conditionally then you can use ‘skipif’
instead.  Here is an example of marking a test function to be skipped
when run on an interpreter earlier than Python3.10:

     import sys


     @pytest.mark.skipif(sys.version_info < (3, 10), reason="requires python3.10 or higher")
     def test_function():
         ...

If the condition evaluates to ‘True’ during collection, the test
function will be skipped, with the specified reason appearing in the
summary when using ‘-rs’.

You can share ‘skipif’ markers between modules.  Consider this test
module:

     # content of test_mymodule.py
     import mymodule

     minversion = pytest.mark.skipif(
         mymodule.__versioninfo__ < (1, 1), reason="at least mymodule-1.1 required"
     )


     @minversion
     def test_function():
         ...

You can import the marker and reuse it in another test module:

     # test_myothermodule.py
     from test_mymodule import minversion


     @minversion
     def test_anotherfunction():
         ...

For larger test suites it’s usually a good idea to have one file where
you define the markers which you then consistently apply throughout your
test suite.

Alternatively, you can use *note condition strings: 125. instead of
booleans, but they can’t be shared between modules easily so they are
supported mainly for backward compatibility reasons.

‘Reference’: *note pytest.mark.skipif: 126.


File: pytest.info,  Node: Skip all test functions of a class or module,  Next: Skipping files or directories,  Prev: skipif,  Up: Skipping test functions

14.1.2 Skip all test functions of a class or module
---------------------------------------------------

You can use the ‘skipif’ marker (as any other marker) on classes:

     @pytest.mark.skipif(sys.platform == "win32", reason="does not run on windows")
     class TestPosixCalls:
         def test_function(self):
             "will not be setup or run under 'win32' platform"

If the condition is ‘True’, this marker will produce a skip result for
each of the test methods of that class.

If you want to skip all test functions of a module, you may use the
*note pytestmark: 73. global:

     # test_module.py
     pytestmark = pytest.mark.skipif(...)

If multiple ‘skipif’ decorators are applied to a test function, it will
be skipped if any of the skip conditions is true.


File: pytest.info,  Node: Skipping files or directories,  Next: Skipping on a missing import dependency,  Prev: Skip all test functions of a class or module,  Up: Skipping test functions

14.1.3 Skipping files or directories
------------------------------------

Sometimes you may need to skip an entire file or directory, for example
if the tests rely on Python version-specific features or contain code
that you do not wish pytest to run.  In this case, you must exclude the
files and directories from collection.  Refer to *note Customizing test
collection: 12a. for more information.


File: pytest.info,  Node: Skipping on a missing import dependency,  Next: Summary,  Prev: Skipping files or directories,  Up: Skipping test functions

14.1.4 Skipping on a missing import dependency
----------------------------------------------

You can skip tests on a missing import by using *note
pytest.importorskip: 12c. at module level, within a test, or test setup
function.

     docutils = pytest.importorskip("docutils")

If ‘docutils’ cannot be imported here, this will lead to a skip outcome
of the test.  You can also skip based on the version number of a
library:

     docutils = pytest.importorskip("docutils", minversion="0.3")

The version will be read from the specified module’s ‘__version__’
attribute.


File: pytest.info,  Node: Summary,  Prev: Skipping on a missing import dependency,  Up: Skipping test functions

14.1.5 Summary
--------------

Here’s a quick guide on how to skip tests in a module in different
situations:

  1. Skip all tests in a module unconditionally:

          pytestmark = pytest.mark.skip("all tests still WIP")

  2. Skip all tests in a module based on some condition:

          pytestmark = pytest.mark.skipif(sys.platform == "win32", reason="tests for linux only")

  3. Skip all tests in a module if some import is missing:

          pexpect = pytest.importorskip("pexpect")


File: pytest.info,  Node: XFail mark test functions as expected to fail,  Next: Skip/xfail with parametrize,  Prev: Skipping test functions,  Up: How to use skip and xfail to deal with tests that cannot succeed

14.2 XFail: mark test functions as expected to fail
===================================================

You can use the ‘xfail’ marker to indicate that you expect a test to
fail:

     @pytest.mark.xfail
     def test_function():
         ...

This test will run but no traceback will be reported when it fails.
Instead, terminal reporting will list it in the “expected to fail”
(‘XFAIL’) or “unexpectedly passing” (‘XPASS’) sections.

Alternatively, you can also mark a test as ‘XFAIL’ from within the test
or its setup function imperatively:

     def test_function():
         if not valid_config():
             pytest.xfail("failing configuration (but should work)")

     def test_function2():
         import slow_module

         if slow_module.slow_function():
             pytest.xfail("slow_module taking too long")

These two examples illustrate situations where you don’t want to check
for a condition at the module level, which is when a condition would
otherwise be evaluated for marks.

This will make ‘test_function’ ‘XFAIL’.  Note that no other code is
executed after the *note pytest.xfail(): cd. call, differently from the
marker.  That’s because it is implemented internally by raising a known
exception.

‘Reference’: *note pytest.mark.xfail: 12f.

* Menu:

* condition parameter::
* reason parameter::
* raises parameter::
* run parameter::
* strict parameter::
* Ignoring xfail::
* Examples::


File: pytest.info,  Node: condition parameter,  Next: reason parameter,  Up: XFail mark test functions as expected to fail

14.2.1 ‘condition’ parameter
----------------------------

If a test is only expected to fail under a certain condition, you can
pass that condition as the first parameter:

     @pytest.mark.xfail(sys.platform == "win32", reason="bug in a 3rd party library")
     def test_function():
         ...

Note that you have to pass a reason as well (see the parameter
description at *note pytest.mark.xfail: 12f.).


File: pytest.info,  Node: reason parameter,  Next: raises parameter,  Prev: condition parameter,  Up: XFail mark test functions as expected to fail

14.2.2 ‘reason’ parameter
-------------------------

You can specify the motive of an expected failure with the ‘reason’
parameter:

     @pytest.mark.xfail(reason="known parser issue")
     def test_function():
         ...


File: pytest.info,  Node: raises parameter,  Next: run parameter,  Prev: reason parameter,  Up: XFail mark test functions as expected to fail

14.2.3 ‘raises’ parameter
-------------------------

If you want to be more specific as to why the test is failing, you can
specify a single exception, or a tuple of exceptions, in the ‘raises’
argument.

     @pytest.mark.xfail(raises=RuntimeError)
     def test_function():
         ...

Then the test will be reported as a regular failure if it fails with an
exception not mentioned in ‘raises’.


File: pytest.info,  Node: run parameter,  Next: strict parameter,  Prev: raises parameter,  Up: XFail mark test functions as expected to fail

14.2.4 ‘run’ parameter
----------------------

If a test should be marked as xfail and reported as such but should not
be even executed, use the ‘run’ parameter as ‘False’:

     @pytest.mark.xfail(run=False)
     def test_function():
         ...

This is specially useful for xfailing tests that are crashing the
interpreter and should be investigated later.


File: pytest.info,  Node: strict parameter,  Next: Ignoring xfail,  Prev: run parameter,  Up: XFail mark test functions as expected to fail

14.2.5 ‘strict’ parameter
-------------------------

Both ‘XFAIL’ and ‘XPASS’ don’t fail the test suite by default.  You can
change this by setting the ‘strict’ keyword-only parameter to ‘True’:

     @pytest.mark.xfail(strict=True)
     def test_function():
         ...

This will make ‘XPASS’ (“unexpectedly passing”) results from this test
to fail the test suite.

You can change the default value of the ‘strict’ parameter using the
‘xfail_strict’ ini option:

     [pytest]
     xfail_strict=true


File: pytest.info,  Node: Ignoring xfail,  Next: Examples,  Prev: strict parameter,  Up: XFail mark test functions as expected to fail

14.2.6 Ignoring xfail
---------------------

By specifying on the commandline:

     pytest --runxfail

you can force the running and reporting of an ‘xfail’ marked test as if
it weren’t marked at all.  This also causes *note pytest.xfail(): cd. to
produce no effect.


File: pytest.info,  Node: Examples,  Prev: Ignoring xfail,  Up: XFail mark test functions as expected to fail

14.2.7 Examples
---------------

Here is a simple test file with the several usages:

     import pytest

     xfail = pytest.mark.xfail


     @xfail
     def test_hello():
         assert 0


     @xfail(run=False)
     def test_hello2():
         assert 0


     @xfail("hasattr(os, 'sep')")
     def test_hello3():
         assert 0


     @xfail(reason="bug 110")
     def test_hello4():
         assert 0


     @xfail('pytest.__version__[0] != "17"')
     def test_hello5():
         assert 0


     def test_hello6():
         pytest.xfail("reason")


     @xfail(raises=IndexError)
     def test_hello7():
         x = []
         x[1] = 1

Running it with the report-on-xfail option gives this output:

     ! pytest -rx xfail_demo.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-6.x.y, py-1.x.y, pluggy-1.x.y
     cachedir: $PYTHON_PREFIX/.pytest_cache
     rootdir: $REGENDOC_TMPDIR/example
     collected 7 items

     xfail_demo.py xxxxxxx                                                [100%]

     ========================= short test summary info ==========================
     XFAIL xfail_demo.py::test_hello
     XFAIL xfail_demo.py::test_hello2
       reason: [NOTRUN]
     XFAIL xfail_demo.py::test_hello3
       condition: hasattr(os, 'sep')
     XFAIL xfail_demo.py::test_hello4
       bug 110
     XFAIL xfail_demo.py::test_hello5
       condition: pytest.__version__[0] != "17"
     XFAIL xfail_demo.py::test_hello6
       reason: reason
     XFAIL xfail_demo.py::test_hello7
     ============================ 7 xfailed in 0.12s ============================


File: pytest.info,  Node: Skip/xfail with parametrize,  Prev: XFail mark test functions as expected to fail,  Up: How to use skip and xfail to deal with tests that cannot succeed

14.3 Skip/xfail with parametrize
================================

It is possible to apply markers like skip and xfail to individual test
instances when using parametrize:

     import sys

     import pytest


     @pytest.mark.parametrize(
         ("n", "expected"),
         [
             (1, 2),
             pytest.param(1, 0, marks=pytest.mark.xfail),
             pytest.param(1, 3, marks=pytest.mark.xfail(reason="some bug")),
             (2, 3),
             (3, 4),
             (4, 5),
             pytest.param(
                 10, 11, marks=pytest.mark.skipif(sys.version_info >= (3, 0), reason="py2k")
             ),
         ],
     )
     def test_increment(n, expected):
         assert n + 1 == expected


File: pytest.info,  Node: How to install and use plugins,  Next: Writing plugins,  Prev: How to use skip and xfail to deal with tests that cannot succeed,  Up: Top

15 How to install and use plugins
*********************************

This section talks about installing and using third party plugins.  For
writing your own plugins, please refer to *note Writing plugins: 13f.

Installing a third party plugin can be easily done with ‘pip’:

     pip install pytest-NAME
     pip uninstall pytest-NAME

If a plugin is installed, ‘pytest’ automatically finds and integrates
it, there is no need to activate it.

Here is a little annotated list for some popular plugins:

   * pytest-django(1): write tests for django(2) apps, using pytest
     integration.

   * pytest-twisted(3): write tests for twisted(4) apps, starting a
     reactor and processing deferreds from test functions.

   * pytest-cov(5): coverage reporting, compatible with distributed
     testing

   * pytest-xdist(6): to distribute tests to CPUs and remote hosts, to
     run in boxed mode which allows to survive segmentation faults, to
     run in looponfailing mode, automatically re-running failing tests
     on file changes.

   * pytest-instafail(7): to report failures while the test run is
     happening.

   * pytest-bdd(8): to write tests using behaviour-driven testing.

   * pytest-timeout(9): to timeout tests based on function marks or
     global definitions.

   * pytest-pep8(10): a ‘--pep8’ option to enable PEP8 compliance
     checking.

   * pytest-flakes(11): check source code with pyflakes.

   * allure-pytest(12): report test results via allure-framework(13).

To see a complete list of all plugins with their latest testing status
against different pytest and Python versions, please visit *note Plugin
List: 140.

You may also discover more plugins through a pytest- pypi.org
search(14).

* Menu:

* Requiring/Loading plugins in a test module or conftest file::
* Finding out which plugins are active::
* Deactivating / unregistering a plugin by name::

   ---------- Footnotes ----------

   (1) https://pypi.org/project/pytest-django/

   (2) https://docs.djangoproject.com/

   (3) https://pypi.org/project/pytest-twisted/

   (4) https://twistedmatrix.com/

   (5) https://pypi.org/project/pytest-cov/

   (6) https://pypi.org/project/pytest-xdist/

   (7) https://pypi.org/project/pytest-instafail/

   (8) https://pypi.org/project/pytest-bdd/

   (9) https://pypi.org/project/pytest-timeout/

   (10) https://pypi.org/project/pytest-pep8/

   (11) https://pypi.org/project/pytest-flakes/

   (12) https://pypi.org/project/allure-pytest/

   (13) https://github.com/allure-framework/

   (14) https://pypi.org/search/?q=pytest-


File: pytest.info,  Node: Requiring/Loading plugins in a test module or conftest file,  Next: Finding out which plugins are active,  Up: How to install and use plugins

15.1 Requiring/Loading plugins in a test module or conftest file
================================================================

You can require plugins in a test module or a conftest file using *note
pytest_plugins: 7c.:

     pytest_plugins = ("myapp.testsupport.myplugin",)

When the test module or conftest plugin is loaded the specified plugins
will be loaded as well.

     Note: Requiring plugins using a ‘pytest_plugins’ variable in
     non-root ‘conftest.py’ files is deprecated.  See *note full
     explanation: 143. in the Writing plugins section.

     Note: The name ‘pytest_plugins’ is reserved and should not be used
     as a name for a custom plugin module.


File: pytest.info,  Node: Finding out which plugins are active,  Next: Deactivating / unregistering a plugin by name,  Prev: Requiring/Loading plugins in a test module or conftest file,  Up: How to install and use plugins

15.2 Finding out which plugins are active
=========================================

If you want to find out which plugins are active in your environment you
can type:

     pytest --trace-config

and will get an extended test header which shows activated plugins and
their names.  It will also print local plugins aka *note conftest.py:
146. files when they are loaded.


File: pytest.info,  Node: Deactivating / unregistering a plugin by name,  Prev: Finding out which plugins are active,  Up: How to install and use plugins

15.3 Deactivating / unregistering a plugin by name
==================================================

You can prevent plugins from loading or unregister them:

     pytest -p no:NAME

This means that any subsequent try to activate/load the named plugin
will not work.

If you want to unconditionally disable a plugin for a project, you can
add this option to your ‘pytest.ini’ file:

     [pytest]
     addopts = -p no:NAME

Alternatively to disable it only in certain environments (for example in
a CI server), you can set ‘PYTEST_ADDOPTS’ environment variable to ‘-p
no:name’.

See *note Finding out which plugins are active: 145. for how to obtain
the name of a plugin.


File: pytest.info,  Node: Writing plugins,  Next: Writing hook functions,  Prev: How to install and use plugins,  Up: Top

16 Writing plugins
******************

It is easy to implement *note local conftest plugins: 14b. for your own
project or *note pip-installable plugins: 14c. that can be used
throughout many projects, including third party projects.  Please refer
to *note How to install and use plugins: 13e. if you only want to use
but not write plugins.

A plugin contains one or multiple hook functions.  *note Writing hooks:
14d. explains the basics and details of how you can write a hook
function yourself.  ‘pytest’ implements all aspects of configuration,
collection, running and reporting by calling *note well specified hooks:
14e. of the following plugins:

   * builtin plugins: loaded from pytest’s internal ‘_pytest’ directory.

   * *note external plugins: 13b.: modules discovered through *note
     setuptools entry points: 7b.

   * *note conftest.py plugins: 146.: modules auto-discovered in test
     directories

In principle, each hook call is a ‘1:N’ Python function call where ‘N’
is the number of registered implementation functions for a given
specification.  All specifications and implementations follow the
‘pytest_’ prefix naming convention, making them easy to distinguish and
find.

* Menu:

* Plugin discovery order at tool startup::
* conftest.py; local per-directory plugins: conftest py local per-directory plugins.
* Writing your own plugin::
* Making your plugin installable by others::
* Assertion Rewriting::
* Requiring/Loading plugins in a test module or conftest file: Requiring/Loading plugins in a test module or conftest file<2>.
* Accessing another plugin by name::
* Registering custom markers::
* Testing plugins::


File: pytest.info,  Node: Plugin discovery order at tool startup,  Next: conftest py local per-directory plugins,  Up: Writing plugins

16.1 Plugin discovery order at tool startup
===========================================

‘pytest’ loads plugin modules at tool startup in the following way:

  1. by scanning the command line for the ‘-p no:name’ option and
     ‘blocking’ that plugin from being loaded (even builtin plugins can
     be blocked this way).  This happens before normal command-line
     parsing.

  2. by loading all builtin plugins.

  3. by scanning the command line for the ‘-p name’ option and loading
     the specified plugin.  This happens before normal command-line
     parsing.

  4. by loading all plugins registered through *note setuptools entry
     points: 7b.

  5. by loading all plugins specified through the *note PYTEST_PLUGINS:
     151. environment variable.

  6. by loading all ‘conftest.py’ files as inferred by the command line
     invocation:

        - if no test paths are specified, use the current dir as a test
          path

        - if exists, load ‘conftest.py’ and ‘test*/conftest.py’ relative
          to the directory part of the first test path.  After the
          ‘conftest.py’ file is loaded, load all plugins specified in
          its *note pytest_plugins: 7c. variable if present.

     Note that pytest does not find ‘conftest.py’ files in deeper nested
     sub directories at tool startup.  It is usually a good idea to keep
     your ‘conftest.py’ file in the top level test or project root
     directory.

  7. by recursively loading all plugins specified by the *note
     pytest_plugins: 7c. variable in ‘conftest.py’ files.


File: pytest.info,  Node: conftest py local per-directory plugins,  Next: Writing your own plugin,  Prev: Plugin discovery order at tool startup,  Up: Writing plugins

16.2 conftest.py: local per-directory plugins
=============================================

Local ‘conftest.py’ plugins contain directory-specific hook
implementations.  Hook Session and test running activities will invoke
all hooks defined in ‘conftest.py’ files closer to the root of the
filesystem.  Example of implementing the ‘pytest_runtest_setup’ hook so
that is called for tests in the ‘a’ sub directory but not for other
directories:

     a/conftest.py:
         def pytest_runtest_setup(item):
             # called for running each test in 'a' directory
             print("setting up", item)

     a/test_sub.py:
         def test_sub():
             pass

     test_flat.py:
         def test_flat():
             pass

Here is how you might run it:

     pytest test_flat.py --capture=no  # will not show "setting up"
     pytest a/test_sub.py --capture=no  # will show "setting up"

     Note: If you have ‘conftest.py’ files which do not reside in a
     python package directory (i.e.  one containing an ‘__init__.py’)
     then “import conftest” can be ambiguous because there might be
     other ‘conftest.py’ files as well on your ‘PYTHONPATH’ or
     ‘sys.path’.  It is thus good practice for projects to either put
     ‘conftest.py’ under a package scope or to never import anything
     from a ‘conftest.py’ file.

     See also: *note pytest import mechanisms and sys.path/PYTHONPATH:
     154.

     Note: Some hooks should be implemented only in plugins or
     conftest.py files situated at the tests root directory due to how
     pytest discovers plugins during startup, see the documentation of
     each hook for details.


File: pytest.info,  Node: Writing your own plugin,  Next: Making your plugin installable by others,  Prev: conftest py local per-directory plugins,  Up: Writing plugins

16.3 Writing your own plugin
============================

If you want to write a plugin, there are many real-life examples you can
copy from:

   * a custom collection example plugin: *note A basic example for
     specifying tests in Yaml files: 156.

   * builtin plugins which provide pytest’s own functionality

   * many *note external plugins: 140. providing additional features

All of these plugins implement *note hooks: 14e. and/or *note fixtures:
d9. to extend and add functionality.

     Note: Make sure to check out the excellent
     cookiecutter-pytest-plugin(1) project, which is a cookiecutter
     template(2) for authoring plugins.

     The template provides an excellent starting point with a working
     plugin, tests running with tox, a comprehensive README file as well
     as a pre-configured entry-point.

Also consider *note contributing your plugin to pytest-dev: 157. once it
has some happy users other than yourself.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/cookiecutter-pytest-plugin

   (2) https://github.com/audreyr/cookiecutter


File: pytest.info,  Node: Making your plugin installable by others,  Next: Assertion Rewriting,  Prev: Writing your own plugin,  Up: Writing plugins

16.4 Making your plugin installable by others
=============================================

If you want to make your plugin externally available, you may define a
so-called entry point for your distribution so that ‘pytest’ finds your
plugin module.  Entry points are a feature that is provided by
Documentation(1).  pytest looks up the ‘pytest11’ entrypoint to discover
its plugins and you can thus make your plugin available by defining it
in your setuptools-invocation:

     # sample ./setup.py file
     from setuptools import setup


     name_of_plugin = "myproject"  # register plugin with this name
     setup(
         name="myproject",
         packages=["myproject"],
         # the following makes a plugin available to pytest
         entry_points={"pytest11": [f"{name_of_plugin} = myproject.pluginmodule"]},
         # custom PyPI classifier for pytest plugins
         classifiers=["Framework :: Pytest"],
     )

If a package is installed this way, ‘pytest’ will load
‘myproject.pluginmodule’ as a plugin which can define *note hooks: 14e.
Confirm registration with ‘pytest --trace-config’

     Note: Make sure to include ‘Framework :: Pytest’ in your list of
     PyPI classifiers(2) to make it easy for users to find your plugin.

   ---------- Footnotes ----------

   (1) https://setuptools.pypa.io/en/stable/index.html

   (2) https://pypi.org/classifiers/


File: pytest.info,  Node: Assertion Rewriting,  Next: Requiring/Loading plugins in a test module or conftest file<2>,  Prev: Making your plugin installable by others,  Up: Writing plugins

16.5 Assertion Rewriting
========================

One of the main features of ‘pytest’ is the use of plain assert
statements and the detailed introspection of expressions upon assertion
failures.  This is provided by “assertion rewriting” which modifies the
parsed AST before it gets compiled to bytecode.  This is done via a PEP
302(1) import hook which gets installed early on when ‘pytest’ starts up
and will perform this rewriting when modules get imported.  However,
since we do not want to test different bytecode from what you will run
in production, this hook only rewrites test modules themselves (as
defined by the *note python_files: c8. configuration option), and any
modules which are part of plugins.  Any other imported module will not
be rewritten and normal assertion behaviour will happen.

If you have assertion helpers in other modules where you would need
assertion rewriting to be enabled you need to ask ‘pytest’ explicitly to
rewrite this module before it gets imported.

 -- Function: register_assert_rewrite (*names)

     Register one or more module names to be rewritten on import.

     This function will make sure that this module or all modules inside
     the package will get their assert statements rewritten.  Thus you
     should make sure to call this before the module is actually
     imported, usually in your __init__.py if you are a plugin using a
     package.


     Raises: TypeError(2) – If the given module names are not strings.

This is especially important when you write a pytest plugin which is
created using a package.  The import hook only treats ‘conftest.py’
files and any modules which are listed in the ‘pytest11’ entrypoint as
plugins.  As an example consider the following package:

     pytest_foo/__init__.py
     pytest_foo/plugin.py
     pytest_foo/helper.py

With the following typical ‘setup.py’ extract:

     setup(..., entry_points={"pytest11": ["foo = pytest_foo.plugin"]}, ...)

In this case only ‘pytest_foo/plugin.py’ will be rewritten.  If the
helper module also contains assert statements which need to be rewritten
it needs to be marked as such, before it gets imported.  This is easiest
by marking it for rewriting inside the ‘__init__.py’ module, which will
always be imported first when a module inside a package is imported.
This way ‘plugin.py’ can still import ‘helper.py’ normally.  The
contents of ‘pytest_foo/__init__.py’ will then need to look like this:

     import pytest

     pytest.register_assert_rewrite("pytest_foo.helper")

   ---------- Footnotes ----------

   (1) https://peps.python.org/pep-0302/

   (2) https://docs.python.org/3/library/exceptions.html#TypeError


File: pytest.info,  Node: Requiring/Loading plugins in a test module or conftest file<2>,  Next: Accessing another plugin by name,  Prev: Assertion Rewriting,  Up: Writing plugins

16.6 Requiring/Loading plugins in a test module or conftest file
================================================================

You can require plugins in a test module or a ‘conftest.py’ file using
*note pytest_plugins: 7c.:

     pytest_plugins = ["name1", "name2"]

When the test module or conftest plugin is loaded the specified plugins
will be loaded as well.  Any module can be blessed as a plugin,
including internal application modules:

     pytest_plugins = "myapp.testsupport.myplugin"

*note pytest_plugins: 7c. are processed recursively, so note that in the
example above if ‘myapp.testsupport.myplugin’ also declares *note
pytest_plugins: 7c, the contents of the variable will also be loaded as
plugins, and so on.
     Note: Requiring plugins using *note pytest_plugins: 7c. variable in
     non-root ‘conftest.py’ files is deprecated.

     This is important because ‘conftest.py’ files implement
     per-directory hook implementations, but once a plugin is imported,
     it will affect the entire directory tree.  In order to avoid
     confusion, defining *note pytest_plugins: 7c. in any ‘conftest.py’
     file which is not located in the tests root directory is
     deprecated, and will raise a warning.

This mechanism makes it easy to share fixtures within applications or
even external applications without the need to create external plugins
using the ‘setuptools’’s entry point technique.

Plugins imported by *note pytest_plugins: 7c. will also automatically be
marked for assertion rewriting (see *note
pytest.register_assert_rewrite(): 15b.).  However for this to have any
effect the module must not be imported already; if it was already
imported at the time the *note pytest_plugins: 7c. statement is
processed, a warning will result and assertions inside the plugin will
not be rewritten.  To fix this you can either call *note
pytest.register_assert_rewrite(): 15b. yourself before the module is
imported, or you can arrange the code to delay the importing until after
the plugin is registered.


File: pytest.info,  Node: Accessing another plugin by name,  Next: Registering custom markers,  Prev: Requiring/Loading plugins in a test module or conftest file<2>,  Up: Writing plugins

16.7 Accessing another plugin by name
=====================================

If a plugin wants to collaborate with code from another plugin it can
obtain a reference through the plugin manager like this:

     plugin = config.pluginmanager.get_plugin("name_of_plugin")

If you want to look at the names of existing plugins, use the
‘--trace-config’ option.


File: pytest.info,  Node: Registering custom markers,  Next: Testing plugins,  Prev: Accessing another plugin by name,  Up: Writing plugins

16.8 Registering custom markers
===============================

If your plugin uses any markers, you should register them so that they
appear in pytest’s help text and do not *note cause spurious warnings:
8b.  For example, the following plugin would register ‘cool_marker’ and
‘mark_with’ for all users:

     def pytest_configure(config):
         config.addinivalue_line("markers", "cool_marker: this one is for cool tests.")
         config.addinivalue_line(
             "markers", "mark_with(arg, arg2): this marker takes arguments."
         )


File: pytest.info,  Node: Testing plugins,  Prev: Registering custom markers,  Up: Writing plugins

16.9 Testing plugins
====================

pytest comes with a plugin named ‘pytester’ that helps you write tests
for your plugin code.  The plugin is disabled by default, so you will
have to enable it before you can use it.

You can do so by adding the following line to a ‘conftest.py’ file in
your testing directory:

     # content of conftest.py

     pytest_plugins = ["pytester"]

Alternatively you can invoke pytest with the ‘-p pytester’ command line
option.

This will allow you to use the *note pytester: 15f. fixture for testing
your plugin code.

Let’s demonstrate what you can do with the plugin with an example.
Imagine we developed a plugin that provides a fixture ‘hello’ which
yields a function and we can invoke this function with one optional
parameter.  It will return a string value of ‘Hello World!’ if we do not
supply a value or ‘Hello {value}!’ if we do supply a string value.

     import pytest


     def pytest_addoption(parser):
         group = parser.getgroup("helloworld")
         group.addoption(
             "--name",
             action="store",
             dest="name",
             default="World",
             help='Default "name" for hello().',
         )


     @pytest.fixture
     def hello(request):
         name = request.config.getoption("name")

         def _hello(name=None):
             if not name:
                 name = request.config.getoption("name")
             return f"Hello {name}!"

         return _hello

Now the ‘pytester’ fixture provides a convenient API for creating
temporary ‘conftest.py’ files and test files.  It also allows us to run
the tests and return a result object, with which we can assert the
tests’ outcomes.

     def test_hello(pytester):
         """Make sure that our plugin works."""

         # create a temporary conftest.py file
         pytester.makeconftest(
             """
             import pytest

             @pytest.fixture(params=[
                 "Brianna",
                 "Andreas",
                 "Floris",
             ])
             def name(request):
                 return request.param
         """
         )

         # create a temporary pytest test file
         pytester.makepyfile(
             """
             def test_hello_default(hello):
                 assert hello() == "Hello World!"

             def test_hello_name(hello, name):
                 assert hello(name) == "Hello {0}!".format(name)
         """
         )

         # run all tests with pytest
         result = pytester.runpytest()

         # check that all 4 tests passed
         result.assert_outcomes(passed=4)

Additionally it is possible to copy examples to the ‘pytester’’s
isolated environment before running pytest on it.  This way we can
abstract the tested logic to separate files, which is especially useful
for longer tests and/or longer ‘conftest.py’ files.

Note that for ‘pytester.copy_example’ to work we need to set
‘pytester_example_dir’ in our ‘pytest.ini’ to tell pytest where to look
for example files.

     # content of pytest.ini
     [pytest]
     pytester_example_dir = .

     # content of test_example.py


     def test_plugin(pytester):
         pytester.copy_example("test_example.py")
         pytester.runpytest("-k", "test_example")


     def test_example():
         pass

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project, configfile: pytest.ini
     collected 2 items

     test_example.py ..                                                   [100%]

     ============================ 2 passed in 0.12s =============================

For more information about the result object that ‘runpytest()’ returns,
and the methods that it provides please check out the *note RunResult:
160. documentation.


File: pytest.info,  Node: Writing hook functions,  Next: How to use pytest with an existing test suite,  Prev: Writing plugins,  Up: Top

17 Writing hook functions
*************************

* Menu:

* hook function validation and execution::
* firstresult; stop at first non-None result: firstresult stop at first non-None result.
* hookwrapper; executing around other hooks: hookwrapper executing around other hooks.
* Hook function ordering / call example::
* Declaring new hooks::
* Using hooks in pytest_addoption::
* Optionally using hooks from 3rd party plugins::
* Storing data on items across hook functions::


File: pytest.info,  Node: hook function validation and execution,  Next: firstresult stop at first non-None result,  Up: Writing hook functions

17.1 hook function validation and execution
===========================================

pytest calls hook functions from registered plugins for any given hook
specification.  Let’s look at a typical hook function for the
‘pytest_collection_modifyitems(session, config, items)’ hook which
pytest calls after collection of all test items is completed.

When we implement a ‘pytest_collection_modifyitems’ function in our
plugin pytest will during registration verify that you use argument
names which match the specification and bail out if not.

Let’s look at a possible implementation:

     def pytest_collection_modifyitems(config, items):
         # called after collection is completed
         # you can modify the ``items`` list
         ...

Here, ‘pytest’ will pass in ‘config’ (the pytest config object) and
‘items’ (the list of collected test items) but will not pass in the
‘session’ argument because we didn’t list it in the function signature.
This dynamic “pruning” of arguments allows ‘pytest’ to be
“future-compatible”: we can introduce new hook named parameters without
breaking the signatures of existing hook implementations.  It is one of
the reasons for the general long-lived compatibility of pytest plugins.

Note that hook functions other than ‘pytest_runtest_*’ are not allowed
to raise exceptions.  Doing so will break the pytest run.


File: pytest.info,  Node: firstresult stop at first non-None result,  Next: hookwrapper executing around other hooks,  Prev: hook function validation and execution,  Up: Writing hook functions

17.2 firstresult: stop at first non-None result
===============================================

Most calls to ‘pytest’ hooks result in a ‘list of results’ which
contains all non-None results of the called hook functions.

Some hook specifications use the ‘firstresult=True’ option so that the
hook call only executes until the first of N registered functions
returns a non-None result which is then taken as result of the overall
hook call.  The remaining hook functions will not be called in this
case.


File: pytest.info,  Node: hookwrapper executing around other hooks,  Next: Hook function ordering / call example,  Prev: firstresult stop at first non-None result,  Up: Writing hook functions

17.3 hookwrapper: executing around other hooks
==============================================

pytest plugins can implement hook wrappers which wrap the execution of
other hook implementations.  A hook wrapper is a generator function
which yields exactly once.  When pytest invokes hooks it first executes
hook wrappers and passes the same arguments as to the regular hooks.

At the yield point of the hook wrapper pytest will execute the next hook
implementations and return their result to the yield point in the form
of a ‘Result’ instance which encapsulates a result or exception info.
The yield point itself will thus typically not raise exceptions (unless
there are bugs).

Here is an example definition of a hook wrapper:

     import pytest


     @pytest.hookimpl(hookwrapper=True)
     def pytest_pyfunc_call(pyfuncitem):
         do_something_before_next_hook_executes()

         outcome = yield
         # outcome.excinfo may be None or a (cls, val, tb) tuple

         res = outcome.get_result()  # will raise if outcome was exception

         post_process_result(res)

         outcome.force_result(new_res)  # to override the return value to the plugin system

Note that hook wrappers don’t return results themselves, they merely
perform tracing or other side effects around the actual hook
implementations.  If the result of the underlying hook is a mutable
object, they may modify that result but it’s probably better to avoid
it.

For more information, consult the pluggy documentation about
hookwrappers(1).

   ---------- Footnotes ----------

   (1) https://pluggy.readthedocs.io/en/stable/index.html#hookwrappers


File: pytest.info,  Node: Hook function ordering / call example,  Next: Declaring new hooks,  Prev: hookwrapper executing around other hooks,  Up: Writing hook functions

17.4 Hook function ordering / call example
==========================================

For any given hook specification there may be more than one
implementation and we thus generally view ‘hook’ execution as a ‘1:N’
function call where ‘N’ is the number of registered functions.  There
are ways to influence if a hook implementation comes before or after
others, i.e.  the position in the ‘N’-sized list of functions:

     # Plugin 1
     @pytest.hookimpl(tryfirst=True)
     def pytest_collection_modifyitems(items):
         # will execute as early as possible
         ...


     # Plugin 2
     @pytest.hookimpl(trylast=True)
     def pytest_collection_modifyitems(items):
         # will execute as late as possible
         ...


     # Plugin 3
     @pytest.hookimpl(hookwrapper=True)
     def pytest_collection_modifyitems(items):
         # will execute even before the tryfirst one above!
         outcome = yield
         # will execute after all non-hookwrappers executed

Here is the order of execution:

  1. Plugin3’s pytest_collection_modifyitems called until the yield
     point because it is a hook wrapper.

  2. Plugin1’s pytest_collection_modifyitems is called because it is
     marked with ‘tryfirst=True’.

  3. Plugin2’s pytest_collection_modifyitems is called because it is
     marked with ‘trylast=True’ (but even without this mark it would
     come after Plugin1).

  4. Plugin3’s pytest_collection_modifyitems then executing the code
     after the yield point.  The yield receives a ‘Result’ instance
     which encapsulates the result from calling the non-wrappers.
     Wrappers shall not modify the result.

It’s possible to use ‘tryfirst’ and ‘trylast’ also in conjunction with
‘hookwrapper=True’ in which case it will influence the ordering of
hookwrappers among each other.


File: pytest.info,  Node: Declaring new hooks,  Next: Using hooks in pytest_addoption,  Prev: Hook function ordering / call example,  Up: Writing hook functions

17.5 Declaring new hooks
========================

     Note: This is a quick overview on how to add new hooks and how they
     work in general, but a more complete overview can be found in the
     pluggy documentation(1).

Plugins and ‘conftest.py’ files may declare new hooks that can then be
implemented by other plugins in order to alter behaviour or interact
with the new plugin:

 -- Function: pytest_addhooks (pluginmanager)

     Called at plugin registration time to allow adding new hooks via a
     call to ‘pluginmanager.add_hookspecs(module_or_class, prefix)’.


     Parameters: ‘pluginmanager’ (*note pytest.PytestPluginManager:
     16c.) – The pytest plugin manager.

          Note: This hook is incompatible with ‘hookwrapper=True’.

Hooks are usually declared as do-nothing functions that contain only
documentation describing when the hook will be called and what return
values are expected.  The names of the functions must start with
‘pytest_’ otherwise pytest won’t recognize them.

Here’s an example.  Let’s assume this code is in the ‘sample_hook.py’
module.

     def pytest_my_hook(config):
         """
         Receives the pytest config and does things with it
         """

To register the hooks with pytest they need to be structured in their
own module or class.  This class or module can then be passed to the
‘pluginmanager’ using the ‘pytest_addhooks’ function (which itself is a
hook exposed by pytest).

     def pytest_addhooks(pluginmanager):
         """This example assumes the hooks are grouped in the 'sample_hook' module."""
         from my_app.tests import sample_hook

         pluginmanager.add_hookspecs(sample_hook)

For a real world example, see newhooks.py(2) from xdist(3).

Hooks may be called both from fixtures or from other hooks.  In both
cases, hooks are called through the ‘hook’ object, available in the
‘config’ object.  Most hooks receive a ‘config’ object directly, while
fixtures may use the ‘pytestconfig’ fixture which provides the same
object.

     @pytest.fixture()
     def my_fixture(pytestconfig):
         # call the hook called "pytest_my_hook"
         # 'result' will be a list of return values from all registered functions.
         result = pytestconfig.hook.pytest_my_hook(config=pytestconfig)

     Note: Hooks receive parameters using only keyword arguments.

Now your hook is ready to be used.  To register a function at the hook,
other plugins or users must now simply define the function
‘pytest_my_hook’ with the correct signature in their ‘conftest.py’.

Example:

     def pytest_my_hook(config):
         """
         Print all active hooks to the screen.
         """
         print(config.hook)

   ---------- Footnotes ----------

   (1) https://pluggy.readthedocs.io/en/latest/

   (2) 
https://github.com/pytest-dev/pytest-xdist/blob/974bd566c599dc6a9ea291838c6f226197208b46/xdist/newhooks.py

   (3) https://github.com/pytest-dev/pytest-xdist


File: pytest.info,  Node: Using hooks in pytest_addoption,  Next: Optionally using hooks from 3rd party plugins,  Prev: Declaring new hooks,  Up: Writing hook functions

17.6 Using hooks in pytest_addoption
====================================

Occasionally, it is necessary to change the way in which command line
options are defined by one plugin based on hooks in another plugin.  For
example, a plugin may expose a command line option for which another
plugin needs to define the default value.  The pluginmanager can be used
to install and use hooks to accomplish this.  The plugin would define
and add the hooks and use pytest_addoption as follows:

     # contents of hooks.py

     # Use firstresult=True because we only want one plugin to define this
     # default value
     @hookspec(firstresult=True)
     def pytest_config_file_default_value():
         """Return the default value for the config file command line option."""


     # contents of myplugin.py


     def pytest_addhooks(pluginmanager):
         """This example assumes the hooks are grouped in the 'hooks' module."""
         from . import hooks

         pluginmanager.add_hookspecs(hooks)


     def pytest_addoption(parser, pluginmanager):
         default_value = pluginmanager.hook.pytest_config_file_default_value()
         parser.addoption(
             "--config-file",
             help="Config file to use, defaults to %(default)s",
             default=default_value,
         )

The conftest.py that is using myplugin would simply define the hook as
follows:

     def pytest_config_file_default_value():
         return "config.yaml"


File: pytest.info,  Node: Optionally using hooks from 3rd party plugins,  Next: Storing data on items across hook functions,  Prev: Using hooks in pytest_addoption,  Up: Writing hook functions

17.7 Optionally using hooks from 3rd party plugins
==================================================

Using new hooks from plugins as explained above might be a little tricky
because of the standard *note validation mechanism: 164.: if you depend
on a plugin that is not installed, validation will fail and the error
message will not make much sense to your users.

One approach is to defer the hook implementation to a new plugin instead
of declaring the hook functions directly in your plugin module, for
example:

     # contents of myplugin.py


     class DeferPlugin:
         """Simple plugin to defer pytest-xdist hook functions."""

         def pytest_testnodedown(self, node, error):
             """standard xdist hook function."""


     def pytest_configure(config):
         if config.pluginmanager.hasplugin("xdist"):
             config.pluginmanager.register(DeferPlugin())

This has the added benefit of allowing you to conditionally install
hooks depending on which plugins are installed.


File: pytest.info,  Node: Storing data on items across hook functions,  Prev: Optionally using hooks from 3rd party plugins,  Up: Writing hook functions

17.8 Storing data on items across hook functions
================================================

Plugins often need to store data on *note Item: 172.s in one hook
implementation, and access it in another.  One common solution is to
just assign some private attribute directly on the item, but
type-checkers like mypy frown upon this, and it may also cause conflicts
with other plugins.  So pytest offers a better way to do this, *note
item.stash: 173.

To use the “stash” in your plugins, first create “stash keys” somewhere
at the top level of your plugin:

     been_there_key = pytest.StashKey[bool]()
     done_that_key = pytest.StashKey[str]()

then use the keys to stash your data at some point:

     def pytest_runtest_setup(item: pytest.Item) -> None:
         item.stash[been_there_key] = True
         item.stash[done_that_key] = "no"

and retrieve them at another point:

     def pytest_runtest_teardown(item: pytest.Item) -> None:
         if not item.stash[been_there_key]:
             print("Oh?")
         item.stash[done_that_key] = "yes!"

Stashes are available on all node types (like *note Class: 174, *note
Session: 175.) and also on *note Config: 39, if needed.


File: pytest.info,  Node: How to use pytest with an existing test suite,  Next: How to use unittest-based tests with pytest,  Prev: Writing hook functions,  Up: Top

18 How to use pytest with an existing test suite
************************************************

Pytest can be used with most existing test suites, but its behavior
differs from other test runners such as *note nose: 178. or Python’s
default unittest framework.

Before using this section you will want to *note install pytest: 4.

* Menu:

* Running an existing test suite with pytest::


File: pytest.info,  Node: Running an existing test suite with pytest,  Up: How to use pytest with an existing test suite

18.1 Running an existing test suite with pytest
===============================================

Say you want to contribute to an existing repository somewhere.  After
pulling the code into your development space using some flavor of
version control and (optionally) setting up a virtualenv you will want
to run:

     cd <repository>
     pip install -e .  # Environment dependent alternatives include
                       # 'python setup.py develop' and 'conda develop'

in your project root.  This will set up a symlink to your code in
site-packages, allowing you to edit your code while your tests run
against it as if it were installed.

Setting up your project in development mode lets you avoid having to
reinstall every time you want to run your tests, and is less brittle
than mucking about with sys.path to point your tests at local code.

Also consider using *note tox: 17a.


File: pytest.info,  Node: How to use unittest-based tests with pytest,  Next: How to run tests written for nose,  Prev: How to use pytest with an existing test suite,  Up: Top

19 How to use ‘unittest’-based tests with pytest
************************************************

‘pytest’ supports running Python ‘unittest’-based tests out of the box.
It’s meant for leveraging existing ‘unittest’-based test suites to use
pytest as a test runner and also allow to incrementally adapt the test
suite to take full advantage of pytest’s features.

To run an existing ‘unittest’-style test suite using ‘pytest’, type:

     pytest tests

pytest will automatically collect ‘unittest.TestCase’ subclasses and
their ‘test’ methods in ‘test_*.py’ or ‘*_test.py’ files.

Almost all ‘unittest’ features are supported:

   * ‘@unittest.skip’ style decorators;

   * ‘setUp/tearDown’;

   * ‘setUpClass/tearDownClass’;

   * ‘setUpModule/tearDownModule’;

Additionally, subtests(1) are supported by the pytest-subtests(2)
plugin.

Up to this point pytest does not have support for the following
features:

   * load_tests protocol(3);

* Menu:

* Benefits out of the box::
* pytest features in unittest.TestCase subclasses: pytest features in unittest TestCase subclasses.
* Mixing pytest fixtures into unittest.TestCase subclasses using marks: Mixing pytest fixtures into unittest TestCase subclasses using marks.
* Using autouse fixtures and accessing other fixtures::

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/unittest.html#subtests

   (2) https://github.com/pytest-dev/pytest-subtests

   (3) 
https://docs.python.org/3/library/unittest.html#load-tests-protocol


File: pytest.info,  Node: Benefits out of the box,  Next: pytest features in unittest TestCase subclasses,  Up: How to use unittest-based tests with pytest

19.1 Benefits out of the box
============================

By running your test suite with pytest you can make use of several
features, in most cases without having to modify existing code:

   * Obtain *note more informative tracebacks: 2e.;

   * *note stdout and stderr: ef. capturing;

   * *note Test selection options: 1b. using ‘-k’ and ‘-m’ flags;

   * maxfail;

   * –pdb command-line option for debugging on test failures (see *note
     note: 180. below);

   * Distribute tests to multiple CPUs using the pytest-xdist(1) plugin;

   * Use *note plain assert-statements: 2a. instead of ‘self.assert*’
     functions (unittest2pytest(2) is immensely helpful in this);

   ---------- Footnotes ----------

   (1) https://pypi.org/project/pytest-xdist/

   (2) https://pypi.org/project/unittest2pytest/


File: pytest.info,  Node: pytest features in unittest TestCase subclasses,  Next: Mixing pytest fixtures into unittest TestCase subclasses using marks,  Prev: Benefits out of the box,  Up: How to use unittest-based tests with pytest

19.2 pytest features in ‘unittest.TestCase’ subclasses
======================================================

The following pytest features work in ‘unittest.TestCase’ subclasses:

   * *note Marks: 14.: *note skip: 81, *note skipif: 82, *note xfail:
     83.;

   * *note Auto-use fixtures: 182.;

The following pytest features ‘do not’ work, and probably never will due
to different design philosophies:

   * *note Fixtures: d9. (except for ‘autouse’ fixtures, see *note
     below: 182.);

   * *note Parametrization: 8f.;

   * *note Custom hooks: 13f.;

Third party plugins may or may not work well, depending on the plugin
and the test suite.


File: pytest.info,  Node: Mixing pytest fixtures into unittest TestCase subclasses using marks,  Next: Using autouse fixtures and accessing other fixtures,  Prev: pytest features in unittest TestCase subclasses,  Up: How to use unittest-based tests with pytest

19.3 Mixing pytest fixtures into ‘unittest.TestCase’ subclasses using marks
===========================================================================

Running your unittest with ‘pytest’ allows you to use its *note fixture
mechanism: d9. with ‘unittest.TestCase’ style tests.  Assuming you have
at least skimmed the pytest fixture features, let’s jump-start into an
example that integrates a pytest ‘db_class’ fixture, setting up a
class-cached database object, and then reference it from a
unittest-style test:

     # content of conftest.py

     # we define a fixture function below and it will be "used" by
     # referencing its name from tests

     import pytest


     @pytest.fixture(scope="class")
     def db_class(request):
         class DummyDB:
             pass

         # set a class attribute on the invoking test context
         request.cls.db = DummyDB()

This defines a fixture function ‘db_class’ which - if used - is called
once for each test class and which sets the class-level ‘db’ attribute
to a ‘DummyDB’ instance.  The fixture function achieves this by
receiving a special ‘request’ object which gives access to *note the
requesting test context: 5b. such as the ‘cls’ attribute, denoting the
class from which the fixture is used.  This architecture de-couples
fixture writing from actual test code and allows re-use of the fixture
by a minimal reference, the fixture name.  So let’s write an actual
‘unittest.TestCase’ class using our fixture definition:

     # content of test_unittest_db.py

     import unittest

     import pytest


     @pytest.mark.usefixtures("db_class")
     class MyTest(unittest.TestCase):
         def test_method1(self):
             assert hasattr(self, "db")
             assert 0, self.db  # fail for demo purposes

         def test_method2(self):
             assert 0, self.db  # fail for demo purposes

The ‘@pytest.mark.usefixtures("db_class")’ class-decorator makes sure
that the pytest fixture function ‘db_class’ is called once per class.
Due to the deliberately failing assert statements, we can take a look at
the ‘self.db’ values in the traceback:

     $ pytest test_unittest_db.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items

     test_unittest_db.py FF                                               [100%]

     ================================= FAILURES =================================
     ___________________________ MyTest.test_method1 ____________________________

     self = <test_unittest_db.MyTest testMethod=test_method1>

         def test_method1(self):
             assert hasattr(self, "db")
     >       assert 0, self.db  # fail for demo purposes
     E       AssertionError: <conftest.db_class.<locals>.DummyDB object at 0xdeadbeef0001>
     E       assert 0

     test_unittest_db.py:10: AssertionError
     ___________________________ MyTest.test_method2 ____________________________

     self = <test_unittest_db.MyTest testMethod=test_method2>

         def test_method2(self):
     >       assert 0, self.db  # fail for demo purposes
     E       AssertionError: <conftest.db_class.<locals>.DummyDB object at 0xdeadbeef0001>
     E       assert 0

     test_unittest_db.py:13: AssertionError
     ========================= short test summary info ==========================
     FAILED test_unittest_db.py::MyTest::test_method1 - AssertionError: <conft...
     FAILED test_unittest_db.py::MyTest::test_method2 - AssertionError: <conft...
     ============================ 2 failed in 0.12s =============================

This default pytest traceback shows that the two test methods share the
same ‘self.db’ instance which was our intention when writing the
class-scoped fixture function above.


File: pytest.info,  Node: Using autouse fixtures and accessing other fixtures,  Prev: Mixing pytest fixtures into unittest TestCase subclasses using marks,  Up: How to use unittest-based tests with pytest

19.4 Using autouse fixtures and accessing other fixtures
========================================================

Although it’s usually better to explicitly declare use of fixtures you
need for a given test, you may sometimes want to have fixtures that are
automatically used in a given context.  After all, the traditional style
of unittest-setup mandates the use of this implicit fixture writing and
chances are, you are used to it or like it.

You can flag fixture functions with ‘@pytest.fixture(autouse=True)’ and
define the fixture function in the context where you want it used.
Let’s look at an ‘initdir’ fixture which makes all test methods of a
‘TestCase’ class execute in a temporary directory with a pre-initialized
‘samplefile.ini’.  Our ‘initdir’ fixture itself uses the pytest builtin
*note tmp_path: 185. fixture to delegate the creation of a per-test
temporary directory:

     # content of test_unittest_cleandir.py
     import unittest

     import pytest


     class MyTest(unittest.TestCase):
         @pytest.fixture(autouse=True)
         def initdir(self, tmp_path, monkeypatch):
             monkeypatch.chdir(tmp_path)  # change to pytest-provided temporary directory
             tmp_path.joinpath("samplefile.ini").write_text("# testdata")

         def test_method(self):
             with open("samplefile.ini") as f:
                 s = f.read()
             assert "testdata" in s

Due to the ‘autouse’ flag the ‘initdir’ fixture function will be used
for all methods of the class where it is defined.  This is a shortcut
for using a ‘@pytest.mark.usefixtures("initdir")’ marker on the class
like in the previous example.

Running this test module …:

     $ pytest -q test_unittest_cleandir.py
     .                                                                    [100%]
     1 passed in 0.12s

… gives us one passed test because the ‘initdir’ fixture function was
executed ahead of the ‘test_method’.

     Note: ‘unittest.TestCase’ methods cannot directly receive fixture
     arguments as implementing that is likely to inflict on the ability
     to run general unittest.TestCase test suites.

     The above ‘usefixtures’ and ‘autouse’ examples should help to mix
     in pytest fixtures into unittest suites.

     You can also gradually move away from subclassing from
     ‘unittest.TestCase’ to ‘plain asserts’ and then start to benefit
     from the full pytest feature set step by step.
     Note: Due to architectural differences between the two frameworks,
     setup and teardown for ‘unittest’-based tests is performed during
     the ‘call’ phase of testing instead of in ‘pytest’’s standard
     ‘setup’ and ‘teardown’ stages.  This can be important to understand
     in some situations, particularly when reasoning about errors.  For
     example, if a ‘unittest’-based suite exhibits errors during setup,
     ‘pytest’ will report no errors during its ‘setup’ phase and will
     instead raise the error during ‘call’.


File: pytest.info,  Node: How to run tests written for nose,  Next: How to implement xunit-style set-up,  Prev: How to use unittest-based tests with pytest,  Up: Top

20 How to run tests written for nose
************************************

‘pytest’ has basic support for running tests written for nose(1).

* Menu:

* Usage: Usage<2>.
* Supported nose Idioms::
* Unsupported idioms / known issues::
* Migrating from nose to pytest::

   ---------- Footnotes ----------

   (1) https://nose.readthedocs.io/en/latest/


File: pytest.info,  Node: Usage<2>,  Next: Supported nose Idioms,  Up: How to run tests written for nose

20.1 Usage
==========

After *note Install pytest: 6. type:

     python setup.py develop  # make sure tests can import our package
     pytest  # instead of 'nosetests'

and you should be able to run your nose style tests and make use of
pytest’s capabilities.


File: pytest.info,  Node: Supported nose Idioms,  Next: Unsupported idioms / known issues,  Prev: Usage<2>,  Up: How to run tests written for nose

20.2 Supported nose Idioms
==========================

   * setup and teardown at module/class/method level

   * SkipTest exceptions and markers

   * setup/teardown decorators

   * ‘__test__’ attribute on modules/classes/functions

   * general usage of nose utilities


File: pytest.info,  Node: Unsupported idioms / known issues,  Next: Migrating from nose to pytest,  Prev: Supported nose Idioms,  Up: How to run tests written for nose

20.3 Unsupported idioms / known issues
======================================

   - unittest-style ‘setUp, tearDown, setUpClass, tearDownClass’ are
     recognized only on ‘unittest.TestCase’ classes but not on plain
     classes.  ‘nose’ supports these methods also on plain classes but
     pytest deliberately does not.  As nose and pytest already both
     support ‘setup_class, teardown_class, setup_method,
     teardown_method’ it doesn’t seem useful to duplicate the
     unittest-API like nose does.  If you however rather think pytest
     should support the unittest-spelling on plain classes please post
     to issue #377(1).

   - nose imports test modules with the same import path (e.g.
     ‘tests.test_mode’) but different file system paths (e.g.
     ‘tests/test_mode.py’ and ‘other/tests/test_mode.py’) by extending
     sys.path/import semantics.  pytest does not do that but there is
     discussion in issue #268(2) for adding some support.  Note that
     nose2 choose to avoid this sys.path/import hackery(3).

     If you place a conftest.py file in the root directory of your
     project (as determined by pytest) pytest will run tests “nose
     style” against the code below that directory by adding it to your
     ‘sys.path’ instead of running against your installed code.

     You may find yourself wanting to do this if you ran ‘python
     setup.py install’ to set up your project, as opposed to ‘python
     setup.py develop’ or any of the package manager equivalents.
     Installing with develop in a virtual environment like tox is
     recommended over this pattern.

   - nose-style doctests are not collected and executed correctly, also
     doctest fixtures don’t work.

   - no nose-configuration is recognized.

   - ‘yield’-based methods are unsupported as of pytest 4.1.0.  They are
     fundamentally incompatible with pytest because they don’t support
     fixtures properly since collection and test execution are
     separated.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/377

   (2) https://github.com/pytest-dev/pytest/issues/268

   (3) 
https://nose2.readthedocs.io/en/latest/differences.html#test-discovery-and-loading


File: pytest.info,  Node: Migrating from nose to pytest,  Prev: Unsupported idioms / known issues,  Up: How to run tests written for nose

20.4 Migrating from nose to pytest
==================================

nose2pytest(1) is a Python script and pytest plugin to help convert
Nose-based tests into pytest-based tests.  Specifically, the script
transforms nose.tools.assert_* function calls into raw assert
statements, while preserving format of original arguments as much as
possible.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/nose2pytest


File: pytest.info,  Node: How to implement xunit-style set-up,  Next: How to set up bash completion,  Prev: How to run tests written for nose,  Up: Top

21 How to implement xunit-style set-up
**************************************

This section describes a classic and popular way how you can implement
fixtures (setup and teardown test state) on a per-module/class/function
basis.

     Note: While these setup/teardown methods are simple and familiar to
     those coming from a ‘unittest’ or ‘nose’ background, you may also
     consider using pytest’s more powerful *note fixture mechanism: d9.
     which leverages the concept of dependency injection, allowing for a
     more modular and more scalable approach for managing test state,
     especially for larger projects and for functional testing.  You can
     mix both fixture mechanisms in the same file but test methods of
     ‘unittest.TestCase’ subclasses cannot receive fixture arguments.

* Menu:

* Module level setup/teardown::
* Class level setup/teardown::
* Method and function level setup/teardown::


File: pytest.info,  Node: Module level setup/teardown,  Next: Class level setup/teardown,  Up: How to implement xunit-style set-up

21.1 Module level setup/teardown
================================

If you have multiple test functions and test classes in a single module
you can optionally implement the following fixture methods which will
usually be called once for all the functions:

     def setup_module(module):
         """setup any state specific to the execution of the given module."""


     def teardown_module(module):
         """teardown any state that was previously setup with a setup_module
         method.
         """

As of pytest-3.0, the ‘module’ parameter is optional.


File: pytest.info,  Node: Class level setup/teardown,  Next: Method and function level setup/teardown,  Prev: Module level setup/teardown,  Up: How to implement xunit-style set-up

21.2 Class level setup/teardown
===============================

Similarly, the following methods are called at class level before and
after all test methods of the class are called:

     @classmethod
     def setup_class(cls):
         """setup any state specific to the execution of the given class (which
         usually contains tests).
         """


     @classmethod
     def teardown_class(cls):
         """teardown any state that was previously setup with a call to
         setup_class.
         """


File: pytest.info,  Node: Method and function level setup/teardown,  Prev: Class level setup/teardown,  Up: How to implement xunit-style set-up

21.3 Method and function level setup/teardown
=============================================

Similarly, the following methods are called around each method
invocation:

     def setup_method(self, method):
         """setup any state tied to the execution of the given method in a
         class.  setup_method is invoked for every test method of a class.
         """


     def teardown_method(self, method):
         """teardown any state that was previously setup with a setup_method
         call.
         """

As of pytest-3.0, the ‘method’ parameter is optional.

If you would rather define test functions directly at module level you
can also use the following functions to implement fixtures:

     def setup_function(function):
         """setup any state tied to the execution of the given function.
         Invoked for every test function in the module.
         """


     def teardown_function(function):
         """teardown any state that was previously setup with a setup_function
         call.
         """

As of pytest-3.0, the ‘function’ parameter is optional.

Remarks:

   * It is possible for setup/teardown pairs to be invoked multiple
     times per testing process.

   * teardown functions are not called if the corresponding setup
     function existed and failed/was skipped.

   * Prior to pytest-4.2, xunit-style functions did not obey the scope
     rules of fixtures, so it was possible, for example, for a
     ‘setup_method’ to be called before a session-scoped autouse
     fixture.

     Now the xunit-style functions are integrated with the fixture
     mechanism and obey the proper scope rules of fixtures involved in
     the call.


File: pytest.info,  Node: How to set up bash completion,  Next: Fixtures reference,  Prev: How to implement xunit-style set-up,  Up: Top

22 How to set up bash completion
********************************

When using bash as your shell, ‘pytest’ can use argcomplete
(‘https://kislyuk.github.io/argcomplete/’) for auto-completion.  For
this ‘argcomplete’ needs to be installed ‘and’ enabled.

Install argcomplete using:

     sudo pip install 'argcomplete>=0.5.7'

For global activation of all argcomplete enabled python applications
run:

     sudo activate-global-python-argcomplete

For permanent (but not global) ‘pytest’ activation, use:

     register-python-argcomplete pytest >> ~/.bashrc

For one-time activation of argcomplete for ‘pytest’ only, use:

     eval "$(register-python-argcomplete pytest)"


File: pytest.info,  Node: Fixtures reference,  Next: Plugin List,  Prev: How to set up bash completion,  Up: Top

23 Fixtures reference
*********************

See also
........

*note About fixtures: 43.

See also
........

*note How to use fixtures: 41.

* Menu:

* Built-in fixtures::
* Fixture availability::
* Fixture instantiation order::


File: pytest.info,  Node: Built-in fixtures,  Next: Fixture availability,  Up: Fixtures reference

23.1 Built-in fixtures
======================

*note Fixtures: 19e. are defined using the *note @pytest.fixture: 19f.
decorator.  Pytest has several useful built-in fixtures:

     *note capfd: 1a0.

          Capture, as text, output to file descriptors ‘1’ and ‘2’.

     *note capfdbinary: 1a1.

          Capture, as bytes, output to file descriptors ‘1’ and ‘2’.

     *note caplog: 1a2.

          Control logging and access log entries.

     *note capsys: 1a3.

          Capture, as text, output to ‘sys.stdout’ and ‘sys.stderr’.

     *note capsysbinary: 1a4.

          Capture, as bytes, output to ‘sys.stdout’ and ‘sys.stderr’.

     *note cache: da.

          Store and retrieve values across pytest runs.

     *note doctest_namespace: 1a5.

          Provide a dict injected into the docstests namespace.

     *note monkeypatch: 1a6.

          Temporarily modify classes, functions, dictionaries,
          ‘os.environ’, and other objects.

     *note pytestconfig: 1a7.

          Access to configuration values, pluginmanager and plugin
          hooks.

     *note record_property: 1a8.

          Add extra properties to the test.

     *note record_testsuite_property: 1a9.

          Add extra properties to the test suite.

     *note recwarn: 1aa.

          Record warnings emitted by test functions.

     *note request: 1ab.

          Provide information on the executing test function.

     *note testdir: 1ac.

          Provide a temporary test directory to aid in running, and
          testing, pytest plugins.

     *note tmp_path: 185.

          Provide a pathlib.Path(1) object to a temporary directory
          which is unique to each test function.

     *note tmp_path_factory: 1ad.

          Make session-scoped temporary directories and return
          pathlib.Path(2) objects.

     *note tmpdir: a5.

          Provide a ‘py.path.local’ object to a temporary directory
          which is unique to each test function; replaced by *note
          tmp_path: 185.

     *note tmpdir_factory: a6.

          Make session-scoped temporary directories and return
          ‘py.path.local’ objects; replaced by *note tmp_path_factory:
          1ad.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (2) https://docs.python.org/3/library/pathlib.html#pathlib.Path


File: pytest.info,  Node: Fixture availability,  Next: Fixture instantiation order,  Prev: Built-in fixtures,  Up: Fixtures reference

23.2 Fixture availability
=========================

Fixture availability is determined from the perspective of the test.  A
fixture is only available for tests to request if they are in the scope
that fixture is defined in.  If a fixture is defined inside a class, it
can only be requested by tests inside that class.  But if a fixture is
defined inside the global scope of the module, than every test in that
module, even if it’s defined inside a class, can request it.

Similarly, a test can also only be affected by an autouse fixture if
that test is in the same scope that autouse fixture is defined in (see
*note Autouse fixtures are executed first within their scope: 1b0.).

A fixture can also request any other fixture, no matter where it’s
defined, so long as the test requesting them can see all fixtures
involved.

For example, here’s a test file with a fixture (‘outer’) that requests a
fixture (‘inner’) from a scope it wasn’t defined in:

     import pytest


     @pytest.fixture
     def order():
         return []


     @pytest.fixture
     def outer(order, inner):
         order.append("outer")


     class TestOne:
         @pytest.fixture
         def inner(self, order):
             order.append("one")

         def test_order(self, order, outer):
             assert order == ["one", "outer"]


     class TestTwo:
         @pytest.fixture
         def inner(self, order):
             order.append("two")

         def test_order(self, order, outer):
             assert order == ["two", "outer"]

From the tests’ perspectives, they have no problem seeing each of the
fixtures they’re dependent on:

[pytest-figures/example/fixtures/test_fixtures_request_different_scope]
So when they run, ‘outer’ will have no problem finding ‘inner’, because
pytest searched from the tests’ perspectives.

     Note: The scope a fixture is defined in has no bearing on the order
     it will be instantiated in: the order is mandated by the logic
     described *note here: 1b1.

* Menu:

* conftest.py; sharing fixtures across multiple files: conftest py sharing fixtures across multiple files.
* Fixtures from third-party plugins::


File: pytest.info,  Node: conftest py sharing fixtures across multiple files,  Next: Fixtures from third-party plugins,  Up: Fixture availability

23.2.1 ‘conftest.py’: sharing fixtures across multiple files
------------------------------------------------------------

The ‘conftest.py’ file serves as a means of providing fixtures for an
entire directory.  Fixtures defined in a ‘conftest.py’ can be used by
any test in that package without needing to import them (pytest will
automatically discover them).

You can have multiple nested directories/packages containing your tests,
and each directory can have its own ‘conftest.py’ with its own fixtures,
adding on to the ones provided by the ‘conftest.py’ files in parent
directories.

For example, given a test file structure like this:

     tests/
         __init__.py

         conftest.py
             # content of tests/conftest.py
             import pytest

             @pytest.fixture
             def order():
                 return []

             @pytest.fixture
             def top(order, innermost):
                 order.append("top")

         test_top.py
             # content of tests/test_top.py
             import pytest

             @pytest.fixture
             def innermost(order):
                 order.append("innermost top")

             def test_order(order, top):
                 assert order == ["innermost top", "top"]

         subpackage/
             __init__.py

             conftest.py
                 # content of tests/subpackage/conftest.py
                 import pytest

                 @pytest.fixture
                 def mid(order):
                     order.append("mid subpackage")

             test_subpackage.py
                 # content of tests/subpackage/test_subpackage.py
                 import pytest

                 @pytest.fixture
                 def innermost(order, mid):
                     order.append("innermost subpackage")

                 def test_order(order, top):
                     assert order == ["mid subpackage", "innermost subpackage", "top"]

The boundaries of the scopes can be visualized like this:

[pytest-figures/example/fixtures/fixture_availability]
The directories become their own sort of scope where fixtures that are
defined in a ‘conftest.py’ file in that directory become available for
that whole scope.

Tests are allowed to search upward (stepping outside a circle) for
fixtures, but can never go down (stepping inside a circle) to continue
their search.  So ‘tests/subpackage/test_subpackage.py::test_order’
would be able to find the ‘innermost’ fixture defined in
‘tests/subpackage/test_subpackage.py’, but the one defined in
‘tests/test_top.py’ would be unavailable to it because it would have to
step down a level (step inside a circle) to find it.

The first fixture the test finds is the one that will be used, so *note
fixtures can be overridden: 74. if you need to change or extend what one
does for a particular scope.

You can also use the ‘conftest.py’ file to implement *note local
per-directory plugins: 146.


File: pytest.info,  Node: Fixtures from third-party plugins,  Prev: conftest py sharing fixtures across multiple files,  Up: Fixture availability

23.2.2 Fixtures from third-party plugins
----------------------------------------

Fixtures don’t have to be defined in this structure to be available for
tests, though.  They can also be provided by third-party plugins that
are installed, and this is how many pytest plugins operate.  As long as
those plugins are installed, the fixtures they provide can be requested
from anywhere in your test suite.

Because they’re provided from outside the structure of your test suite,
third-party plugins don’t really provide a scope like ‘conftest.py’
files and the directories in your test suite do.  As a result, pytest
will search for fixtures stepping out through scopes as explained
previously, only reaching fixtures defined in plugins ‘last’.

For example, given the following file structure:

     tests/
         __init__.py

         conftest.py
             # content of tests/conftest.py
             import pytest

             @pytest.fixture
             def order():
                 return []

         subpackage/
             __init__.py

             conftest.py
                 # content of tests/subpackage/conftest.py
                 import pytest

                 @pytest.fixture(autouse=True)
                 def mid(order, b_fix):
                     order.append("mid subpackage")

             test_subpackage.py
                 # content of tests/subpackage/test_subpackage.py
                 import pytest

                 @pytest.fixture
                 def inner(order, mid, a_fix):
                     order.append("inner subpackage")

                 def test_order(order, inner):
                     assert order == ["b_fix", "mid subpackage", "a_fix", "inner subpackage"]

If ‘plugin_a’ is installed and provides the fixture ‘a_fix’, and
‘plugin_b’ is installed and provides the fixture ‘b_fix’, then this is
what the test’s search for fixtures would look like:

 [image src="pytest-figures/fixture_availability_plugins.svg" ]

pytest will only search for ‘a_fix’ and ‘b_fix’ in the plugins after
searching for them first in the scopes inside ‘tests/’.


File: pytest.info,  Node: Fixture instantiation order,  Prev: Fixture availability,  Up: Fixtures reference

23.3 Fixture instantiation order
================================

When pytest wants to execute a test, once it knows what fixtures will be
executed, it has to figure out the order they’ll be executed in.  To do
this, it considers 3 factors:

  1. scope

  2. dependencies

  3. autouse

Names of fixtures or tests, where they’re defined, the order they’re
defined in, and the order fixtures are requested in have no bearing on
execution order beyond coincidence.  While pytest will try to make sure
coincidences like these stay consistent from run to run, it’s not
something that should be depended on.  If you want to control the order,
it’s safest to rely on these 3 things and make sure dependencies are
clearly established.

* Menu:

* Higher-scoped fixtures are executed first::
* Fixtures of the same order execute based on dependencies::
* Autouse fixtures are executed first within their scope::


File: pytest.info,  Node: Higher-scoped fixtures are executed first,  Next: Fixtures of the same order execute based on dependencies,  Up: Fixture instantiation order

23.3.1 Higher-scoped fixtures are executed first
------------------------------------------------

Within a function request for fixtures, those of higher-scopes (such as
‘session’) are executed before lower-scoped fixtures (such as ‘function’
or ‘class’).

Here’s an example:

     import pytest


     @pytest.fixture(scope="session")
     def order():
         return []


     @pytest.fixture
     def func(order):
         order.append("function")


     @pytest.fixture(scope="class")
     def cls(order):
         order.append("class")


     @pytest.fixture(scope="module")
     def mod(order):
         order.append("module")


     @pytest.fixture(scope="package")
     def pack(order):
         order.append("package")


     @pytest.fixture(scope="session")
     def sess(order):
         order.append("session")


     class TestClass:
         def test_order(self, func, cls, mod, pack, sess, order):
             assert order == ["session", "package", "module", "class", "function"]

The test will pass because the larger scoped fixtures are executing
first.

The order breaks down to this:

[pytest-figures/example/fixtures/test_fixtures_order_scope]

File: pytest.info,  Node: Fixtures of the same order execute based on dependencies,  Next: Autouse fixtures are executed first within their scope,  Prev: Higher-scoped fixtures are executed first,  Up: Fixture instantiation order

23.3.2 Fixtures of the same order execute based on dependencies
---------------------------------------------------------------

When a fixture requests another fixture, the other fixture is executed
first.  So if fixture ‘a’ requests fixture ‘b’, fixture ‘b’ will execute
first, because ‘a’ depends on ‘b’ and can’t operate without it.  Even if
‘a’ doesn’t need the result of ‘b’, it can still request ‘b’ if it needs
to make sure it is executed after ‘b’.

For example:

     import pytest


     @pytest.fixture
     def order():
         return []


     @pytest.fixture
     def a(order):
         order.append("a")


     @pytest.fixture
     def b(a, order):
         order.append("b")


     @pytest.fixture
     def c(a, b, order):
         order.append("c")


     @pytest.fixture
     def d(c, b, order):
         order.append("d")


     @pytest.fixture
     def e(d, b, order):
         order.append("e")


     @pytest.fixture
     def f(e, order):
         order.append("f")


     @pytest.fixture
     def g(f, c, order):
         order.append("g")


     def test_order(g, order):
         assert order == ["a", "b", "c", "d", "e", "f", "g"]

If we map out what depends on what, we get something that look like
this:

[pytest-figures/example/fixtures/test_fixtures_order_dependencies]
The rules provided by each fixture (as to what fixture(s) each one has
to come after) are comprehensive enough that it can be flattened to
this:

[pytest-figures/example/fixtures/test_fixtures_order_dependencies_flat]
Enough information has to be provided through these requests in order
for pytest to be able to figure out a clear, linear chain of
dependencies, and as a result, an order of operations for a given test.
If there’s any ambiguity, and the order of operations can be interpreted
more than one way, you should assume pytest could go with any one of
those interpretations at any point.

For example, if ‘d’ didn’t request ‘c’, i.e.the graph would look like
this:

[pytest-figures/example/fixtures/test_fixtures_order_dependencies_unclear]
Because nothing requested ‘c’ other than ‘g’, and ‘g’ also requests ‘f’,
it’s now unclear if ‘c’ should go before/after ‘f’, ‘e’, or ‘d’.  The
only rules that were set for ‘c’ is that it must execute after ‘b’ and
before ‘g’.

pytest doesn’t know where ‘c’ should go in the case, so it should be
assumed that it could go anywhere between ‘g’ and ‘b’.

This isn’t necessarily bad, but it’s something to keep in mind.  If the
order they execute in could affect the behavior a test is targeting, or
could otherwise influence the result of a test, then the order should be
defined explicitly in a way that allows pytest to linearize/”flatten”
that order.


File: pytest.info,  Node: Autouse fixtures are executed first within their scope,  Prev: Fixtures of the same order execute based on dependencies,  Up: Fixture instantiation order

23.3.3 Autouse fixtures are executed first within their scope
-------------------------------------------------------------

Autouse fixtures are assumed to apply to every test that could reference
them, so they are executed before other fixtures in that scope.
Fixtures that are requested by autouse fixtures effectively become
autouse fixtures themselves for the tests that the real autouse fixture
applies to.

So if fixture ‘a’ is autouse and fixture ‘b’ is not, but fixture ‘a’
requests fixture ‘b’, then fixture ‘b’ will effectively be an autouse
fixture as well, but only for the tests that ‘a’ applies to.

In the last example, the graph became unclear if ‘d’ didn’t request ‘c’.
But if ‘c’ was autouse, then ‘b’ and ‘a’ would effectively also be
autouse because ‘c’ depends on them.  As a result, they would all be
shifted above non-autouse fixtures within that scope.

So if the test file looked like this:

     import pytest


     @pytest.fixture
     def order():
         return []


     @pytest.fixture
     def a(order):
         order.append("a")


     @pytest.fixture
     def b(a, order):
         order.append("b")


     @pytest.fixture(autouse=True)
     def c(b, order):
         order.append("c")


     @pytest.fixture
     def d(b, order):
         order.append("d")


     @pytest.fixture
     def e(d, order):
         order.append("e")


     @pytest.fixture
     def f(e, order):
         order.append("f")


     @pytest.fixture
     def g(f, c, order):
         order.append("g")


     def test_order_and_g(g, order):
         assert order == ["a", "b", "c", "d", "e", "f", "g"]

the graph would look like this:

[pytest-figures/example/fixtures/test_fixtures_order_autouse]
Because ‘c’ can now be put above ‘d’ in the graph, pytest can once again
linearize the graph to this:

[pytest-figures/example/fixtures/test_fixtures_order_autouse_flat]
In this example, ‘c’ makes ‘b’ and ‘a’ effectively autouse fixtures as
well.

Be careful with autouse, though, as an autouse fixture will
automatically execute for every test that can reach it, even if they
don’t request it.  For example, consider this file:

     import pytest


     @pytest.fixture(scope="class")
     def order():
         return []


     @pytest.fixture(scope="class", autouse=True)
     def c1(order):
         order.append("c1")


     @pytest.fixture(scope="class")
     def c2(order):
         order.append("c2")


     @pytest.fixture(scope="class")
     def c3(order, c1):
         order.append("c3")


     class TestClassWithC1Request:
         def test_order(self, order, c1, c3):
             assert order == ["c1", "c3"]


     class TestClassWithoutC1Request:
         def test_order(self, order, c2):
             assert order == ["c1", "c2"]

Even though nothing in ‘TestClassWithoutC1Request’ is requesting ‘c1’,
it still is executed for the tests inside it anyway:

[pytest-figures/example/fixtures/test_fixtures_order_autouse_multiple_scopes]
But just because one autouse fixture requested a non-autouse fixture,
that doesn’t mean the non-autouse fixture becomes an autouse fixture for
all contexts that it can apply to.  It only effectively becomes an
autouse fixture for the contexts the real autouse fixture (the one that
requested the non-autouse fixture) can apply to.

For example, take a look at this test file:

     import pytest


     @pytest.fixture
     def order():
         return []


     @pytest.fixture
     def c1(order):
         order.append("c1")


     @pytest.fixture
     def c2(order):
         order.append("c2")


     class TestClassWithAutouse:
         @pytest.fixture(autouse=True)
         def c3(self, order, c2):
             order.append("c3")

         def test_req(self, order, c1):
             assert order == ["c2", "c3", "c1"]

         def test_no_req(self, order):
             assert order == ["c2", "c3"]


     class TestClassWithoutAutouse:
         def test_req(self, order, c1):
             assert order == ["c1"]

         def test_no_req(self, order):
             assert order == []

It would break down to something like this:

[pytest-figures/example/fixtures/test_fixtures_order_autouse_temp_effects]
For ‘test_req’ and ‘test_no_req’ inside ‘TestClassWithAutouse’, ‘c3’
effectively makes ‘c2’ an autouse fixture, which is why ‘c2’ and ‘c3’
are executed for both tests, despite not being requested, and why ‘c2’
and ‘c3’ are executed before ‘c1’ for ‘test_req’.

If this made ‘c2’ an ‘actual’ autouse fixture, then ‘c2’ would also
execute for the tests inside ‘TestClassWithoutAutouse’, since they can
reference ‘c2’ if they wanted to.  But it doesn’t, because from the
perspective of the ‘TestClassWithoutAutouse’ tests, ‘c2’ isn’t an
autouse fixture, since they can’t see ‘c3’.


File: pytest.info,  Node: Plugin List,  Next: Configuration,  Prev: Fixtures reference,  Up: Top

24 Plugin List
**************

PyPI projects that match “pytest-*” are considered plugins and are
listed automatically.  Packages classified as inactive are excluded.

This list contains 1118 plugins.

name                                                summary                                                                                                                                                                          last release       status                    requires
                                                                                                                                                                                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                                                                                                                                  
pytest-abstracts(1)                                 A contextmanager pytest fixture for handling multiple mock abstracts                                                                                                             May 25, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-accept(2)                                    A pytest-plugin for updating doctest outputs                                                                                                                                     Jan 07, 2022       N/A                       pytest (>=6,<8)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-adaptavist(3)                                pytest plugin for generating test execution results within Jira Test Management (tm4j)                                                                                           Jun 07, 2022       N/A                       pytest (>=5.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-addons-test(4)                               用于测试pytest的插件                                                                                                                                                             Aug 02, 2021       N/A                       pytest (>=6.2.4,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-adf(5)                                       Pytest plugin for writing Azure Data Factory integration tests                                                                                                                   May 10, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-adf-azure-identity(6)                        Pytest plugin for writing Azure Data Factory integration tests                                                                                                                   Mar 06, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-agent(7)                                     Service that exposes a REST API that can be used to interract remotely with Pytest.  It is shipped with a dashboard that enables running tests in a more convenient way.         Nov 25, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aggreport(8)                                 pytest plugin for pytest-repeat that generate aggregate report of the same test cases with additional statistics details.                                                        Mar 07, 2021       4 - Beta                  pytest (>=6.2.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aio(9)                                       Pytest plugin for testing async python code                                                                                                                                      Oct 20, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aiofiles(10)                                 pytest fixtures for writing aiofiles tests with pyfakefs                                                                                                                         May 14, 2017       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aiohttp(11)                                  Pytest plugin for aiohttp support                                                                                                                                                Feb 12, 2022       4 - Beta                  pytest (>=6.1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aiohttp-client(12)                           Pytest ‘client‘ fixture for the Aiohttp                                                                                                                                          Nov 01, 2020       N/A                       pytest (>=6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aiomoto(13)                                  pytest-aiomoto                                                                                                                                                                   Jul 10, 2022       N/A                       pytest (>=7.0,<8.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aioresponses(14)                             py.test integration for aioresponses                                                                                                                                             Jul 29, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aioworkers(15)                               A plugin to test aioworkers project with pytest                                                                                                                                  Dec 04, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-airflow(16)                                  pytest support for airflow.                                                                                                                                                      Apr 03, 2019       3 - Alpha                 pytest (>=4.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-airflow-utils(17)                                                                                                                                                                                                             Nov 15, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-alembic(18)                                  A pytest plugin for verifying alembic migrations.                                                                                                                                Aug 03, 2022       N/A                       pytest (>=1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-allclose(19)                                 Pytest fixture extending Numpy’s allclose function                                                                                                                               Jul 30, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-allure-adaptor(20)                           Plugin for py.test to generate allure xml reports                                                                                                                                Jan 10, 2018       N/A                       pytest (>=2.7.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-allure-adaptor2(21)                          Plugin for py.test to generate allure xml reports                                                                                                                                Oct 14, 2020       N/A                       pytest (>=2.7.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-allure-collection(22)                        pytest plugin to collect allure markers without running any tests                                                                                                                Sep 08, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-allure-dsl(23)                               pytest plugin to test case doc string dls instructions                                                                                                                           Oct 25, 2020       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-allure-spec-coverage(24)                     The pytest plugin aimed to display test coverage of the specs(requirements) in Allure                                                                                            Oct 26, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-alphamoon(25)                                Static code checks used at Alphamoon                                                                                                                                             Dec 30, 2021       5 - Production/Stable     pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-android(26)                                  This fixture provides a configured “driver” for Android Automated Testing, using uiautomator2.                                                                                   Feb 21, 2019       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-anki(27)                                     A pytest plugin for testing Anki add-ons                                                                                                                                         Jul 31, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-annotate(28)                                 pytest-annotate: Generate PyAnnotate annotations from your pytest tests.                                                                                                         Jun 07, 2022       3 - Alpha                 pytest (<8.0.0,>=3.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ansible(29)                                  Plugin for py.test to simplify calling ansible modules from tests or fixtures                                                                                                    May 25, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ansible-playbook(30)                         Pytest fixture which runs given ansible playbook file.                                                                                                                           Mar 08, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ansible-playbook-runner(31)                  Pytest fixture which runs given ansible playbook file.                                                                                                                           Dec 02, 2020       4 - Beta                  pytest (>=3.1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ansible-units(32)                            A pytest plugin for running unit tests within an ansible collection                                                                                                              Apr 14, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-antilru(33)                                  Bust functools.lru_cache when running pytest to avoid test pollution                                                                                                             Jul 05, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-anyio(34)                                    The pytest anyio plugin is built into anyio.  You don’t need this package.                                                                                                       Jun 29, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-anything(35)                                 Pytest fixtures to assert anything and something                                                                                                                                 Feb 18, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aoc(36)                                      Downloads puzzle inputs for Advent of Code and synthesizes PyTest fixtures                                                                                                       Nov 23, 2021       N/A                       pytest ; extra == ‘test’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aoreporter(37)                               pytest report                                                                                                                                                                    Jun 27, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-api(38)                                      An ASGI middleware to populate OpenAPI Specification examples from pytest functions                                                                                              May 12, 2022       N/A                       pytest (>=7.1.1,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-api-soup(39)                                 Validate multiple endpoints with unit testing using a single source of truth.                                                                                                    Aug 27, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-apistellar(40)                               apistellar plugin for pytest.                                                                                                                                                    Jun 18, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-appengine(41)                                AppEngine integration that works well with pytest-django                                                                                                                         Feb 27, 2017       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-appium(42)                                   Pytest plugin for appium                                                                                                                                                         Dec 05, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-approvaltests(43)                            A plugin to use approvaltests with pytest                                                                                                                                        May 08, 2022       4 - Beta                  pytest (>=7.0.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-argus(44)                                    pyest results colection plugin                                                                                                                                                   Jun 24, 2021       5 - Production/Stable     pytest (>=6.2.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-arraydiff(45)                                pytest plugin to help with comparing array output from tests                                                                                                                     Jan 13, 2022       4 - Beta                  pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-asgi-server(46)                              Convenient ASGI client/server fixtures for Pytest                                                                                                                                Dec 12, 2020       N/A                       pytest (>=5.4.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-asptest(47)                                  test Answer Set Programming programs                                                                                                                                             Apr 28, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-assertcount(48)                              Plugin to count actual number of asserts in pytest                                                                                                                               May 22, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-assertions(49)                               Pytest Assertions                                                                                                                                                                Apr 27, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-assertutil(50)                               pytest-assertutil                                                                                                                                                                May 10, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-assert-utils(51)                             Useful assertion utilities for use with pytest                                                                                                                                   Apr 14, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-assume(52)                                   A pytest plugin that allows multiple failures per test                                                                                                                           Jun 24, 2021       N/A                       pytest (>=2.7)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-assurka(53)                                  A pytest plugin for Assurka Studio                                                                                                                                               Aug 04, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ast-back-to-python(54)                       A plugin for pytest devs to view how assertion rewriting recodes the AST                                                                                                         Sep 29, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-asteroid(55)                                 PyTest plugin for docker-based testing on database images                                                                                                                        Aug 15, 2022       N/A                       pytest (>=6.2.5,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-astropy(56)                                  Meta-package containing dependencies for testing                                                                                                                                 Apr 12, 2022       5 - Production/Stable     pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-astropy-header(57)                           pytest plugin to add diagnostic information to the header of the test output                                                                                                     Sep 06, 2022       3 - Alpha                 pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ast-transformer(58)                                                                                                                                                                                                           May 04, 2019       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-asyncio(59)                                  Pytest support for asyncio                                                                                                                                                       Jul 15, 2022       4 - Beta                  pytest (>=6.1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-asyncio-cooperative(60)                      Run all your asynchronous tests cooperatively.                                                                                                                                   Jul 11, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-asyncio-network-simulator(61)                pytest-asyncio-network-simulator: Plugin for pytest for simulator the network in tests                                                                                           Jul 31, 2018       3 - Alpha                 pytest (<3.7.0,>=3.3.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-async-mongodb(62)                            pytest plugin for async MongoDB                                                                                                                                                  Oct 18, 2017       5 - Production/Stable     pytest (>=2.5.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-async-sqlalchemy(63)                         Database testing fixtures using the SQLAlchemy asyncio API                                                                                                                       Oct 07, 2021       4 - Beta                  pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-atomic(64)                                   Skip rest of tests if previous test failed.                                                                                                                                      Nov 24, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-attrib(65)                                   pytest plugin to select tests based on attributes similar to the nose-attrib plugin                                                                                              May 24, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-austin(66)                                   Austin plugin for pytest                                                                                                                                                         Oct 11, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-autocap(67)                                  automatically capture test & fixture stdout/stderr to files                                                                                                                      May 15, 2022       N/A                       pytest (<7.2,>=7.1.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-autochecklog(68)                             automatically check condition and log all the checks                                                                                                                             Apr 25, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-automation(69)                               pytest plugin for building a test suite, using YAML files to extend pytest parameterize functionality.                                                                           May 20, 2022       N/A                       pytest (>=7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-automock(70)                                 Pytest plugin for automatical mocks creation                                                                                                                                     Aug 04, 2022       N/A                       pytest ; extra == ‘dev’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-auto-parametrize(71)                         pytest plugin: avoid repeating arguments in parametrize                                                                                                                          Oct 02, 2016       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-autotest(72)                                 This fixture provides a configured “driver” for Android Automated Testing, using uiautomator2.                                                                                   Aug 25, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-avoidance(73)                                Makes pytest skip tests that don not need rerunning                                                                                                                              May 23, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aws(74)                                      pytest plugin for testing AWS resource configurations                                                                                                                            Oct 04, 2017       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-aws-config(75)                               Protect your AWS credentials in unit tests                                                                                                                                       May 28, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-axe(76)                                      pytest plugin for axe-selenium-python                                                                                                                                            Nov 12, 2018       N/A                       pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-azure-devops(77)                             Simplifies using azure devops parallel strategy (‘https://docs.microsoft.com/en-us/azure/devops/pipelines/test/parallel-testing-any-test-runner’) with pytest.                   Jun 20, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-azurepipelines(78)                           Formatting PyTest output for Azure Pipelines UI                                                                                                                                  Mar 16, 2022       4 - Beta                  pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bandit(79)                                   A bandit plugin for pytest                                                                                                                                                       Feb 23, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-base-url(80)                                 pytest plugin for URL based testing                                                                                                                                              Mar 27, 2022       5 - Production/Stable     pytest (>=3.0.0,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bdd(81)                                      BDD for pytest                                                                                                                                                                   Jul 07, 2022       6 - Mature                pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bdd-html(82)                                 pytest plugin to display BDD info in HTML test report                                                                                                                            Jul 25, 2022       3 - Alpha                 pytest (!=6.0.0,>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bdd-ng(83)                                   BDD for pytest                                                                                                                                                                   Jul 24, 2022       4 - Beta                  pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bdd-splinter(84)                             Common steps for pytest bdd and splinter integration                                                                                                                             Aug 12, 2019       5 - Production/Stable     pytest (>=4.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bdd-web(85)                                  A simple plugin to use with pytest                                                                                                                                               Jan 02, 2020       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bdd-wrappers(86)                                                                                                                                                                                                              Feb 11, 2020       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-beakerlib(87)                                A pytest plugin that reports test results to the BeakerLib framework                                                                                                             Mar 17, 2017       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-beds(88)                                     Fixtures for testing Google Appengine (GAE) apps                                                                                                                                 Jun 07, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bench(89)                                    Benchmark utility that plugs into pytest.                                                                                                                                        Jul 21, 2014       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-benchmark(90)                                A ‘‘pytest‘‘ fixture for benchmarking code.  It will group the tests into rounds that are calibrated to the chosen timer.                                                        Apr 17, 2021       5 - Production/Stable     pytest (>=3.8)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bg-process(91)                               Pytest plugin to initialize background process                                                                                                                                   Jan 24, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bigchaindb(92)                               A BigchainDB plugin for pytest.                                                                                                                                                  Jan 24, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bigquery-mock(93)                            Provides a mock fixture for python bigquery client                                                                                                                               Aug 05, 2021       N/A                       pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-black(94)                                    A pytest plugin to enable format checking with black                                                                                                                             Oct 05, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-black-multipy(95)                            Allow ‘–black’ on older Pythons                                                                                                                                                  Jan 14, 2021       5 - Production/Stable     pytest (!=3.7.3,>=3.5) ; extra == ‘testing’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-blame(96)                                    A pytest plugin helps developers to debug by providing useful commits history.                                                                                                   May 04, 2019       N/A                       pytest (>=4.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-blender(97)                                  Blender Pytest plugin.                                                                                                                                                           Jun 16, 2022       N/A                       pytest ; extra == ‘dev’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-blink1(98)                                   Pytest plugin to emit notifications via the Blink(1) RGB LED                                                                                                                     Jan 07, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-blockage(99)                                 Disable network requests during a test run.                                                                                                                                      Dec 21, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-blocker(100)                                 pytest plugin to mark a test as blocker and skip all other tests                                                                                                                 Sep 07, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-blue(101)                                    A pytest plugin that adds a ‘blue‘ fixture for printing stuff in blue.                                                                                                           Sep 05, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-board(102)                                   Local continuous test runner with pytest and watchdog.                                                                                                                           Jan 20, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bootstrap(103)                                                                                                                                                                                                                Mar 04, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bpdb(104)                                    A py.test plug-in to enable drop to bpdb debugger on test failure.                                                                                                               Jan 19, 2015       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bravado(105)                                 Pytest-bravado automatically generates from OpenAPI specification client fixtures.                                                                                               Feb 15, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-breakword(106)                               Use breakword with pytest                                                                                                                                                        Aug 04, 2021       N/A                       pytest (>=6.2.4,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-breed-adapter(107)                           A simple plugin to connect with breed-server                                                                                                                                     Nov 07, 2018       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-briefcase(108)                               A pytest plugin for running tests on a Briefcase project.                                                                                                                        Jun 14, 2020       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-browser(109)                                 A pytest plugin for console based browser test selection just after the collection phase                                                                                         Dec 10, 2016       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-browsermob-proxy(110)                        BrowserMob proxy plugin for py.test.                                                                                                                                             Jun 11, 2013       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-browserstack-local(111)                      ‘‘py.test‘‘ plugin to run ‘‘BrowserStackLocal‘‘ in background.                                                                                                                   Feb 09, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bug(112)                                     Pytest plugin for marking tests as a bug                                                                                                                                         Apr 13, 2022       5 - Production/Stable     pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bugtong-tag(113)                             pytest-bugtong-tag is a plugin for pytest                                                                                                                                        Jan 16, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bugzilla(114)                                py.test bugzilla integration plugin                                                                                                                                              May 05, 2010       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bugzilla-notifier(115)                       A plugin that allows you to execute create, update, and read information from BugZilla bugs                                                                                      Jun 15, 2018       4 - Beta                  pytest (>=2.9.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-buildkite(116)                               Plugin for pytest that automatically publishes coverage and pytest report annotations to Buildkite.                                                                              Jul 13, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-builtin-types(117)                                                                                                                                                                                                            Nov 17, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-bwrap(118)                                   Run your tests in Bubblewrap sandboxes                                                                                                                                           Oct 26, 2018       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cache(119)                                   pytest plugin with mechanisms for caching across test runs                                                                                                                       Jun 04, 2013       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cache-assert(120)                            Cache assertion data to simplify regression testing of complex serializable data                                                                                                 May 02, 2022       4 - Beta                  pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cagoule(121)                                 Pytest plugin to only run tests affected by changes                                                                                                                              Jan 01, 2020       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cairo(122)                                   Pytest support for cairo-lang and starknet                                                                                                                                       Apr 17, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-camel-collect(123)                           Enable CamelCase-aware pytest class collection                                                                                                                                   Aug 02, 2020       N/A                       pytest (>=2.9)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-canonical-data(124)                          A plugin which allows to compare results with canonical results, based on previous runs                                                                                          May 08, 2020       2 - Pre-Alpha             pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-caprng(125)                                  A plugin that replays pRNG state on failure.                                                                                                                                     May 02, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-capture-deprecatedwarnings(126)              pytest plugin to capture all deprecatedwarnings and put them in one file                                                                                                         Apr 30, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-capture-warnings(127)                        pytest plugin to capture all warnings and put them in one file of your choice                                                                                                    May 03, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cases(128)                                   Separate test code from test cases in pytest.                                                                                                                                    May 20, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cassandra(129)                               Cassandra CCM Test Fixtures for pytest                                                                                                                                           Nov 04, 2017       1 - Planning              N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-catchlog(130)                                py.test plugin to catch log messages.  This is a fork of pytest-capturelog.                                                                                                      Jan 24, 2016       4 - Beta                  pytest (>=2.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-catch-server(131)                            Pytest plugin with server for catching HTTP requests.                                                                                                                            Dec 12, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-celery(132)                                  pytest-celery a shim pytest plugin to enable celery.contrib.pytest                                                                                                               May 06, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-chainmaker(133)                              pytest plugin for chainmaker                                                                                                                                                     Oct 15, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-chalice(134)                                 A set of py.test fixtures for AWS Chalice                                                                                                                                        Jul 01, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-change-demo(135)                             turn .  into √，turn F into x                                                                                                                                                    Mar 02, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-change-report(136)                           turn .  into √，turn F into x                                                                                                                                                    Sep 14, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-change-xds(137)                              turn .  into √，turn F into x                                                                                                                                                    Apr 16, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-chdir(138)                                   A pytest fixture for changing current working directory                                                                                                                          Jan 28, 2020       N/A                       pytest (>=5.0.0,<6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-check(139)                                   A pytest plugin that allows multiple failures per test.                                                                                                                          Aug 25, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-checkdocs(140)                               check the README when running tests                                                                                                                                              Jul 31, 2021       5 - Production/Stable     pytest (>=4.6) ; extra == ‘testing’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-checkipdb(141)                               plugin to check if there are ipdb debugs left                                                                                                                                    Jul 22, 2020       5 - Production/Stable     pytest (>=2.9.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-check-library(142)                           check your missing library                                                                                                                                                       Jul 17, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-check-libs(143)                              check your missing library                                                                                                                                                       Jul 17, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-check-links(144)                             Check links in files                                                                                                                                                             Jul 29, 2020       N/A                       pytest (>=7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-check-mk(145)                                pytest plugin to test Check_MK checks                                                                                                                                            Nov 19, 2015       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-chunks(146)                                  Run only a chunk of your test suite                                                                                                                                              Jul 05, 2022       N/A                       pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-circleci(147)                                py.test plugin for CircleCI                                                                                                                                                      May 03, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-circleci-parallelized(148)                   Parallelize pytest across CircleCI workers.                                                                                                                                      Mar 26, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-circleci-parallelized-rjp(149)               Parallelize pytest across CircleCI workers.                                                                                                                                      Jun 21, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ckan(150)                                    Backport of CKAN 2.9 pytest plugin and fixtures to CAKN 2.8                                                                                                                      Apr 28, 2020       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-clarity(151)                                 A plugin providing an alternative, colourful diff output for failing assertions.                                                                                                 Jun 11, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cldf(152)                                    Easy quality control for CLDF datasets using pytest                                                                                                                              May 06, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-click(153)                                   Pytest plugin for Click                                                                                                                                                          Feb 11, 2022       5 - Production/Stable     pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cli-fixtures(154)                            Automatically register fixtures for custom CLI arguments                                                                                                                         Jul 28, 2022       N/A                       pytest (~=7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-clld(155)                                                                                                                                                                                                                     Jul 06, 2022       N/A                       pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cloud(156)                                   Distributed tests planner plugin for pytest testing framework.                                                                                                                   Oct 05, 2020       6 - Mature                N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cloudflare-worker(157)                       pytest plugin for testing cloudflare workers                                                                                                                                     Mar 30, 2021       4 - Beta                  pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cloudist(158)                                Distribute tests to cloud machines without fuss                                                                                                                                  Sep 02, 2022       4 - Beta                  pytest (>=7.1.2,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cobra(159)                                   PyTest plugin for testing Smart Contracts for Ethereum blockchain.                                                                                                               Jun 29, 2019       3 - Alpha                 pytest (<4.0.0,>=3.7.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-codecarbon(160)                              Pytest plugin for measuring carbon emissions                                                                                                                                     Jun 15, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-codecheckers(161)                            pytest plugin to add source code sanity checks (pep8 and friends)                                                                                                                Feb 13, 2010       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-codecov(162)                                 Pytest plugin for uploading pytest-cov results to codecov.io                                                                                                                     Apr 12, 2022       4 - Beta                  pytest (>=4.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-codegen(163)                                 Automatically create pytest test signatures                                                                                                                                      Aug 23, 2020       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-codeowners(164)                              Pytest plugin for selecting tests by GitHub CODEOWNERS.                                                                                                                          Mar 30, 2022       4 - Beta                  pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-codestyle(165)                               pytest plugin to run pycodestyle                                                                                                                                                 Mar 23, 2020       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-collect-formatter(166)                       Formatter for pytest collect output                                                                                                                                              Mar 29, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-collect-formatter2(167)                      Formatter for pytest collect output                                                                                                                                              May 31, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-collector(168)                               Python package for collecting pytest.                                                                                                                                            Aug 02, 2022       N/A                       pytest (>=7.0,<8.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-colordots(169)                               Colorizes the progress indicators                                                                                                                                                Oct 06, 2017       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-commander(170)                               An interactive GUI test runner for PyTest                                                                                                                                        Aug 17, 2021       N/A                       pytest (<7.0.0,>=6.2.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-common-subject(171)                          pytest framework for testing different aspects of a common method                                                                                                                May 15, 2022       N/A                       pytest (>=3.6,<8)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-concurrent(172)                              Concurrently execute test cases with multithread, multiprocess and gevent                                                                                                        Jan 12, 2019       4 - Beta                  pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-config(173)                                  Base configurations and utilities for developing your Python project test suite with pytest.                                                                                     Nov 07, 2014       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-confluence-report(174)                       Package stands for pytest plugin to upload results into Confluence page.                                                                                                         Apr 17, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-console-scripts(175)                         Pytest plugin for testing console scripts                                                                                                                                        Mar 18, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-consul(176)                                  pytest plugin with fixtures for testing consul aware apps                                                                                                                        Nov 24, 2018       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-container(177)                               Pytest fixtures for writing container based tests                                                                                                                                Feb 01, 2022       3 - Alpha                 pytest (>=3.10)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-contextfixture(178)                          Define pytest fixtures as context managers.                                                                                                                                      Mar 12, 2013       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-contexts(179)                                A plugin to run tests written with the Contexts framework using pytest                                                                                                           May 19, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cookies(180)                                 The pytest plugin for your Cookiecutter templates. 🍪                                                                                                                             May 24, 2021       5 - Production/Stable     pytest (>=3.3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-couchdbkit(181)                              py.test extension for per-test couchdb databases using couchdbkit                                                                                                                Apr 17, 2012       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-count(182)                                   count erros and send email                                                                                                                                                       Jan 12, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cov(183)                                     Pytest plugin for measuring coverage.                                                                                                                                            Oct 04, 2021       5 - Production/Stable     pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cover(184)                                   Pytest plugin for measuring coverage.  Forked from ‘pytest-cov‘.                                                                                                                 Aug 01, 2015       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-coverage(185)                                                                                                                                                                                                                 Jun 17, 2015       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-coverage-context(186)                        Coverage dynamic context support for PyTest, including sub-processes                                                                                                             Jan 04, 2021       4 - Beta                  pytest (>=6.1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cov-exclude(187)                             Pytest plugin for excluding tests based on coverage data                                                                                                                         Apr 29, 2016       4 - Beta                  pytest (>=2.8.0,<2.9.0); extra == ‘dev’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cpp(188)                                     Use pytest’s runner to discover and execute C++ tests                                                                                                                            Aug 22, 2022       5 - Production/Stable     pytest (>=7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cppython(189)                                A pytest plugin that imports CPPython testing types                                                                                                                              Sep 10, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cqase(190)                                   Custom qase pytest plugin                                                                                                                                                        Aug 22, 2022       N/A                       pytest (>=7.1.2,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cram(191)                                    Run cram tests with pytest.                                                                                                                                                      Aug 08, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-crate(192)                                   Manages CrateDB instances during your integration tests                                                                                                                          May 28, 2019       3 - Alpha                 pytest (>=4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cricri(193)                                  A Cricri plugin for pytest.                                                                                                                                                      Jan 27, 2018       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-crontab(194)                                 add crontab task in crontab                                                                                                                                                      Dec 09, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-csv(195)                                     CSV output for pytest.                                                                                                                                                           Apr 22, 2021       N/A                       pytest (>=6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-csv-params(196)                              Pytest plugin for Test Case Parametrization with CSV files                                                                                                                       Aug 28, 2022       5 - Production/Stable     pytest (>=7.1.2,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-curio(197)                                   Pytest support for curio.                                                                                                                                                        Oct 07, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-curl-report(198)                             pytest plugin to generate curl command line report                                                                                                                               Dec 11, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-custom-concurrency(199)                      Custom grouping concurrence for pytest                                                                                                                                           Feb 08, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-custom-exit-code(200)                        Exit pytest test session with custom exit code in different scenarios                                                                                                            Aug 07, 2019       4 - Beta                  pytest (>=4.0.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-custom-nodeid(201)                           Custom grouping for pytest-xdist, rename test cases name and test cases nodeid, support allure report                                                                            Mar 07, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-custom-report(202)                           Configure the symbols displayed for test outcomes                                                                                                                                Jan 30, 2019       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-custom-scheduling(203)                       Custom grouping for pytest-xdist, rename test cases name and test cases nodeid, support allure report                                                                            Mar 01, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cython(204)                                  A plugin for testing Cython extension modules                                                                                                                                    Mar 26, 2022       5 - Production/Stable     pytest (>=4.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-cython-collect(205)                                                                                                                                                                                                           Jun 17, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-darker(206)                                  A pytest plugin for checking of modified code using Darker                                                                                                                       Aug 16, 2020       N/A                       pytest (>=6.0.1) ; extra == ‘test’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dash(207)                                    pytest fixtures to run dash applications.                                                                                                                                        Mar 18, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-data(208)                                    Useful functions for managing data for pytest fixtures                                                                                                                           Nov 01, 2016       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-databricks(209)                              Pytest plugin for remote Databricks notebooks testing                                                                                                                            Jul 29, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-datadir(210)                                 pytest plugin for test data directories and files                                                                                                                                Oct 22, 2019       5 - Production/Stable     pytest (>=2.7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-datadir-mgr(211)                             Manager for test data: downloads, artifact caching, and a tmpdir context.                                                                                                        Aug 16, 2022       5 - Production/Stable     pytest (>=7.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-datadir-ng(212)                              Fixtures for pytest allowing test functions/methods to easily retrieve test resources from the local filesystem.                                                                 Dec 25, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-data-extractor(213)                          A pytest plugin to extract relevant metadata about tests into an external file (currently only json support)                                                                     Jul 19, 2022       N/A                       pytest (>=7.0.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-data-file(214)                               Fixture “data” and “case_data” for test from yaml file                                                                                                                           Dec 04, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-datafiles(215)                               py.test plugin to create a ‘tmpdir’ containing predefined files/directories.                                                                                                     May 01, 2022       5 - Production/Stable     pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-datafixtures(216)                            Data fixtures for pytest made simple                                                                                                                                             Dec 05, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-data-from-files(217)                         pytest plugin to provide data from files loaded automatically                                                                                                                    Oct 13, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dataplugin(218)                              A pytest plugin for managing an archive of test data.                                                                                                                            Sep 16, 2017       1 - Planning              N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-datarecorder(219)                            A py.test plugin recording and comparing test output.                                                                                                                            Apr 20, 2020       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dataset(220)                                 Plugin for loading different datasets for pytest by prefix from json or yaml files                                                                                               Sep 05, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-data-suites(221)                             Class-based pytest parametrization                                                                                                                                               Jul 24, 2022       N/A                       pytest (>=6.0,<8.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-datatest(222)                                A pytest plugin for test driven data-wrangling (this is the development version of datatest’s pytest integration).                                                               Oct 15, 2020       4 - Beta                  pytest (>=3.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-db(223)                                      Session scope fixture “db” for mysql query or change                                                                                                                             Dec 04, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dbfixtures(224)                              Databases fixtures plugin for py.test.                                                                                                                                           Dec 07, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-db-plugin(225)                                                                                                                                                                                                                Nov 27, 2021       N/A                       pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dbt-adapter(226)                             A pytest plugin for testing dbt adapter plugins                                                                                                                                  Nov 24, 2021       N/A                       pytest (<7,>=6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dbt-conventions(227)                         A pytest plugin for linting a dbt project’s conventions                                                                                                                          Mar 02, 2022       N/A                       pytest (>=6.2.5,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dbt-core(228)                                Pytest extension for dbt.                                                                                                                                                        Jul 22, 2022       N/A                       pytest (>=6.2.5) ; extra == ‘test’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dbus-notification(229)                       D-BUS notifications for pytest results.                                                                                                                                          Mar 05, 2014       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-deadfixtures(230)                            A simple plugin to list unused fixtures in pytest                                                                                                                                Jul 23, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-deepcov(231)                                 deepcov                                                                                                                                                                          Mar 30, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-defer(232)                                                                                                                                                                                                                    Aug 24, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-demo-plugin(233)                             pytest示例插件                                                                                                                                                                   May 15, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dependency(234)                              Manage dependencies of tests                                                                                                                                                     Feb 14, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-depends(235)                                 Tests that depend on other tests                                                                                                                                                 Apr 05, 2020       5 - Production/Stable     pytest (>=3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-deprecate(236)                               Mark tests as testing a deprecated feature with a warning note.                                                                                                                  Jul 01, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-describe(237)                                Describe-style plugin for pytest                                                                                                                                                 Nov 13, 2021       4 - Beta                  pytest (>=4.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-describe-it(238)                             plugin for rich text descriptions                                                                                                                                                Jul 19, 2019       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-devpi-server(239)                            DevPI server fixture for py.test                                                                                                                                                 May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dhos(240)                                    Common fixtures for pytest in DHOS services and libraries                                                                                                                        Sep 07, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-diamond(241)                                 pytest plugin for diamond                                                                                                                                                        Aug 31, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dicom(242)                                   pytest plugin to provide DICOM fixtures                                                                                                                                          Dec 19, 2018       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dictsdiff(243)                                                                                                                                                                                                                Jul 26, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-diff(244)                                    A simple plugin to use with pytest                                                                                                                                               Mar 30, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-diff-selector(245)                           Get tests affected by code changes (using git)                                                                                                                                   Feb 24, 2022       4 - Beta                  pytest (>=6.2.2) ; extra == ‘all’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-disable(246)                                 pytest plugin to disable a test and skip it from testrun                                                                                                                         Sep 10, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-disable-plugin(247)                          Disable plugins per test                                                                                                                                                         Feb 28, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-discord(248)                                 A pytest plugin to notify test results to a Discord channel.                                                                                                                     Mar 27, 2022       4 - Beta                  pytest (!=6.0.0,<8,>=3.3.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django(249)                                  A Django plugin for pytest.                                                                                                                                                      Dec 07, 2021       5 - Production/Stable     pytest (>=5.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-ahead(250)                            A Django plugin for pytest.                                                                                                                                                      Oct 27, 2016       5 - Production/Stable     pytest (>=2.9)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-djangoapp(251)                               Nice pytest plugin to help you with Django pluggable application testing.                                                                                                        Aug 04, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-cache-xdist(252)                      A djangocachexdist plugin for pytest                                                                                                                                             May 12, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-casperjs(253)                         Integrate CasperJS with your django tests as a pytest fixture.                                                                                                                   Mar 15, 2015       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-dotenv(254)                           Pytest plugin used to setup environment variables with django-dotenv                                                                                                             Nov 26, 2019       4 - Beta                  pytest (>=2.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-factories(255)                        Factories for your Django models that can be used as Pytest fixtures.                                                                                                            Nov 12, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-filefield(256)                        Replaces FileField.storage with something you can patch globally.                                                                                                                May 09, 2022       5 - Production/Stable     pytest >= 5.2
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-gcir(257)                             A Django plugin for pytest.                                                                                                                                                      Mar 06, 2018       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-haystack(258)                         Cleanup your Haystack indexes between tests                                                                                                                                      Sep 03, 2017       5 - Production/Stable     pytest (>=2.3.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-ifactory(259)                         A model instance factory for pytest-django                                                                                                                                       Feb 09, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-lite(260)                             The bare minimum to integrate py.test with Django.                                                                                                                               Jan 30, 2014       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-liveserver-ssl(261)                                                                                                                                                                                                    Jan 20, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-model(262)                            A Simple Way to Test your Django Models                                                                                                                                          Feb 14, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-ordering(263)                         A pytest plugin for preserving the order in which Django runs tests.                                                                                                             Jul 25, 2019       5 - Production/Stable     pytest (>=2.3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-queries(264)                          Generate performance reports from your django database performance tests.                                                                                                        Mar 01, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-djangorestframework(265)                     A djangorestframework plugin for pytest                                                                                                                                          Aug 11, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-rq(266)                               A pytest plugin to help writing unit test for django-rq                                                                                                                          Apr 13, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-sqlcounts(267)                        py.test plugin for reporting the number of SQLs executed per django testcase.                                                                                                    Jun 16, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-django-testing-postgresql(268)               Use a temporary PostgreSQL database with pytest-django                                                                                                                           Jan 31, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-doc(269)                                     A documentation plugin for py.test.                                                                                                                                              Jun 28, 2015       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docfiles(270)                                pytest plugin to test codeblocks in your documentation.                                                                                                                          Dec 22, 2021       4 - Beta                  pytest (>=3.7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docgen(271)                                  An RST Documentation Generator for pytest-based test suites                                                                                                                      Apr 17, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker(272)                                  Simple pytest fixtures for Docker and docker-compose based tests                                                                                                                 Jul 27, 2022       N/A                       pytest (<8.0,>=4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-apache-fixtures(273)                  Pytest fixtures for testing with apache2 (httpd).                                                                                                                                Feb 16, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-butla(274)                                                                                                                                                                                                             Jun 16, 2019       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dockerc(275)                                 Run, manage and stop Docker Compose project from Docker API                                                                                                                      Oct 09, 2020       5 - Production/Stable     pytest (>=3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-compose(276)                          Manages Docker containers during your integration tests                                                                                                                          Jan 26, 2021       5 - Production/Stable     pytest (>=3.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-db(277)                               A plugin to use docker databases for pytests                                                                                                                                     Mar 20, 2021       5 - Production/Stable     pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-fixtures(278)                         pytest docker fixtures                                                                                                                                                           Jul 06, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-git-fixtures(279)                     Pytest fixtures for testing with git scm.                                                                                                                                        Feb 09, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-haproxy-fixtures(280)                 Pytest fixtures for testing with haproxy.                                                                                                                                        Feb 09, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-pexpect(281)                          pytest plugin for writing functional tests with pexpect and docker                                                                                                               Jan 14, 2019       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-postgresql(282)                       A simple plugin to use with pytest                                                                                                                                               Sep 24, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-py(283)                               Easy to use, simple to extend, pytest plugin that minimally leverages docker-py.                                                                                                 Nov 27, 2018       N/A                       pytest (==4.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-registry-fixtures(284)                Pytest fixtures for testing with docker registries.                                                                                                                              Apr 08, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-service(285)                          pytest plugin to start docker container                                                                                                                                          Mar 21, 2022       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-squid-fixtures(286)                   Pytest fixtures for testing with squid.                                                                                                                                          Feb 09, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docker-tools(287)                            Docker integration tests for pytest                                                                                                                                              Feb 17, 2022       4 - Beta                  pytest (>=6.0.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docs(288)                                    Documentation tool for pytest                                                                                                                                                    Nov 11, 2018       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-docstyle(289)                                pytest plugin to run pydocstyle                                                                                                                                                  Mar 23, 2020       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-doctest-custom(290)                          A py.test plugin for customizing string representations of doctest results.                                                                                                      Jul 25, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-doctest-ellipsis-markers(291)                Setup additional values for ELLIPSIS_MARKER for doctests                                                                                                                         Jan 12, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-doctest-import(292)                          A simple pytest plugin to import names and add them to the doctest namespace.                                                                                                    Nov 13, 2018       4 - Beta                  pytest (>=3.3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-doctestplus(293)                             Pytest plugin with advanced doctest features.                                                                                                                                    Feb 25, 2022       3 - Alpha                 pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dolphin(294)                                 Some extra stuff that we use ininternally                                                                                                                                        Nov 30, 2016       4 - Beta                  pytest (==3.0.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-doorstop(295)                                A pytest plugin for adding test results into doorstop items.                                                                                                                     Jun 09, 2020       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dotenv(296)                                  A py.test plugin that parses environment files before running tests                                                                                                              Jun 16, 2020       4 - Beta                  pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-drf(297)                                     A Django REST framework plugin for pytest.                                                                                                                                       Jul 12, 2022       5 - Production/Stable     pytest (>=3.7)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-drivings(298)                                Tool to allow webdriver automation to be ran locally or remotely                                                                                                                 Jan 13, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-drop-dup-tests(299)                          A Pytest plugin to drop duplicated tests during collection                                                                                                                       May 23, 2020       4 - Beta                  pytest (>=2.7)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dummynet(300)                                A py.test plugin providing access to a dummynet.                                                                                                                                 Dec 15, 2021       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dump2json(301)                               A pytest plugin for dumping test results to json.                                                                                                                                Jun 29, 2015       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-duration-insights(302)                                                                                                                                                                                                        Jun 25, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-durations(303)                               Pytest plugin reporting fixtures and test functions execution time.                                                                                                              Apr 22, 2022       5 - Production/Stable     pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dynamicrerun(304)                            A pytest plugin to rerun tests dynamically based off of test outcome and output.                                                                                                 Aug 15, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-dynamodb(305)                                DynamoDB fixtures for pytest                                                                                                                                                     Jun 03, 2021       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-easy-addoption(306)                          pytest-easy-addoption: Easy way to work with pytest addoption                                                                                                                    Jan 22, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-easy-api(307)                                Simple API testing with pytest                                                                                                                                                   Mar 26, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-easyMPI(308)                                 Package that supports mpi tests in pytest                                                                                                                                        Oct 21, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-easyread(309)                                pytest plugin that makes terminal printouts of the reports easier to read                                                                                                        Nov 17, 2017       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-easy-server(310)                             Pytest plugin for easy testing against servers                                                                                                                                   May 01, 2021       4 - Beta                  pytest (<5.0.0,>=4.3.1) ; python_version < “3.5”
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ebics-sandbox(311)                           A pytest plugin for testing against an EBICS sandbox server.  Requires docker.                                                                                                   Aug 15, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ec2(312)                                     Pytest execution on EC2 instance                                                                                                                                                 Oct 22, 2019       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-echo(313)                                    pytest plugin with mechanisms for echoing environment variables, package version and generic attributes                                                                          Jan 08, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-elasticsearch(314)                           Elasticsearch fixtures and fixture factories for Pytest.                                                                                                                         Mar 01, 2022       5 - Production/Stable     pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-elements(315)                                Tool to help automate user interfaces                                                                                                                                            Jan 13, 2021       N/A                       pytest (>=5.4,<6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-eliot(316)                                   An eliot plugin for pytest.                                                                                                                                                      Aug 31, 2022       1 - Planning              pytest (>=5.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-elk-reporter(317)                            A simple plugin to use with pytest                                                                                                                                               Jan 24, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-email(318)                                   Send execution result email                                                                                                                                                      Jul 08, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-embedded(319)                                pytest embedded plugin                                                                                                                                                           Aug 23, 2022       N/A                       pytest (>=7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-embedded-arduino(320)                        pytest embedded plugin for Arduino projects                                                                                                                                      Aug 23, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-embedded-idf(321)                            pytest embedded plugin for esp-idf project                                                                                                                                       Aug 23, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-embedded-jtag(322)                           pytest embedded plugin for testing with jtag                                                                                                                                     Aug 23, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-embedded-qemu(323)                           pytest embedded plugin for qemu, not target chip                                                                                                                                 Aug 23, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-embedded-serial(324)                         pytest embedded plugin for testing serial ports                                                                                                                                  Aug 23, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-embedded-serial-esp(325)                     pytest embedded plugin for testing espressif boards via serial ports                                                                                                             Aug 23, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-embrace(326)                                 💝 Dataclasses-as-tests.  Describe the runtime once and multiply coverage with no boilerplate.                                                                                    Aug 27, 2022       N/A                       pytest (>=7.0,<8.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-emoji(327)                                   A pytest plugin that adds emojis to your test result report                                                                                                                      Feb 19, 2019       4 - Beta                  pytest (>=4.2.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-emoji-output(328)                            Pytest plugin to represent test output with emoji support                                                                                                                        Apr 12, 2022       4 - Beta                  pytest (==7.0.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-enabler(329)                                 Enable installed pytest plugins                                                                                                                                                  Jun 22, 2022       5 - Production/Stable     pytest (>=6) ; extra == ‘testing’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-encode(330)                                  set your encoding and logger                                                                                                                                                     Nov 06, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-encode-kane(331)                             set your encoding and logger                                                                                                                                                     Nov 16, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-enhancements(332)                            Improvements for pytest (rejected upstream)                                                                                                                                      Oct 30, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-env(333)                                     py.test plugin that allows you to add environment variables.                                                                                                                     Jun 16, 2017       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-envfiles(334)                                A py.test plugin that parses environment files before running tests                                                                                                              Oct 08, 2015       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-env-info(335)                                Push information about the running pytest into envvars                                                                                                                           Nov 25, 2017       4 - Beta                  pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-envraw(336)                                  py.test plugin that allows you to add environment variables.                                                                                                                     Aug 27, 2020       4 - Beta                  pytest (>=2.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-envvars(337)                                 Pytest plugin to validate use of envvars on your tests                                                                                                                           Jun 13, 2020       5 - Production/Stable     pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-env-yaml(338)                                                                                                                                                                                                                 Apr 02, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-eradicate(339)                               pytest plugin to check for commented out code                                                                                                                                    Sep 08, 2020       N/A                       pytest (>=2.4.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-error-for-skips(340)                         Pytest plugin to treat skipped tests a test failure                                                                                                                              Dec 19, 2019       4 - Beta                  pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-eth(341)                                     PyTest plugin for testing Smart Contracts for Ethereum Virtual Machine (EVM).                                                                                                    Aug 14, 2020       1 - Planning              N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ethereum(342)                                pytest-ethereum: Pytest library for ethereum projects.                                                                                                                           Jun 24, 2019       3 - Alpha                 pytest (==3.3.2); extra == ‘dev’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-eucalyptus(343)                              Pytest Plugin for BDD                                                                                                                                                            Jun 28, 2022       N/A                       pytest (>=4.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-eventlet(344)                                Applies eventlet monkey-patch as a pytest plugin.                                                                                                                                Oct 04, 2021       N/A                       pytest ; extra == ‘dev’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-excel(345)                                   pytest plugin for generating excel reports                                                                                                                                       Jan 31, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-exceptional(346)                             Better exceptions                                                                                                                                                                Mar 16, 2017       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-exception-script(347)                        Walk your code through exception script to check it’s resiliency to failures.                                                                                                    Aug 04, 2020       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-executable(348)                              pytest plugin for testing executables                                                                                                                                            Nov 10, 2021       4 - Beta                  pytest (<6.3,>=4.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-execution-timer(349)                         A timer for the phases of Pytest’s execution.                                                                                                                                    Dec 24, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-expect(350)                                  py.test plugin to store test expectations and mark tests based on them                                                                                                           Apr 21, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-expecter(351)                                Better testing with expecter and pytest.                                                                                                                                         Jan 10, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-expectr(352)                                 This plugin is used to expect multiple assert using pytest framework.                                                                                                            Oct 05, 2018       N/A                       pytest (>=2.4.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-experiments(353)                             A pytest plugin to help developers of research-oriented software projects keep track of the results of their numerical experiments.                                              Dec 13, 2021       4 - Beta                  pytest (>=6.2.5,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-explicit(354)                                A Pytest plugin to ignore certain marked tests by default                                                                                                                        Jun 15, 2021       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-exploratory(355)                             Interactive console for pytest.                                                                                                                                                  Feb 21, 2022       N/A                       pytest (>=6.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-extensions(356)                              A collection of helpers for pytest to ease testing                                                                                                                               Aug 17, 2022       4 - Beta                  pytest ; extra == ‘testing’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-external-blockers(357)                       a special outcome for tests that are blocked for external reasons                                                                                                                Oct 05, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-extra-durations(358)                         A pytest plugin to get durations on a per-function basis and per module basis.                                                                                                   Apr 21, 2020       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fabric(359)                                  Provides test utilities to run fabric task tests by using docker containers                                                                                                      Sep 12, 2018       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-factory(360)                                 Use factories for test setup with py.test                                                                                                                                        Sep 06, 2020       3 - Alpha                 pytest (>4.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-factoryboy(361)                              Factory Boy support for pytest.                                                                                                                                                  Jun 14, 2022       6 - Mature                pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-factoryboy-fixtures(362)                     Generates pytest fixtures that allow the use of type hinting                                                                                                                     Jun 25, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-factoryboy-state(363)                        Simple factoryboy random state management                                                                                                                                        Mar 22, 2022       5 - Production/Stable     pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-failed-screenshot(364)                       Test case fails,take a screenshot,save it,attach it to the allure                                                                                                                Apr 21, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-failed-to-verify(365)                        A pytest plugin that helps better distinguishing real test failures from setup flakiness.                                                                                        Aug 08, 2019       5 - Production/Stable     pytest (>=4.1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fail-slow(366)                               Fail tests that take too long to run                                                                                                                                             Aug 13, 2022       4 - Beta                  pytest (>=6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-faker(367)                                   Faker integration with the pytest framework.                                                                                                                                     Dec 19, 2016       6 - Mature                N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-falcon(368)                                  Pytest helpers for Falcon.                                                                                                                                                       Sep 07, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-falcon-client(369)                           Pytest ‘client‘ fixture for the Falcon Framework                                                                                                                                 Mar 19, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fantasy(370)                                 Pytest plugin for Flask Fantasy Framework                                                                                                                                        Mar 14, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fastapi(371)                                                                                                                                                                                                                  Dec 27, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fastapi-deps(372)                            A fixture which allows easy replacement of fastapi dependencies for testing                                                                                                      Jul 20, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fastest(373)                                 Use SCM and coverage to run only needed tests                                                                                                                                    Mar 05, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fast-first(374)                              Pytest plugin that runs fast tests first                                                                                                                                         Apr 02, 2021       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-faulthandler(375)                            py.test plugin that activates the fault handler module for tests (dummy package)                                                                                                 Jul 04, 2019       6 - Mature                pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fauxfactory(376)                             Integration of fauxfactory into pytest.                                                                                                                                          Dec 06, 2017       5 - Production/Stable     pytest (>=3.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-figleaf(377)                                 py.test figleaf coverage plugin                                                                                                                                                  Jan 18, 2010       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-filecov(378)                                 A pytest plugin to detect unused files                                                                                                                                           Jun 27, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-filedata(379)                                easily load data from files                                                                                                                                                      Jan 17, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-filemarker(380)                              A pytest plugin that runs marked tests when files change.                                                                                                                        Dec 01, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-filter-case(381)                             run test cases filter by mark                                                                                                                                                    Nov 05, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-filter-subpackage(382)                       Pytest plugin for filtering based on sub-packages                                                                                                                                Jan 09, 2020       3 - Alpha                 pytest (>=3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-find-dependencies(383)                       A pytest plugin to find dependencies between tests                                                                                                                               Apr 09, 2022       4 - Beta                  pytest (>=4.3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-finer-verdicts(384)                          A pytest plugin to treat non-assertion failures as test errors.                                                                                                                  Jun 18, 2020       N/A                       pytest (>=5.4.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-firefox(385)                                 pytest plugin to manipulate firefox                                                                                                                                              Aug 08, 2017       3 - Alpha                 pytest (>=3.0.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fixture-config(386)                          Fixture configuration utils for py.test                                                                                                                                          May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fixture-maker(387)                           Pytest plugin to load fixtures from YAML files                                                                                                                                   Sep 21, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fixture-marker(388)                          A pytest plugin to add markers based on fixtures used.                                                                                                                           Oct 11, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fixture-order(389)                           pytest plugin to control fixture evaluation order                                                                                                                                May 16, 2022       5 - Production/Stable     pytest (>=3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fixture-rtttg(390)                           Warn or fail on fixture name clash                                                                                                                                               Feb 23, 2022       N/A                       pytest (>=7.0.1,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fixtures(391)                                Common fixtures for pytest                                                                                                                                                       May 01, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fixture-tools(392)                           Plugin for pytest which provides tools for fixtures                                                                                                                              Aug 18, 2020       6 - Mature                pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fixture-typecheck(393)                       A pytest plugin to assert type annotations at runtime.                                                                                                                           Aug 24, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flake8(394)                                  pytest plugin to check FLAKE8 requirements                                                                                                                                       Mar 18, 2022       4 - Beta                  pytest (>=7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flake8-path(395)                             A pytest fixture for testing flake8 plugins.                                                                                                                                     May 11, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flake8-v2(396)                               pytest plugin to check FLAKE8 requirements                                                                                                                                       Mar 01, 2022       5 - Production/Stable     pytest (>=7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flakefinder(397)                             Runs tests multiple times to expose flakiness.                                                                                                                                   Jul 28, 2020       4 - Beta                  pytest (>=2.7.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flakes(398)                                  pytest plugin to check source code with pyflakes                                                                                                                                 Dec 02, 2021       5 - Production/Stable     pytest (>=5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flaptastic(399)                              Flaptastic py.test plugin                                                                                                                                                        Mar 17, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flask(400)                                   A set of py.test fixtures to test Flask applications.                                                                                                                            Feb 27, 2021       5 - Production/Stable     pytest (>=5.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flask-ligand(401)                            Pytest fixtures and helper functions to use for testing flask-ligand microservices.                                                                                              Aug 18, 2022       4 - Beta                  pytest (~=7.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flask-sqlalchemy(402)                        A pytest plugin for preserving test isolation in Flask-SQlAlchemy using database transactions.                                                                                   Apr 30, 2022       4 - Beta                  pytest (>=3.2.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flask-sqlalchemy-transactions(403)           Run tests in transactions using pytest, Flask, and SQLalchemy.                                                                                                                   Aug 02, 2018       4 - Beta                  pytest (>=3.2.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fluent(404)                                  A pytest plugin in order to provide logs via fluentd                                                                                                                             Jul 12, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-flyte(405)                                   Pytest fixtures for simplifying Flyte integration testing                                                                                                                        May 03, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-focus(406)                                   A pytest plugin that alerts user of failed test cases with screen notifications                                                                                                  May 04, 2019       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-forcefail(407)                               py.test plugin to make the test failing regardless of pytest.mark.xfail                                                                                                          May 15, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-forward-compatability(408)                   A name to avoid typosquating pytest-foward-compatibility                                                                                                                         Sep 06, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-forward-compatibility(409)                   A pytest plugin to shim pytest commandline options for fowards compatibility                                                                                                     Sep 29, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-freezegun(410)                               Wrap tests with fixtures in freeze_time                                                                                                                                          Jul 19, 2020       4 - Beta                  pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-freeze-reqs(411)                             Check if requirement files are frozen                                                                                                                                            Apr 29, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-frozen-uuids(412)                            Deterministically frozen UUID’s for your tests                                                                                                                                   Apr 17, 2022       N/A                       pytest (>=3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-func-cov(413)                                Pytest plugin for measuring function coverage                                                                                                                                    Apr 15, 2021       3 - Alpha                 pytest (>=5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-funparam(414)                                An alternative way to parametrize test cases.                                                                                                                                    Dec 02, 2021       4 - Beta                  pytest >=4.6.0
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fxa(415)                                     pytest plugin for Firefox Accounts                                                                                                                                               Aug 28, 2018       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fxtest(416)                                                                                                                                                                                                                   Oct 27, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-fzf(417)                                     fzf-based test selector for pytest                                                                                                                                               Aug 17, 2022       1 - Planning              pytest (>=7.1.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-gather-fixtures(418)                         set up asynchronous pytest fixtures concurrently                                                                                                                                 Apr 12, 2022       N/A                       pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-gc(419)                                      The garbage collector plugin for py.test                                                                                                                                         Feb 01, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-gcov(420)                                    Uses gcov to measure test coverage of a C library                                                                                                                                Feb 01, 2018       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-gevent(421)                                  Ensure that gevent is properly patched when invoking pytest                                                                                                                      Feb 25, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-gherkin(422)                                 A flexible framework for executing BDD gherkin tests                                                                                                                             Jul 27, 2019       3 - Alpha                 pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-gh-log-group(423)                            pytest plugin for gh actions                                                                                                                                                     Jan 11, 2022       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ghostinspector(424)                          For finding/executing Ghost Inspector tests                                                                                                                                      May 17, 2016       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-girder(425)                                  A set of pytest fixtures for testing Girder applications.                                                                                                                        Aug 23, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-git(426)                                     Git repository fixture for py.test                                                                                                                                               May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-gitcov(427)                                  Pytest plugin for reporting on coverage of the last git commit.                                                                                                                  Jan 11, 2020       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-git-fixtures(428)                            Pytest fixtures for testing with git.                                                                                                                                            Mar 11, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-github(429)                                  Plugin for py.test that associates tests with github issues using a marker.                                                                                                      Mar 07, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-github-actions-annotate-failures(430)        pytest plugin to annotate failed tests with a workflow command for GitHub Actions                                                                                                Jul 02, 2022       N/A                       pytest (>=4.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-github-report(431)                           Generate a GitHub report using pytest in GitHub Workflows                                                                                                                        Jun 03, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-gitignore(432)                               py.test plugin to ignore the same files as git                                                                                                                                   Jul 17, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-glamor-allure(433)                           Extends allure-pytest functionality                                                                                                                                              Jul 22, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-gnupg-fixtures(434)                          Pytest fixtures for testing with gnupg.                                                                                                                                          Mar 04, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-golden(435)                                  Plugin for pytest that offloads expected outputs to data files                                                                                                                   Jul 18, 2022       N/A                       pytest (>=6.1.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-google-chat(436)                             Notify google chat channel for test results                                                                                                                                      Mar 27, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-graphql-schema(437)                          Get graphql schema as fixture for pytest                                                                                                                                         Oct 18, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-greendots(438)                               Green progress dots                                                                                                                                                              Feb 08, 2014       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-growl(439)                                   Growl notifications for pytest results.                                                                                                                                          Jan 13, 2014       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-grpc(440)                                    pytest plugin for grpc                                                                                                                                                           May 01, 2020       N/A                       pytest (>=3.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-hammertime(441)                              Display “🔨 ” instead of “.” for passed pytest tests.                                                                                                                             Jul 28, 2018       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-harvest(442)                                 Store data created during your pytest tests execution, and retrieve it at the end of the session, e.g.  for applicative benchmarking purposes.                                   Jun 10, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-helm-chart(443)                              A plugin to provide different types and configs of Kubernetes clusters that can be used for testing.                                                                             Jun 15, 2020       4 - Beta                  pytest (>=5.4.2,<6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-helm-charts(444)                             A plugin to provide different types and configs of Kubernetes clusters that can be used for testing.                                                                             Aug 03, 2022       4 - Beta                  pytest (>=7.1.2,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-helper(445)                                  Functions to help in using the pytest testing framework                                                                                                                          May 31, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-helpers(446)                                 pytest helpers                                                                                                                                                                   May 17, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-helpers-namespace(447)                       Pytest Helpers Namespace Plugin                                                                                                                                                  Dec 29, 2021       5 - Production/Stable     pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-hidecaptured(448)                            Hide captured output                                                                                                                                                             May 04, 2018       4 - Beta                  pytest (>=2.8.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-historic(449)                                Custom report to display pytest historical execution records                                                                                                                     Apr 08, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-historic-hook(450)                           Custom listener to store execution results into MYSQL DB, which is used for pytest-historic report                                                                               Apr 08, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-homeassistant(451)                           A pytest plugin for use with homeassistant custom components.                                                                                                                    Aug 12, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-homeassistant-custom-component(452)          Experimental package to automatically extract test plugins for Home Assistant custom components                                                                                  Sep 09, 2022       3 - Alpha                 pytest (==7.1.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-honey(453)                                   A simple plugin to use with pytest                                                                                                                                               Jan 07, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-honors(454)                                  Report on tests that honor constraints, and guard against regressions                                                                                                            Mar 06, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-hoverfly(455)                                Simplify working with Hoverfly from pytest                                                                                                                                       Mar 28, 2022       N/A                       pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-hoverfly-wrapper(456)                        Integrates the Hoverfly HTTP proxy into Pytest                                                                                                                                   Feb 22, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-hpfeeds(457)                                 Helpers for testing hpfeeds in your python project                                                                                                                               Aug 27, 2021       4 - Beta                  pytest (>=6.2.4,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-html(458)                                    pytest plugin for generating HTML reports                                                                                                                                        Dec 13, 2020       5 - Production/Stable     pytest (!=6.0.0,>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-html-lee(459)                                optimized pytest plugin for generating HTML reports                                                                                                                              Jun 30, 2020       5 - Production/Stable     pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-html-merger(460)                             Pytest HTML reports merging utility                                                                                                                                              Apr 03, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-html-object-storage(461)                     Pytest report plugin for send HTML report on object-storage                                                                                                                      Mar 04, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-html-profiling(462)                          Pytest plugin for generating HTML reports with per-test profiling and optionally call graph visualizations.  Based on pytest-html by Dave Hunt.                                  Feb 11, 2020       5 - Production/Stable     pytest (>=3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-html-reporter(463)                           Generates a static html report based on pytest framework                                                                                                                         Feb 13, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-html-report-merger(464)                                                                                                                                                                                                       Aug 31, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-html-thread(465)                             pytest plugin for generating HTML reports                                                                                                                                        Dec 29, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-http(466)                                    Fixture “http” for http requests                                                                                                                                                 Dec 05, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-httpbin(467)                                 Easily test your HTTP library against a local copy of httpbin                                                                                                                    Mar 16, 2022       5 - Production/Stable     pytest ; extra == ‘test’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-http-mocker(468)                             Pytest plugin for http mocking (via ‘https://github.com/vilus/mocker’)                                                                                                           Oct 20, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-httpretty(469)                               A thin wrapper of HTTPretty for pytest                                                                                                                                           Feb 16, 2014       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-httpserver(470)                              pytest-httpserver is a httpserver for pytest                                                                                                                                     Jul 29, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-httpx(471)                                   Send responses to httpx.                                                                                                                                                         May 24, 2022       5 - Production/Stable     pytest (<8.*,>=6.*)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-httpx-blockage(472)                          Disable httpx requests during a test run                                                                                                                                         Nov 16, 2021       N/A                       pytest (>=6.2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-hue(473)                                     Visualise PyTest status via your Phillips Hue lights                                                                                                                             May 09, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-hylang(474)                                  Pytest plugin to allow running tests written in hylang                                                                                                                           Mar 28, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-hypo-25(475)                                 help hypo module for pytest                                                                                                                                                      Jan 12, 2020       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ibutsu(476)                                  A plugin to sent pytest results to an Ibutsu server                                                                                                                              Aug 05, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-icdiff(477)                                  use icdiff for better error messages in pytest assertions                                                                                                                        Aug 09, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-idapro(478)                                  A pytest plugin for idapython.  Allows a pytest setup to run tests outside and inside IDA in an automated manner by runnig pytest inside IDA and by mocking idapython api        Nov 03, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-idem(479)                                    A pytest plugin to help with testing idem projects                                                                                                                               Sep 07, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-idempotent(480)                              Pytest plugin for testing function idempotence.                                                                                                                                  Jul 25, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ignore-flaky(481)                            ignore failures from flaky tests (pytest plugin)                                                                                                                                 Apr 23, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-image-diff(482)                                                                                                                                                                                                               Jun 08, 2022       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-incremental(483)                             an incremental test runner (pytest plugin)                                                                                                                                       Apr 24, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-influxdb(484)                                Plugin for influxdb and pytest integration.                                                                                                                                      Apr 20, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-info-collector(485)                          pytest plugin to collect information from tests                                                                                                                                  May 26, 2019       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-informative-node(486)                        display more node ininformation.                                                                                                                                                 Apr 25, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-infrastructure(487)                          pytest stack validation prior to testing executing                                                                                                                               Apr 12, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ini(488)                                     Reuse pytest.ini to store env variables                                                                                                                                          Apr 26, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-inmanta(489)                                 A py.test plugin providing fixtures to simplify inmanta modules testing.                                                                                                         Sep 07, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-inmanta-extensions(490)                      Inmanta tests package                                                                                                                                                            Aug 10, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-inmanta-lsm(491)                             Common fixtures for inmanta LSM related modules                                                                                                                                  Sep 07, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-inmanta-yang(492)                            Common fixtures used in inmanta yang related modules                                                                                                                             Jun 16, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-Inomaly(493)                                 A simple image diff plugin for pytest                                                                                                                                            Feb 13, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-insta(494)                                   A practical snapshot testing plugin for pytest                                                                                                                                   Feb 28, 2022       N/A                       pytest (>=6.0.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-instafail(495)                               pytest plugin to show failures instantly                                                                                                                                         Jun 14, 2020       4 - Beta                  pytest (>=2.9)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-instrument(496)                              pytest plugin to instrument tests                                                                                                                                                Apr 05, 2020       5 - Production/Stable     pytest (>=5.1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-integration(497)                             Organizing pytests by integration or not                                                                                                                                         Apr 16, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-integration-mark(498)                        Automatic integration test marking and excluding plugin for pytest                                                                                                               Jul 19, 2021       N/A                       pytest (>=5.2,<7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-interactive(499)                             A pytest plugin for console based interactive test selection just after the collection phase                                                                                     Nov 30, 2017       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-intercept-remote(500)                        Pytest plugin for intercepting outgoing connection requests during pytest run.                                                                                                   May 24, 2021       4 - Beta                  pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-invenio(501)                                 “Pytest fixtures for Invenio.”                                                                                                                                                   Aug 09, 2022       5 - Production/Stable     pytest (<7,>=6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-involve(502)                                 Run tests covering a specific file or changeset                                                                                                                                  Feb 02, 2020       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ipdb(503)                                    A py.test plug-in to enable drop to ipdb debugger on test failure.                                                                                                               Sep 02, 2014       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ipynb(504)                                   THIS PROJECT IS ABANDONED                                                                                                                                                        Jan 29, 2019       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-isort(505)                                   py.test plugin to check import ordering using isort                                                                                                                              Feb 08, 2022       5 - Production/Stable     pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-is-running(506)                              pytest plugin providing a function to check if pytest is running.                                                                                                                Aug 19, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-it(507)                                      Pytest plugin to display test reports as a plaintext spec, inspired by Rspec: ‘https://github.com/mattduck/pytest-it’.                                                           Jan 22, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-iterassert(508)                              Nicer list and iterable assertion messages for pytest                                                                                                                            May 11, 2020       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-iters(509)                                   A contextmanager pytest fixture for handling multiple mock iters                                                                                                                 May 24, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-jasmine(510)                                 Run jasmine tests from your pytest test suite                                                                                                                                    Nov 04, 2017       1 - Planning              N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-jest(511)                                    A custom jest-pytest oriented Pytest reporter                                                                                                                                    May 22, 2018       4 - Beta                  pytest (>=3.3.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-jira(512)                                    py.test JIRA integration plugin, using markers                                                                                                                                   Apr 07, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-jira-xray(513)                               pytest plugin to integrate tests with JIRA XRAY                                                                                                                                  Aug 25, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-jobserver(514)                               Limit parallel tests with posix jobserver.                                                                                                                                       May 15, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-joke(515)                                    Test failures are better served with humor.                                                                                                                                      Oct 08, 2019       4 - Beta                  pytest (>=4.2.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-json(516)                                    Generate JSON test reports                                                                                                                                                       Jan 18, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-json-fixtures(517)                           JSON output for the –fixtures flag                                                                                                                                               Aug 09, 2022       4 - Beta                  pytest (>=7.1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-jsonlint(518)                                UNKNOWN                                                                                                                                                                          Aug 04, 2016       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-json-report(519)                             A pytest plugin to report test results as JSON files                                                                                                                             Mar 15, 2022       4 - Beta                  pytest (>=3.8.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-kafka(520)                                   Zookeeper, Kafka server, and Kafka consumer fixtures for Pytest                                                                                                                  Aug 24, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-kafkavents(521)                              A plugin to send pytest events to Kafka                                                                                                                                          Sep 08, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-kexi(522)                                                                                                                                                                                                                     Apr 29, 2022       N/A                       pytest (>=7.1.2,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-kind(523)                                    Kubernetes test support with KIND for pytest                                                                                                                                     Sep 08, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-kivy(524)                                    Kivy GUI tests fixtures using pytest                                                                                                                                             Jul 06, 2021       4 - Beta                  pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-knows(525)                                   A pytest plugin that can automaticly skip test case based on dependence info calculated by trace                                                                                 Aug 22, 2014       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-konira(526)                                  Run Konira DSL tests with py.test                                                                                                                                                Oct 09, 2011       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-krtech-common(527)                           pytest krtech common library                                                                                                                                                     Nov 28, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-kwparametrize(528)                           Alternate syntax for @pytest.mark.parametrize with test cases as dictionaries and default value fallbacks                                                                        Jan 22, 2021       N/A                       pytest (>=6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-lambda(529)                                  Define pytest fixtures with lambda functions.                                                                                                                                    Aug 20, 2022       3 - Alpha                 pytest (>=3.6,<8)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-lamp(530)                                                                                                                                                                                                                     Jan 06, 2017       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-launchable(531)                              Launchable Pytest Plugin                                                                                                                                                         Jun 14, 2022       N/A                       pytest (>=4.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-layab(532)                                   Pytest fixtures for layab.                                                                                                                                                       Oct 05, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-lazy-fixture(533)                            It helps to use fixtures in pytest.mark.parametrize                                                                                                                              Feb 01, 2020       4 - Beta                  pytest (>=3.2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ldap(534)                                    python-ldap fixtures for pytest                                                                                                                                                  Aug 18, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-leak-finder(535)                             Find the previous test that makes another to fail                                                                                                                                Apr 18, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-leaks(536)                                   A pytest plugin to trace resource leaks.                                                                                                                                         Nov 27, 2019       1 - Planning              N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-level(537)                                   Select tests of a given level or lower                                                                                                                                           Oct 21, 2019       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-libfaketime(538)                             A python-libfaketime plugin for pytest.                                                                                                                                          Dec 22, 2018       4 - Beta                  pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-libiio(539)                                  A pytest plugin to manage interfacing with libiio contexts                                                                                                                       Jul 11, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-libnotify(540)                               Pytest plugin that shows notifications about the test run                                                                                                                        Apr 02, 2021       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ligo(541)                                                                                                                                                                                                                     Jan 16, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-lineno(542)                                  A pytest plugin to show the line numbers of test functions                                                                                                                       Dec 04, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-line-profiler(543)                           Profile code executed by pytest                                                                                                                                                  May 03, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-line-profiler-apn(544)                       Profile code executed by pytest                                                                                                                                                  Aug 14, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-lisa(545)                                    Pytest plugin for organizing tests.                                                                                                                                              Jan 21, 2021       3 - Alpha                 pytest (>=6.1.2,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-listener(546)                                A simple network listener                                                                                                                                                        May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-litf(547)                                    A pytest plugin that stream output in LITF format                                                                                                                                Jan 18, 2021       4 - Beta                  pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-live(548)                                    Live results for pytest                                                                                                                                                          Mar 08, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-localftpserver(549)                          A PyTest plugin which provides an FTP fixture for your tests                                                                                                                     Aug 25, 2021       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-localserver(550)                             pytest plugin to test server connections locally.                                                                                                                                Aug 30, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-localstack(551)                              Pytest plugin for AWS integration tests                                                                                                                                          Aug 22, 2019       4 - Beta                  pytest (>=3.3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-lockable(552)                                lockable resource plugin for pytest                                                                                                                                              Jul 20, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-locker(553)                                  Used to lock object during testing.  Essentially changing assertions from being hard coded to asserting that nothing changed                                                     Oct 29, 2021       N/A                       pytest (>=5.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-log(554)                                     print log                                                                                                                                                                        Aug 15, 2021       N/A                       pytest (>=3.8)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-logbook(555)                                 py.test plugin to capture logbook log messages                                                                                                                                   Nov 23, 2015       5 - Production/Stable     pytest (>=2.8)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-logdog(556)                                  Pytest plugin to test logging                                                                                                                                                    Jun 15, 2021       1 - Planning              pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-logfest(557)                                 Pytest plugin providing three logger fixtures with basic or full writing to log files                                                                                            Jul 21, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-logger(558)                                  Plugin configuring handlers for loggers from Python logging module.                                                                                                              Jul 25, 2019       4 - Beta                  pytest (>=3.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-logging(559)                                 Configures logging and allows tweaking the log level with a py.test flag                                                                                                         Nov 04, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-log-report(560)                              Package for creating a pytest test run reprot                                                                                                                                    Dec 26, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-loguru(561)                                  Pytest Loguru                                                                                                                                                                    Apr 12, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-loop(562)                                    pytest plugin for looping tests                                                                                                                                                  Jul 22, 2022       5 - Production/Stable     pytest (>=6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-lsp(563)                                     Pytest plugin for end-to-end testing of language servers                                                                                                                         Jul 18, 2022       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-manual-marker(564)                           pytest marker for marking manual tests                                                                                                                                           Aug 04, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-markdoctest(565)                             A pytest plugin to doctest your markdown files                                                                                                                                   Jul 22, 2022       4 - Beta                  pytest (>=6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-markdown(566)                                Test your markdown docs with pytest                                                                                                                                              Jan 15, 2021       4 - Beta                  pytest (>=6.0.1,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-markdown-docs(567)                           Run markdown code fences through pytest                                                                                                                                          Sep 02, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-marker-bugzilla(568)                         py.test bugzilla integration plugin, using markers                                                                                                                               Jan 09, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-markers-presence(569)                        A simple plugin to detect missed pytest tags and markers”                                                                                                                        Feb 04, 2021       4 - Beta                  pytest (>=6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-markfiltration(570)                          UNKNOWN                                                                                                                                                                          Nov 08, 2011       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mark-no-py3(571)                             pytest plugin and bowler codemod to help migrate tests to Python 3                                                                                                               May 17, 2019       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-marks(572)                                   UNKNOWN                                                                                                                                                                          Nov 23, 2012       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-matcher(573)                                 Match test output against patterns stored in files                                                                                                                               Dec 10, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-match-skip(574)                              Skip matching marks.  Matches partial marks using wildcards.                                                                                                                     May 15, 2019       4 - Beta                  pytest (>=4.4.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mat-report(575)                              this is report                                                                                                                                                                   Jan 20, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-matrix(576)                                  Provide tools for generating tests from combinations of fixtures.                                                                                                                Jun 24, 2020       5 - Production/Stable     pytest (>=5.4.3,<6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-maybe-raises(577)                            Pytest fixture for optional exception testing.                                                                                                                                   May 27, 2022       N/A                       pytest ; extra == ‘dev’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mccabe(578)                                  pytest plugin to run the mccabe code complexity checker.                                                                                                                         Jul 22, 2020       3 - Alpha                 pytest (>=5.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-md(579)                                      Plugin for generating Markdown reports for pytest results                                                                                                                        Jul 11, 2019       3 - Alpha                 pytest (>=4.2.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-md-report(580)                               A pytest plugin to make a test results report with Markdown table format.                                                                                                        Aug 06, 2022       4 - Beta                  pytest (!=6.0.0,<8,>=3.3.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-memprof(581)                                 Estimates memory consumption of test functions                                                                                                                                   Mar 29, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-memray(582)                                  A simple plugin to use with pytest                                                                                                                                               Aug 21, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-menu(583)                                    A pytest plugin for console based interactive test selection just after the collection phase                                                                                     Oct 04, 2017       3 - Alpha                 pytest (>=2.4.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mercurial(584)                               pytest plugin to write integration tests for projects using Mercurial Python internals                                                                                           Nov 21, 2020       1 - Planning              N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mesh(585)                                    pytest_mesh插件                                                                                                                                                                  Aug 05, 2022       N/A                       pytest (==7.1.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-message(586)                                 Pytest plugin for sending report message of marked tests execution                                                                                                               Aug 04, 2022       N/A                       pytest (>=6.2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-messenger(587)                               Pytest to Slack reporting plugin                                                                                                                                                 Feb 07, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-metadata(588)                                pytest plugin for test session metadata                                                                                                                                          Jul 15, 2022       5 - Production/Stable     pytest (>=3.0.0,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-metrics(589)                                 Custom metrics report for pytest                                                                                                                                                 Apr 04, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mimesis(590)                                 Mimesis integration with the pytest test runner                                                                                                                                  Mar 21, 2020       5 - Production/Stable     pytest (>=4.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-minecraft(591)                               A pytest plugin for running tests against Minecraft releases                                                                                                                     Apr 06, 2022       N/A                       pytest (>=6.0.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-missing-fixtures(592)                        Pytest plugin that creates missing fixtures                                                                                                                                      Oct 14, 2020       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ml(593)                                      Test your machine learning!                                                                                                                                                      May 04, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mocha(594)                                   pytest plugin to display test execution output like a mochajs                                                                                                                    Apr 02, 2020       4 - Beta                  pytest (>=5.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mock(595)                                    Thin-wrapper around the mock package for easier use with pytest                                                                                                                  Jul 05, 2022       5 - Production/Stable     pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mock-api(596)                                A mock API server with configurable routes and responses available as a fixture.                                                                                                 Feb 13, 2019       1 - Planning              pytest (>=4.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mock-generator(597)                          A pytest fixture wrapper for ‘https://pypi.org/project/mock-generator’                                                                                                           May 16, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mock-helper(598)                             Help you mock HTTP call and generate mock code                                                                                                                                   Jan 24, 2018       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mockito(599)                                 Base fixtures for mockito                                                                                                                                                        Jul 11, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mockredis(600)                               An in-memory mock of a Redis server that runs in a separate thread.  This is to be used for unit-tests that require a Redis database.                                            Jan 02, 2018       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mock-resources(601)                          A pytest plugin for easily instantiating reproducible mock resources.                                                                                                            Aug 24, 2022       N/A                       pytest (>=1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mock-server(602)                             Mock server plugin for pytest                                                                                                                                                    Jan 09, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mockservers(603)                             A set of fixtures to test your requests to HTTP/UDP servers                                                                                                                      Mar 31, 2020       N/A                       pytest (>=4.3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-modified-env(604)                            Pytest plugin to fail a test if it leaves modified ‘os.environ‘ afterwards.                                                                                                      Jan 29, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-modifyjunit(605)                             Utility for adding additional properties to junit xml for IDM QE                                                                                                                 Jan 10, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-modifyscope(606)                             pytest plugin to modify fixture scope                                                                                                                                            Apr 12, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-molecule(607)                                PyTest Molecule Plugin :: discover and run molecule tests                                                                                                                        Mar 29, 2022       5 - Production/Stable     pytest (>=7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mongo(608)                                   MongoDB process and client fixtures plugin for Pytest.                                                                                                                           Jun 07, 2021       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mongodb(609)                                 pytest plugin for MongoDB fixtures                                                                                                                                               Dec 07, 2019       5 - Production/Stable     pytest (>=2.5.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-monitor(610)                                 Pytest plugin for analyzing resource usage.                                                                                                                                      May 18, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-monkeyplus(611)                              pytest’s monkeypatch subclass with extra functionalities                                                                                                                         Sep 18, 2012       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-monkeytype(612)                              pytest-monkeytype: Generate Monkeytype annotations from your pytest tests.                                                                                                       Jul 29, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-moto(613)                                    Fixtures for integration tests of AWS services,uses moto mocking library.                                                                                                        Aug 28, 2015       1 - Planning              N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-motor(614)                                   A pytest plugin for motor, the non-blocking MongoDB driver.                                                                                                                      Jul 21, 2021       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mp(615)                                      A test batcher for multiprocessed Pytest runs                                                                                                                                    May 23, 2018       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mpi(616)                                     pytest plugin to collect information from tests                                                                                                                                  Jan 08, 2022       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mpl(617)                                     pytest plugin to help with testing figures output from Matplotlib                                                                                                                Jul 23, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mproc(618)                                   low-startup-overhead, scalable, distributed-testing pytest plugin                                                                                                                Sep 04, 2022       4 - Beta                  pytest (>=6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-multi-check(619)                             Pytest-плагин, реализует возможность мульти проверок и мягких проверок                                                                                                           Jul 12, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-multihost(620)                               Utility for writing multi-host tests for pytest                                                                                                                                  Apr 07, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-multilog(621)                                Multi-process logs handling and other helpers for pytest                                                                                                                         Jun 10, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-multithreading(622)                          a pytest plugin for th and concurrent testing                                                                                                                                    Aug 12, 2021       N/A                       pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-multithreading-allure(623)                   pytest_multithreading_allure                                                                                                                                                     Mar 22, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mutagen(624)                                 Add the mutation testing feature to pytest                                                                                                                                       Jul 24, 2020       N/A                       pytest (>=5.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mypy(625)                                    Mypy static type checker plugin for Pytest                                                                                                                                       Feb 07, 2022       4 - Beta                  pytest (>=6.2) ; python_version >= “3.10”
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mypyd(626)                                   Mypy static type checker plugin for Pytest                                                                                                                                       Aug 20, 2019       4 - Beta                  pytest (<4.7,>=2.8) ; python_version < “3.5”
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mypy-plugins(627)                            pytest plugin for writing tests for mypy plugins                                                                                                                                 Aug 15, 2022       4 - Beta                  pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mypy-plugins-shim(628)                       Substitute for “pytest-mypy-plugins” for Python implementations which aren’t supported by mypy.                                                                                  Apr 12, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mypy-testing(629)                            Pytest plugin to check mypy output.                                                                                                                                              May 30, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-mysql(630)                                   MySQL process and client fixtures for pytest                                                                                                                                     Feb 15, 2022       5 - Production/Stable     pytest (>=6.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-needle(631)                                  pytest plugin for visual testing websites using selenium                                                                                                                         Dec 10, 2018       4 - Beta                  pytest (<5.0.0,>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-neo(632)                                     pytest-neo is a plugin for pytest that shows tests like screen of Matrix.                                                                                                        Jan 08, 2022       3 - Alpha                 pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-network(633)                                 A simple plugin to disable network on socket level.                                                                                                                              May 07, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-network-endpoints(634)                       Network endpoints plugin for pytest                                                                                                                                              Mar 06, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-never-sleep(635)                             pytest plugin helps to avoid adding tests without mock ‘time.sleep‘                                                                                                              May 05, 2021       3 - Alpha                 pytest (>=3.5.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nginx(636)                                   nginx fixture for pytest                                                                                                                                                         Aug 12, 2017       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nginx-iplweb(637)                            nginx fixture for pytest - iplweb temporary fork                                                                                                                                 Mar 01, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ngrok(638)                                                                                                                                                                                                                    Jan 20, 2022       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ngsfixtures(639)                             pytest ngs fixtures                                                                                                                                                              Sep 06, 2019       2 - Pre-Alpha             pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nhsd-apim(640)                               Pytest plugin accessing NHSDigital’s APIM proxies                                                                                                                                Aug 23, 2022       N/A                       pytest (==6.2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nice(641)                                    A pytest plugin that alerts user of failed test cases with screen notifications                                                                                                  May 04, 2019       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nice-parametrize(642)                        A small snippet for nicer PyTest’s Parametrize                                                                                                                                   Apr 17, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nlcov(643)                                   Pytest plugin to get the coverage of the new lines (based on git diff) only                                                                                                      Jul 07, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nocustom(644)                                Run all tests without custom markers                                                                                                                                             Jul 07, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nodev(645)                                   Test-driven source code search for Python.                                                                                                                                       Jul 21, 2016       4 - Beta                  pytest (>=2.8.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nogarbage(646)                               Ensure a test produces no garbage                                                                                                                                                Aug 29, 2021       5 - Production/Stable     pytest (>=4.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-notice(647)                                  Send pytest execution result email                                                                                                                                               Nov 05, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-notification(648)                            A pytest plugin for sending a desktop notification and playing a sound upon completion of tests                                                                                  Jun 19, 2020       N/A                       pytest (>=4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-notifier(649)                                A pytest plugin to notify test result                                                                                                                                            Jun 12, 2020       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-notimplemented(650)                          Pytest markers for not implemented features and tests.                                                                                                                           Aug 27, 2019       N/A                       pytest (>=5.1,<6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-notion(651)                                  A PyTest Reporter to send test runs to Notion.so                                                                                                                                 Aug 07, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-nunit(652)                                   A pytest plugin for generating NUnit3 test result XML output                                                                                                                     Jul 26, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-object-getter(653)                           Import any object from a 3rd party module while mocking its namespace on demand.                                                                                                 Jul 31, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ochrus(654)                                  pytest results data-base and HTML reporter                                                                                                                                       Feb 21, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-odoo(655)                                    py.test plugin to run Odoo tests                                                                                                                                                 Feb 08, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-odoo-fixtures(656)                           Project description                                                                                                                                                              Jun 25, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-oerp(657)                                    pytest plugin to test OpenERP modules                                                                                                                                            Feb 28, 2012       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ok(658)                                      The ultimate pytest output plugin                                                                                                                                                Apr 01, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-only(659)                                    Use @pytest.mark.only to run a single test                                                                                                                                       Jun 14, 2022       5 - Production/Stable     pytest (<7.1); python_version <= “3.6”
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-oot(660)                                     Run object-oriented tests in a simple format                                                                                                                                     Sep 18, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-openfiles(661)                               Pytest plugin for detecting inadvertent open file handles                                                                                                                        Apr 16, 2020       3 - Alpha                 pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-opentelemetry(662)                           A pytest plugin for instrumenting test runs via OpenTelemetry                                                                                                                    Sep 07, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-opentmi(663)                                 pytest plugin for publish results to opentmi                                                                                                                                     Jun 02, 2022       5 - Production/Stable     pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-operator(664)                                Fixtures for Operators                                                                                                                                                           Aug 17, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-optional(665)                                include/exclude values of fixtures in pytest                                                                                                                                     Oct 07, 2015       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-optional-tests(666)                          Easy declaration of optional tests (i.e., that are not run by default)                                                                                                           Jul 09, 2019       4 - Beta                  pytest (>=4.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-orchestration(667)                           A pytest plugin for orchestrating tests                                                                                                                                          Jul 18, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-order(668)                                   pytest plugin to run your tests in a specific order                                                                                                                              Jan 09, 2022       4 - Beta                  pytest (>=5.0) ; python_version < “3.10”
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ordering(669)                                pytest plugin to run your tests in a specific order                                                                                                                              Nov 14, 2018       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-osxnotify(670)                               OS X notifications for py.test results.                                                                                                                                          May 15, 2015       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-otel(671)                                    pytest-otel report OpenTelemetry traces about test executed                                                                                                                      May 26, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-owner(672)                                   Add owner mark for tests                                                                                                                                                         Apr 25, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pact(673)                                    A simple plugin to use with pytest                                                                                                                                               Jan 07, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pahrametahrize(674)                          Parametrize your tests with a Boston accent.                                                                                                                                     Nov 24, 2021       4 - Beta                  pytest (>=6.0,<7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-parallel(675)                                a pytest plugin for parallel and concurrent testing                                                                                                                              Oct 10, 2021       3 - Alpha                 pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-parallel-39(676)                             a pytest plugin for parallel and concurrent testing                                                                                                                              Jul 12, 2021       3 - Alpha                 pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-param(677)                                   pytest plugin to test all, first, last or random params                                                                                                                          Sep 11, 2016       4 - Beta                  pytest (>=2.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-paramark(678)                                Configure pytest fixtures using a combination of”parametrize” and markers                                                                                                        Jan 10, 2020       4 - Beta                  pytest (>=4.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-parametrization(679)                         Simpler PyTest parametrization                                                                                                                                                   May 22, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-parametrize-cases(680)                       A more user-friendly way to write parametrized tests.                                                                                                                            Mar 13, 2022       N/A                       pytest (>=6.1.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-parametrized(681)                            Pytest plugin for parametrizing tests with default iterables.                                                                                                                    Oct 19, 2020       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-parawtf(682)                                 Finally spell paramete?ri[sz]e correctly                                                                                                                                         Dec 03, 2018       4 - Beta                  pytest (>=3.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pass(683)                                    Check out ‘https://github.com/elilutsky/pytest-pass’                                                                                                                             Dec 04, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-passrunner(684)                              Pytest plugin providing the ‘run_on_pass’ marker                                                                                                                                 Feb 10, 2021       5 - Production/Stable     pytest (>=4.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-paste-config(685)                            Allow setting the path to a paste config file                                                                                                                                    Sep 18, 2013       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-patches(686)                                 A contextmanager pytest fixture for handling multiple mock patches                                                                                                               Aug 30, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pdb(687)                                     pytest plugin which adds pdb helper commands related to pytest.                                                                                                                  Jul 31, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-peach(688)                                   pytest plugin for fuzzing with Peach API Security                                                                                                                                Apr 12, 2019       4 - Beta                  pytest (>=2.8.7)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pep257(689)                                  py.test plugin for pep257                                                                                                                                                        Jul 09, 2016       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pep8(690)                                    pytest plugin to check PEP8 requirements                                                                                                                                         Apr 27, 2014       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-percent(691)                                 Change the exit code of pytest test sessions when a required percent of tests pass.                                                                                              May 21, 2020       N/A                       pytest (>=5.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-perf(692)                                    pytest-perf                                                                                                                                                                      Jun 23, 2022       5 - Production/Stable     pytest (>=6) ; extra == ‘testing’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-performance(693)                             A simple plugin to ensure the execution of critical sections of code has not been impacted                                                                                       Sep 11, 2020       5 - Production/Stable     pytest (>=3.7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-persistence(694)                             Pytest tool for persistent objects                                                                                                                                               Jun 27, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pg(695)                                      A tiny plugin for pytest which runs PostgreSQL in Docker                                                                                                                         Jun 07, 2022       5 - Production/Stable     pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pgsql(696)                                   Pytest plugins and helpers for tests using a Postgres database.                                                                                                                  May 13, 2020       5 - Production/Stable     pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-phmdoctest(697)                              pytest plugin to test Python examples in Markdown using phmdoctest.                                                                                                              Apr 15, 2022       4 - Beta                  pytest (>=5.4.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-picked(698)                                  Run the tests related to the changed files                                                                                                                                       Dec 23, 2020       N/A                       pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pigeonhole(699)                                                                                                                                                                                                               Jun 25, 2018       5 - Production/Stable     pytest (>=3.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pikachu(700)                                 Show surprise when tests are passing                                                                                                                                             Aug 05, 2021       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pilot(701)                                   Slice in your test base thanks to powerful markers.                                                                                                                              Oct 09, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pings(702)                                   🦊 The pytest plugin for Firefox Telemetry 📊                                                                                                                                      Jun 29, 2019       3 - Alpha                 pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pinned(703)                                  A simple pytest plugin for pinning tests                                                                                                                                         Sep 17, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pinpoint(704)                                A pytest plugin which runs SBFL algorithms to detect faults.                                                                                                                     Sep 25, 2020       N/A                       pytest (>=4.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pipeline(705)                                Pytest plugin for functional testing of data analysispipelines                                                                                                                   Jan 24, 2017       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-platform-markers(706)                        Markers for pytest to skip tests on specific platforms                                                                                                                           Sep 09, 2019       4 - Beta                  pytest (>=3.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-play(707)                                    pytest plugin that let you automate actions and assertions with test metrics reporting executing plain YAML files                                                                Jun 12, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-playbook(708)                                Pytest plugin for reading playbooks.                                                                                                                                             Jan 21, 2021       3 - Alpha                 pytest (>=6.1.2,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-playwright(709)                              A pytest wrapper with fixtures for Playwright to automate web browsers                                                                                                           Mar 16, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-playwrights(710)                             A pytest wrapper with fixtures for Playwright to automate web browsers                                                                                                           Dec 02, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-playwright-snapshot(711)                     A pytest wrapper for snapshot testing with playwright                                                                                                                            Aug 19, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-playwright-visual(712)                       A pytest fixture for visual testing with Playwright                                                                                                                              Apr 28, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-plt(713)                                     Fixtures for quickly making Matplotlib plots in tests                                                                                                                            Aug 17, 2020       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-plugin-helpers(714)                          A plugin to help developing and testing other plugins                                                                                                                            Nov 23, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-plus(715)                                    PyTest Plus Plugin :: extends pytest functionality                                                                                                                               Mar 19, 2020       5 - Production/Stable     pytest (>=3.50)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pmisc(716)                                                                                                                                                                                                                    Mar 21, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pointers(717)                                Pytest plugin to define functions you test with special marks for better navigation and reports                                                                                  Oct 14, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-polarion-cfme(718)                           pytest plugin for collecting test cases and recording test results                                                                                                               Nov 13, 2017       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-polarion-collect(719)                        pytest plugin for collecting polarion test cases data                                                                                                                            Jun 18, 2020       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-polecat(720)                                 Provides Polecat pytest fixtures                                                                                                                                                 Aug 12, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ponyorm(721)                                 PonyORM in Pytest                                                                                                                                                                Oct 31, 2018       N/A                       pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-poo(722)                                     Visualize your crappy tests                                                                                                                                                      Mar 25, 2021       5 - Production/Stable     pytest (>=2.3.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-poo-fail(723)                                Visualize your failed tests with poo                                                                                                                                             Feb 12, 2015       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pop(724)                                     A pytest plugin to help with testing pop projects                                                                                                                                Aug 18, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-portion(725)                                 Select a portion of the collected tests                                                                                                                                          Jan 28, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-postgres(726)                                Run PostgreSQL in Docker container in Pytest.                                                                                                                                    Mar 22, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-postgresql(727)                              Postgresql fixtures and fixture factories for Pytest.                                                                                                                            Mar 11, 2022       5 - Production/Stable     pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-power(728)                                   pytest plugin with powerful fixtures                                                                                                                                             Dec 31, 2020       N/A                       pytest (>=5.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-prefer-nested-dup-tests(729)                 A Pytest plugin to drop duplicated tests during collection, but will prefer keeping nested packages.                                                                             Apr 27, 2022       4 - Beta                  pytest (>=7.1.1,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pretty-terminal(730)                         pytest plugin for generating prettier terminal output                                                                                                                            Jan 31, 2022       N/A                       pytest (>=3.4.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pride(731)                                   Minitest-style test colors                                                                                                                                                       Apr 02, 2016       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-print(732)                                   pytest-print adds the printer fixture you can use to print messages to the user (directly to the pytest runner, not stdout)                                                      Dec 28, 2021       5 - Production/Stable     pytest (>=6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-profiles(733)                                pytest plugin for configuration profiles                                                                                                                                         Dec 09, 2021       4 - Beta                  pytest (>=3.7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-profiling(734)                               Profiling plugin for py.test                                                                                                                                                     May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-progress(735)                                pytest plugin for instant test progress status                                                                                                                                   Jan 31, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-prometheus(736)                              Report test pass / failures to a Prometheus PushGateway                                                                                                                          Oct 03, 2017       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-prometheus-pushgateway(737)                  Pytest report plugin for Zulip                                                                                                                                                   Sep 01, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-prosper(738)                                 Test helpers for Prosper projects                                                                                                                                                Sep 24, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pspec(739)                                   A rspec format reporter for Python ptest                                                                                                                                         Jun 02, 2020       4 - Beta                  pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-psqlgraph(740)                               pytest plugin for testing applications that use psqlgraph                                                                                                                        Oct 19, 2021       4 - Beta                  pytest (>=6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ptera(741)                                   Use ptera probes in tests                                                                                                                                                        Mar 01, 2022       N/A                       pytest (>=6.2.4,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pudb(742)                                    Pytest PuDB debugger integration                                                                                                                                                 Oct 25, 2018       3 - Alpha                 pytest (>=2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-purkinje(743)                                py.test plugin for purkinje test runner                                                                                                                                          Oct 28, 2017       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pycharm(744)                                 Plugin for py.test to enter PyCharm debugger on uncaught exceptions                                                                                                              Aug 13, 2020       5 - Production/Stable     pytest (>=2.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pycodestyle(745)                             pytest plugin to run pycodestyle                                                                                                                                                 Mar 13, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pydev(746)                                   py.test plugin to connect to a remote debug server with PyDev or PyCharm.                                                                                                        Nov 15, 2017       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pydocstyle(747)                              pytest plugin to run pydocstyle                                                                                                                                                  Mar 13, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pylint(748)                                  pytest plugin to check source code with pylint                                                                                                                                   Sep 10, 2022       5 - Production/Stable     pytest (>=5.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pymysql-autorecord(749)                      Record PyMySQL queries and mock with the stored data.                                                                                                                            Sep 02, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pyodide(750)                                 “Pytest plugin for testing applications that use Pyodide”                                                                                                                        Sep 08, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pypi(751)                                    Easily test your HTTP library against a local copy of pypi                                                                                                                       Mar 04, 2018       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pypom-navigation(752)                        Core engine for cookiecutter-qa and pytest-play packages                                                                                                                         Feb 18, 2019       4 - Beta                  pytest (>=3.0.7)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pyppeteer(753)                               A plugin to run pyppeteer in pytest                                                                                                                                              Apr 28, 2022       N/A                       pytest (>=6.2.5,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pyq(754)                                     Pytest fixture “q” for pyq                                                                                                                                                       Mar 10, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pyramid(755)                                 pytest_pyramid - provides fixtures for testing pyramid applications with pytest test suite                                                                                       Oct 15, 2021       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pyramid-server(756)                          Pyramid server fixture for py.test                                                                                                                                               May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pyright(757)                                 Pytest plugin for type checking code with Pyright                                                                                                                                Aug 16, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pytestrail(758)                              Pytest plugin for interaction with TestRail                                                                                                                                      Aug 27, 2020       4 - Beta                  pytest (>=3.8.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pythonpath(759)                              pytest plugin for adding to the PYTHONPATH from command line or configs.                                                                                                         Feb 10, 2022       5 - Production/Stable     pytest (<7,>=2.5.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-pytorch(760)                                 pytest plugin for a better developer experience when working with the PyTorch test suite                                                                                         May 25, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-qasync(761)                                  Pytest support for qasync.                                                                                                                                                       Jul 12, 2021       4 - Beta                  pytest (>=5.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-qatouch(762)                                 Pytest plugin for uploading test results to your QA Touch Testrun.                                                                                                               Jun 26, 2021       4 - Beta                  pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-qgis(763)                                    A pytest plugin for testing QGIS python plugins                                                                                                                                  Jun 26, 2022       5 - Production/Stable     pytest (>=6.2.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-qml(764)                                     Run QML Tests with pytest                                                                                                                                                        Dec 02, 2020       4 - Beta                  pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-qr(765)                                      pytest plugin to generate test result QR codes                                                                                                                                   Nov 25, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-qt(766)                                      pytest support for PyQt and PySide applications                                                                                                                                  Jun 23, 2022       5 - Production/Stable     pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-qt-app(767)                                  QT app fixture for py.test                                                                                                                                                       Dec 23, 2015       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-quarantine(768)                              A plugin for pytest to manage expected test failures                                                                                                                             Nov 24, 2019       5 - Production/Stable     pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-quickcheck(769)                              pytest plugin to generate random data inspired by QuickCheck                                                                                                                     Nov 15, 2020       4 - Beta                  pytest (<6.0.0,>=4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rabbitmq(770)                                RabbitMQ process and client fixtures for pytest                                                                                                                                  Feb 11, 2022       5 - Production/Stable     pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-race(771)                                    Race conditions tester for pytest                                                                                                                                                Jun 07, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rage(772)                                    pytest plugin to implement PEP712                                                                                                                                                Oct 21, 2011       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rail(773)                                    pytest plugin for creating TestRail runs and adding results                                                                                                                      May 02, 2022       N/A                       pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-railflow-testrail-reporter(774)              Generate json reports along with specified metadata defined in test markers.                                                                                                     Jun 29, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-raises(775)                                  An implementation of pytest.raises as a pytest.mark fixture                                                                                                                      Apr 23, 2020       N/A                       pytest (>=3.2.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-raisesregexp(776)                            Simple pytest plugin to look for regex in Exceptions                                                                                                                             Dec 18, 2015       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-raisin(777)                                  Plugin enabling the use of exception instances with pytest.raises                                                                                                                Feb 06, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-random(778)                                  py.test plugin to randomize tests                                                                                                                                                Apr 28, 2013       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-randomly(779)                                Pytest plugin to randomly order tests and control random.seed.                                                                                                                   May 11, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-randomness(780)                              Pytest plugin about random seed management                                                                                                                                       May 30, 2019       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-random-num(781)                              Randomise the order in which pytest tests are run with some control over the randomness                                                                                          Oct 19, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-random-order(782)                            Randomise the order in which pytest tests are run with some control over the randomness                                                                                          Nov 30, 2018       5 - Production/Stable     pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-readme(783)                                  Test your README.md file                                                                                                                                                         Sep 02, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reana(784)                                   Pytest fixtures for REANA.                                                                                                                                                       May 16, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-recording(785)                               A pytest plugin that allows you recording of network interactions via VCR.py                                                                                                     Jun 20, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-recordings(786)                              Provides pytest plugins for reporting request/response traffic, screenshots, and more to ReportPortal                                                                            Aug 13, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-redis(787)                                   Redis fixtures and fixture factories for Pytest.                                                                                                                                 Feb 10, 2022       5 - Production/Stable     pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-redislite(788)                               Pytest plugin for testing code using Redis                                                                                                                                       Apr 05, 2022       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-redmine(789)                                 Pytest plugin for redmine                                                                                                                                                        Mar 19, 2018       1 - Planning              N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ref(790)                                     A plugin to store reference files to ease regression testing                                                                                                                     Nov 23, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reference-formatter(791)                     Conveniently run pytest with a dot-formatted test reference.                                                                                                                     Oct 01, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-regex-dependency(792)                        Management of Pytest dependencies via regex patterns                                                                                                                             Jun 12, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-regressions(793)                             Easy to use fixtures to write regression tests.                                                                                                                                  Jan 19, 2022       5 - Production/Stable     pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-regtest(794)                                 pytest plugin for regression tests                                                                                                                                               Jul 08, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-relative-order(795)                          a pytest plugin that sorts tests using “before” and “after” markers                                                                                                              May 17, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-relaxed(796)                                 Relaxed test discovery/organization for pytest                                                                                                                                   Jun 14, 2019       5 - Production/Stable     pytest (<5,>=3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-remfiles(797)                                Pytest plugin to create a temporary directory with remote files                                                                                                                  Jul 01, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-remotedata(798)                              Pytest plugin for controlling remote data access.                                                                                                                                Dec 21, 2021       3 - Alpha                 pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-remote-response(799)                         Pytest plugin for capturing and mocking connection requests.                                                                                                                     Jun 05, 2022       4 - Beta                  pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-remove-stale-bytecode(800)                   py.test plugin to remove stale byte code files.                                                                                                                                  Mar 04, 2020       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reorder(801)                                 Reorder tests depending on their paths and names.                                                                                                                                May 31, 2018       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-repeat(802)                                  pytest plugin for repeating tests                                                                                                                                                Oct 31, 2020       5 - Production/Stable     pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-replay(803)                                  Saves previous test runs and allow re-execute previous pytest runs to reproduce crashes or flaky tests                                                                           Jun 09, 2021       4 - Beta                  pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-repo-health(804)                             A pytest plugin to report on repository standards conformance                                                                                                                    Dec 16, 2021       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-report(805)                                  Creates json report that is compatible with atom.io’s linter message format                                                                                                      May 11, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reporter(806)                                Generate Pytest reports with templates                                                                                                                                           Jul 22, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reporter-html1(807)                          A basic HTML report template for Pytest                                                                                                                                          Jun 08, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reportinfra(808)                             Pytest plugin for reportinfra                                                                                                                                                    Aug 11, 2019       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reporting(809)                               A plugin to report summarized results in a table format                                                                                                                          Oct 25, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reportlog(810)                               Replacement for the –resultlog option, focused in simplicity and extensibility                                                                                                   Dec 11, 2020       3 - Alpha                 pytest (>=5.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-report-me(811)                               A pytest plugin to generate report.                                                                                                                                              Dec 31, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-report-parameters(812)                       pytest plugin for adding tests’ parameters to junit report                                                                                                                       Jun 18, 2020       3 - Alpha                 pytest (>=2.4.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reportportal(813)                            Agent for Reporting results of tests to the Report Portal                                                                                                                        Jun 24, 2022       N/A                       pytest (>=3.8.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reqs(814)                                    pytest plugin to check pinned requirements                                                                                                                                       May 12, 2019       N/A                       pytest (>=2.4.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-requests(815)                                A simple plugin to use with pytest                                                                                                                                               Jun 24, 2019       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-requestselapsed(816)                         collect and show http requests elapsed time                                                                                                                                      Aug 14, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-requests-futures(817)                        Pytest Plugin to Mock Requests Futures                                                                                                                                           Jul 06, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-requires(818)                                A pytest plugin to elegantly skip tests with optional requirements                                                                                                               Dec 21, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reraise(819)                                 Make multi-threaded pytest test cases fail when they should                                                                                                                      Jun 17, 2021       5 - Production/Stable     pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rerun(820)                                   Re-run only changed files in specified branch                                                                                                                                    Jul 08, 2019       N/A                       pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rerunfailures(821)                           pytest plugin to re-run tests to eliminate flaky failures                                                                                                                        Sep 17, 2021       5 - Production/Stable     pytest (>=5.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rerunfailures-all-logs(822)                  pytest plugin to re-run tests to eliminate flaky failures                                                                                                                        Mar 07, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-resilient-circuits(823)                      Resilient Circuits fixtures for PyTest.                                                                                                                                          Aug 12, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-resource(824)                                Load resource fixture plugin to use with pytest                                                                                                                                  Nov 14, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-resource-path(825)                           Provides path for uniform access to test resources in isolated directory                                                                                                         May 01, 2021       5 - Production/Stable     pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-responsemock(826)                            Simplified requests calls mocking for pytest                                                                                                                                     Mar 10, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-responses(827)                               py.test integration for responses                                                                                                                                                Apr 26, 2021       N/A                       pytest (>=2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rest-api(828)                                                                                                                                                                                                                 Aug 08, 2022       N/A                       pytest (>=7.1.2,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-restrict(829)                                Pytest plugin to restrict the test types allowed                                                                                                                                 May 11, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rethinkdb(830)                               A RethinkDB plugin for pytest.                                                                                                                                                   Jul 24, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-retry(831)                                   Adds the ability to retry flaky tests in CI environments                                                                                                                         Aug 16, 2022       N/A                       pytest (>=7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-reverse(832)                                 Pytest plugin to reverse test order.                                                                                                                                             May 11, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rich(833)                                    Leverage rich for richer test session output                                                                                                                                     Mar 03, 2022       4 - Beta                  pytest (>=7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rich-reporter(834)                           A pytest plugin using Rich for beautiful test result formatting.                                                                                                                 Feb 17, 2022       1 - Planning              pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ringo(835)                                   pytest plugin to test webapplications using the Ringo webframework                                                                                                               Sep 27, 2017       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rmsis(836)                                   Sycronise pytest results to Jira RMsis                                                                                                                                           Aug 10, 2022       N/A                       pytest (>=5.3.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rng(837)                                     Fixtures for seeding tests and making randomness reproducible                                                                                                                    Aug 08, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-roast(838)                                   pytest plugin for ROAST configuration override and fixtures                                                                                                                      Jul 29, 2021       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rocketchat(839)                              Pytest to Rocket.Chat reporting plugin                                                                                                                                           Apr 18, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rotest(840)                                  Pytest integration with rotest                                                                                                                                                   Sep 08, 2019       N/A                       pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rpc(841)                                     Extend py.test for RPC OpenStack testing.                                                                                                                                        Feb 22, 2019       4 - Beta                  pytest (~=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rst(842)                                     Test code from RST documents with pytest                                                                                                                                         Aug 02, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rt(843)                                      pytest data collector plugin for Testgr                                                                                                                                          May 05, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-rts(844)                                     Coverage-based regression test selection (RTS) plugin for pytest                                                                                                                 May 17, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-run-changed(845)                             Pytest plugin that runs changed tests only                                                                                                                                       Apr 02, 2021       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-runfailed(846)                               implement a –failed option for pytest                                                                                                                                            Mar 24, 2016       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-runner(847)                                  Invoke py.test as distutils command with dependency resolution                                                                                                                   Feb 25, 2022       5 - Production/Stable     pytest (>=6) ; extra == ‘testing’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-run-subprocess(848)                          Pytest Plugin for running and testing subprocesses.                                                                                                                              Jul 03, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-runtime-xfail(849)                           Call runtime_xfail() to mark running test as xfail.                                                                                                                              Aug 26, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-saccharin(850)                               pytest-saccharin is a updated fork of pytest-sugar, a plugin for pytest that changes the default look and feel of pytest (e.g.  progressbar, show tests that fail instantly).    May 10, 2022       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-salt(851)                                    Pytest Salt Plugin                                                                                                                                                               Jan 27, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-salt-containers(852)                         A Pytest plugin that builds and creates docker containers                                                                                                                        Nov 09, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-salt-factories(853)                          Pytest Salt Plugin                                                                                                                                                               Aug 25, 2022       4 - Beta                  pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-salt-from-filenames(854)                     Simple PyTest Plugin For Salt’s Test Suite Specifically                                                                                                                          Jan 29, 2019       4 - Beta                  pytest (>=4.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-salt-runtests-bridge(855)                    Simple PyTest Plugin For Salt’s Test Suite Specifically                                                                                                                          Dec 05, 2019       4 - Beta                  pytest (>=4.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sanic(856)                                   a pytest plugin for Sanic                                                                                                                                                        Oct 25, 2021       N/A                       pytest (>=5.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sanity(857)                                                                                                                                                                                                                   Dec 07, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sa-pg(858)                                                                                                                                                                                                                    May 14, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sbase(859)                                   A complete web automation framework for end-to-end testing.                                                                                                                      Sep 09, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-scenario(860)                                pytest plugin for test scenarios                                                                                                                                                 Feb 06, 2017       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-schema(861)                                  👍 Validate return values against a schema-like object in testing                                                                                                                 Mar 14, 2022       5 - Production/Stable     pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-securestore(862)                             An encrypted password store for use within pytest cases                                                                                                                          Nov 08, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-select(863)                                  A pytest plugin which allows to (de-)select tests from a file.                                                                                                                   Jan 18, 2019       3 - Alpha                 pytest (>=3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-selenium(864)                                pytest plugin for Selenium                                                                                                                                                       Mar 28, 2022       5 - Production/Stable     pytest (>=6.0.0,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-seleniumbase(865)                            A complete web automation framework for end-to-end testing.                                                                                                                      Sep 09, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-selenium-enhancer(866)                       pytest plugin for Selenium                                                                                                                                                       Apr 29, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-selenium-pdiff(867)                          A pytest package implementing perceptualdiff for Selenium tests.                                                                                                                 Apr 06, 2017       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-send-email(868)                              Send pytest execution result email                                                                                                                                               Dec 04, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sentry(869)                                  A pytest plugin to send testrun information to Sentry.io                                                                                                                         Apr 21, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-server-fixtures(870)                         Extensible server fixures for py.test                                                                                                                                            May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-serverless(871)                              Automatically mocks resources from serverless.yml in pytest using moto.                                                                                                          May 09, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-servers(872)                                 pytest servers                                                                                                                                                                   Aug 22, 2022       3 - Alpha                 pytest (==7.1.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-services(873)                                Services plugin for pytest testing framework                                                                                                                                     Oct 30, 2020       6 - Mature                N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-session2file(874)                            pytest-session2file (aka: pytest-session_to_file for v0.1.0 - v0.1.2) is a py.test plugin for capturing and saving to file the stdout of py.test.                                Jan 26, 2021       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-session-fixture-globalize(875)               py.test plugin to make session fixtures behave as if written in conftest, even if it is written in some modules                                                                  May 15, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-session_to_file(876)                         pytest-session_to_file is a py.test plugin for capturing and saving to file the stdout of py.test.                                                                               Oct 01, 2015       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sftpserver(877)                              py.test plugin to locally test sftp server connections.                                                                                                                          Sep 16, 2019       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-shard(878)                                                                                                                                                                                                                    Dec 11, 2020       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sharkreport(879)                             this is pytest report plugin.                                                                                                                                                    Jul 11, 2022       N/A                       pytest (>=3.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-shell(880)                                   A pytest plugin to help with testing shell scripts / black box commands                                                                                                          Mar 27, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-shell-utilities(881)                         Pytest plugin to simplify running shell commands against the system                                                                                                              Jul 28, 2022       4 - Beta                  pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sheraf(882)                                  Versatile ZODB abstraction layer - pytest fixtures                                                                                                                               Feb 11, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sherlock(883)                                pytest plugin help to find coupled tests                                                                                                                                         Nov 18, 2021       5 - Production/Stable     pytest (>=3.5.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-shortcuts(884)                               Expand command-line shortcuts listed in pytest configuration                                                                                                                     Oct 29, 2020       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-shutil(885)                                  A goodie-bag of unix shell and environment tools for py.test                                                                                                                     May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-simplehttpserver(886)                        Simple pytest fixture to spin up an HTTP server                                                                                                                                  Jun 24, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-simple-plugin(887)                           Simple pytest plugin                                                                                                                                                             Nov 27, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-simple-settings(888)                         simple-settings plugin for pytest                                                                                                                                                Nov 17, 2020       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-single-file-logging(889)                     Allow for multiple processes to log to a single file                                                                                                                             May 05, 2016       4 - Beta                  pytest (>=2.8.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-skip-markers(890)                            Pytest Salt Plugin                                                                                                                                                               May 09, 2022       5 - Production/Stable     pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-skipper(891)                                 A plugin that selects only tests with changes in execution path                                                                                                                  Mar 26, 2017       3 - Alpha                 pytest (>=3.0.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-skippy(892)                                  Automatically skip tests that don’t need to run!                                                                                                                                 Jan 27, 2018       3 - Alpha                 pytest (>=2.3.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-skip-slow(893)                               A pytest plugin to skip <`@pytest.mark.slow>‘ tests by default.                                                                                                                  Apr 26, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-slack(894)                                   Pytest to Slack reporting plugin                                                                                                                                                 Dec 15, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-slow(895)                                    A pytest plugin to skip <`@pytest.mark.slow>‘ tests by default.                                                                                                                  Sep 28, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-smartcollect(896)                            A plugin for collecting tests that touch changed code                                                                                                                            Oct 04, 2018       N/A                       pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-smartcov(897)                                Smart coverage plugin for pytest.                                                                                                                                                Sep 30, 2017       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-smell(898)                                   Automated bad smell detection tool for Pytest                                                                                                                                    Jun 26, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-smtp(899)                                    Send email with pytest execution result                                                                                                                                          Feb 20, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-snail(900)                                   Plugin for adding a marker to slow running tests. 🐌                                                                                                                              Nov 04, 2019       3 - Alpha                 pytest (>=5.0.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-snapci(901)                                  py.test plugin for Snap-CI                                                                                                                                                       Nov 12, 2015       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-snapshot(902)                                A plugin for snapshot testing with pytest.                                                                                                                                       Apr 23, 2022       4 - Beta                  pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-snmpserver(903)                                                                                                                                                                                                               May 12, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-snowflake-bdd(904)                           Setup test data and run tests on snowflake in BDD style!                                                                                                                         Jan 05, 2022       4 - Beta                  pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-socket(905)                                  Pytest Plugin to disable socket calls during tests                                                                                                                               Jan 23, 2022       4 - Beta                  pytest (>=3.6.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sofaepione(906)                              Test the installation of SOFA and the SofaEpione plugin.                                                                                                                         Aug 17, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-soft-assertions(907)                                                                                                                                                                                                          May 05, 2020       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-solidity(908)                                A PyTest library plugin for Solidity language.                                                                                                                                   Jan 15, 2022       1 - Planning              pytest (<7,>=6.0.1) ; extra == ‘tests’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-solr(909)                                    Solr process and client fixtures for py.test.                                                                                                                                    May 11, 2020       3 - Alpha                 pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sorter(910)                                  A simple plugin to first execute tests that historically failed more                                                                                                             Apr 20, 2021       4 - Beta                  pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sosu(911)                                    Unofficial PyTest plugin for Sauce Labs                                                                                                                                          Apr 11, 2022       2 - Pre-Alpha             pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sourceorder(912)                             Test-ordering plugin for pytest                                                                                                                                                  Sep 01, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-spark(913)                                   pytest plugin to run the tests with support of pyspark.                                                                                                                          Feb 23, 2020       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-spawner(914)                                 py.test plugin to spawn process and communicate with them.                                                                                                                       Jul 31, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-spec(915)                                    Library pytest-spec is a pytest plugin to display test execution output like a SPECIFICATION.                                                                                    May 04, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-spec2md(916)                                 Library pytest-spec2md is a pytest plugin to create a markdown specification while running pytest.                                                                               Jun 26, 2022       N/A                       pytest (>7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-speed(917)                                   Modern benchmarking library for python with pytest integration.                                                                                                                  Jul 06, 2022       3 - Alpha                 pytest (>=7)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sphinx(918)                                  Doctest plugin for pytest with support for Sphinx-specific doctest-directives                                                                                                    Sep 06, 2022       4 - Beta                  pytest (>=7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-spiratest(919)                               Exports unit tests as test runs in SpiraTest/Team/Plan                                                                                                                           Feb 08, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-splinter(920)                                Splinter plugin for pytest testing framework                                                                                                                                     Sep 09, 2022       6 - Mature                pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-splinter4(921)                               Pytest plugin for the splinter automation library                                                                                                                                Jun 11, 2022       6 - Mature                pytest (<8.0,>=7.1.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-split(922)                                   Pytest plugin which splits the test suite to equally sized sub suites based on test execution time.                                                                              Apr 22, 2022       4 - Beta                  pytest (>=5,<8)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-splitio(923)                                 Split.io SDK integration for e2e tests                                                                                                                                           Sep 22, 2020       N/A                       pytest (<7,>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-split-tests(924)                             A Pytest plugin for running a subset of your tests by splitting them in to equally sized groups.  Forked from Mark Adams’ original project pytest-test-groups.                   Jul 30, 2021       5 - Production/Stable     pytest (>=2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-split-tests-tresorit(925)                                                                                                                                                                                                     Feb 22, 2021       1 - Planning              N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-splunk-addon(926)                            A Dynamic test tool for Splunk Apps and Add-ons                                                                                                                                  Sep 08, 2022       N/A                       pytest (>5.4.0,<6.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-splunk-addon-ui-smartx(927)                  Library to support testing Splunk Add-on UX                                                                                                                                      Mar 16, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-splunk-env(928)                              pytest fixtures for interaction with Splunk Enterprise and Splunk Cloud                                                                                                          Oct 22, 2020       N/A                       pytest (>=6.1.1,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sqitch(929)                                  sqitch for pytest                                                                                                                                                                Apr 06, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sqlalchemy(930)                              pytest plugin with sqlalchemy related fixtures                                                                                                                                   Mar 13, 2018       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sqlalchemy-mock(931)                         pytest sqlalchemy plugin for mock                                                                                                                                                Aug 10, 2022       3 - Alpha                 pytest (>=2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sql-bigquery(932)                            Yet another SQL-testing framework for BigQuery provided by pytest plugin                                                                                                         Dec 19, 2019       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-squadcast(933)                               Pytest report plugin for Squadcast                                                                                                                                               Feb 22, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-srcpaths(934)                                Add paths to sys.path                                                                                                                                                            Oct 15, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ssh(935)                                     pytest plugin for ssh command run                                                                                                                                                May 27, 2019       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-start-from(936)                              Start pytest run from a given point                                                                                                                                              Apr 11, 2016       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-statsd(937)                                  pytest plugin for reporting to graphite                                                                                                                                          Nov 30, 2018       5 - Production/Stable     pytest (>=3.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-stepfunctions(938)                           A small description                                                                                                                                                              May 08, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-steps(939)                                   Create step-wise / incremental tests in pytest.                                                                                                                                  Sep 23, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-stepwise(940)                                Run a test suite one failing test at a time.                                                                                                                                     Dec 01, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-stf(941)                                     pytest plugin for openSTF                                                                                                                                                        Sep 09, 2022       N/A                       pytest (>=5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-stoq(942)                                    A plugin to pytest stoq                                                                                                                                                          Feb 09, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-stress(943)                                  A Pytest plugin that allows you to loop tests for a user defined amount of time.                                                                                                 Dec 07, 2019       4 - Beta                  pytest (>=3.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-structlog(944)                               Structured logging assertions                                                                                                                                                    Sep 21, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-structmpd(945)                               provide structured temporary directory                                                                                                                                           Oct 17, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-stub(946)                                    Stub packages, modules and attributes.                                                                                                                                           Apr 28, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-stubprocess(947)                             Provide stub implementations for subprocesses in Python tests                                                                                                                    Sep 17, 2018       3 - Alpha                 pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-study(948)                                   A pytest plugin to organize long run tests (named studies) without interfering the regular tests                                                                                 Sep 26, 2017       3 - Alpha                 pytest (>=2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-subprocess(949)                              A plugin to fake subprocess for pytest                                                                                                                                           Feb 09, 2022       5 - Production/Stable     pytest (>=4.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-subtesthack(950)                             A hack to explicitly set up and tear down fixtures.                                                                                                                              Jul 16, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-subtests(951)                                unittest subTest() support and subtests fixture                                                                                                                                  May 26, 2022       4 - Beta                  pytest (>=7.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-subunit(952)                                 pytest-subunit is a plugin for py.test which outputs testsresult in subunit format.                                                                                              Aug 29, 2017       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sugar(953)                                   pytest-sugar is a plugin for pytest that changes the default look and feel of pytest (e.g.  progressbar, show tests that fail instantly).                                        Jul 10, 2022       3 - Alpha                 pytest (>=2.9)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-sugar-bugfix159(954)                         Workaround for ‘https://github.com/Frozenball/pytest-sugar/issues/159’                                                                                                           Nov 07, 2018       5 - Production/Stable     pytest (!=3.7.3,>=3.5); extra == ‘testing’
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-super-check(955)                             Pytest plugin to check your TestCase classes call super in setUp, tearDown, etc.                                                                                                 May 11, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-svn(956)                                     SVN repository fixture for py.test                                                                                                                                               May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-symbols(957)                                 pytest-symbols is a pytest plugin that adds support for passing test environment symbols into pytest tests.                                                                      Nov 20, 2017       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-system-statistics(958)                       Pytest plugin to track and report system usage statistics                                                                                                                        Feb 16, 2022       5 - Production/Stable     pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-system-test-plugin(959)                      Pyst - Pytest System-Test Plugin                                                                                                                                                 Feb 03, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-takeltest(960)                               Fixtures for ansible, testinfra and molecule                                                                                                                                     Jan 04, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-talisker(961)                                                                                                                                                                                                                 Nov 28, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tap(962)                                     Test Anything Protocol (TAP) reporting plugin for pytest                                                                                                                         Oct 27, 2021       5 - Production/Stable     pytest (>=3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tape(963)                                    easy assertion with expected results saved to yaml files                                                                                                                         Mar 17, 2021       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-target(964)                                  Pytest plugin for remote target orchestration.                                                                                                                                   Jan 21, 2021       3 - Alpha                 pytest (>=6.1.2,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tblineinfo(965)                              tblineinfo is a py.test plugin that insert the node id in the final py.test report when –tb=line option is used                                                                  Dec 01, 2015       3 - Alpha                 pytest (>=2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-teamcity-logblock(966)                       py.test plugin to introduce block structure in teamcity build log, if output is not captured                                                                                     May 15, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-telegram(967)                                Pytest to Telegram reporting plugin                                                                                                                                              Dec 10, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tempdir(968)                                 Predictable and repeatable tempdir support.                                                                                                                                      Oct 11, 2019       4 - Beta                  pytest (>=2.8.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-terra-fixt(969)                              Terraform and Terragrunt fixtures for pytest                                                                                                                                     Sep 09, 2022       N/A                       pytest (==6.2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-terraform(970)                               A pytest plugin for using terraform fixtures                                                                                                                                     Sep 01, 2022       N/A                       pytest (>=6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-terraform-fixture(971)                       generate terraform resources to use with pytest                                                                                                                                  Nov 14, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testbook(972)                                A plugin to run tests written in Jupyter notebook                                                                                                                                Dec 11, 2016       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testconfig(973)                              Test configuration plugin for pytest.                                                                                                                                            Jan 11, 2020       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testdirectory(974)                           A py.test plugin providing temporary directories in unit tests.                                                                                                                  Feb 21, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testdox(975)                                 A testdox format reporter for pytest                                                                                                                                             Apr 19, 2022       5 - Production/Stable     pytest (>=4.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-test-grouping(976)                           A Pytest plugin for running a subset of your tests by splitting them in to equally sized groups.                                                                                 Jun 17, 2022       5 - Production/Stable     pytest (>=2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-test-groups(977)                             A Pytest plugin for running a subset of your tests by splitting them in to equally sized groups.                                                                                 Oct 25, 2016       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testinfra(978)                               Test infrastructures                                                                                                                                                             Jun 19, 2022       5 - Production/Stable     pytest (!=3.0.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testlink-adaptor(979)                        pytest reporting plugin for testlink                                                                                                                                             Dec 20, 2018       4 - Beta                  pytest (>=2.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testmon(980)                                 selects tests affected by changed files and methods                                                                                                                              Sep 09, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testmon-oc(981)                              nOly selects tests affected by changed files and methods                                                                                                                         Jun 01, 2022       4 - Beta                  pytest (<8,>=5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testmon-skip-libraries(982)                  selects tests affected by changed files and methods                                                                                                                              Jun 13, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testobject(983)                              Plugin to use TestObject Suites with Pytest                                                                                                                                      Sep 24, 2019       4 - Beta                  pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testpluggy(984)                              set your encoding                                                                                                                                                                Jan 07, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail(985)                                pytest plugin for creating TestRail runs and adding results                                                                                                                      Aug 27, 2020       N/A                       pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail2(986)                               A small example package                                                                                                                                                          Nov 17, 2020       N/A                       pytest (>=5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail-api(987)                            Плагин Pytest, для интеграции с TestRail                                                                                                                                         Aug 29, 2022       N/A                       pytest (>=5.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail-api-client(988)                     TestRail Api Python Client                                                                                                                                                       Dec 14, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail-appetize(989)                       pytest plugin for creating TestRail runs and adding results                                                                                                                      Sep 29, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail-client(990)                         pytest plugin for Testrail                                                                                                                                                       Sep 29, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail-e2e(991)                            pytest plugin for creating TestRail runs and adding results                                                                                                                      Oct 11, 2021       N/A                       pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail-integrator(992)                     Pytest plugin for sending report to testrail system.                                                                                                                             Aug 01, 2022       N/A                       pytest (>=6.2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail-ns(993)                             pytest plugin for creating TestRail runs and adding results                                                                                                                      Aug 12, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail-plugin(994)                         PyTest plugin for TestRail                                                                                                                                                       Apr 21, 2020       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testrail-reporter(995)                                                                                                                                                                                                        Sep 10, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testreport(996)                                                                                                                                                                                                               May 23, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testreport-new(997)                                                                                                                                                                                                           Aug 15, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-testslide(998)                               TestSlide fixture for pytest                                                                                                                                                     Jan 07, 2021       5 - Production/Stable     pytest (~=6.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-test-this(999)                               Plugin for py.test to run relevant tests, based on naively checking if a test contains a reference to the symbol you supply                                                      Sep 15, 2019       2 - Pre-Alpha             pytest (>=2.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-test-utils(1000)                                                                                                                                                                                                              Jul 14, 2022       N/A                       pytest (>=5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tesults(1001)                                Tesults plugin for pytest                                                                                                                                                        Dec 31, 2021       5 - Production/Stable     pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tezos(1002)                                  pytest-ligo                                                                                                                                                                      Jan 16, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-th2-bdd(1003)                                pytest_th2_bdd                                                                                                                                                                   May 13, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-thawgun(1004)                                Pytest plugin for time travel                                                                                                                                                    May 26, 2020       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-threadleak(1005)                             Detects thread leaks                                                                                                                                                             Jul 03, 2022       4 - Beta                  pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tick(1006)                                   Ticking on tests                                                                                                                                                                 Aug 31, 2021       5 - Production/Stable     pytest (>=6.2.5,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-timeit(1007)                                 A pytest plugin to time test function runs                                                                                                                                       Oct 13, 2016       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-timeout(1008)                                pytest plugin to abort hanging tests                                                                                                                                             Jan 18, 2022       5 - Production/Stable     pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-timeouts(1009)                               Linux-only Pytest plugin to control durations of various test case execution phases                                                                                              Sep 21, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-timer(1010)                                  A timer plugin for pytest                                                                                                                                                        Jun 02, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-timestamper(1011)                            Pytest plugin to add a timestamp prefix to the pytest output                                                                                                                     Jun 06, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-timestamps(1012)                             A simple plugin to view timestamps for each test                                                                                                                                 Jan 16, 2022       N/A                       pytest (>=5.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tipsi-django(1013)                                                                                                                                                                                                            Nov 17, 2021       4 - Beta                  pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tipsi-testing(1014)                          Better fixtures management.  Various helpers                                                                                                                                     Nov 04, 2020       4 - Beta                  pytest (>=3.3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tldr(1015)                                   A pytest plugin that limits the output to just the things you need.                                                                                                              Mar 12, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tm4j-reporter(1016)                          Cloud Jira Test Management (TM4J) PyTest reporter plugin                                                                                                                         Sep 01, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tmnet(1017)                                  A small example package                                                                                                                                                          Mar 01, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tmp-files(1018)                              Utilities to create temporary file hierarchies in pytest.                                                                                                                        Apr 03, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tmpfs(1019)                                  A pytest plugin that helps you on using a temporary filesystem for testing.                                                                                                      Aug 29, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tmreport(1020)                               this is a vue-element ui report for pytest                                                                                                                                       Aug 12, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-todo(1021)                                   A small plugin for the pytest testing framework, marking TODO comments as failure                                                                                                May 23, 2019       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tomato(1022)                                                                                                                                                                                                                  Mar 01, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-toolbelt(1023)                               This is just a collection of utilities for pytest, but don’t really belong in pytest proper.                                                                                     Aug 12, 2019       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-toolbox(1024)                                Numerous useful plugins for pytest.                                                                                                                                              Apr 07, 2018       N/A                       pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tools(1025)                                  Pytest tools                                                                                                                                                                     Jul 04, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tornado(1026)                                A py.test plugin providing fixtures and markers to simplify testing of asynchronous tornado applications.                                                                        Jun 17, 2020       5 - Production/Stable     pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tornado5(1027)                               A py.test plugin providing fixtures and markers to simplify testing of asynchronous tornado applications.                                                                        Nov 16, 2018       5 - Production/Stable     pytest (>=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tornado-yen3(1028)                           A py.test plugin providing fixtures and markers to simplify testing of asynchronous tornado applications.                                                                        Oct 15, 2018       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tornasync(1029)                              py.test plugin for testing Python 3.5+ Tornado code                                                                                                                              Jul 15, 2019       3 - Alpha                 pytest (>=3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-trace(1030)                                  Save OpenTelemetry spans generated during testing                                                                                                                                Jun 19, 2022       N/A                       pytest (>=4.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-track(1031)                                                                                                                                                                                                                   Feb 26, 2021       3 - Alpha                 pytest (>=3.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-translations(1032)                           Test your translation files.                                                                                                                                                     Nov 05, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-travis-fold(1033)                            Folds captured output sections in Travis CI build log                                                                                                                            Nov 29, 2017       4 - Beta                  pytest (>=2.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-trello(1034)                                 Plugin for py.test that integrates trello using markers                                                                                                                          Nov 20, 2015       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-trepan(1035)                                 Pytest plugin for trepan debugger.                                                                                                                                               Jul 28, 2018       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-trialtemp(1036)                              py.test plugin for using the same _trial_temp working directory as trial                                                                                                         Jun 08, 2015       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-trio(1037)                                   Pytest plugin for trio                                                                                                                                                           Oct 16, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-trytond(1038)                                Pytest plugin for the Tryton server framework                                                                                                                                    Feb 02, 2022       3 - Alpha                 pytest (>=5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tspwplib(1039)                               A simple plugin to use with tspwplib                                                                                                                                             Jan 08, 2021       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tst(1040)                                    Customize pytest options, output and exit code to make it compatible with tst                                                                                                    Apr 27, 2022       N/A                       pytest (>=5.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tstcls(1041)                                 Test Class Base                                                                                                                                                                  Mar 23, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tui(1042)                                    Text User Interface (TUI) for Pytest, with optional auto-launch and HTML export                                                                                                  Sep 07, 2022       4 - Beta                  pytest (>=6.2.5)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-twilio-conversations-client-mock(1043)                                                                                                                                                                                        Aug 02, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-twisted(1044)                                A twisted plugin for pytest.                                                                                                                                                     Aug 30, 2021       5 - Production/Stable     pytest (>=2.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-typechecker(1045)                            Run type checkers on specified test files                                                                                                                                        Feb 04, 2022       N/A                       pytest (>=6.2.5,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-typhoon-config(1046)                         A Typhoon HIL plugin that facilitates test parameter configuration at runtime                                                                                                    Apr 07, 2022       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-typhoon-xray(1047)                           Typhoon HIL plugin for pytest                                                                                                                                                    Mar 07, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-tytest(1048)                                 Typhoon HIL plugin for pytest                                                                                                                                                    May 25, 2020       4 - Beta                  pytest (>=5.4.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ubersmith(1049)                              Easily mock calls to ubersmith at the ‘requests‘ level.                                                                                                                          Apr 13, 2015       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ui(1050)                                     Text User Interface for running python tests                                                                                                                                     Jul 05, 2021       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-unflakable(1051)                             Unflakable plugin for PyTest                                                                                                                                                     Jun 14, 2022       4 - Beta                  pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-unhandled-exception-exit-code(1052)          Plugin for py.test set a different exit code on uncaught exceptions                                                                                                              Jun 22, 2020       5 - Production/Stable     pytest (>=2.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-unittest-filter(1053)                        A pytest plugin for filtering unittest-based test classes                                                                                                                        Jan 12, 2019       4 - Beta                  pytest (>=3.1.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-unmarked(1054)                               Run only unmarked tests                                                                                                                                                          Aug 27, 2019       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-unordered(1055)                              Test equality of unordered collections in pytest                                                                                                                                 Jul 08, 2022       4 - Beta                  pytest (>=6.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-unstable(1056)                               Set a test as unstable to return 0 even if it failed                                                                                                                             Jun 10, 2022       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-upload-report(1057)                          pytest-upload-report is a plugin for pytest that upload your test report for test results.                                                                                       Jun 18, 2021       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-utils(1058)                                  Some helpers for pytest.                                                                                                                                                         Dec 04, 2021       4 - Beta                  pytest (>=6.2.5,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vagrant(1059)                                A py.test plugin providing access to vagrant.                                                                                                                                    Sep 07, 2021       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-valgrind(1060)                                                                                                                                                                                                                May 19, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-variables(1061)                              pytest plugin for providing variables to tests/fixtures                                                                                                                          Mar 27, 2022       5 - Production/Stable     pytest (>=3.0.0,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-variant(1062)                                Variant support for Pytest                                                                                                                                                       Jun 06, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vcr(1063)                                    Plugin for managing VCR.py cassettes                                                                                                                                             Apr 26, 2019       5 - Production/Stable     pytest (>=3.6.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vcr-delete-on-fail(1064)                     A pytest plugin that automates vcrpy cassettes deletion on test failure.                                                                                                         Jun 20, 2022       5 - Production/Stable     pytest (>=6.2.2)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vcrpandas(1065)                              Test from HTTP interactions to dataframe processed.                                                                                                                              Jan 12, 2019       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-venv(1066)                                   py.test fixture for creating a virtual environment                                                                                                                               Aug 04, 2020       4 - Beta                  pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-ver(1067)                                    Pytest module with Verification Report                                                                                                                                           Aug 21, 2022       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-verbose-parametrize(1068)                    More descriptive output for parametrized py.test tests                                                                                                                           May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vimqf(1069)                                  A simple pytest plugin that will shrink pytest output when specified, to fit vim quickfix window.                                                                                Feb 08, 2021       4 - Beta                  pytest (>=6.2.2,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-virtualenv(1070)                             Virtualenv fixture for py.test                                                                                                                                                   May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vnc(1071)                                    VNC client for Pytest                                                                                                                                                            Jun 03, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-voluptuous(1072)                             Pytest plugin for asserting data against voluptuous schema.                                                                                                                      Jun 09, 2020       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vscodedebug(1073)                            A pytest plugin to easily enable debugging tests within Visual Studio Code                                                                                                       Dec 04, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vts(1074)                                    pytest plugin for automatic recording of http stubbed tests                                                                                                                      Jun 05, 2019       N/A                       pytest (>=2.3)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vw(1075)                                     pytest-vw makes your failing test cases succeed under CI tools scrutiny                                                                                                          Oct 07, 2015       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-vyper(1076)                                  Plugin for the vyper smart contract language.                                                                                                                                    May 28, 2020       2 - Pre-Alpha             N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-wa-e2e-plugin(1077)                          Pytest plugin for testing whatsapp bots with end to end tests                                                                                                                    Feb 18, 2020       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-wake(1078)                                                                                                                                                                                                                    Aug 30, 2022       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-watch(1079)                                  Local continuous test runner with pytest and watchdog.                                                                                                                           May 20, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-watcher(1080)                                Continiously runs pytest on changes in *.py files                                                                                                                                Dec 30, 2021       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-wdl(1081)                                    Pytest plugin for testing WDL workflows.                                                                                                                                         Nov 17, 2020       5 - Production/Stable     N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-webdriver(1082)                              Selenium webdriver fixture for py.test                                                                                                                                           May 28, 2019       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-wetest(1083)                                 Welian API Automation test framework pytest plugin                                                                                                                               Nov 10, 2018       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-whirlwind(1084)                              Testing Tornado.                                                                                                                                                                 Jun 12, 2020       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-wholenodeid(1085)                            pytest addon for displaying the whole node id for failures                                                                                                                       Aug 26, 2015       4 - Beta                  pytest (>=2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-win32consoletitle(1086)                      Pytest progress in console title (Win32 only)                                                                                                                                    Aug 08, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-winnotify(1087)                              Windows tray notifications for py.test results.                                                                                                                                  Apr 22, 2016       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-wiremock(1088)                               A pytest plugin for programmatically using wiremock in integration tests                                                                                                         Mar 27, 2022       N/A                       pytest (>=7.1.1,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-with-docker(1089)                            pytest with docker helpers.                                                                                                                                                      Nov 09, 2021       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-workflow(1090)                               A pytest plugin for configuring workflow/pipeline tests using YAML files                                                                                                         Dec 03, 2021       5 - Production/Stable     pytest (>=5.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xdist(1091)                                  pytest xdist plugin for distributed testing and loop-on-failing modes                                                                                                            Dec 10, 2021       5 - Production/Stable     pytest (>=6.2.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xdist-debug-for-graingert(1092)              pytest xdist plugin for distributed testing and loop-on-failing modes                                                                                                            Jul 24, 2019       5 - Production/Stable     pytest (>=4.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xdist-forked(1093)                           forked from pytest-xdist                                                                                                                                                         Feb 10, 2020       5 - Production/Stable     pytest (>=4.4.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xdist-tracker(1094)                          pytest plugin helps to reproduce failures for particular xdist node                                                                                                              Nov 18, 2021       3 - Alpha                 pytest (>=3.5.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xfaillist(1095)                              Maintain a xfaillist in an additional file to avoid merge-conflicts.                                                                                                             Sep 17, 2021       N/A                       pytest (>=6.2.2,<7.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xfiles(1096)                                 Pytest fixtures providing data read from function, module or package related (x)files.                                                                                           Feb 27, 2018       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xlog(1097)                                   Extended logging for test and decorators                                                                                                                                         May 31, 2020       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xlsx(1098)                                   pytest plugin for generating test cases by xlsx(excel)                                                                                                                           Aug 04, 2022       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xpara(1099)                                  An extended parametrizing plugin of pytest.                                                                                                                                      Oct 30, 2017       3 - Alpha                 pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xprocess(1100)                               A pytest plugin for managing processes across test runs.                                                                                                                         Aug 29, 2022       4 - Beta                  pytest (>=2.8)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xray(1101)                                                                                                                                                                                                                    May 30, 2019       3 - Alpha                 N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xrayjira(1102)                                                                                                                                                                                                                Mar 17, 2020       3 - Alpha                 pytest (==4.3.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xray-server(1103)                                                                                                                                                                                                             May 03, 2022       3 - Alpha                 pytest (>=5.3.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xreport(1104)                                                                                                                                                                                                                 May 17, 2022       4 - Beta                  pytest (>=3.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-xvfb(1105)                                   A pytest plugin to run Xvfb for tests.                                                                                                                                           Jun 09, 2020       4 - Beta                  pytest (>=2.8.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-yaml(1106)                                   This plugin is used to load yaml output to your test using pytest framework.                                                                                                     Oct 05, 2018       N/A                       pytest
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-yamltree(1107)                               Create or check file/directory trees described by YAML                                                                                                                           Mar 02, 2020       4 - Beta                  pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-yamlwsgi(1108)                               Run tests against wsgi apps defined in yaml                                                                                                                                      May 11, 2010       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-yapf(1109)                                   Run yapf                                                                                                                                                                         Jul 06, 2017       4 - Beta                  pytest (>=3.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-yapf3(1110)                                  Validate your Python file format with yapf                                                                                                                                       Aug 03, 2020       5 - Production/Stable     pytest (>=5.4)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-yield(1111)                                  PyTest plugin to run tests concurrently, each ‘yield‘ switch context to other one                                                                                                Jan 23, 2019       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-yls(1112)                                    Pytest plugin to test the YLS as a whole.                                                                                                                                        Aug 08, 2022       N/A                       pytest (>=7.1.2,<8.0.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-yuk(1113)                                    Display tests you are uneasy with, using 🤢/🤮 for pass/fail of tests marked with yuk.                                                                                             Mar 26, 2021       N/A                       N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-zafira(1114)                                 A Zafira plugin for pytest                                                                                                                                                       Sep 18, 2019       5 - Production/Stable     pytest (==4.1.1)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-zap(1115)                                    OWASP ZAP plugin for py.test.                                                                                                                                                    May 12, 2014       4 - Beta                  N/A
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-zebrunner(1116)                              Pytest connector for Zebrunner reporting                                                                                                                                         Jun 02, 2022       5 - Production/Stable     pytest (>=4.5.0)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-zigzag(1117)                                 Extend py.test for RPC OpenStack testing.                                                                                                                                        Feb 27, 2019       4 - Beta                  pytest (~=3.6)
                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                  
pytest-zulip(1118)                                  Pytest report plugin for Zulip                                                                                                                                                   May 07, 2022       5 - Production/Stable     pytest
                                                                                                                                                                                                                                                                                  

   ---------- Footnotes ----------

   (1) https://pypi.org/project/pytest-abstracts/

   (2) https://pypi.org/project/pytest-accept/

   (3) https://pypi.org/project/pytest-adaptavist/

   (4) https://pypi.org/project/pytest-addons-test/

   (5) https://pypi.org/project/pytest-adf/

   (6) https://pypi.org/project/pytest-adf-azure-identity/

   (7) https://pypi.org/project/pytest-agent/

   (8) https://pypi.org/project/pytest-aggreport/

   (9) https://pypi.org/project/pytest-aio/

   (10) https://pypi.org/project/pytest-aiofiles/

   (11) https://pypi.org/project/pytest-aiohttp/

   (12) https://pypi.org/project/pytest-aiohttp-client/

   (13) https://pypi.org/project/pytest-aiomoto/

   (14) https://pypi.org/project/pytest-aioresponses/

   (15) https://pypi.org/project/pytest-aioworkers/

   (16) https://pypi.org/project/pytest-airflow/

   (17) https://pypi.org/project/pytest-airflow-utils/

   (18) https://pypi.org/project/pytest-alembic/

   (19) https://pypi.org/project/pytest-allclose/

   (20) https://pypi.org/project/pytest-allure-adaptor/

   (21) https://pypi.org/project/pytest-allure-adaptor2/

   (22) https://pypi.org/project/pytest-allure-collection/

   (23) https://pypi.org/project/pytest-allure-dsl/

   (24) https://pypi.org/project/pytest-allure-spec-coverage/

   (25) https://pypi.org/project/pytest-alphamoon/

   (26) https://pypi.org/project/pytest-android/

   (27) https://pypi.org/project/pytest-anki/

   (28) https://pypi.org/project/pytest-annotate/

   (29) https://pypi.org/project/pytest-ansible/

   (30) https://pypi.org/project/pytest-ansible-playbook/

   (31) https://pypi.org/project/pytest-ansible-playbook-runner/

   (32) https://pypi.org/project/pytest-ansible-units/

   (33) https://pypi.org/project/pytest-antilru/

   (34) https://pypi.org/project/pytest-anyio/

   (35) https://pypi.org/project/pytest-anything/

   (36) https://pypi.org/project/pytest-aoc/

   (37) https://pypi.org/project/pytest-aoreporter/

   (38) https://pypi.org/project/pytest-api/

   (39) https://pypi.org/project/pytest-api-soup/

   (40) https://pypi.org/project/pytest-apistellar/

   (41) https://pypi.org/project/pytest-appengine/

   (42) https://pypi.org/project/pytest-appium/

   (43) https://pypi.org/project/pytest-approvaltests/

   (44) https://pypi.org/project/pytest-argus/

   (45) https://pypi.org/project/pytest-arraydiff/

   (46) https://pypi.org/project/pytest-asgi-server/

   (47) https://pypi.org/project/pytest-asptest/

   (48) https://pypi.org/project/pytest-assertcount/

   (49) https://pypi.org/project/pytest-assertions/

   (50) https://pypi.org/project/pytest-assertutil/

   (51) https://pypi.org/project/pytest-assert-utils/

   (52) https://pypi.org/project/pytest-assume/

   (53) https://pypi.org/project/pytest-assurka/

   (54) https://pypi.org/project/pytest-ast-back-to-python/

   (55) https://pypi.org/project/pytest-asteroid/

   (56) https://pypi.org/project/pytest-astropy/

   (57) https://pypi.org/project/pytest-astropy-header/

   (58) https://pypi.org/project/pytest-ast-transformer/

   (59) https://pypi.org/project/pytest-asyncio/

   (60) https://pypi.org/project/pytest-asyncio-cooperative/

   (61) https://pypi.org/project/pytest-asyncio-network-simulator/

   (62) https://pypi.org/project/pytest-async-mongodb/

   (63) https://pypi.org/project/pytest-async-sqlalchemy/

   (64) https://pypi.org/project/pytest-atomic/

   (65) https://pypi.org/project/pytest-attrib/

   (66) https://pypi.org/project/pytest-austin/

   (67) https://pypi.org/project/pytest-autocap/

   (68) https://pypi.org/project/pytest-autochecklog/

   (69) https://pypi.org/project/pytest-automation/

   (70) https://pypi.org/project/pytest-automock/

   (71) https://pypi.org/project/pytest-auto-parametrize/

   (72) https://pypi.org/project/pytest-autotest/

   (73) https://pypi.org/project/pytest-avoidance/

   (74) https://pypi.org/project/pytest-aws/

   (75) https://pypi.org/project/pytest-aws-config/

   (76) https://pypi.org/project/pytest-axe/

   (77) https://pypi.org/project/pytest-azure-devops/

   (78) https://pypi.org/project/pytest-azurepipelines/

   (79) https://pypi.org/project/pytest-bandit/

   (80) https://pypi.org/project/pytest-base-url/

   (81) https://pypi.org/project/pytest-bdd/

   (82) https://pypi.org/project/pytest-bdd-html/

   (83) https://pypi.org/project/pytest-bdd-ng/

   (84) https://pypi.org/project/pytest-bdd-splinter/

   (85) https://pypi.org/project/pytest-bdd-web/

   (86) https://pypi.org/project/pytest-bdd-wrappers/

   (87) https://pypi.org/project/pytest-beakerlib/

   (88) https://pypi.org/project/pytest-beds/

   (89) https://pypi.org/project/pytest-bench/

   (90) https://pypi.org/project/pytest-benchmark/

   (91) https://pypi.org/project/pytest-bg-process/

   (92) https://pypi.org/project/pytest-bigchaindb/

   (93) https://pypi.org/project/pytest-bigquery-mock/

   (94) https://pypi.org/project/pytest-black/

   (95) https://pypi.org/project/pytest-black-multipy/

   (96) https://pypi.org/project/pytest-blame/

   (97) https://pypi.org/project/pytest-blender/

   (98) https://pypi.org/project/pytest-blink1/

   (99) https://pypi.org/project/pytest-blockage/

   (100) https://pypi.org/project/pytest-blocker/

   (101) https://pypi.org/project/pytest-blue/

   (102) https://pypi.org/project/pytest-board/

   (103) https://pypi.org/project/pytest-bootstrap/

   (104) https://pypi.org/project/pytest-bpdb/

   (105) https://pypi.org/project/pytest-bravado/

   (106) https://pypi.org/project/pytest-breakword/

   (107) https://pypi.org/project/pytest-breed-adapter/

   (108) https://pypi.org/project/pytest-briefcase/

   (109) https://pypi.org/project/pytest-browser/

   (110) https://pypi.org/project/pytest-browsermob-proxy/

   (111) https://pypi.org/project/pytest-browserstack-local/

   (112) https://pypi.org/project/pytest-bug/

   (113) https://pypi.org/project/pytest-bugtong-tag/

   (114) https://pypi.org/project/pytest-bugzilla/

   (115) https://pypi.org/project/pytest-bugzilla-notifier/

   (116) https://pypi.org/project/pytest-buildkite/

   (117) https://pypi.org/project/pytest-builtin-types/

   (118) https://pypi.org/project/pytest-bwrap/

   (119) https://pypi.org/project/pytest-cache/

   (120) https://pypi.org/project/pytest-cache-assert/

   (121) https://pypi.org/project/pytest-cagoule/

   (122) https://pypi.org/project/pytest-cairo/

   (123) https://pypi.org/project/pytest-camel-collect/

   (124) https://pypi.org/project/pytest-canonical-data/

   (125) https://pypi.org/project/pytest-caprng/

   (126) https://pypi.org/project/pytest-capture-deprecatedwarnings/

   (127) https://pypi.org/project/pytest-capture-warnings/

   (128) https://pypi.org/project/pytest-cases/

   (129) https://pypi.org/project/pytest-cassandra/

   (130) https://pypi.org/project/pytest-catchlog/

   (131) https://pypi.org/project/pytest-catch-server/

   (132) https://pypi.org/project/pytest-celery/

   (133) https://pypi.org/project/pytest-chainmaker/

   (134) https://pypi.org/project/pytest-chalice/

   (135) https://pypi.org/project/pytest-change-demo/

   (136) https://pypi.org/project/pytest-change-report/

   (137) https://pypi.org/project/pytest-change-xds/

   (138) https://pypi.org/project/pytest-chdir/

   (139) https://pypi.org/project/pytest-check/

   (140) https://pypi.org/project/pytest-checkdocs/

   (141) https://pypi.org/project/pytest-checkipdb/

   (142) https://pypi.org/project/pytest-check-library/

   (143) https://pypi.org/project/pytest-check-libs/

   (144) https://pypi.org/project/pytest-check-links/

   (145) https://pypi.org/project/pytest-check-mk/

   (146) https://pypi.org/project/pytest-chunks/

   (147) https://pypi.org/project/pytest-circleci/

   (148) https://pypi.org/project/pytest-circleci-parallelized/

   (149) https://pypi.org/project/pytest-circleci-parallelized-rjp/

   (150) https://pypi.org/project/pytest-ckan/

   (151) https://pypi.org/project/pytest-clarity/

   (152) https://pypi.org/project/pytest-cldf/

   (153) https://pypi.org/project/pytest-click/

   (154) https://pypi.org/project/pytest-cli-fixtures/

   (155) https://pypi.org/project/pytest-clld/

   (156) https://pypi.org/project/pytest-cloud/

   (157) https://pypi.org/project/pytest-cloudflare-worker/

   (158) https://pypi.org/project/pytest-cloudist/

   (159) https://pypi.org/project/pytest-cobra/

   (160) https://pypi.org/project/pytest-codecarbon/

   (161) https://pypi.org/project/pytest-codecheckers/

   (162) https://pypi.org/project/pytest-codecov/

   (163) https://pypi.org/project/pytest-codegen/

   (164) https://pypi.org/project/pytest-codeowners/

   (165) https://pypi.org/project/pytest-codestyle/

   (166) https://pypi.org/project/pytest-collect-formatter/

   (167) https://pypi.org/project/pytest-collect-formatter2/

   (168) https://pypi.org/project/pytest-collector/

   (169) https://pypi.org/project/pytest-colordots/

   (170) https://pypi.org/project/pytest-commander/

   (171) https://pypi.org/project/pytest-common-subject/

   (172) https://pypi.org/project/pytest-concurrent/

   (173) https://pypi.org/project/pytest-config/

   (174) https://pypi.org/project/pytest-confluence-report/

   (175) https://pypi.org/project/pytest-console-scripts/

   (176) https://pypi.org/project/pytest-consul/

   (177) https://pypi.org/project/pytest-container/

   (178) https://pypi.org/project/pytest-contextfixture/

   (179) https://pypi.org/project/pytest-contexts/

   (180) https://pypi.org/project/pytest-cookies/

   (181) https://pypi.org/project/pytest-couchdbkit/

   (182) https://pypi.org/project/pytest-count/

   (183) https://pypi.org/project/pytest-cov/

   (184) https://pypi.org/project/pytest-cover/

   (185) https://pypi.org/project/pytest-coverage/

   (186) https://pypi.org/project/pytest-coverage-context/

   (187) https://pypi.org/project/pytest-cov-exclude/

   (188) https://pypi.org/project/pytest-cpp/

   (189) https://pypi.org/project/pytest-cppython/

   (190) https://pypi.org/project/pytest-cqase/

   (191) https://pypi.org/project/pytest-cram/

   (192) https://pypi.org/project/pytest-crate/

   (193) https://pypi.org/project/pytest-cricri/

   (194) https://pypi.org/project/pytest-crontab/

   (195) https://pypi.org/project/pytest-csv/

   (196) https://pypi.org/project/pytest-csv-params/

   (197) https://pypi.org/project/pytest-curio/

   (198) https://pypi.org/project/pytest-curl-report/

   (199) https://pypi.org/project/pytest-custom-concurrency/

   (200) https://pypi.org/project/pytest-custom-exit-code/

   (201) https://pypi.org/project/pytest-custom-nodeid/

   (202) https://pypi.org/project/pytest-custom-report/

   (203) https://pypi.org/project/pytest-custom-scheduling/

   (204) https://pypi.org/project/pytest-cython/

   (205) https://pypi.org/project/pytest-cython-collect/

   (206) https://pypi.org/project/pytest-darker/

   (207) https://pypi.org/project/pytest-dash/

   (208) https://pypi.org/project/pytest-data/

   (209) https://pypi.org/project/pytest-databricks/

   (210) https://pypi.org/project/pytest-datadir/

   (211) https://pypi.org/project/pytest-datadir-mgr/

   (212) https://pypi.org/project/pytest-datadir-ng/

   (213) https://pypi.org/project/pytest-data-extractor/

   (214) https://pypi.org/project/pytest-data-file/

   (215) https://pypi.org/project/pytest-datafiles/

   (216) https://pypi.org/project/pytest-datafixtures/

   (217) https://pypi.org/project/pytest-data-from-files/

   (218) https://pypi.org/project/pytest-dataplugin/

   (219) https://pypi.org/project/pytest-datarecorder/

   (220) https://pypi.org/project/pytest-dataset/

   (221) https://pypi.org/project/pytest-data-suites/

   (222) https://pypi.org/project/pytest-datatest/

   (223) https://pypi.org/project/pytest-db/

   (224) https://pypi.org/project/pytest-dbfixtures/

   (225) https://pypi.org/project/pytest-db-plugin/

   (226) https://pypi.org/project/pytest-dbt-adapter/

   (227) https://pypi.org/project/pytest-dbt-conventions/

   (228) https://pypi.org/project/pytest-dbt-core/

   (229) https://pypi.org/project/pytest-dbus-notification/

   (230) https://pypi.org/project/pytest-deadfixtures/

   (231) https://pypi.org/project/pytest-deepcov/

   (232) https://pypi.org/project/pytest-defer/

   (233) https://pypi.org/project/pytest-demo-plugin/

   (234) https://pypi.org/project/pytest-dependency/

   (235) https://pypi.org/project/pytest-depends/

   (236) https://pypi.org/project/pytest-deprecate/

   (237) https://pypi.org/project/pytest-describe/

   (238) https://pypi.org/project/pytest-describe-it/

   (239) https://pypi.org/project/pytest-devpi-server/

   (240) https://pypi.org/project/pytest-dhos/

   (241) https://pypi.org/project/pytest-diamond/

   (242) https://pypi.org/project/pytest-dicom/

   (243) https://pypi.org/project/pytest-dictsdiff/

   (244) https://pypi.org/project/pytest-diff/

   (245) https://pypi.org/project/pytest-diff-selector/

   (246) https://pypi.org/project/pytest-disable/

   (247) https://pypi.org/project/pytest-disable-plugin/

   (248) https://pypi.org/project/pytest-discord/

   (249) https://pypi.org/project/pytest-django/

   (250) https://pypi.org/project/pytest-django-ahead/

   (251) https://pypi.org/project/pytest-djangoapp/

   (252) https://pypi.org/project/pytest-django-cache-xdist/

   (253) https://pypi.org/project/pytest-django-casperjs/

   (254) https://pypi.org/project/pytest-django-dotenv/

   (255) https://pypi.org/project/pytest-django-factories/

   (256) https://pypi.org/project/pytest-django-filefield/

   (257) https://pypi.org/project/pytest-django-gcir/

   (258) https://pypi.org/project/pytest-django-haystack/

   (259) https://pypi.org/project/pytest-django-ifactory/

   (260) https://pypi.org/project/pytest-django-lite/

   (261) https://pypi.org/project/pytest-django-liveserver-ssl/

   (262) https://pypi.org/project/pytest-django-model/

   (263) https://pypi.org/project/pytest-django-ordering/

   (264) https://pypi.org/project/pytest-django-queries/

   (265) https://pypi.org/project/pytest-djangorestframework/

   (266) https://pypi.org/project/pytest-django-rq/

   (267) https://pypi.org/project/pytest-django-sqlcounts/

   (268) https://pypi.org/project/pytest-django-testing-postgresql/

   (269) https://pypi.org/project/pytest-doc/

   (270) https://pypi.org/project/pytest-docfiles/

   (271) https://pypi.org/project/pytest-docgen/

   (272) https://pypi.org/project/pytest-docker/

   (273) https://pypi.org/project/pytest-docker-apache-fixtures/

   (274) https://pypi.org/project/pytest-docker-butla/

   (275) https://pypi.org/project/pytest-dockerc/

   (276) https://pypi.org/project/pytest-docker-compose/

   (277) https://pypi.org/project/pytest-docker-db/

   (278) https://pypi.org/project/pytest-docker-fixtures/

   (279) https://pypi.org/project/pytest-docker-git-fixtures/

   (280) https://pypi.org/project/pytest-docker-haproxy-fixtures/

   (281) https://pypi.org/project/pytest-docker-pexpect/

   (282) https://pypi.org/project/pytest-docker-postgresql/

   (283) https://pypi.org/project/pytest-docker-py/

   (284) https://pypi.org/project/pytest-docker-registry-fixtures/

   (285) https://pypi.org/project/pytest-docker-service/

   (286) https://pypi.org/project/pytest-docker-squid-fixtures/

   (287) https://pypi.org/project/pytest-docker-tools/

   (288) https://pypi.org/project/pytest-docs/

   (289) https://pypi.org/project/pytest-docstyle/

   (290) https://pypi.org/project/pytest-doctest-custom/

   (291) https://pypi.org/project/pytest-doctest-ellipsis-markers/

   (292) https://pypi.org/project/pytest-doctest-import/

   (293) https://pypi.org/project/pytest-doctestplus/

   (294) https://pypi.org/project/pytest-dolphin/

   (295) https://pypi.org/project/pytest-doorstop/

   (296) https://pypi.org/project/pytest-dotenv/

   (297) https://pypi.org/project/pytest-drf/

   (298) https://pypi.org/project/pytest-drivings/

   (299) https://pypi.org/project/pytest-drop-dup-tests/

   (300) https://pypi.org/project/pytest-dummynet/

   (301) https://pypi.org/project/pytest-dump2json/

   (302) https://pypi.org/project/pytest-duration-insights/

   (303) https://pypi.org/project/pytest-durations/

   (304) https://pypi.org/project/pytest-dynamicrerun/

   (305) https://pypi.org/project/pytest-dynamodb/

   (306) https://pypi.org/project/pytest-easy-addoption/

   (307) https://pypi.org/project/pytest-easy-api/

   (308) https://pypi.org/project/pytest-easyMPI/

   (309) https://pypi.org/project/pytest-easyread/

   (310) https://pypi.org/project/pytest-easy-server/

   (311) https://pypi.org/project/pytest-ebics-sandbox/

   (312) https://pypi.org/project/pytest-ec2/

   (313) https://pypi.org/project/pytest-echo/

   (314) https://pypi.org/project/pytest-elasticsearch/

   (315) https://pypi.org/project/pytest-elements/

   (316) https://pypi.org/project/pytest-eliot/

   (317) https://pypi.org/project/pytest-elk-reporter/

   (318) https://pypi.org/project/pytest-email/

   (319) https://pypi.org/project/pytest-embedded/

   (320) https://pypi.org/project/pytest-embedded-arduino/

   (321) https://pypi.org/project/pytest-embedded-idf/

   (322) https://pypi.org/project/pytest-embedded-jtag/

   (323) https://pypi.org/project/pytest-embedded-qemu/

   (324) https://pypi.org/project/pytest-embedded-serial/

   (325) https://pypi.org/project/pytest-embedded-serial-esp/

   (326) https://pypi.org/project/pytest-embrace/

   (327) https://pypi.org/project/pytest-emoji/

   (328) https://pypi.org/project/pytest-emoji-output/

   (329) https://pypi.org/project/pytest-enabler/

   (330) https://pypi.org/project/pytest-encode/

   (331) https://pypi.org/project/pytest-encode-kane/

   (332) https://pypi.org/project/pytest-enhancements/

   (333) https://pypi.org/project/pytest-env/

   (334) https://pypi.org/project/pytest-envfiles/

   (335) https://pypi.org/project/pytest-env-info/

   (336) https://pypi.org/project/pytest-envraw/

   (337) https://pypi.org/project/pytest-envvars/

   (338) https://pypi.org/project/pytest-env-yaml/

   (339) https://pypi.org/project/pytest-eradicate/

   (340) https://pypi.org/project/pytest-error-for-skips/

   (341) https://pypi.org/project/pytest-eth/

   (342) https://pypi.org/project/pytest-ethereum/

   (343) https://pypi.org/project/pytest-eucalyptus/

   (344) https://pypi.org/project/pytest-eventlet/

   (345) https://pypi.org/project/pytest-excel/

   (346) https://pypi.org/project/pytest-exceptional/

   (347) https://pypi.org/project/pytest-exception-script/

   (348) https://pypi.org/project/pytest-executable/

   (349) https://pypi.org/project/pytest-execution-timer/

   (350) https://pypi.org/project/pytest-expect/

   (351) https://pypi.org/project/pytest-expecter/

   (352) https://pypi.org/project/pytest-expectr/

   (353) https://pypi.org/project/pytest-experiments/

   (354) https://pypi.org/project/pytest-explicit/

   (355) https://pypi.org/project/pytest-exploratory/

   (356) https://pypi.org/project/pytest-extensions/

   (357) https://pypi.org/project/pytest-external-blockers/

   (358) https://pypi.org/project/pytest-extra-durations/

   (359) https://pypi.org/project/pytest-fabric/

   (360) https://pypi.org/project/pytest-factory/

   (361) https://pypi.org/project/pytest-factoryboy/

   (362) https://pypi.org/project/pytest-factoryboy-fixtures/

   (363) https://pypi.org/project/pytest-factoryboy-state/

   (364) https://pypi.org/project/pytest-failed-screenshot/

   (365) https://pypi.org/project/pytest-failed-to-verify/

   (366) https://pypi.org/project/pytest-fail-slow/

   (367) https://pypi.org/project/pytest-faker/

   (368) https://pypi.org/project/pytest-falcon/

   (369) https://pypi.org/project/pytest-falcon-client/

   (370) https://pypi.org/project/pytest-fantasy/

   (371) https://pypi.org/project/pytest-fastapi/

   (372) https://pypi.org/project/pytest-fastapi-deps/

   (373) https://pypi.org/project/pytest-fastest/

   (374) https://pypi.org/project/pytest-fast-first/

   (375) https://pypi.org/project/pytest-faulthandler/

   (376) https://pypi.org/project/pytest-fauxfactory/

   (377) https://pypi.org/project/pytest-figleaf/

   (378) https://pypi.org/project/pytest-filecov/

   (379) https://pypi.org/project/pytest-filedata/

   (380) https://pypi.org/project/pytest-filemarker/

   (381) https://pypi.org/project/pytest-filter-case/

   (382) https://pypi.org/project/pytest-filter-subpackage/

   (383) https://pypi.org/project/pytest-find-dependencies/

   (384) https://pypi.org/project/pytest-finer-verdicts/

   (385) https://pypi.org/project/pytest-firefox/

   (386) https://pypi.org/project/pytest-fixture-config/

   (387) https://pypi.org/project/pytest-fixture-maker/

   (388) https://pypi.org/project/pytest-fixture-marker/

   (389) https://pypi.org/project/pytest-fixture-order/

   (390) https://pypi.org/project/pytest-fixture-rtttg/

   (391) https://pypi.org/project/pytest-fixtures/

   (392) https://pypi.org/project/pytest-fixture-tools/

   (393) https://pypi.org/project/pytest-fixture-typecheck/

   (394) https://pypi.org/project/pytest-flake8/

   (395) https://pypi.org/project/pytest-flake8-path/

   (396) https://pypi.org/project/pytest-flake8-v2/

   (397) https://pypi.org/project/pytest-flakefinder/

   (398) https://pypi.org/project/pytest-flakes/

   (399) https://pypi.org/project/pytest-flaptastic/

   (400) https://pypi.org/project/pytest-flask/

   (401) https://pypi.org/project/pytest-flask-ligand/

   (402) https://pypi.org/project/pytest-flask-sqlalchemy/

   (403) https://pypi.org/project/pytest-flask-sqlalchemy-transactions/

   (404) https://pypi.org/project/pytest-fluent/

   (405) https://pypi.org/project/pytest-flyte/

   (406) https://pypi.org/project/pytest-focus/

   (407) https://pypi.org/project/pytest-forcefail/

   (408) https://pypi.org/project/pytest-forward-compatability/

   (409) https://pypi.org/project/pytest-forward-compatibility/

   (410) https://pypi.org/project/pytest-freezegun/

   (411) https://pypi.org/project/pytest-freeze-reqs/

   (412) https://pypi.org/project/pytest-frozen-uuids/

   (413) https://pypi.org/project/pytest-func-cov/

   (414) https://pypi.org/project/pytest-funparam/

   (415) https://pypi.org/project/pytest-fxa/

   (416) https://pypi.org/project/pytest-fxtest/

   (417) https://pypi.org/project/pytest-fzf/

   (418) https://pypi.org/project/pytest-gather-fixtures/

   (419) https://pypi.org/project/pytest-gc/

   (420) https://pypi.org/project/pytest-gcov/

   (421) https://pypi.org/project/pytest-gevent/

   (422) https://pypi.org/project/pytest-gherkin/

   (423) https://pypi.org/project/pytest-gh-log-group/

   (424) https://pypi.org/project/pytest-ghostinspector/

   (425) https://pypi.org/project/pytest-girder/

   (426) https://pypi.org/project/pytest-git/

   (427) https://pypi.org/project/pytest-gitcov/

   (428) https://pypi.org/project/pytest-git-fixtures/

   (429) https://pypi.org/project/pytest-github/

   (430) 
https://pypi.org/project/pytest-github-actions-annotate-failures/

   (431) https://pypi.org/project/pytest-github-report/

   (432) https://pypi.org/project/pytest-gitignore/

   (433) https://pypi.org/project/pytest-glamor-allure/

   (434) https://pypi.org/project/pytest-gnupg-fixtures/

   (435) https://pypi.org/project/pytest-golden/

   (436) https://pypi.org/project/pytest-google-chat/

   (437) https://pypi.org/project/pytest-graphql-schema/

   (438) https://pypi.org/project/pytest-greendots/

   (439) https://pypi.org/project/pytest-growl/

   (440) https://pypi.org/project/pytest-grpc/

   (441) https://pypi.org/project/pytest-hammertime/

   (442) https://pypi.org/project/pytest-harvest/

   (443) https://pypi.org/project/pytest-helm-chart/

   (444) https://pypi.org/project/pytest-helm-charts/

   (445) https://pypi.org/project/pytest-helper/

   (446) https://pypi.org/project/pytest-helpers/

   (447) https://pypi.org/project/pytest-helpers-namespace/

   (448) https://pypi.org/project/pytest-hidecaptured/

   (449) https://pypi.org/project/pytest-historic/

   (450) https://pypi.org/project/pytest-historic-hook/

   (451) https://pypi.org/project/pytest-homeassistant/

   (452) https://pypi.org/project/pytest-homeassistant-custom-component/

   (453) https://pypi.org/project/pytest-honey/

   (454) https://pypi.org/project/pytest-honors/

   (455) https://pypi.org/project/pytest-hoverfly/

   (456) https://pypi.org/project/pytest-hoverfly-wrapper/

   (457) https://pypi.org/project/pytest-hpfeeds/

   (458) https://pypi.org/project/pytest-html/

   (459) https://pypi.org/project/pytest-html-lee/

   (460) https://pypi.org/project/pytest-html-merger/

   (461) https://pypi.org/project/pytest-html-object-storage/

   (462) https://pypi.org/project/pytest-html-profiling/

   (463) https://pypi.org/project/pytest-html-reporter/

   (464) https://pypi.org/project/pytest-html-report-merger/

   (465) https://pypi.org/project/pytest-html-thread/

   (466) https://pypi.org/project/pytest-http/

   (467) https://pypi.org/project/pytest-httpbin/

   (468) https://pypi.org/project/pytest-http-mocker/

   (469) https://pypi.org/project/pytest-httpretty/

   (470) https://pypi.org/project/pytest-httpserver/

   (471) https://pypi.org/project/pytest-httpx/

   (472) https://pypi.org/project/pytest-httpx-blockage/

   (473) https://pypi.org/project/pytest-hue/

   (474) https://pypi.org/project/pytest-hylang/

   (475) https://pypi.org/project/pytest-hypo-25/

   (476) https://pypi.org/project/pytest-ibutsu/

   (477) https://pypi.org/project/pytest-icdiff/

   (478) https://pypi.org/project/pytest-idapro/

   (479) https://pypi.org/project/pytest-idem/

   (480) https://pypi.org/project/pytest-idempotent/

   (481) https://pypi.org/project/pytest-ignore-flaky/

   (482) https://pypi.org/project/pytest-image-diff/

   (483) https://pypi.org/project/pytest-incremental/

   (484) https://pypi.org/project/pytest-influxdb/

   (485) https://pypi.org/project/pytest-info-collector/

   (486) https://pypi.org/project/pytest-informative-node/

   (487) https://pypi.org/project/pytest-infrastructure/

   (488) https://pypi.org/project/pytest-ini/

   (489) https://pypi.org/project/pytest-inmanta/

   (490) https://pypi.org/project/pytest-inmanta-extensions/

   (491) https://pypi.org/project/pytest-inmanta-lsm/

   (492) https://pypi.org/project/pytest-inmanta-yang/

   (493) https://pypi.org/project/pytest-Inomaly/

   (494) https://pypi.org/project/pytest-insta/

   (495) https://pypi.org/project/pytest-instafail/

   (496) https://pypi.org/project/pytest-instrument/

   (497) https://pypi.org/project/pytest-integration/

   (498) https://pypi.org/project/pytest-integration-mark/

   (499) https://pypi.org/project/pytest-interactive/

   (500) https://pypi.org/project/pytest-intercept-remote/

   (501) https://pypi.org/project/pytest-invenio/

   (502) https://pypi.org/project/pytest-involve/

   (503) https://pypi.org/project/pytest-ipdb/

   (504) https://pypi.org/project/pytest-ipynb/

   (505) https://pypi.org/project/pytest-isort/

   (506) https://pypi.org/project/pytest-is-running/

   (507) https://pypi.org/project/pytest-it/

   (508) https://pypi.org/project/pytest-iterassert/

   (509) https://pypi.org/project/pytest-iters/

   (510) https://pypi.org/project/pytest-jasmine/

   (511) https://pypi.org/project/pytest-jest/

   (512) https://pypi.org/project/pytest-jira/

   (513) https://pypi.org/project/pytest-jira-xray/

   (514) https://pypi.org/project/pytest-jobserver/

   (515) https://pypi.org/project/pytest-joke/

   (516) https://pypi.org/project/pytest-json/

   (517) https://pypi.org/project/pytest-json-fixtures/

   (518) https://pypi.org/project/pytest-jsonlint/

   (519) https://pypi.org/project/pytest-json-report/

   (520) https://pypi.org/project/pytest-kafka/

   (521) https://pypi.org/project/pytest-kafkavents/

   (522) https://pypi.org/project/pytest-kexi/

   (523) https://pypi.org/project/pytest-kind/

   (524) https://pypi.org/project/pytest-kivy/

   (525) https://pypi.org/project/pytest-knows/

   (526) https://pypi.org/project/pytest-konira/

   (527) https://pypi.org/project/pytest-krtech-common/

   (528) https://pypi.org/project/pytest-kwparametrize/

   (529) https://pypi.org/project/pytest-lambda/

   (530) https://pypi.org/project/pytest-lamp/

   (531) https://pypi.org/project/pytest-launchable/

   (532) https://pypi.org/project/pytest-layab/

   (533) https://pypi.org/project/pytest-lazy-fixture/

   (534) https://pypi.org/project/pytest-ldap/

   (535) https://pypi.org/project/pytest-leak-finder/

   (536) https://pypi.org/project/pytest-leaks/

   (537) https://pypi.org/project/pytest-level/

   (538) https://pypi.org/project/pytest-libfaketime/

   (539) https://pypi.org/project/pytest-libiio/

   (540) https://pypi.org/project/pytest-libnotify/

   (541) https://pypi.org/project/pytest-ligo/

   (542) https://pypi.org/project/pytest-lineno/

   (543) https://pypi.org/project/pytest-line-profiler/

   (544) https://pypi.org/project/pytest-line-profiler-apn/

   (545) https://pypi.org/project/pytest-lisa/

   (546) https://pypi.org/project/pytest-listener/

   (547) https://pypi.org/project/pytest-litf/

   (548) https://pypi.org/project/pytest-live/

   (549) https://pypi.org/project/pytest-localftpserver/

   (550) https://pypi.org/project/pytest-localserver/

   (551) https://pypi.org/project/pytest-localstack/

   (552) https://pypi.org/project/pytest-lockable/

   (553) https://pypi.org/project/pytest-locker/

   (554) https://pypi.org/project/pytest-log/

   (555) https://pypi.org/project/pytest-logbook/

   (556) https://pypi.org/project/pytest-logdog/

   (557) https://pypi.org/project/pytest-logfest/

   (558) https://pypi.org/project/pytest-logger/

   (559) https://pypi.org/project/pytest-logging/

   (560) https://pypi.org/project/pytest-log-report/

   (561) https://pypi.org/project/pytest-loguru/

   (562) https://pypi.org/project/pytest-loop/

   (563) https://pypi.org/project/pytest-lsp/

   (564) https://pypi.org/project/pytest-manual-marker/

   (565) https://pypi.org/project/pytest-markdoctest/

   (566) https://pypi.org/project/pytest-markdown/

   (567) https://pypi.org/project/pytest-markdown-docs/

   (568) https://pypi.org/project/pytest-marker-bugzilla/

   (569) https://pypi.org/project/pytest-markers-presence/

   (570) https://pypi.org/project/pytest-markfiltration/

   (571) https://pypi.org/project/pytest-mark-no-py3/

   (572) https://pypi.org/project/pytest-marks/

   (573) https://pypi.org/project/pytest-matcher/

   (574) https://pypi.org/project/pytest-match-skip/

   (575) https://pypi.org/project/pytest-mat-report/

   (576) https://pypi.org/project/pytest-matrix/

   (577) https://pypi.org/project/pytest-maybe-raises/

   (578) https://pypi.org/project/pytest-mccabe/

   (579) https://pypi.org/project/pytest-md/

   (580) https://pypi.org/project/pytest-md-report/

   (581) https://pypi.org/project/pytest-memprof/

   (582) https://pypi.org/project/pytest-memray/

   (583) https://pypi.org/project/pytest-menu/

   (584) https://pypi.org/project/pytest-mercurial/

   (585) https://pypi.org/project/pytest-mesh/

   (586) https://pypi.org/project/pytest-message/

   (587) https://pypi.org/project/pytest-messenger/

   (588) https://pypi.org/project/pytest-metadata/

   (589) https://pypi.org/project/pytest-metrics/

   (590) https://pypi.org/project/pytest-mimesis/

   (591) https://pypi.org/project/pytest-minecraft/

   (592) https://pypi.org/project/pytest-missing-fixtures/

   (593) https://pypi.org/project/pytest-ml/

   (594) https://pypi.org/project/pytest-mocha/

   (595) https://pypi.org/project/pytest-mock/

   (596) https://pypi.org/project/pytest-mock-api/

   (597) https://pypi.org/project/pytest-mock-generator/

   (598) https://pypi.org/project/pytest-mock-helper/

   (599) https://pypi.org/project/pytest-mockito/

   (600) https://pypi.org/project/pytest-mockredis/

   (601) https://pypi.org/project/pytest-mock-resources/

   (602) https://pypi.org/project/pytest-mock-server/

   (603) https://pypi.org/project/pytest-mockservers/

   (604) https://pypi.org/project/pytest-modified-env/

   (605) https://pypi.org/project/pytest-modifyjunit/

   (606) https://pypi.org/project/pytest-modifyscope/

   (607) https://pypi.org/project/pytest-molecule/

   (608) https://pypi.org/project/pytest-mongo/

   (609) https://pypi.org/project/pytest-mongodb/

   (610) https://pypi.org/project/pytest-monitor/

   (611) https://pypi.org/project/pytest-monkeyplus/

   (612) https://pypi.org/project/pytest-monkeytype/

   (613) https://pypi.org/project/pytest-moto/

   (614) https://pypi.org/project/pytest-motor/

   (615) https://pypi.org/project/pytest-mp/

   (616) https://pypi.org/project/pytest-mpi/

   (617) https://pypi.org/project/pytest-mpl/

   (618) https://pypi.org/project/pytest-mproc/

   (619) https://pypi.org/project/pytest-multi-check/

   (620) https://pypi.org/project/pytest-multihost/

   (621) https://pypi.org/project/pytest-multilog/

   (622) https://pypi.org/project/pytest-multithreading/

   (623) https://pypi.org/project/pytest-multithreading-allure/

   (624) https://pypi.org/project/pytest-mutagen/

   (625) https://pypi.org/project/pytest-mypy/

   (626) https://pypi.org/project/pytest-mypyd/

   (627) https://pypi.org/project/pytest-mypy-plugins/

   (628) https://pypi.org/project/pytest-mypy-plugins-shim/

   (629) https://pypi.org/project/pytest-mypy-testing/

   (630) https://pypi.org/project/pytest-mysql/

   (631) https://pypi.org/project/pytest-needle/

   (632) https://pypi.org/project/pytest-neo/

   (633) https://pypi.org/project/pytest-network/

   (634) https://pypi.org/project/pytest-network-endpoints/

   (635) https://pypi.org/project/pytest-never-sleep/

   (636) https://pypi.org/project/pytest-nginx/

   (637) https://pypi.org/project/pytest-nginx-iplweb/

   (638) https://pypi.org/project/pytest-ngrok/

   (639) https://pypi.org/project/pytest-ngsfixtures/

   (640) https://pypi.org/project/pytest-nhsd-apim/

   (641) https://pypi.org/project/pytest-nice/

   (642) https://pypi.org/project/pytest-nice-parametrize/

   (643) https://pypi.org/project/pytest-nlcov/

   (644) https://pypi.org/project/pytest-nocustom/

   (645) https://pypi.org/project/pytest-nodev/

   (646) https://pypi.org/project/pytest-nogarbage/

   (647) https://pypi.org/project/pytest-notice/

   (648) https://pypi.org/project/pytest-notification/

   (649) https://pypi.org/project/pytest-notifier/

   (650) https://pypi.org/project/pytest-notimplemented/

   (651) https://pypi.org/project/pytest-notion/

   (652) https://pypi.org/project/pytest-nunit/

   (653) https://pypi.org/project/pytest-object-getter/

   (654) https://pypi.org/project/pytest-ochrus/

   (655) https://pypi.org/project/pytest-odoo/

   (656) https://pypi.org/project/pytest-odoo-fixtures/

   (657) https://pypi.org/project/pytest-oerp/

   (658) https://pypi.org/project/pytest-ok/

   (659) https://pypi.org/project/pytest-only/

   (660) https://pypi.org/project/pytest-oot/

   (661) https://pypi.org/project/pytest-openfiles/

   (662) https://pypi.org/project/pytest-opentelemetry/

   (663) https://pypi.org/project/pytest-opentmi/

   (664) https://pypi.org/project/pytest-operator/

   (665) https://pypi.org/project/pytest-optional/

   (666) https://pypi.org/project/pytest-optional-tests/

   (667) https://pypi.org/project/pytest-orchestration/

   (668) https://pypi.org/project/pytest-order/

   (669) https://pypi.org/project/pytest-ordering/

   (670) https://pypi.org/project/pytest-osxnotify/

   (671) https://pypi.org/project/pytest-otel/

   (672) https://pypi.org/project/pytest-owner/

   (673) https://pypi.org/project/pytest-pact/

   (674) https://pypi.org/project/pytest-pahrametahrize/

   (675) https://pypi.org/project/pytest-parallel/

   (676) https://pypi.org/project/pytest-parallel-39/

   (677) https://pypi.org/project/pytest-param/

   (678) https://pypi.org/project/pytest-paramark/

   (679) https://pypi.org/project/pytest-parametrization/

   (680) https://pypi.org/project/pytest-parametrize-cases/

   (681) https://pypi.org/project/pytest-parametrized/

   (682) https://pypi.org/project/pytest-parawtf/

   (683) https://pypi.org/project/pytest-pass/

   (684) https://pypi.org/project/pytest-passrunner/

   (685) https://pypi.org/project/pytest-paste-config/

   (686) https://pypi.org/project/pytest-patches/

   (687) https://pypi.org/project/pytest-pdb/

   (688) https://pypi.org/project/pytest-peach/

   (689) https://pypi.org/project/pytest-pep257/

   (690) https://pypi.org/project/pytest-pep8/

   (691) https://pypi.org/project/pytest-percent/

   (692) https://pypi.org/project/pytest-perf/

   (693) https://pypi.org/project/pytest-performance/

   (694) https://pypi.org/project/pytest-persistence/

   (695) https://pypi.org/project/pytest-pg/

   (696) https://pypi.org/project/pytest-pgsql/

   (697) https://pypi.org/project/pytest-phmdoctest/

   (698) https://pypi.org/project/pytest-picked/

   (699) https://pypi.org/project/pytest-pigeonhole/

   (700) https://pypi.org/project/pytest-pikachu/

   (701) https://pypi.org/project/pytest-pilot/

   (702) https://pypi.org/project/pytest-pings/

   (703) https://pypi.org/project/pytest-pinned/

   (704) https://pypi.org/project/pytest-pinpoint/

   (705) https://pypi.org/project/pytest-pipeline/

   (706) https://pypi.org/project/pytest-platform-markers/

   (707) https://pypi.org/project/pytest-play/

   (708) https://pypi.org/project/pytest-playbook/

   (709) https://pypi.org/project/pytest-playwright/

   (710) https://pypi.org/project/pytest-playwrights/

   (711) https://pypi.org/project/pytest-playwright-snapshot/

   (712) https://pypi.org/project/pytest-playwright-visual/

   (713) https://pypi.org/project/pytest-plt/

   (714) https://pypi.org/project/pytest-plugin-helpers/

   (715) https://pypi.org/project/pytest-plus/

   (716) https://pypi.org/project/pytest-pmisc/

   (717) https://pypi.org/project/pytest-pointers/

   (718) https://pypi.org/project/pytest-polarion-cfme/

   (719) https://pypi.org/project/pytest-polarion-collect/

   (720) https://pypi.org/project/pytest-polecat/

   (721) https://pypi.org/project/pytest-ponyorm/

   (722) https://pypi.org/project/pytest-poo/

   (723) https://pypi.org/project/pytest-poo-fail/

   (724) https://pypi.org/project/pytest-pop/

   (725) https://pypi.org/project/pytest-portion/

   (726) https://pypi.org/project/pytest-postgres/

   (727) https://pypi.org/project/pytest-postgresql/

   (728) https://pypi.org/project/pytest-power/

   (729) https://pypi.org/project/pytest-prefer-nested-dup-tests/

   (730) https://pypi.org/project/pytest-pretty-terminal/

   (731) https://pypi.org/project/pytest-pride/

   (732) https://pypi.org/project/pytest-print/

   (733) https://pypi.org/project/pytest-profiles/

   (734) https://pypi.org/project/pytest-profiling/

   (735) https://pypi.org/project/pytest-progress/

   (736) https://pypi.org/project/pytest-prometheus/

   (737) https://pypi.org/project/pytest-prometheus-pushgateway/

   (738) https://pypi.org/project/pytest-prosper/

   (739) https://pypi.org/project/pytest-pspec/

   (740) https://pypi.org/project/pytest-psqlgraph/

   (741) https://pypi.org/project/pytest-ptera/

   (742) https://pypi.org/project/pytest-pudb/

   (743) https://pypi.org/project/pytest-purkinje/

   (744) https://pypi.org/project/pytest-pycharm/

   (745) https://pypi.org/project/pytest-pycodestyle/

   (746) https://pypi.org/project/pytest-pydev/

   (747) https://pypi.org/project/pytest-pydocstyle/

   (748) https://pypi.org/project/pytest-pylint/

   (749) https://pypi.org/project/pytest-pymysql-autorecord/

   (750) https://pypi.org/project/pytest-pyodide/

   (751) https://pypi.org/project/pytest-pypi/

   (752) https://pypi.org/project/pytest-pypom-navigation/

   (753) https://pypi.org/project/pytest-pyppeteer/

   (754) https://pypi.org/project/pytest-pyq/

   (755) https://pypi.org/project/pytest-pyramid/

   (756) https://pypi.org/project/pytest-pyramid-server/

   (757) https://pypi.org/project/pytest-pyright/

   (758) https://pypi.org/project/pytest-pytestrail/

   (759) https://pypi.org/project/pytest-pythonpath/

   (760) https://pypi.org/project/pytest-pytorch/

   (761) https://pypi.org/project/pytest-qasync/

   (762) https://pypi.org/project/pytest-qatouch/

   (763) https://pypi.org/project/pytest-qgis/

   (764) https://pypi.org/project/pytest-qml/

   (765) https://pypi.org/project/pytest-qr/

   (766) https://pypi.org/project/pytest-qt/

   (767) https://pypi.org/project/pytest-qt-app/

   (768) https://pypi.org/project/pytest-quarantine/

   (769) https://pypi.org/project/pytest-quickcheck/

   (770) https://pypi.org/project/pytest-rabbitmq/

   (771) https://pypi.org/project/pytest-race/

   (772) https://pypi.org/project/pytest-rage/

   (773) https://pypi.org/project/pytest-rail/

   (774) https://pypi.org/project/pytest-railflow-testrail-reporter/

   (775) https://pypi.org/project/pytest-raises/

   (776) https://pypi.org/project/pytest-raisesregexp/

   (777) https://pypi.org/project/pytest-raisin/

   (778) https://pypi.org/project/pytest-random/

   (779) https://pypi.org/project/pytest-randomly/

   (780) https://pypi.org/project/pytest-randomness/

   (781) https://pypi.org/project/pytest-random-num/

   (782) https://pypi.org/project/pytest-random-order/

   (783) https://pypi.org/project/pytest-readme/

   (784) https://pypi.org/project/pytest-reana/

   (785) https://pypi.org/project/pytest-recording/

   (786) https://pypi.org/project/pytest-recordings/

   (787) https://pypi.org/project/pytest-redis/

   (788) https://pypi.org/project/pytest-redislite/

   (789) https://pypi.org/project/pytest-redmine/

   (790) https://pypi.org/project/pytest-ref/

   (791) https://pypi.org/project/pytest-reference-formatter/

   (792) https://pypi.org/project/pytest-regex-dependency/

   (793) https://pypi.org/project/pytest-regressions/

   (794) https://pypi.org/project/pytest-regtest/

   (795) https://pypi.org/project/pytest-relative-order/

   (796) https://pypi.org/project/pytest-relaxed/

   (797) https://pypi.org/project/pytest-remfiles/

   (798) https://pypi.org/project/pytest-remotedata/

   (799) https://pypi.org/project/pytest-remote-response/

   (800) https://pypi.org/project/pytest-remove-stale-bytecode/

   (801) https://pypi.org/project/pytest-reorder/

   (802) https://pypi.org/project/pytest-repeat/

   (803) https://pypi.org/project/pytest-replay/

   (804) https://pypi.org/project/pytest-repo-health/

   (805) https://pypi.org/project/pytest-report/

   (806) https://pypi.org/project/pytest-reporter/

   (807) https://pypi.org/project/pytest-reporter-html1/

   (808) https://pypi.org/project/pytest-reportinfra/

   (809) https://pypi.org/project/pytest-reporting/

   (810) https://pypi.org/project/pytest-reportlog/

   (811) https://pypi.org/project/pytest-report-me/

   (812) https://pypi.org/project/pytest-report-parameters/

   (813) https://pypi.org/project/pytest-reportportal/

   (814) https://pypi.org/project/pytest-reqs/

   (815) https://pypi.org/project/pytest-requests/

   (816) https://pypi.org/project/pytest-requestselapsed/

   (817) https://pypi.org/project/pytest-requests-futures/

   (818) https://pypi.org/project/pytest-requires/

   (819) https://pypi.org/project/pytest-reraise/

   (820) https://pypi.org/project/pytest-rerun/

   (821) https://pypi.org/project/pytest-rerunfailures/

   (822) https://pypi.org/project/pytest-rerunfailures-all-logs/

   (823) https://pypi.org/project/pytest-resilient-circuits/

   (824) https://pypi.org/project/pytest-resource/

   (825) https://pypi.org/project/pytest-resource-path/

   (826) https://pypi.org/project/pytest-responsemock/

   (827) https://pypi.org/project/pytest-responses/

   (828) https://pypi.org/project/pytest-rest-api/

   (829) https://pypi.org/project/pytest-restrict/

   (830) https://pypi.org/project/pytest-rethinkdb/

   (831) https://pypi.org/project/pytest-retry/

   (832) https://pypi.org/project/pytest-reverse/

   (833) https://pypi.org/project/pytest-rich/

   (834) https://pypi.org/project/pytest-rich-reporter/

   (835) https://pypi.org/project/pytest-ringo/

   (836) https://pypi.org/project/pytest-rmsis/

   (837) https://pypi.org/project/pytest-rng/

   (838) https://pypi.org/project/pytest-roast/

   (839) https://pypi.org/project/pytest-rocketchat/

   (840) https://pypi.org/project/pytest-rotest/

   (841) https://pypi.org/project/pytest-rpc/

   (842) https://pypi.org/project/pytest-rst/

   (843) https://pypi.org/project/pytest-rt/

   (844) https://pypi.org/project/pytest-rts/

   (845) https://pypi.org/project/pytest-run-changed/

   (846) https://pypi.org/project/pytest-runfailed/

   (847) https://pypi.org/project/pytest-runner/

   (848) https://pypi.org/project/pytest-run-subprocess/

   (849) https://pypi.org/project/pytest-runtime-xfail/

   (850) https://pypi.org/project/pytest-saccharin/

   (851) https://pypi.org/project/pytest-salt/

   (852) https://pypi.org/project/pytest-salt-containers/

   (853) https://pypi.org/project/pytest-salt-factories/

   (854) https://pypi.org/project/pytest-salt-from-filenames/

   (855) https://pypi.org/project/pytest-salt-runtests-bridge/

   (856) https://pypi.org/project/pytest-sanic/

   (857) https://pypi.org/project/pytest-sanity/

   (858) https://pypi.org/project/pytest-sa-pg/

   (859) https://pypi.org/project/pytest-sbase/

   (860) https://pypi.org/project/pytest-scenario/

   (861) https://pypi.org/project/pytest-schema/

   (862) https://pypi.org/project/pytest-securestore/

   (863) https://pypi.org/project/pytest-select/

   (864) https://pypi.org/project/pytest-selenium/

   (865) https://pypi.org/project/pytest-seleniumbase/

   (866) https://pypi.org/project/pytest-selenium-enhancer/

   (867) https://pypi.org/project/pytest-selenium-pdiff/

   (868) https://pypi.org/project/pytest-send-email/

   (869) https://pypi.org/project/pytest-sentry/

   (870) https://pypi.org/project/pytest-server-fixtures/

   (871) https://pypi.org/project/pytest-serverless/

   (872) https://pypi.org/project/pytest-servers/

   (873) https://pypi.org/project/pytest-services/

   (874) https://pypi.org/project/pytest-session2file/

   (875) https://pypi.org/project/pytest-session-fixture-globalize/

   (876) https://pypi.org/project/pytest-session_to_file/

   (877) https://pypi.org/project/pytest-sftpserver/

   (878) https://pypi.org/project/pytest-shard/

   (879) https://pypi.org/project/pytest-sharkreport/

   (880) https://pypi.org/project/pytest-shell/

   (881) https://pypi.org/project/pytest-shell-utilities/

   (882) https://pypi.org/project/pytest-sheraf/

   (883) https://pypi.org/project/pytest-sherlock/

   (884) https://pypi.org/project/pytest-shortcuts/

   (885) https://pypi.org/project/pytest-shutil/

   (886) https://pypi.org/project/pytest-simplehttpserver/

   (887) https://pypi.org/project/pytest-simple-plugin/

   (888) https://pypi.org/project/pytest-simple-settings/

   (889) https://pypi.org/project/pytest-single-file-logging/

   (890) https://pypi.org/project/pytest-skip-markers/

   (891) https://pypi.org/project/pytest-skipper/

   (892) https://pypi.org/project/pytest-skippy/

   (893) https://pypi.org/project/pytest-skip-slow/

   (894) https://pypi.org/project/pytest-slack/

   (895) https://pypi.org/project/pytest-slow/

   (896) https://pypi.org/project/pytest-smartcollect/

   (897) https://pypi.org/project/pytest-smartcov/

   (898) https://pypi.org/project/pytest-smell/

   (899) https://pypi.org/project/pytest-smtp/

   (900) https://pypi.org/project/pytest-snail/

   (901) https://pypi.org/project/pytest-snapci/

   (902) https://pypi.org/project/pytest-snapshot/

   (903) https://pypi.org/project/pytest-snmpserver/

   (904) https://pypi.org/project/pytest-snowflake-bdd/

   (905) https://pypi.org/project/pytest-socket/

   (906) https://pypi.org/project/pytest-sofaepione/

   (907) https://pypi.org/project/pytest-soft-assertions/

   (908) https://pypi.org/project/pytest-solidity/

   (909) https://pypi.org/project/pytest-solr/

   (910) https://pypi.org/project/pytest-sorter/

   (911) https://pypi.org/project/pytest-sosu/

   (912) https://pypi.org/project/pytest-sourceorder/

   (913) https://pypi.org/project/pytest-spark/

   (914) https://pypi.org/project/pytest-spawner/

   (915) https://pypi.org/project/pytest-spec/

   (916) https://pypi.org/project/pytest-spec2md/

   (917) https://pypi.org/project/pytest-speed/

   (918) https://pypi.org/project/pytest-sphinx/

   (919) https://pypi.org/project/pytest-spiratest/

   (920) https://pypi.org/project/pytest-splinter/

   (921) https://pypi.org/project/pytest-splinter4/

   (922) https://pypi.org/project/pytest-split/

   (923) https://pypi.org/project/pytest-splitio/

   (924) https://pypi.org/project/pytest-split-tests/

   (925) https://pypi.org/project/pytest-split-tests-tresorit/

   (926) https://pypi.org/project/pytest-splunk-addon/

   (927) https://pypi.org/project/pytest-splunk-addon-ui-smartx/

   (928) https://pypi.org/project/pytest-splunk-env/

   (929) https://pypi.org/project/pytest-sqitch/

   (930) https://pypi.org/project/pytest-sqlalchemy/

   (931) https://pypi.org/project/pytest-sqlalchemy-mock/

   (932) https://pypi.org/project/pytest-sql-bigquery/

   (933) https://pypi.org/project/pytest-squadcast/

   (934) https://pypi.org/project/pytest-srcpaths/

   (935) https://pypi.org/project/pytest-ssh/

   (936) https://pypi.org/project/pytest-start-from/

   (937) https://pypi.org/project/pytest-statsd/

   (938) https://pypi.org/project/pytest-stepfunctions/

   (939) https://pypi.org/project/pytest-steps/

   (940) https://pypi.org/project/pytest-stepwise/

   (941) https://pypi.org/project/pytest-stf/

   (942) https://pypi.org/project/pytest-stoq/

   (943) https://pypi.org/project/pytest-stress/

   (944) https://pypi.org/project/pytest-structlog/

   (945) https://pypi.org/project/pytest-structmpd/

   (946) https://pypi.org/project/pytest-stub/

   (947) https://pypi.org/project/pytest-stubprocess/

   (948) https://pypi.org/project/pytest-study/

   (949) https://pypi.org/project/pytest-subprocess/

   (950) https://pypi.org/project/pytest-subtesthack/

   (951) https://pypi.org/project/pytest-subtests/

   (952) https://pypi.org/project/pytest-subunit/

   (953) https://pypi.org/project/pytest-sugar/

   (954) https://pypi.org/project/pytest-sugar-bugfix159/

   (955) https://pypi.org/project/pytest-super-check/

   (956) https://pypi.org/project/pytest-svn/

   (957) https://pypi.org/project/pytest-symbols/

   (958) https://pypi.org/project/pytest-system-statistics/

   (959) https://pypi.org/project/pytest-system-test-plugin/

   (960) https://pypi.org/project/pytest-takeltest/

   (961) https://pypi.org/project/pytest-talisker/

   (962) https://pypi.org/project/pytest-tap/

   (963) https://pypi.org/project/pytest-tape/

   (964) https://pypi.org/project/pytest-target/

   (965) https://pypi.org/project/pytest-tblineinfo/

   (966) https://pypi.org/project/pytest-teamcity-logblock/

   (967) https://pypi.org/project/pytest-telegram/

   (968) https://pypi.org/project/pytest-tempdir/

   (969) https://pypi.org/project/pytest-terra-fixt/

   (970) https://pypi.org/project/pytest-terraform/

   (971) https://pypi.org/project/pytest-terraform-fixture/

   (972) https://pypi.org/project/pytest-testbook/

   (973) https://pypi.org/project/pytest-testconfig/

   (974) https://pypi.org/project/pytest-testdirectory/

   (975) https://pypi.org/project/pytest-testdox/

   (976) https://pypi.org/project/pytest-test-grouping/

   (977) https://pypi.org/project/pytest-test-groups/

   (978) https://pypi.org/project/pytest-testinfra/

   (979) https://pypi.org/project/pytest-testlink-adaptor/

   (980) https://pypi.org/project/pytest-testmon/

   (981) https://pypi.org/project/pytest-testmon-oc/

   (982) https://pypi.org/project/pytest-testmon-skip-libraries/

   (983) https://pypi.org/project/pytest-testobject/

   (984) https://pypi.org/project/pytest-testpluggy/

   (985) https://pypi.org/project/pytest-testrail/

   (986) https://pypi.org/project/pytest-testrail2/

   (987) https://pypi.org/project/pytest-testrail-api/

   (988) https://pypi.org/project/pytest-testrail-api-client/

   (989) https://pypi.org/project/pytest-testrail-appetize/

   (990) https://pypi.org/project/pytest-testrail-client/

   (991) https://pypi.org/project/pytest-testrail-e2e/

   (992) https://pypi.org/project/pytest-testrail-integrator/

   (993) https://pypi.org/project/pytest-testrail-ns/

   (994) https://pypi.org/project/pytest-testrail-plugin/

   (995) https://pypi.org/project/pytest-testrail-reporter/

   (996) https://pypi.org/project/pytest-testreport/

   (997) https://pypi.org/project/pytest-testreport-new/

   (998) https://pypi.org/project/pytest-testslide/

   (999) https://pypi.org/project/pytest-test-this/

   (1000) https://pypi.org/project/pytest-test-utils/

   (1001) https://pypi.org/project/pytest-tesults/

   (1002) https://pypi.org/project/pytest-tezos/

   (1003) https://pypi.org/project/pytest-th2-bdd/

   (1004) https://pypi.org/project/pytest-thawgun/

   (1005) https://pypi.org/project/pytest-threadleak/

   (1006) https://pypi.org/project/pytest-tick/

   (1007) https://pypi.org/project/pytest-timeit/

   (1008) https://pypi.org/project/pytest-timeout/

   (1009) https://pypi.org/project/pytest-timeouts/

   (1010) https://pypi.org/project/pytest-timer/

   (1011) https://pypi.org/project/pytest-timestamper/

   (1012) https://pypi.org/project/pytest-timestamps/

   (1013) https://pypi.org/project/pytest-tipsi-django/

   (1014) https://pypi.org/project/pytest-tipsi-testing/

   (1015) https://pypi.org/project/pytest-tldr/

   (1016) https://pypi.org/project/pytest-tm4j-reporter/

   (1017) https://pypi.org/project/pytest-tmnet/

   (1018) https://pypi.org/project/pytest-tmp-files/

   (1019) https://pypi.org/project/pytest-tmpfs/

   (1020) https://pypi.org/project/pytest-tmreport/

   (1021) https://pypi.org/project/pytest-todo/

   (1022) https://pypi.org/project/pytest-tomato/

   (1023) https://pypi.org/project/pytest-toolbelt/

   (1024) https://pypi.org/project/pytest-toolbox/

   (1025) https://pypi.org/project/pytest-tools/

   (1026) https://pypi.org/project/pytest-tornado/

   (1027) https://pypi.org/project/pytest-tornado5/

   (1028) https://pypi.org/project/pytest-tornado-yen3/

   (1029) https://pypi.org/project/pytest-tornasync/

   (1030) https://pypi.org/project/pytest-trace/

   (1031) https://pypi.org/project/pytest-track/

   (1032) https://pypi.org/project/pytest-translations/

   (1033) https://pypi.org/project/pytest-travis-fold/

   (1034) https://pypi.org/project/pytest-trello/

   (1035) https://pypi.org/project/pytest-trepan/

   (1036) https://pypi.org/project/pytest-trialtemp/

   (1037) https://pypi.org/project/pytest-trio/

   (1038) https://pypi.org/project/pytest-trytond/

   (1039) https://pypi.org/project/pytest-tspwplib/

   (1040) https://pypi.org/project/pytest-tst/

   (1041) https://pypi.org/project/pytest-tstcls/

   (1042) https://pypi.org/project/pytest-tui/

   (1043) 
https://pypi.org/project/pytest-twilio-conversations-client-mock/

   (1044) https://pypi.org/project/pytest-twisted/

   (1045) https://pypi.org/project/pytest-typechecker/

   (1046) https://pypi.org/project/pytest-typhoon-config/

   (1047) https://pypi.org/project/pytest-typhoon-xray/

   (1048) https://pypi.org/project/pytest-tytest/

   (1049) https://pypi.org/project/pytest-ubersmith/

   (1050) https://pypi.org/project/pytest-ui/

   (1051) https://pypi.org/project/pytest-unflakable/

   (1052) https://pypi.org/project/pytest-unhandled-exception-exit-code/

   (1053) https://pypi.org/project/pytest-unittest-filter/

   (1054) https://pypi.org/project/pytest-unmarked/

   (1055) https://pypi.org/project/pytest-unordered/

   (1056) https://pypi.org/project/pytest-unstable/

   (1057) https://pypi.org/project/pytest-upload-report/

   (1058) https://pypi.org/project/pytest-utils/

   (1059) https://pypi.org/project/pytest-vagrant/

   (1060) https://pypi.org/project/pytest-valgrind/

   (1061) https://pypi.org/project/pytest-variables/

   (1062) https://pypi.org/project/pytest-variant/

   (1063) https://pypi.org/project/pytest-vcr/

   (1064) https://pypi.org/project/pytest-vcr-delete-on-fail/

   (1065) https://pypi.org/project/pytest-vcrpandas/

   (1066) https://pypi.org/project/pytest-venv/

   (1067) https://pypi.org/project/pytest-ver/

   (1068) https://pypi.org/project/pytest-verbose-parametrize/

   (1069) https://pypi.org/project/pytest-vimqf/

   (1070) https://pypi.org/project/pytest-virtualenv/

   (1071) https://pypi.org/project/pytest-vnc/

   (1072) https://pypi.org/project/pytest-voluptuous/

   (1073) https://pypi.org/project/pytest-vscodedebug/

   (1074) https://pypi.org/project/pytest-vts/

   (1075) https://pypi.org/project/pytest-vw/

   (1076) https://pypi.org/project/pytest-vyper/

   (1077) https://pypi.org/project/pytest-wa-e2e-plugin/

   (1078) https://pypi.org/project/pytest-wake/

   (1079) https://pypi.org/project/pytest-watch/

   (1080) https://pypi.org/project/pytest-watcher/

   (1081) https://pypi.org/project/pytest-wdl/

   (1082) https://pypi.org/project/pytest-webdriver/

   (1083) https://pypi.org/project/pytest-wetest/

   (1084) https://pypi.org/project/pytest-whirlwind/

   (1085) https://pypi.org/project/pytest-wholenodeid/

   (1086) https://pypi.org/project/pytest-win32consoletitle/

   (1087) https://pypi.org/project/pytest-winnotify/

   (1088) https://pypi.org/project/pytest-wiremock/

   (1089) https://pypi.org/project/pytest-with-docker/

   (1090) https://pypi.org/project/pytest-workflow/

   (1091) https://pypi.org/project/pytest-xdist/

   (1092) https://pypi.org/project/pytest-xdist-debug-for-graingert/

   (1093) https://pypi.org/project/pytest-xdist-forked/

   (1094) https://pypi.org/project/pytest-xdist-tracker/

   (1095) https://pypi.org/project/pytest-xfaillist/

   (1096) https://pypi.org/project/pytest-xfiles/

   (1097) https://pypi.org/project/pytest-xlog/

   (1098) https://pypi.org/project/pytest-xlsx/

   (1099) https://pypi.org/project/pytest-xpara/

   (1100) https://pypi.org/project/pytest-xprocess/

   (1101) https://pypi.org/project/pytest-xray/

   (1102) https://pypi.org/project/pytest-xrayjira/

   (1103) https://pypi.org/project/pytest-xray-server/

   (1104) https://pypi.org/project/pytest-xreport/

   (1105) https://pypi.org/project/pytest-xvfb/

   (1106) https://pypi.org/project/pytest-yaml/

   (1107) https://pypi.org/project/pytest-yamltree/

   (1108) https://pypi.org/project/pytest-yamlwsgi/

   (1109) https://pypi.org/project/pytest-yapf/

   (1110) https://pypi.org/project/pytest-yapf3/

   (1111) https://pypi.org/project/pytest-yield/

   (1112) https://pypi.org/project/pytest-yls/

   (1113) https://pypi.org/project/pytest-yuk/

   (1114) https://pypi.org/project/pytest-zafira/

   (1115) https://pypi.org/project/pytest-zap/

   (1116) https://pypi.org/project/pytest-zebrunner/

   (1117) https://pypi.org/project/pytest-zigzag/

   (1118) https://pypi.org/project/pytest-zulip/


File: pytest.info,  Node: Configuration,  Next: API Reference<2>,  Prev: Plugin List,  Up: Top

25 Configuration
****************

* Menu:

* Command line options and configuration file settings::
* Configuration file formats::
* Initialization; determining rootdir and configfile: Initialization determining rootdir and configfile.
* Builtin configuration file options::
* Syntax highlighting theme customization::


File: pytest.info,  Node: Command line options and configuration file settings,  Next: Configuration file formats,  Up: Configuration

25.1 Command line options and configuration file settings
=========================================================

You can get help on command line options and values in INI-style
configurations files by using the general help option:

     pytest -h   # prints options _and_ config file settings

This will display command line and configuration file settings which
were registered by installed plugins.


File: pytest.info,  Node: Configuration file formats,  Next: Initialization determining rootdir and configfile,  Prev: Command line options and configuration file settings,  Up: Configuration

25.2 Configuration file formats
===============================

Many *note pytest settings: 1bf. can be set in a ‘configuration file’,
which by convention resides in the root directory of your repository.

A quick example of the configuration files supported by pytest:

* Menu:

* pytest.ini: pytest ini.
* pyproject.toml: pyproject toml.
* tox.ini: tox ini.
* setup.cfg: setup cfg.


File: pytest.info,  Node: pytest ini,  Next: pyproject toml,  Up: Configuration file formats

25.2.1 pytest.ini
-----------------

‘pytest.ini’ files take precedence over other files, even when empty.

Alternatively, the hidden version ‘.pytest.ini’ can be used.

     # pytest.ini or .pytest.ini
     [pytest]
     minversion = 6.0
     addopts = -ra -q
     testpaths =
         tests
         integration


File: pytest.info,  Node: pyproject toml,  Next: tox ini,  Prev: pytest ini,  Up: Configuration file formats

25.2.2 pyproject.toml
---------------------

New in version 6.0.

‘pyproject.toml’ are considered for configuration when they contain a
‘tool.pytest.ini_options’ table.

     # pyproject.toml
     [tool.pytest.ini_options]
     minversion = "6.0"
     addopts = "-ra -q"
     testpaths = [
         "tests",
         "integration",
     ]

     Note: One might wonder why ‘[tool.pytest.ini_options]’ instead of
     ‘[tool.pytest]’ as is the case with other tools.

     The reason is that the pytest team intends to fully utilize the
     rich TOML data format for configuration in the future, reserving
     the ‘[tool.pytest]’ table for that.  The ‘ini_options’ table is
     being used, for now, as a bridge between the existing ‘.ini’
     configuration system and the future configuration format.


File: pytest.info,  Node: tox ini,  Next: setup cfg,  Prev: pyproject toml,  Up: Configuration file formats

25.2.3 tox.ini
--------------

‘tox.ini’ files are the configuration files of the tox(1) project, and
can also be used to hold pytest configuration if they have a ‘[pytest]’
section.

     # tox.ini
     [pytest]
     minversion = 6.0
     addopts = -ra -q
     testpaths =
         tests
         integration

   ---------- Footnotes ----------

   (1) https://tox.readthedocs.io


File: pytest.info,  Node: setup cfg,  Prev: tox ini,  Up: Configuration file formats

25.2.4 setup.cfg
----------------

‘setup.cfg’ files are general purpose configuration files, used
originally by distutils(1), and can also be used to hold pytest
configuration if they have a ‘[tool:pytest]’ section.

     # setup.cfg
     [tool:pytest]
     minversion = 6.0
     addopts = -ra -q
     testpaths =
         tests
         integration

     Warning: Usage of ‘setup.cfg’ is not recommended unless for very
     simple use cases.  ‘.cfg’ files use a different parser than
     ‘pytest.ini’ and ‘tox.ini’ which might cause hard to track down
     problems.  When possible, it is recommended to use the latter
     files, or ‘pyproject.toml’, to hold your pytest configuration.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/distutils/configfile.html


File: pytest.info,  Node: Initialization determining rootdir and configfile,  Next: Builtin configuration file options,  Prev: Configuration file formats,  Up: Configuration

25.3 Initialization: determining rootdir and configfile
=======================================================

pytest determines a ‘rootdir’ for each test run which depends on the
command line arguments (specified test files, paths) and on the
existence of configuration files.  The determined ‘rootdir’ and
‘configfile’ are printed as part of the pytest header during startup.

Here’s a summary what ‘pytest’ uses ‘rootdir’ for:

   * Construct ‘nodeids’ during collection; each test is assigned a
     unique ‘nodeid’ which is rooted at the ‘rootdir’ and takes into
     account the full path, class name, function name and
     parametrization (if any).

   * Is used by plugins as a stable location to store project/test run
     specific information; for example, the internal *note cache: d1.
     plugin creates a ‘.pytest_cache’ subdirectory in ‘rootdir’ to store
     its cross-test run state.

‘rootdir’ is ‘NOT’ used to modify ‘sys.path’/‘PYTHONPATH’ or influence
how modules are imported.  See *note pytest import mechanisms and
sys.path/PYTHONPATH: 154. for more details.

The ‘--rootdir=path’ command-line option can be used to force a specific
directory.  Note that contrary to other command-line options,
‘--rootdir’ cannot be used with *note addopts: 1c7. inside ‘pytest.ini’
because the ‘rootdir’ is used to ‘find’ ‘pytest.ini’ already.

* Menu:

* Finding the rootdir::


File: pytest.info,  Node: Finding the rootdir,  Up: Initialization determining rootdir and configfile

25.3.1 Finding the ‘rootdir’
----------------------------

Here is the algorithm which finds the rootdir from ‘args’:

   - If ‘-c’ is passed in the command-line, use that as configuration
     file, and its directory as ‘rootdir’.

   - Determine the common ancestor directory for the specified ‘args’
     that are recognised as paths that exist in the file system.  If no
     such paths are found, the common ancestor directory is set to the
     current working directory.

   - Look for ‘pytest.ini’, ‘pyproject.toml’, ‘tox.ini’, and ‘setup.cfg’
     files in the ancestor directory and upwards.  If one is matched, it
     becomes the ‘configfile’ and its directory becomes the ‘rootdir’.

   - If no configuration file was found, look for ‘setup.py’ upwards
     from the common ancestor directory to determine the ‘rootdir’.

   - If no ‘setup.py’ was found, look for ‘pytest.ini’,
     ‘pyproject.toml’, ‘tox.ini’, and ‘setup.cfg’ in each of the
     specified ‘args’ and upwards.  If one is matched, it becomes the
     ‘configfile’ and its directory becomes the ‘rootdir’.

   - If no ‘configfile’ was found and no configuration argument is
     passed, use the already determined common ancestor as root
     directory.  This allows the use of pytest in structures that are
     not part of a package and don’t have any particular configuration
     file.

If no ‘args’ are given, pytest collects test below the current working
directory and also starts determining the ‘rootdir’ from there.

Files will only be matched for configuration if:

   * ‘pytest.ini’: will always match and take precedence, even if empty.

   * ‘pyproject.toml’: contains a ‘[tool.pytest.ini_options]’ table.

   * ‘tox.ini’: contains a ‘[pytest]’ section.

   * ‘setup.cfg’: contains a ‘[tool:pytest]’ section.

The files are considered in the order above.  Options from multiple
‘configfiles’ candidates are never merged - the first match wins.

The *note Config: 39. object (accessible via hooks or through the *note
pytestconfig: 1a7. fixture) will subsequently carry these attributes:

   - *note config.rootpath: 1c9.: the determined root directory,
     guaranteed to exist.

   - *note config.inipath: 1ca.: the determined ‘configfile’, may be
     ‘None’ (it is named ‘inipath’ for historical reasons).

New in version 6.1: The ‘config.rootpath’ and ‘config.inipath’
properties.  They are pathlib.Path(1) versions of the older
‘config.rootdir’ and ‘config.inifile’, which have type ‘py.path.local’,
and still exist for backward compatibility.

The ‘rootdir’ is used as a reference directory for constructing test
addresses (“nodeids”) and can be used also by plugins for storing
per-testrun information.

Example:

     pytest path/to/testdir path/other/

will determine the common ancestor as ‘path’ and then check for
configuration files as follows:

     # first look for pytest.ini files
     path/pytest.ini
     path/pyproject.toml  # must contain a [tool.pytest.ini_options] table to match
     path/tox.ini         # must contain [pytest] section to match
     path/setup.cfg       # must contain [tool:pytest] section to match
     pytest.ini
     ... # all the way up to the root

     # now look for setup.py
     path/setup.py
     setup.py
     ... # all the way up to the root

     Warning: Custom pytest plugin commandline arguments may include a
     path, as in ‘pytest --log-output ../../test.log args’.  Then ‘args’
     is mandatory, otherwise pytest uses the folder of test.log for
     rootdir determination (see also issue #1435(2)).  A dot ‘.’ for
     referencing to the current working directory is also possible.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (2) https://github.com/pytest-dev/pytest/issues/1435


File: pytest.info,  Node: Builtin configuration file options,  Next: Syntax highlighting theme customization,  Prev: Initialization determining rootdir and configfile,  Up: Configuration

25.4 Builtin configuration file options
=======================================

For the full list of options consult the *note reference documentation:
1bf.


File: pytest.info,  Node: Syntax highlighting theme customization,  Prev: Builtin configuration file options,  Up: Configuration

25.5 Syntax highlighting theme customization
============================================

The syntax highlighting themes used by pytest can be customized using
two environment variables:

   - *note PYTEST_THEME: 1ce. sets a pygment style(1) to use.

   - *note PYTEST_THEME_MODE: 1cf. sets this style to ‘light’ or ‘dark’.

   ---------- Footnotes ----------

   (1) https://pygments.org/docs/styles/


File: pytest.info,  Node: API Reference<2>,  Next: Anatomy of a test,  Prev: Configuration,  Up: Top

26 API Reference
****************

This page contains the full reference to pytest’s API.

* Menu:

* Constants::
* Functions::
* Marks::
* Fixtures::
* Hooks::
* Objects::
* Global Variables::
* Environment Variables::
* Exceptions::
* Warnings::
* Configuration Options::
* Command-line Flags::


File: pytest.info,  Node: Constants,  Next: Functions,  Up: API Reference<2>

26.1 Constants
==============

* Menu:

* pytest.__version__: pytest __version__.
* pytest.version_tuple: pytest version_tuple.


File: pytest.info,  Node: pytest __version__,  Next: pytest version_tuple,  Up: Constants

26.1.1 pytest.__version__
-------------------------

The current pytest version, as a string:

     >>> import pytest
     >>> pytest.__version__
     '7.0.0'


File: pytest.info,  Node: pytest version_tuple,  Prev: pytest __version__,  Up: Constants

26.1.2 pytest.version_tuple
---------------------------

New in version 7.0.

The current pytest version, as a tuple:

     >>> import pytest
     >>> pytest.version_tuple
     (7, 0, 0)

For pre-releases, the last component will be a string with the
prerelease version:

     >>> import pytest
     >>> pytest.version_tuple
     (7, 0, '0rc1')


File: pytest.info,  Node: Functions,  Next: Marks,  Prev: Constants,  Up: API Reference<2>

26.2 Functions
==============

* Menu:

* pytest.approx: pytest approx.
* pytest.fail: pytest fail.
* pytest.skip: pytest skip.
* pytest.importorskip: pytest importorskip.
* pytest.xfail: pytest xfail.
* pytest.exit: pytest exit.
* pytest.main: pytest main.
* pytest.param: pytest param.
* pytest.raises: pytest raises.
* pytest.deprecated_call: pytest deprecated_call.
* pytest.register_assert_rewrite: pytest register_assert_rewrite.
* pytest.warns: pytest warns.
* pytest.freeze_includes: pytest freeze_includes.


File: pytest.info,  Node: pytest approx,  Next: pytest fail,  Up: Functions

26.2.1 pytest.approx
--------------------

 -- Function: approx (expected, rel=None, abs=None, nan_ok=False)

     Assert that two numbers (or two ordered sequences of numbers) are
     equal to each other within some tolerance.

     Due to the tutorial/floatingpoint, numbers that we would
     intuitively expect to be equal are not always so:

          >>> 0.1 + 0.2 == 0.3
          False

     This problem is commonly encountered when writing tests, e.g.  when
     making sure that floating-point values are what you expect them to
     be.  One way to deal with this problem is to assert that two
     floating-point numbers are equal to within some appropriate
     tolerance:

          >>> abs((0.1 + 0.2) - 0.3) < 1e-6
          True

     However, comparisons like this are tedious to write and difficult
     to understand.  Furthermore, absolute comparisons like the one
     above are usually discouraged because there’s no tolerance that
     works well for all situations.  ‘1e-6’ is good for numbers around
     ‘1’, but too small for very big numbers and too big for very small
     ones.  It’s better to express the tolerance as a fraction of the
     expected value, but relative comparisons like that are even more
     difficult to write correctly and concisely.

     The ‘approx’ class performs floating-point comparisons using a
     syntax that’s as intuitive as possible:

          >>> from pytest import approx
          >>> 0.1 + 0.2 == approx(0.3)
          True

     The same syntax also works for ordered sequences of numbers:

          >>> (0.1 + 0.2, 0.2 + 0.4) == approx((0.3, 0.6))
          True

     ‘numpy’ arrays:

          >>> import numpy as np
          >>> np.array([0.1, 0.2]) + np.array([0.2, 0.4]) == approx(np.array([0.3, 0.6]))
          True

     And for a ‘numpy’ array against a scalar:

          >>> import numpy as np
          >>> np.array([0.1, 0.2]) + np.array([0.2, 0.1]) == approx(0.3)
          True

     Only ordered sequences are supported, because ‘approx’ needs to
     infer the relative position of the sequences without ambiguity.
     This means ‘sets’ and other unordered sequences are not supported.

     Finally, dictionary ‘values’ can also be compared:

          >>> {'a': 0.1 + 0.2, 'b': 0.2 + 0.4} == approx({'a': 0.3, 'b': 0.6})
          True

     The comparison will be true if both mappings have the same keys and
     their respective values match the expected tolerances.

     ‘Tolerances’

     By default, ‘approx’ considers numbers within a relative tolerance
     of ‘1e-6’ (i.e.  one part in a million) of its expected value to be
     equal.  This treatment would lead to surprising results if the
     expected value was ‘0.0’, because nothing but ‘0.0’ itself is
     relatively close to ‘0.0’.  To handle this case less surprisingly,
     ‘approx’ also considers numbers within an absolute tolerance of
     ‘1e-12’ of its expected value to be equal.  Infinity and NaN are
     special cases.  Infinity is only considered equal to itself,
     regardless of the relative tolerance.  NaN is not considered equal
     to anything by default, but you can make it be equal to itself by
     setting the ‘nan_ok’ argument to True.  (This is meant to
     facilitate comparing arrays that use NaN to mean “no data”.)

     Both the relative and absolute tolerances can be changed by passing
     arguments to the ‘approx’ constructor:

          >>> 1.0001 == approx(1)
          False
          >>> 1.0001 == approx(1, rel=1e-3)
          True
          >>> 1.0001 == approx(1, abs=1e-3)
          True

     If you specify ‘abs’ but not ‘rel’, the comparison will not
     consider the relative tolerance at all.  In other words, two
     numbers that are within the default relative tolerance of ‘1e-6’
     will still be considered unequal if they exceed the specified
     absolute tolerance.  If you specify both ‘abs’ and ‘rel’, the
     numbers will be considered equal if either tolerance is met:

          >>> 1 + 1e-8 == approx(1)
          True
          >>> 1 + 1e-8 == approx(1, abs=1e-12)
          False
          >>> 1 + 1e-8 == approx(1, rel=1e-6, abs=1e-12)
          True

     You can also use ‘approx’ to compare nonnumeric types, or dicts and
     sequences containing nonnumeric types, in which case it falls back
     to strict equality.  This can be useful for comparing dicts and
     sequences that can contain optional values:

          >>> {"required": 1.0000005, "optional": None} == approx({"required": 1, "optional": None})
          True
          >>> [None, 1.0000005] == approx([None,1])
          True
          >>> ["foo", 1.0000005] == approx([None,1])
          False

     If you’re thinking about using ‘approx’, then you might want to
     know how it compares to other good ways of comparing floating-point
     numbers.  All of these algorithms are based on relative and
     absolute tolerances and should agree for the most part, but they do
     have meaningful differences:

        - ‘math.isclose(a, b, rel_tol=1e-9, abs_tol=0.0)’: True if the
          relative tolerance is met w.r.t.  either ‘a’ or ‘b’ or if the
          absolute tolerance is met.  Because the relative tolerance is
          calculated w.r.t.  both ‘a’ and ‘b’, this test is symmetric
          (i.e.  neither ‘a’ nor ‘b’ is a “reference value”).  You have
          to specify an absolute tolerance if you want to compare to
          ‘0.0’ because there is no tolerance by default.  More
          information: math.isclose()(1).

        - ‘numpy.isclose(a, b, rtol=1e-5, atol=1e-8)’: True if the
          difference between ‘a’ and ‘b’ is less that the sum of the
          relative tolerance w.r.t.  ‘b’ and the absolute tolerance.
          Because the relative tolerance is only calculated w.r.t.  ‘b’,
          this test is asymmetric and you can think of ‘b’ as the
          reference value.  Support for comparing sequences is provided
          by numpy.allclose()(2).  More information: numpy.isclose(3).

        - ‘unittest.TestCase.assertAlmostEqual(a, b)’: True if ‘a’ and
          ‘b’ are within an absolute tolerance of ‘1e-7’.  No relative
          tolerance is considered , so this function is not appropriate
          for very large or very small numbers.  Also, it’s only
          available in subclasses of ‘unittest.TestCase’ and it’s ugly
          because it doesn’t follow PEP8.  More information:
          unittest.TestCase.assertAlmostEqual()(4).

        - ‘a == pytest.approx(b, rel=1e-6, abs=1e-12)’: True if the
          relative tolerance is met w.r.t.  ‘b’ or if the absolute
          tolerance is met.  Because the relative tolerance is only
          calculated w.r.t.  ‘b’, this test is asymmetric and you can
          think of ‘b’ as the reference value.  In the special case that
          you explicitly specify an absolute tolerance but not a
          relative tolerance, only the absolute tolerance is considered.

          Note: ‘approx’ can handle numpy arrays, but we recommend the
          specialised test helpers in Test Support (numpy.testing)(5) if
          you need support for comparisons, NaNs, or ULP-based
          tolerances.

          Warning: 
          Changed in version 3.2.

          In order to avoid inconsistent behavior, TypeError(6) is
          raised for ‘>’, ‘>=’, ‘<’ and ‘<=’ comparisons.  The example
          below illustrates the problem:

               assert approx(0.1) > 0.1 + 1e-10  # calls approx(0.1).__gt__(0.1 + 1e-10)
               assert 0.1 + 1e-10 > approx(0.1)  # calls approx(0.1).__lt__(0.1 + 1e-10)

          In the second example one expects ‘approx(0.1).__le__(0.1 +
          1e-10)’ to be called.  But instead, ‘approx(0.1).__lt__(0.1 +
          1e-10)’ is used to comparison.  This is because the call
          hierarchy of rich comparisons follows a fixed behavior.  More
          information: object.__ge__()(7)

     Changed in version 3.7.1: ‘approx’ raises ‘TypeError’ when it
     encounters a dict value or sequence element of nonnumeric type.

     Changed in version 6.1.0: ‘approx’ falls back to strict equality
     for nonnumeric types instead of raising ‘TypeError’.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/math.html#math.isclose

   (2) 
https://numpy.org/doc/stable/reference/generated/numpy.allclose.html#numpy.allclose

   (3) 
https://numpy.org/doc/stable/reference/generated/numpy.isclose.html

   (4) 
https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertAlmostEqual

   (5) https://numpy.org/doc/stable/reference/routines.testing.html

   (6) https://docs.python.org/3/library/exceptions.html#TypeError

   (7) https://docs.python.org/3/reference/datamodel.html#object.__ge__


File: pytest.info,  Node: pytest fail,  Next: pytest skip,  Prev: pytest approx,  Up: Functions

26.2.2 pytest.fail
------------------

‘Tutorial’: *note How to use skip and xfail to deal with tests that
cannot succeed: 11f.

 -- Function: fail (reason[, pytrace=True, msg=None])

     Explicitly fail an executing test with the given message.


     Parameters:

        * ‘reason’ (str(1)) – The message to show the user as reason for
          the failure.

        * ‘pytrace’ (bool(2)) – If False, msg represents the full
          failure information and no python traceback will be reported.

        * ‘msg’ (Optional(3)‘[’str(4)‘]’) – Same as ‘reason’, but
          deprecated.  Will be removed in a future version, use ‘reason’
          instead.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#bool

   (3) https://docs.python.org/3/library/typing.html#typing.Optional

   (4) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: pytest skip,  Next: pytest importorskip,  Prev: pytest fail,  Up: Functions

26.2.3 pytest.skip
------------------

 -- Function: skip (reason[, allow_module_level=False, msg=None])

     Skip an executing test with the given message.

     This function should be called only during testing (setup, call or
     teardown) or during collection by using the ‘allow_module_level’
     flag.  This function can be called in doctests as well.


     Parameters:

        * ‘reason’ (str(1)) – The message to show the user as reason for
          the skip.

        * ‘allow_module_level’ (bool(2)) – Allows this function to be
          called at module level, skipping the rest of the module.
          Defaults to False.

        * ‘msg’ (Optional(3)‘[’str(4)‘]’) – Same as ‘reason’, but
          deprecated.  Will be removed in a future version, use ‘reason’
          instead.

          Note: It is better to use the *note pytest.mark.skipif: 126.
          marker when possible to declare a test to be skipped under
          certain conditions like mismatching platforms or dependencies.
          Similarly, use the ‘# doctest: +SKIP’ directive (see
          doctest.SKIP(5)) to skip a doctest statically.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#bool

   (3) https://docs.python.org/3/library/typing.html#typing.Optional

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/doctest.html#doctest.SKIP


File: pytest.info,  Node: pytest importorskip,  Next: pytest xfail,  Prev: pytest skip,  Up: Functions

26.2.4 pytest.importorskip
--------------------------

 -- Function: importorskip (modname, minversion=None, reason=None)

     Import and return the requested module ‘modname’, or skip the
     current test if the module cannot be imported.


     Parameters:

        * ‘modname’ (str(1)) – The name of the module to import.

        * ‘minversion’ (str(2)) – If given, the imported module’s
          ‘__version__’ attribute must be at least this minimal version,
          otherwise the test is still skipped.

        * ‘reason’ (str(3)) – If given, this reason is shown as the
          message when the module cannot be imported.


     Returns: The imported module.  This should be assigned to its
     canonical name.


     Return type: Any(4)

     Example:

          docutils = pytest.importorskip("docutils")

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/typing.html#typing.Any


File: pytest.info,  Node: pytest xfail,  Next: pytest exit,  Prev: pytest importorskip,  Up: Functions

26.2.5 pytest.xfail
-------------------

 -- Function: xfail (reason='')

     Imperatively xfail an executing test or setup function with the
     given reason.

     This function should be called only during testing (setup, call or
     teardown).

          Note: It is better to use the *note pytest.mark.xfail: 12f.
          marker when possible to declare a test to be xfailed under
          certain conditions like known bugs or missing features.


File: pytest.info,  Node: pytest exit,  Next: pytest main,  Prev: pytest xfail,  Up: Functions

26.2.6 pytest.exit
------------------

 -- Function: exit (reason[, returncode=False, msg=None])

     Exit testing process.


     Parameters:

        * ‘reason’ (str(1)) – The message to show as the reason for
          exiting pytest.  reason has a default value only because ‘msg’
          is deprecated.

        * ‘returncode’ (Optional(2)‘[’int(3)‘]’) – Return code to be
          used when exiting pytest.

        * ‘msg’ (Optional(4)‘[’str(5)‘]’) – Same as ‘reason’, but
          deprecated.  Will be removed in a future version, use ‘reason’
          instead.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/typing.html#typing.Optional

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/typing.html#typing.Optional

   (5) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: pytest main,  Next: pytest param,  Prev: pytest exit,  Up: Functions

26.2.7 pytest.main
------------------

 -- Function: main (args=None, plugins=None)

     Perform an in-process test run.


     Parameters:

        * ‘args’ (Optional(1)‘[’Union(2)‘[’List(3)‘[’str(4)‘]’‘,
          ’PathLike(5)‘[’str(6)‘]’‘]’‘]’) – List of command line
          arguments.

        * ‘plugins’ (Optional(7)‘[’Sequence(8)‘[’Union(9)‘[’str(10)‘,
          ’object(11)‘]’‘]’‘]’) – List of plugin objects to be
          auto-registered during initialization.


     Returns: An exit code.


     Return type: Union(12)[int(13), *note ExitCode: 1e2.]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.Optional

   (2) https://docs.python.org/3/library/typing.html#typing.Union

   (3) https://docs.python.org/3/library/typing.html#typing.List

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/os.html#os.PathLike

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/typing.html#typing.Optional

   (8) https://docs.python.org/3/library/typing.html#typing.Sequence

   (9) https://docs.python.org/3/library/typing.html#typing.Union

   (10) https://docs.python.org/3/library/stdtypes.html#str

   (11) https://docs.python.org/3/library/functions.html#object

   (12) https://docs.python.org/3/library/typing.html#typing.Union

   (13) https://docs.python.org/3/library/functions.html#int


File: pytest.info,  Node: pytest param,  Next: pytest raises,  Prev: pytest main,  Up: Functions

26.2.8 pytest.param
-------------------

 -- Function: param (*values[, id][, marks])

     Specify a parameter in *note pytest.mark.parametrize: 1e4. calls or
     *note parametrized fixtures: 69.

          @pytest.mark.parametrize(
              "test_input,expected",
              [
                  ("3+5", 8),
                  pytest.param("6*9", 42, marks=pytest.mark.xfail),
              ],
          )
          def test_eval(test_input, expected):
              assert eval(test_input) == expected


     Parameters:

        * ‘values’ (object(1)) – Variable args of the values of the
          parameter set, in order.

        * ‘marks’ – A single mark or a list of marks to be applied to
          this parameter set.

        * ‘id’ (str(2)) – The id to attribute to this parameter set.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: pytest raises,  Next: pytest deprecated_call,  Prev: pytest param,  Up: Functions

26.2.9 pytest.raises
--------------------

‘Tutorial’: *note Assertions about expected exceptions: c.

 -- Function: with raises (expected_exception: Union[Type[E],
          Tuple[Type[E], ...]], *, match: Optional[Union[str,
          Pattern[str]]] = ...) -> RaisesContext[E] as excinfo

 -- Function: with raises (expected_exception: Union[Type[E],
          Tuple[Type[E], ...]], func: Callable[[...], Any], *args: Any,
          **kwargs: Any) -> ExceptionInfo[E] as excinfo

     Assert that a code block/function call raises ‘expected_exception’
     or raise a failure exception otherwise.


     Parameters: ‘match’ – If specified, a string containing a regular
     expression, or a regular expression object, that is tested against
     the string representation of the exception using re.search()(1).
     To match a literal string that may contain special characters(2),
     the pattern can first be escaped with re.escape()(3).

     (This is only used when *note pytest.raises(): 31. is used as a
     context manager, and passed through to the function otherwise.
     When using *note pytest.raises(): 31. as a function, you can use:
     ‘pytest.raises(Exc, func, match="passed on").match("my pattern")’.)

     Use ‘pytest.raises’ as a context manager, which will capture the
     exception of the given type:

          >>> import pytest
          >>> with pytest.raises(ZeroDivisionError):
          ...    1/0

     If the code block does not raise the expected exception
     (‘ZeroDivisionError’ in the example above), or no exception at all,
     the check will fail instead.

     You can also use the keyword argument ‘match’ to assert that the
     exception matches a text or regex:

          >>> with pytest.raises(ValueError, match='must be 0 or None'):
          ...     raise ValueError("value must be 0 or None")

          >>> with pytest.raises(ValueError, match=r'must be \d+$'):
          ...     raise ValueError("value must be 42")

     The context manager produces an ‘ExceptionInfo’ object which can be
     used to inspect the details of the captured exception:

          >>> with pytest.raises(ValueError) as exc_info:
          ...     raise ValueError("value must be 42")
          >>> assert exc_info.type is ValueError
          >>> assert exc_info.value.args[0] == "value must be 42"

          Note: When using ‘pytest.raises’ as a context manager, it’s
          worthwhile to note that normal context manager rules apply and
          that the exception raised ‘must’ be the final line in the
          scope of the context manager.  Lines of code after that,
          within the scope of the context manager will not be executed.
          For example:

               >>> value = 15
               >>> with pytest.raises(ValueError) as exc_info:
               ...     if value > 10:
               ...         raise ValueError("value must be <= 10")
               ...     assert exc_info.type is ValueError  # this will not execute

          Instead, the following approach must be taken (note the
          difference in scope):

               >>> with pytest.raises(ValueError) as exc_info:
               ...     if value > 10:
               ...         raise ValueError("value must be <= 10")
               ...
               >>> assert exc_info.type is ValueError

     ‘Using with’ ‘pytest.mark.parametrize’

     When using *note pytest.mark.parametrize: 95. it is possible to
     parametrize tests such that some runs raise an exception and others
     do not.

     See *note Parametrizing conditional raising: 1e6. for an example.

     ‘Legacy form’

     It is possible to specify a callable by passing a to-be-called
     lambda:

          >>> raises(ZeroDivisionError, lambda: 1/0)
          <ExceptionInfo ...>

     or you can specify an arbitrary callable with arguments:

          >>> def f(x): return 1/x
          ...
          >>> raises(ZeroDivisionError, f, 0)
          <ExceptionInfo ...>
          >>> raises(ZeroDivisionError, f, x=0)
          <ExceptionInfo ...>

     The form above is fully supported but discouraged for new code
     because the context manager form is regarded as more readable and
     less error-prone.

          Note: Similar to caught exception objects in Python,
          explicitly clearing local references to returned
          ‘ExceptionInfo’ objects can help the Python interpreter speed
          up its garbage collection.

          Clearing those references breaks a reference cycle
          (‘ExceptionInfo’ –> caught exception –> frame stack raising
          the exception –> current frame stack –> local variables –>
          ‘ExceptionInfo’) which makes Python keep all objects
          referenced from that cycle (including all local variables in
          the current frame) alive until the next cyclic garbage
          collection run.  More detailed information can be found in the
          official Python documentation for the try statement(4).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/re.html#re.search

   (2) https://docs.python.org/3/library/re.html#re-syntax

   (3) https://docs.python.org/3/library/re.html#re.escape

   (4) https://docs.python.org/3/reference/compound_stmts.html#try


File: pytest.info,  Node: pytest deprecated_call,  Next: pytest register_assert_rewrite,  Prev: pytest raises,  Up: Functions

26.2.10 pytest.deprecated_call
------------------------------

‘Tutorial’: *note Ensuring code triggers a deprecation warning: 108.

 -- Function: with deprecated_call (*, match: Optional[Union[str,
          Pattern[str]]] = ...) -> WarningsRecorder

 -- Function: with deprecated_call (func: Callable[[...], T], *args:
          Any, **kwargs: Any) -> T

     Assert that code produces a ‘DeprecationWarning’ or
     ‘PendingDeprecationWarning’.

     This function can be used as a context manager:

          >>> import warnings
          >>> def api_call_v2():
          ...     warnings.warn('use v3 of this api', DeprecationWarning)
          ...     return 200

          >>> import pytest
          >>> with pytest.deprecated_call():
          ...    assert api_call_v2() == 200

     It can also be used by passing a function and ‘*args’ and
     ‘**kwargs’, in which case it will ensure calling ‘func(*args,
     **kwargs)’ produces one of the warnings types above.  The return
     value is the return value of the function.

     In the context manager form you may use the keyword argument
     ‘match’ to assert that the warning matches a text or regex.

     The context manager produces a list of ‘warnings.WarningMessage’
     objects, one for each warning raised.


File: pytest.info,  Node: pytest register_assert_rewrite,  Next: pytest warns,  Prev: pytest deprecated_call,  Up: Functions

26.2.11 pytest.register_assert_rewrite
--------------------------------------

‘Tutorial’: *note Assertion Rewriting: 3d.

 -- Function: register_assert_rewrite (*names)

     Register one or more module names to be rewritten on import.

     This function will make sure that this module or all modules inside
     the package will get their assert statements rewritten.  Thus you
     should make sure to call this before the module is actually
     imported, usually in your __init__.py if you are a plugin using a
     package.


     Raises: TypeError(1) – If the given module names are not strings.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#TypeError


File: pytest.info,  Node: pytest warns,  Next: pytest freeze_includes,  Prev: pytest register_assert_rewrite,  Up: Functions

26.2.12 pytest.warns
--------------------

‘Tutorial’: *note Asserting warnings with the warns function: 10a.

 -- Function: with warns (expected_warning:
          ~typing.Union[~typing.Type[Warning],
          ~typing.Tuple[~typing.Type[Warning], ...]] = <class
          'Warning'>, *, match: ~typing.Optional[~typing.Union[str,
          ~typing.Pattern[str]]] = None) -> WarningsChecker

 -- Function: with warns (expected_warning: Union[Type[Warning],
          Tuple[Type[Warning], ...]], func: Callable[[...], T], *args:
          Any, **kwargs: Any) -> T

     Assert that code raises a particular class of warning.

     Specifically, the parameter ‘expected_warning’ can be a warning
     class or sequence of warning classes, and the inside the ‘with’
     block must issue a warning of that class or classes.

     This helper produces a list of ‘warnings.WarningMessage’ objects,
     one for each warning raised.

     This function can be used as a context manager, or any of the other
     ways *note pytest.raises(): 31. can be used:

          >>> import pytest
          >>> with pytest.warns(RuntimeWarning):
          ...    warnings.warn("my warning", RuntimeWarning)

     In the context manager form you may use the keyword argument
     ‘match’ to assert that the warning matches a text or regex:

          >>> with pytest.warns(UserWarning, match='must be 0 or None'):
          ...     warnings.warn("value must be 0 or None", UserWarning)

          >>> with pytest.warns(UserWarning, match=r'must be \d+$'):
          ...     warnings.warn("value must be 42", UserWarning)

          >>> with pytest.warns(UserWarning, match=r'must be \d+$'):
          ...     warnings.warn("this is not here", UserWarning)
          Traceback (most recent call last):
            ...
          Failed: DID NOT WARN. No warnings of type ...UserWarning... were emitted...


File: pytest.info,  Node: pytest freeze_includes,  Prev: pytest warns,  Up: Functions

26.2.13 pytest.freeze_includes
------------------------------

‘Tutorial’: *note Freezing pytest: 1eb.

 -- Function: freeze_includes ()

     Return a list of module names used by pytest that should be
     included by cx_freeze.


File: pytest.info,  Node: Marks,  Next: Fixtures,  Prev: Functions,  Up: API Reference<2>

26.3 Marks
==========

Marks can be used apply meta data to ‘test functions’ (but not
fixtures), which can then be accessed by fixtures or plugins.

* Menu:

* pytest.mark.filterwarnings: pytest mark filterwarnings.
* pytest.mark.parametrize: pytest mark parametrize.
* pytest.mark.skip: pytest mark skip.
* pytest.mark.skipif: pytest mark skipif.
* pytest.mark.usefixtures: pytest mark usefixtures.
* pytest.mark.xfail: pytest mark xfail.
* Custom marks::


File: pytest.info,  Node: pytest mark filterwarnings,  Next: pytest mark parametrize,  Up: Marks

26.3.1 pytest.mark.filterwarnings
---------------------------------

‘Tutorial’: *note @pytest.mark.filterwarnings: 80.

Add warning filters to marked test items.

 -- Function: pytest.mark.filterwarnings (filter)


     Parameters: ‘filter’ (str(1)) – A ‘warning specification string’,
     which is composed of contents of the tuple ‘(action, message,
     category, module, lineno)’ as specified in The Warnings Filter(2)
     section of the Python documentation, separated by ‘":"’.  Optional
     fields can be omitted.  Module names passed for filtering are not
     regex-escaped.

     For example:

          @pytest.mark.filterwarnings("ignore:.*usage will be deprecated.*:DeprecationWarning")
          def test_foo():
              ...

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/warnings.html#warning-filter


File: pytest.info,  Node: pytest mark parametrize,  Next: pytest mark skip,  Prev: pytest mark filterwarnings,  Up: Marks

26.3.2 pytest.mark.parametrize
------------------------------

‘Tutorial’: *note How to parametrize fixtures and test functions: 8f.

This mark has the same signature as *note pytest.Metafunc.parametrize():
1f1.; see there.


File: pytest.info,  Node: pytest mark skip,  Next: pytest mark skipif,  Prev: pytest mark parametrize,  Up: Marks

26.3.3 pytest.mark.skip
-----------------------

‘Tutorial’: *note Skipping test functions: 81.

Unconditionally skip a test function.

 -- Function: pytest.mark.skip (reason=None)


     Parameters: ‘reason’ (str(1)) – Reason why the test function is
     being skipped.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: pytest mark skipif,  Next: pytest mark usefixtures,  Prev: pytest mark skip,  Up: Marks

26.3.4 pytest.mark.skipif
-------------------------

‘Tutorial’: *note Skipping test functions: 82.

Skip a test function if a condition is ‘True’.

 -- Function: pytest.mark.skipif (condition, *, reason=None)


     Parameters:

        * ‘condition’ (bool(1)‘ or ’str(2)) – ‘True/False’ if the
          condition should be skipped or a *note condition string: 125.

        * ‘reason’ (str(3)) – Reason why the test function is being
          skipped.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: pytest mark usefixtures,  Next: pytest mark xfail,  Prev: pytest mark skipif,  Up: Marks

26.3.5 pytest.mark.usefixtures
------------------------------

‘Tutorial’: *note Use fixtures in classes and modules with usefixtures:
72.

Mark a test function as using the given fixture names.

 -- Function: pytest.mark.usefixtures (*names)


     Parameters: ‘args’ – The names of the fixture to use, as strings.

     Note: When using ‘usefixtures’ in hooks, it can only load fixtures
     when applied to a test function before test setup (for example in
     the ‘pytest_collection_modifyitems’ hook).

     Also note that this mark has no effect when applied to ‘fixtures’.


File: pytest.info,  Node: pytest mark xfail,  Next: Custom marks,  Prev: pytest mark usefixtures,  Up: Marks

26.3.6 pytest.mark.xfail
------------------------

‘Tutorial’: *note XFail; mark test functions as expected to fail: 83.

Marks a test function as ‘expected to fail’.

 -- Function: pytest.mark.xfail (condition=None, *, reason=None,
          raises=None, run=True, strict=False)


     Parameters:

        * ‘condition’ (bool(1)‘ or ’str(2)) – Condition for marking the
          test function as xfail (‘True/False’ or a *note condition
          string: 125.).  If a bool, you also have to specify ‘reason’
          (see *note condition string: 125.).

        * ‘reason’ (str(3)) – Reason why the test function is marked as
          xfail.

        * ‘raises’ (‘Type’‘[’Exception(4)‘]’) – Exception subclass (or
          tuple of subclasses) expected to be raised by the test
          function; other exceptions will fail the test.

        * ‘run’ (bool(5)) – If the test function should actually be
          executed.  If ‘False’, the function will always xfail and will
          not be executed (useful if a function is segfaulting).

        * ‘strict’ (bool(6)) –

             * If ‘False’ (the default) the function will be shown in
               the terminal output as ‘xfailed’ if it fails and as
               ‘xpass’ if it passes.  In both cases this will not cause
               the test suite to fail as a whole.  This is particularly
               useful to mark ‘flaky’ tests (tests that fail at random)
               to be tackled later.

             * If ‘True’, the function will be shown in the terminal
               output as ‘xfailed’ if it fails, but if it unexpectedly
               passes then it will ‘fail’ the test suite.  This is
               particularly useful to mark functions that are always
               failing and there should be a clear indication if they
               unexpectedly start to pass (for example a new release of
               a library fixes a known bug).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/exceptions.html#Exception

   (5) https://docs.python.org/3/library/functions.html#bool

   (6) https://docs.python.org/3/library/functions.html#bool


File: pytest.info,  Node: Custom marks,  Prev: pytest mark xfail,  Up: Marks

26.3.7 Custom marks
-------------------

Marks are created dynamically using the factory object ‘pytest.mark’ and
applied as a decorator.

For example:

     @pytest.mark.timeout(10, "slow", method="thread")
     def test_function():
         ...

Will create and attach a *note Mark: 1fc. object to the collected *note
Item: 172, which can then be accessed by fixtures or hooks with *note
Node.iter_markers: 1fd.  The ‘mark’ object will have the following
attributes:

     mark.args == (10, "slow")
     mark.kwargs == {"method": "thread"}

Example for using multiple custom markers:

     @pytest.mark.timeout(10, "slow", method="thread")
     @pytest.mark.slow
     def test_function():
         ...

When *note Node.iter_markers: 1fd. or *note Node.iter_markers_with_node:
1fe. is used with multiple markers, the marker closest to the function
will be iterated over first.  The above example will result in
‘@pytest.mark.slow’ followed by ‘@pytest.mark.timeout(...)’.


File: pytest.info,  Node: Fixtures,  Next: Hooks,  Prev: Marks,  Up: API Reference<2>

26.4 Fixtures
=============

‘Tutorial’: *note Fixtures reference: d9.

Fixtures are requested by test functions or other fixtures by declaring
them as argument names.

Example of a test requiring a fixture:

     def test_output(capsys):
         print("hello")
         out, err = capsys.readouterr()
         assert out == "hello\n"

Example of a fixture requiring another fixture:

     @pytest.fixture
     def db_session(tmp_path):
         fn = tmp_path / "db.file"
         return connect(fn)

For more details, consult the full *note fixtures docs: d9.

* Menu:

* @pytest.fixture: @pytest fixture.
* capfd::
* capfdbinary::
* caplog::
* capsys::
* capsysbinary::
* config.cache: config cache.
* doctest_namespace::
* monkeypatch::
* pytestconfig::
* pytester::
* record_property::
* record_testsuite_property::
* recwarn::
* request::
* testdir::
* tmp_path::
* tmp_path_factory::
* tmpdir::
* tmpdir_factory::


File: pytest.info,  Node: @pytest fixture,  Next: capfd,  Up: Fixtures

26.4.1 @pytest.fixture
----------------------

 -- Function: @fixture (fixture_function: FixtureFunction, *, scope:
          Union[_ScopeName, Callable[[str, Config], _ScopeName]] =
          'function', params: Optional[Iterable[object]] = None,
          autouse: bool = False, ids:
          Optional[Union[Sequence[Optional[object]], Callable[[Any],
          Optional[object]]]] = None, name: Optional[str] = None) ->
          FixtureFunction

 -- Function: @fixture (fixture_function: None = None, *, scope:
          Union[_ScopeName, Callable[[str, Config], _ScopeName]] =
          'function', params: Optional[Iterable[object]] = None,
          autouse: bool = False, ids:
          Optional[Union[Sequence[Optional[object]], Callable[[Any],
          Optional[object]]]] = None, name: Optional[str] = None) ->
          FixtureFunctionMarker

     Decorator to mark a fixture factory function.

     This decorator can be used, with or without parameters, to define a
     fixture function.

     The name of the fixture function can later be referenced to cause
     its invocation ahead of running tests: test modules or classes can
     use the ‘pytest.mark.usefixtures(fixturename)’ marker.

     Test functions can directly use fixture names as input arguments in
     which case the fixture instance returned from the fixture function
     will be injected.

     Fixtures can provide their values to test functions using ‘return’
     or ‘yield’ statements.  When using ‘yield’ the code block after the
     ‘yield’ statement is executed as teardown code regardless of the
     test outcome, and must yield exactly once.


     Parameters:

        * ‘scope’ – The scope for which this fixture is shared; one of
          ‘"function"’ (default), ‘"class"’, ‘"module"’, ‘"package"’ or
          ‘"session"’.

          This parameter may also be a callable which receives
          ‘(fixture_name, config)’ as parameters, and must return a
          ‘str’ with one of the values mentioned above.

          See *note Dynamic scope: 52. in the docs for more information.

        * ‘params’ – An optional list of parameters which will cause
          multiple invocations of the fixture function and all of the
          tests using it.  The current parameter is available in
          ‘request.param’.

        * ‘autouse’ – If True, the fixture func is activated for all
          tests that can see it.  If False (the default), an explicit
          reference is needed to activate the fixture.

        * ‘ids’ – Sequence of ids each corresponding to the params so
          that they are part of the test id.  If no ids are provided
          they will be generated automatically from the params.

        * ‘name’ – The name of the fixture.  This defaults to the name
          of the decorated function.  If a fixture is used in the same
          module in which it is defined, the function name of the
          fixture will be shadowed by the function arg that requests the
          fixture; one way to resolve this is to name the decorated
          function ‘fixture_<fixturename>’ and then use
          ‘@pytest.fixture(name='<fixturename>')’.


File: pytest.info,  Node: capfd,  Next: capfdbinary,  Prev: @pytest fixture,  Up: Fixtures

26.4.2 capfd
------------

‘Tutorial’: *note How to capture stdout/stderr output: ef.

 -- Function: capfd ()

     Enable text capturing of writes to file descriptors ‘1’ and ‘2’.

     The captured output is made available via ‘capfd.readouterr()’
     method calls, which return a ‘(out, err)’ namedtuple.  ‘out’ and
     ‘err’ will be ‘text’ objects.

     Returns an instance of *note CaptureFixture[str]: 203.

     Example:

          def test_system_echo(capfd):
              os.system('echo "hello"')
              captured = capfd.readouterr()
              assert captured.out == "hello\n"


File: pytest.info,  Node: capfdbinary,  Next: caplog,  Prev: capfd,  Up: Fixtures

26.4.3 capfdbinary
------------------

‘Tutorial’: *note How to capture stdout/stderr output: ef.

 -- Function: capfdbinary ()

     Enable bytes capturing of writes to file descriptors ‘1’ and ‘2’.

     The captured output is made available via ‘capfd.readouterr()’
     method calls, which return a ‘(out, err)’ namedtuple.  ‘out’ and
     ‘err’ will be ‘byte’ objects.

     Returns an instance of *note CaptureFixture[bytes]: 203.

     Example:

          def test_system_echo(capfdbinary):
              os.system('echo "hello"')
              captured = capfdbinary.readouterr()
              assert captured.out == b"hello\n"


File: pytest.info,  Node: caplog,  Next: capsys,  Prev: capfdbinary,  Up: Fixtures

26.4.4 caplog
-------------

‘Tutorial’: *note How to manage logging: e1.

 -- Function: caplog ()

     Access and control log capturing.

     Captured logs are available through the following
     properties/methods:

          * caplog.messages        -> list of format-interpolated log messages
          * caplog.text            -> string containing formatted log output
          * caplog.records         -> list of logging.LogRecord instances
          * caplog.record_tuples   -> list of (logger_name, level, message) tuples
          * caplog.clear()         -> clear captured records and formatted log output string

     Returns a *note pytest.LogCaptureFixture: e3. instance.

 -- Class: final class LogCaptureFixture

     Provides access and control of log capturing.

      -- Property: handler: LogCaptureHandler

          Get the logging handler used by the fixture.


          Return type: LogCaptureHandler

      -- Method: get_records (when)

          Get the logging records for one of the possible test phases.


          Parameters: ‘when’ (str(1)) – Which test phase to obtain the
          records from.  Valid values are: “setup”, “call” and
          “teardown”.


          Returns: The list of captured records at the given stage.


          Return type: List[logging.LogRecord(2)]

          New in version 3.4.

      -- Property: text: str(3)

          The formatted log text.

      -- Property: records: List(4)[LogRecord(5)]

          The list of log records.

      -- Property: record_tuples: List(6)[Tuple(7)[str(8), int(9),
               str(10)]]

          A list of a stripped down version of log records intended for
          use in assertion comparison.

          The format of the tuple is:

               (logger_name, log_level, message)

      -- Property: messages: List(11)[str(12)]

          A list of format-interpolated log messages.

          Unlike ‘records’, which contains the format string and
          parameters for interpolation, log messages in this list are
          all interpolated.

          Unlike ‘text’, which contains the output from the handler, log
          messages in this list are unadorned with levels, timestamps,
          etc, making exact comparisons more reliable.

          Note that traceback or stack info (from
          logging.exception()(13) or the ‘exc_info’ or ‘stack_info’
          arguments to the logging functions) is not included, as this
          is added by the formatter in the handler.

          New in version 3.7.

      -- Method: clear ()

          Reset the list of log records and the captured log text.

      -- Method: set_level (level, logger=None)

          Set the level of a logger for the duration of a test.

          Changed in version 3.4: The levels of the loggers changed by
          this function will be restored to their initial values at the
          end of the test.


          Parameters:

             * ‘level’ (int(14)) – The level.

             * ‘logger’ (str(15)) – The logger to update.  If not given,
               the root logger.

      -- Method: with at_level (level, logger=None)

          Context manager that sets the level for capturing of logs.
          After the end of the ‘with’ statement the level is restored to
          its original value.


          Parameters:

             * ‘level’ (int(16)) – The level.

             * ‘logger’ (str(17)) – The logger to update.  If not given,
               the root logger.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/logging.html#logging.LogRecord

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/typing.html#typing.List

   (5) https://docs.python.org/3/library/logging.html#logging.LogRecord

   (6) https://docs.python.org/3/library/typing.html#typing.List

   (7) https://docs.python.org/3/library/typing.html#typing.Tuple

   (8) https://docs.python.org/3/library/stdtypes.html#str

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/stdtypes.html#str

   (11) https://docs.python.org/3/library/typing.html#typing.List

   (12) https://docs.python.org/3/library/stdtypes.html#str

   (13) https://docs.python.org/3/library/logging.html#logging.exception

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/stdtypes.html#str

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: capsys,  Next: capsysbinary,  Prev: caplog,  Up: Fixtures

26.4.5 capsys
-------------

‘Tutorial’: *note How to capture stdout/stderr output: ef.

 -- Function: capsys ()

     Enable text capturing of writes to ‘sys.stdout’ and ‘sys.stderr’.

     The captured output is made available via ‘capsys.readouterr()’
     method calls, which return a ‘(out, err)’ namedtuple.  ‘out’ and
     ‘err’ will be ‘text’ objects.

     Returns an instance of *note CaptureFixture[str]: 203.

     Example:

          def test_output(capsys):
              print("hello")
              captured = capsys.readouterr()
              assert captured.out == "hello\n"

 -- Class: CaptureFixture

     Object returned by the *note capsys: 1a3, *note capsysbinary: 1a4,
     *note capfd: 1a0. and *note capfdbinary: 1a1. fixtures.

      -- Method: readouterr ()

          Read and return the captured output so far, resetting the
          internal buffer.


          Returns: The captured content as a namedtuple with ‘out’ and
          ‘err’ string attributes.


          Return type: ‘CaptureResult’

      -- Method: with disabled ()

          Temporarily disable capturing while inside the ‘with’ block.


File: pytest.info,  Node: capsysbinary,  Next: config cache,  Prev: capsys,  Up: Fixtures

26.4.6 capsysbinary
-------------------

‘Tutorial’: *note How to capture stdout/stderr output: ef.

 -- Function: capsysbinary ()

     Enable bytes capturing of writes to ‘sys.stdout’ and ‘sys.stderr’.

     The captured output is made available via
     ‘capsysbinary.readouterr()’ method calls, which return a ‘(out,
     err)’ namedtuple.  ‘out’ and ‘err’ will be ‘bytes’ objects.

     Returns an instance of *note CaptureFixture[bytes]: 203.

     Example:

          def test_output(capsysbinary):
              print("hello")
              captured = capsysbinary.readouterr()
              assert captured.out == b"hello\n"


File: pytest.info,  Node: config cache,  Next: doctest_namespace,  Prev: capsysbinary,  Up: Fixtures

26.4.7 config.cache
-------------------

‘Tutorial’: *note How to re-run failed tests and maintain state between
test runs: d1.

The ‘config.cache’ object allows other plugins and fixtures to store and
retrieve values across test runs.  To access it from fixtures request
‘pytestconfig’ into your fixture and get it with ‘pytestconfig.cache’.

Under the hood, the cache plugin uses the simple ‘dumps’/‘loads’ API of
the json(1) stdlib module.

‘config.cache’ is an instance of *note pytest.Cache: 218.:

 -- Class: final class Cache

      -- Method: mkdir (name)

          Return a directory path object with the given name.

          If the directory does not yet exist, it will be created.  You
          can use it to manage files to e.g.  store/retrieve database
          dumps across test sessions.

          New in version 7.0.


          Parameters: ‘name’ (str(2)) – Must be a string not containing
          a ‘/’ separator.  Make sure the name contains your plugin or
          application identifiers to prevent clashes with other cache
          users.

      -- Method: get (key, default)

          Return the cached value for the given key.

          If no value was yet cached or the value cannot be read, the
          specified default is returned.


          Parameters:

             * ‘key’ (str(3)) – Must be a ‘/’ separated value.  Usually
               the first name is the name of your plugin or your
               application.

             * ‘default’ – The value to return in case of a cache-miss
               or invalid cache value.

      -- Method: set (key, value)

          Save value for the given key.


          Parameters:

             * ‘key’ (str(4)) – Must be a ‘/’ separated value.  Usually
               the first name is the name of your plugin or your
               application.

             * ‘value’ (object(5)) – Must be of any combination of basic
               python types, including nested types like lists of
               dictionaries.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/json.html#module-json

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/functions.html#object


File: pytest.info,  Node: doctest_namespace,  Next: monkeypatch,  Prev: config cache,  Up: Fixtures

26.4.8 doctest_namespace
------------------------

‘Tutorial’: *note How to run doctests: be.

 -- Function: doctest_namespace ()

     Fixture that returns a dict(1) that will be injected into the
     namespace of doctests.

     Usually this fixture is used in conjunction with another ‘autouse’
     fixture:

          @pytest.fixture(autouse=True)
          def add_np(doctest_namespace):
              doctest_namespace["np"] = numpy

     For more details: *note ‘doctest_namespace’ fixture: c9.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#dict


File: pytest.info,  Node: monkeypatch,  Next: pytestconfig,  Prev: doctest_namespace,  Up: Fixtures

26.4.9 monkeypatch
------------------

‘Tutorial’: *note How to monkeypatch/mock modules and environments: aa.

 -- Function: monkeypatch ()

     A convenient fixture for monkey-patching.

     The fixture provides these methods to modify objects, dictionaries,
     or os.environ(1):

        * *note monkeypatch.setattr(obj, name, value, raising=True): ac.

        * *note monkeypatch.delattr(obj, name, raising=True): ad.

        * *note monkeypatch.setitem(mapping, name, value): ae.

        * *note monkeypatch.delitem(obj, name, raising=True): af.

        * *note monkeypatch.setenv(name, value, prepend=None): b0.

        * *note monkeypatch.delenv(name, raising=True): b1.

        * *note monkeypatch.syspath_prepend(path): b2.

        * *note monkeypatch.chdir(path): b3.

        * *note monkeypatch.context(): b4.

     All modifications will be undone after the requesting test function
     or fixture has finished.  The ‘raising’ parameter determines if a
     KeyError(2) or AttributeError(3) will be raised if the set/deletion
     operation does not have the specified target.

     To undo modifications done by the fixture in a contained scope, use
     *note context(): b4.

     Returns a *note MonkeyPatch: bc. instance.

 -- Class: final class MonkeyPatch

     Helper to conveniently monkeypatch attributes/items/environment
     variables/syspath.

     Returned by the *note monkeypatch: 1a6. fixture.


     Versionchanged:: 6.2 Can now also be used directly as
     ‘pytest.MonkeyPatch()’, for when the fixture is not available.  In
     this case, use *note with MonkeyPatch.context() as mp;: b4. or
     remember to call *note undo(): 220. explicitly.

      -- Method: classmethod with context ()

          Context manager that returns a new *note MonkeyPatch: bc.
          object which undoes any patching done inside the ‘with’ block
          upon exit.

          Example:

               import functools


               def test_partial(monkeypatch):
                   with monkeypatch.context() as m:
                       m.setattr(functools, "partial", 3)

          Useful in situations where it is desired to undo some patches
          before the test ends, such as mocking ‘stdlib’ functions that
          might break pytest itself if mocked (for examples of this see
          issue #3290(4)).

      -- Method: setattr (target: str, name: object, value:
               ~_pytest.monkeypatch.Notset = <notset>, raising: bool =
               True) -> None

      -- Method: setattr (target: object, name: str, value: object,
               raising: bool = True) -> None

          Set attribute value on target, memorizing the old value.

          For example:

               import os

               monkeypatch.setattr(os, "getcwd", lambda: "/")

          The code above replaces the os.getcwd()(5) function by a
          ‘lambda’ which always returns ‘"/"’.

          For convenience, you can specify a string as ‘target’ which
          will be interpreted as a dotted import path, with the last
          part being the attribute name:

               monkeypatch.setattr("os.getcwd", lambda: "/")

          Raises AttributeError(6) if the attribute does not exist,
          unless ‘raising’ is set to False.

          ‘Where to patch’

          ‘monkeypatch.setattr’ works by (temporarily) changing the
          object that a name points to with another one.  There can be
          many names pointing to any individual object, so for patching
          to work you must ensure that you patch the name used by the
          system under test.

          See the section Where to patch(7) in the unittest.mock(8) docs
          for a complete explanation, which is meant for
          unittest.mock.patch()(9) but applies to ‘monkeypatch.setattr’
          as well.

      -- Method: delattr (target, name=<notset>, raising=True)

          Delete attribute ‘name’ from ‘target’.

          If no ‘name’ is specified and ‘target’ is a string it will be
          interpreted as a dotted import path with the last part being
          the attribute name.

          Raises AttributeError it the attribute does not exist, unless
          ‘raising’ is set to False.

      -- Method: setitem (dic, name, value)

          Set dictionary entry ‘name’ to value.

      -- Method: delitem (dic, name, raising=True)

          Delete ‘name’ from dict.

          Raises ‘KeyError’ if it doesn’t exist, unless ‘raising’ is set
          to False.

      -- Method: setenv (name, value, prepend=None)

          Set environment variable ‘name’ to ‘value’.

          If ‘prepend’ is a character, read the current environment
          variable value and prepend the ‘value’ adjoined with the
          ‘prepend’ character.

      -- Method: delenv (name, raising=True)

          Delete ‘name’ from the environment.

          Raises ‘KeyError’ if it does not exist, unless ‘raising’ is
          set to False.

      -- Method: syspath_prepend (path)

          Prepend ‘path’ to ‘sys.path’ list of import locations.

      -- Method: chdir (path)

          Change the current working directory to the specified path.

          Path can be a string or a path object.

      -- Method: undo ()

          Undo previous changes.

          This call consumes the undo stack.  Calling it a second time
          has no effect unless you do more monkeypatching after the undo
          call.

          There is generally no need to call ‘undo()’, since it is
          called automatically during tear-down.

               Note: The same ‘monkeypatch’ fixture is used across a
               single test function invocation.  If ‘monkeypatch’ is
               used both by the test function itself and one of the test
               fixtures, calling ‘undo()’ will undo all of the changes
               made in both functions.

               Prefer to use *note context(): b4. instead.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/os.html#os.environ

   (2) https://docs.python.org/3/library/exceptions.html#KeyError

   (3) https://docs.python.org/3/library/exceptions.html#AttributeError

   (4) https://github.com/pytest-dev/pytest/issues/3290

   (5) https://docs.python.org/3/library/os.html#os.getcwd

   (6) https://docs.python.org/3/library/exceptions.html#AttributeError

   (7) 
https://docs.python.org/3/library/unittest.mock.html#where-to-patch

   (8) 
https://docs.python.org/3/library/unittest.mock.html#module-unittest.mock

   (9) 
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch


File: pytest.info,  Node: pytestconfig,  Next: pytester,  Prev: monkeypatch,  Up: Fixtures

26.4.10 pytestconfig
--------------------

 -- Function: pytestconfig ()

     Session-scoped fixture that returns the session’s *note
     pytest.Config: 39. object.

     Example:

          def test_foo(pytestconfig):
              if pytestconfig.getoption("verbose") > 0:
                  ...


File: pytest.info,  Node: pytester,  Next: record_property,  Prev: pytestconfig,  Up: Fixtures

26.4.11 pytester
----------------

New in version 6.2.

Provides a *note Pytester: 15f. instance that can be used to run and
test pytest itself.

It provides an empty directory where pytest can be executed in
isolation, and contains facilities to write tests, configuration files,
and match against expected output.

To use it, include in your topmost ‘conftest.py’ file:

     pytest_plugins = "pytester"

 -- Class: final class Pytester

     Facilities to write tests/configuration files, execute pytest in
     isolation, and match against expected output, perfect for black-box
     testing of pytest plugins.

     It attempts to isolate the test run from external factors as much
     as possible, modifying the current working directory to ‘path’ and
     environment variables during initialization.

     Attributes:


     Variables:

        * ‘path’ (‘Path’) – temporary directory path used to create
          files/run tests from, etc.

        * ‘plugins’ – A list of plugins to use with *note parseconfig():
          225. and *note runpytest(): 226.  Initially this is an empty
          list but plugins can be added to the list.  The type of items
          to add to the list depends on the method using them so refer
          to them for details.

      -- Exception: TimeoutExpired

      -- Property: path: Path(1)

          Temporary directory where files are created and pytest is
          executed.

      -- Method: make_hook_recorder (pluginmanager)

          Create a new *note HookRecorder: 22a. for a PluginManager.

      -- Method: chdir ()

          Cd into the temporary directory.

          This is done automatically upon instantiation.

      -- Method: makefile (ext, *args, **kwargs)

          Create new text file(s) in the test directory.


          Parameters:

             * ‘ext’ (str(2)) – The extension the file(s) should use,
               including the dot, e.g.  ‘.py’.

             * ‘args’ (str(3)) – All args are treated as strings and
               joined using newlines.  The result is written as contents
               to the file.  The name of the file is based on the test
               function requesting this fixture.

             * ‘kwargs’ (str(4)) – Each keyword is the name of a file,
               while the value of it will be written as contents of the
               file.

          Examples:

               pytester.makefile(".txt", "line1", "line2")

               pytester.makefile(".ini", pytest="[pytest]\naddopts=-rs\n")

          To create binary files, use pathlib.Path.write_bytes()(5)
          directly:

               filename = pytester.path.joinpath("foo.bin")
               filename.write_bytes(b"...")

      -- Method: makeconftest (source)

          Write a contest.py file with ‘source’ as contents.

      -- Method: makeini (source)

          Write a tox.ini file with ‘source’ as contents.

      -- Method: getinicfg (source)

          Return the pytest section from the tox.ini config file.

      -- Method: makepyprojecttoml (source)

          Write a pyproject.toml file with ‘source’ as contents.

          New in version 6.0.

      -- Method: makepyfile (*args, **kwargs)

          Shortcut for .makefile() with a .py extension.

          Defaults to the test name with a ‘.py’ extension, e.g
          test_foobar.py, overwriting existing files.

          Examples:

               def test_something(pytester):
                   # Initial file is created test_something.py.
                   pytester.makepyfile("foobar")
                   # To create multiple files, pass kwargs accordingly.
                   pytester.makepyfile(custom="foobar")
                   # At this point, both 'test_something.py' & 'custom.py' exist in the test directory.

      -- Method: maketxtfile (*args, **kwargs)

          Shortcut for .makefile() with a .txt extension.

          Defaults to the test name with a ‘.txt’ extension, e.g
          test_foobar.txt, overwriting existing files.

          Examples:

               def test_something(pytester):
                   # Initial file is created test_something.txt.
                   pytester.maketxtfile("foobar")
                   # To create multiple files, pass kwargs accordingly.
                   pytester.maketxtfile(custom="foobar")
                   # At this point, both 'test_something.txt' & 'custom.txt' exist in the test directory.

      -- Method: syspathinsert (path=None)

          Prepend a directory to sys.path, defaults to *note path: 228.

          This is undone automatically when this object dies at the end
          of each test.

      -- Method: mkdir (name)

          Create a new (sub)directory.

      -- Method: mkpydir (name)

          Create a new python package.

          This creates a (sub)directory with an empty ‘__init__.py’ file
          so it gets recognised as a Python package.

      -- Method: copy_example (name=None)

          Copy file from project’s directory into the testdir.


          Parameters: ‘name’ (str(6)) – The name of the file to copy.


          Returns: path to the copied directory (inside ‘self.path’).


          Return type: Path(7)

      -- Method: getnode (config, arg)

          Return the collection node of a file.


          Parameters:

             * ‘config’ (*note pytest.Config: 39.) – A pytest config.
               See *note parseconfig(): 225. and *note parseconfigure():
               238. for creating it.

             * ‘arg’ (os.PathLike(8)‘[’str(9)‘]’) – Path to the file.

      -- Method: getpathnode (path)

          Return the collection node of a file.

          This is like *note getnode(): 237. but uses *note
          parseconfigure(): 238. to create the (configured) pytest
          Config instance.


          Parameters: ‘path’ (os.PathLike(10)‘[’str(11)‘]’) – Path to
          the file.

      -- Method: genitems (colitems)

          Generate all test items from a collection node.

          This recurses into the collection node and returns a list of
          all the test items contained within.

      -- Method: runitem (source)

          Run the “test_func” Item.

          The calling test instance (class containing the test method)
          must provide a ‘.getrunner()’ method which should return a
          runner which can run the test protocol for a single item, e.g.
          ‘_pytest.runner.runtestprotocol()’.

      -- Method: inline_runsource (source, *cmdlineargs)

          Run a test module in process using ‘pytest.main()’.

          This run writes “source” into a temporary file and runs
          ‘pytest.main()’ on it, returning a *note HookRecorder: 22a.
          instance for the result.


          Parameters:

             * ‘source’ (str(12)) – The source code of the test module.

             * ‘cmdlineargs’ – Any extra command line arguments to use.

      -- Method: inline_genitems (*args)

          Run ‘pytest.main(['--collectonly'])’ in-process.

          Runs the *note pytest.main(): 1e1. function to run all of
          pytest inside the test process itself like *note inline_run():
          23e, but returns a tuple of the collected items and a *note
          HookRecorder: 22a. instance.

      -- Method: inline_run (*args, plugins=(), no_reraise_ctrlc=False)

          Run ‘pytest.main()’ in-process, returning a HookRecorder.

          Runs the *note pytest.main(): 1e1. function to run all of
          pytest inside the test process itself.  This means it can
          return a *note HookRecorder: 22a. instance which gives more
          detailed results from that run than can be done by matching
          stdout/stderr from *note runpytest(): 226.


          Parameters:

             * ‘args’ (Union(13)‘[’str(14)‘,
               ’PathLike(15)‘[’str(16)‘]’‘]’) – Command line arguments
               to pass to *note pytest.main(): 1e1.

             * ‘plugins’ – Extra plugin instances the ‘pytest.main()’
               instance should use.

             * ‘no_reraise_ctrlc’ (bool(17)) – Typically we reraise
               keyboard interrupts from the child run.  If True, the
               KeyboardInterrupt exception is captured.

      -- Method: runpytest_inprocess (*args, **kwargs)

          Return result of running pytest in-process, providing a
          similar interface to what self.runpytest() provides.

      -- Method: runpytest (*args, **kwargs)

          Run pytest inline or in a subprocess, depending on the command
          line option “–runpytest” and return a *note RunResult: 160.

      -- Method: parseconfig (*args)

          Return a new pytest Config instance from given commandline
          args.

          This invokes the pytest bootstrapping code in _pytest.config
          to create a new ‘_pytest.core.PluginManager’ and call the
          pytest_cmdline_parse hook to create a new *note pytest.Config:
          39. instance.

          If ‘plugins’ has been populated they should be plugin modules
          to be registered with the PluginManager.

      -- Method: parseconfigure (*args)

          Return a new pytest configured Config instance.

          Returns a new *note pytest.Config: 39. instance like *note
          parseconfig(): 225, but also calls the pytest_configure hook.

      -- Method: getitem (source, funcname='test_func')

          Return the test item for a test function.

          Writes the source to a python file and runs pytest’s
          collection on the resulting module, returning the test item
          for the requested function name.


          Parameters:

             * ‘source’ (Union(18)‘[’str(19)‘,
               ’PathLike(20)‘[’str(21)‘]’‘]’) – The module source.

             * ‘funcname’ (str(22)) – The name of the test function for
               which to return a test item.

      -- Method: getitems (source)

          Return all test items collected from the module.

          Writes the source to a Python file and runs pytest’s
          collection on the resulting module, returning all test items
          contained within.

      -- Method: getmodulecol (source, configargs=(), *, withinit=False)

          Return the module collection node for ‘source’.

          Writes ‘source’ to a file using *note makepyfile(): 231. and
          then runs the pytest collection on it, returning the
          collection node for the test module.


          Parameters:

             * ‘source’ (Union(23)‘[’str(24)‘,
               ’PathLike(25)‘[’str(26)‘]’‘]’) – The source code of the
               module to collect.

             * ‘configargs’ – Any extra arguments to pass to *note
               parseconfigure(): 238.

             * ‘withinit’ (bool(27)) – Whether to also write an
               ‘__init__.py’ file to the same directory to ensure it is
               a package.

      -- Method: collect_by_name (modcol, name)

          Return the collection node for name from the module
          collection.

          Searches a module collection node for a collection node
          matching the given name.


          Parameters:

             * ‘modcol’ (*note Collector: 244.) – A module collection
               node; see *note getmodulecol(): 242.

             * ‘name’ (str(28)) – The name of the node to return.

      -- Method: popen (cmdargs, stdout=-1, stderr=-1,
               stdin=NotSetType.token, **kw)

          Invoke subprocess.Popen(29).

          Calls subprocess.Popen(30) making sure the current working
          directory is in ‘PYTHONPATH’.

          You probably want to use *note run(): 246. instead.

      -- Method: run (*cmdargs, timeout=None, stdin=NotSetType.token)

          Run a command with arguments.

          Run a process using subprocess.Popen(31) saving the stdout and
          stderr.


          Parameters:

             * ‘cmdargs’ (Union(32)‘[’str(33)‘,
               ’PathLike(34)‘[’str(35)‘]’‘]’) – The sequence of
               arguments to pass to subprocess.Popen(36), with path-like
               objects being converted to str(37) automatically.

             * ‘timeout’ (Optional(38)‘[’float(39)‘]’) – The period in
               seconds after which to timeout and raise *note
               Pytester.TimeoutExpired: 227.

             * ‘stdin’ (Union(40)‘[’‘NotSetType’‘, ’bytes(41)‘,
               ’IO(42)‘[’Any(43)‘]’‘, ’int(44)‘]’) – Optional standard
               input.

                  - If it is ‘CLOSE_STDIN’ (Default), then this method
                    calls subprocess.Popen(45) with
                    ‘stdin=subprocess.PIPE’, and the standard input is
                    closed immediately after the new command is started.

                  - If it is of type bytes(46), these bytes are sent to
                    the standard input of the command.

                  - Otherwise, it is passed through to
                    subprocess.Popen(47).  For further information in
                    this case, consult the document of the ‘stdin’
                    parameter in subprocess.Popen(48).

      -- Method: runpython (script)

          Run a python script using sys.executable as interpreter.

      -- Method: runpython_c (command)

          Run ‘python -c "command"’.

      -- Method: runpytest_subprocess (*args, timeout=None)

          Run pytest as a subprocess with given arguments.

          Any plugins added to the ‘plugins’ list will be added using
          the ‘-p’ command line option.  Additionally ‘--basetemp’ is
          used to put any temporary files and directories in a numbered
          directory prefixed with “runpytest-” to not conflict with the
          normal numbered pytest location for temporary files and
          directories.


          Parameters:

             * ‘args’ (Union(49)‘[’str(50)‘,
               ’PathLike(51)‘[’str(52)‘]’‘]’) – The sequence of
               arguments to pass to the pytest subprocess.

             * ‘timeout’ (Optional(53)‘[’float(54)‘]’) – The period in
               seconds after which to timeout and raise *note
               Pytester.TimeoutExpired: 227.

      -- Method: spawn_pytest (string, expect_timeout=10.0)

          Run pytest using pexpect.

          This makes sure to use the right pytest and sets up the
          temporary directory locations.

          The pexpect child is returned.

      -- Method: spawn (cmd, expect_timeout=10.0)

          Run a command using pexpect.

          The pexpect child is returned.

 -- Class: final class RunResult

     The result of running a command from *note Pytester: 15f.

      -- Attribute: ret: Union(55)[int(56), *note ExitCode: 1e2.]

          The return value.

      -- Attribute: outlines

          List of lines captured from stdout.

      -- Attribute: errlines

          List of lines captured from stderr.

      -- Attribute: stdout

          *note LineMatcher: 250. of stdout.

          Use e.g.  *note str(stdout): 251. to reconstruct stdout, or
          the commonly used *note stdout.fnmatch_lines(): 252. method.

      -- Attribute: stderr

          *note LineMatcher: 250. of stderr.

      -- Attribute: duration

          Duration in seconds.

      -- Method: parseoutcomes ()

          Return a dictionary of outcome noun -> count from parsing the
          terminal output that the test process produced.

          The returned nouns will always be in plural form:

               ======= 1 failed, 1 passed, 1 warning, 1 error in 0.13s ====

          Will return ‘{"failed": 1, "passed": 1, "warnings": 1,
          "errors": 1}’.

      -- Method: classmethod parse_summary_nouns (lines)

          Extract the nouns from a pytest terminal summary line.

          It always returns the plural noun for consistency:

               ======= 1 failed, 1 passed, 1 warning, 1 error in 0.13s ====

          Will return ‘{"failed": 1, "passed": 1, "warnings": 1,
          "errors": 1}’.

      -- Method: assert_outcomes (passed=0, skipped=0, failed=0,
               errors=0, xpassed=0, xfailed=0, warnings=None,
               deselected=None)

          Assert that the specified outcomes appear with the respective
          numbers (0 means it didn’t occur) in the text output from a
          test run.

          ‘warnings’ and ‘deselected’ are only checked if not None.

 -- Class: LineMatcher

     Flexible matching of text.

     This is a convenience class to test large texts like the output of
     commands.

     The constructor takes a list of lines without their trailing
     newlines, i.e.  ‘text.splitlines()’.

      -- Method: __str__ ()

          Return the entire original text.

          New in version 6.2: You can use *note str(): 258. in older
          versions.

      -- Method: fnmatch_lines_random (lines2)

          Check lines exist in the output in any order (using
          fnmatch.fnmatch()(57)).

      -- Method: re_match_lines_random (lines2)

          Check lines exist in the output in any order (using
          re.match()(58)).

      -- Method: get_lines_after (fnline)

          Return all lines following the given line in the text.

          The given line can contain glob wildcards.

      -- Method: fnmatch_lines (lines2, *, consecutive=False)

          Check lines exist in the output (using fnmatch.fnmatch()(59)).

          The argument is a list of lines which have to match and can
          use glob wildcards.  If they do not match a pytest.fail() is
          called.  The matches and non-matches are also shown as part of
          the error message.


          Parameters:

             * ‘lines2’ (Sequence(60)‘[’str(61)‘]’) – String patterns to
               match.

             * ‘consecutive’ (bool(62)) – Match lines consecutively?

      -- Method: re_match_lines (lines2, *, consecutive=False)

          Check lines exist in the output (using re.match()(63)).

          The argument is a list of lines which have to match using
          ‘re.match’.  If they do not match a pytest.fail() is called.

          The matches and non-matches are also shown as part of the
          error message.


          Parameters:

             * ‘lines2’ (Sequence(64)‘[’str(65)‘]’) – string patterns to
               match.

             * ‘consecutive’ (bool(66)) – match lines consecutively?

      -- Method: no_fnmatch_line (pat)

          Ensure captured lines do not match the given pattern, using
          ‘fnmatch.fnmatch’.


          Parameters: ‘pat’ (str(67)) – The pattern to match lines.

      -- Method: no_re_match_line (pat)

          Ensure captured lines do not match the given pattern, using
          ‘re.match’.


          Parameters: ‘pat’ (str(68)) – The regular expression to match
          lines.

      -- Method: str ()

          Return the entire original text.

 -- Class: final class HookRecorder

     Record all hooks called in a plugin manager.

     Hook recorders are created by *note Pytester: 15f.

     This wraps all the hook calls in the plugin manager, recording each
     call before propagating the normal calls.

      -- Method: getcalls (names)

          Get all recorded calls to hooks with the given names (or
          name).

      -- Method: matchreport (inamepart='',
               names=('pytest_runtest_logreport',
               'pytest_collectreport'), when=None)

          Return a testreport whose dotted import path matches.

 -- Class: final class RecordedHookCall

     A recorded call to a hook.

     The arguments to the hook call are set as attributes.  For example:

          calls = hook_recorder.getcalls("pytest_runtest_setup")
          # Suppose pytest_runtest_setup was called once with `item=an_item`.
          assert calls[0].item is an_item

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) 
https://docs.python.org/3/library/pathlib.html#pathlib.Path.write_bytes

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (8) https://docs.python.org/3/library/os.html#os.PathLike

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/os.html#os.PathLike

   (11) https://docs.python.org/3/library/stdtypes.html#str

   (12) https://docs.python.org/3/library/stdtypes.html#str

   (13) https://docs.python.org/3/library/typing.html#typing.Union

   (14) https://docs.python.org/3/library/stdtypes.html#str

   (15) https://docs.python.org/3/library/os.html#os.PathLike

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/functions.html#bool

   (18) https://docs.python.org/3/library/typing.html#typing.Union

   (19) https://docs.python.org/3/library/stdtypes.html#str

   (20) https://docs.python.org/3/library/os.html#os.PathLike

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/stdtypes.html#str

   (23) https://docs.python.org/3/library/typing.html#typing.Union

   (24) https://docs.python.org/3/library/stdtypes.html#str

   (25) https://docs.python.org/3/library/os.html#os.PathLike

   (26) https://docs.python.org/3/library/stdtypes.html#str

   (27) https://docs.python.org/3/library/functions.html#bool

   (28) https://docs.python.org/3/library/stdtypes.html#str

   (29) 
https://docs.python.org/3/library/subprocess.html#subprocess.Popen

   (30) 
https://docs.python.org/3/library/subprocess.html#subprocess.Popen

   (31) 
https://docs.python.org/3/library/subprocess.html#subprocess.Popen

   (32) https://docs.python.org/3/library/typing.html#typing.Union

   (33) https://docs.python.org/3/library/stdtypes.html#str

   (34) https://docs.python.org/3/library/os.html#os.PathLike

   (35) https://docs.python.org/3/library/stdtypes.html#str

   (36) 
https://docs.python.org/3/library/subprocess.html#subprocess.Popen

   (37) https://docs.python.org/3/library/stdtypes.html#str

   (38) https://docs.python.org/3/library/typing.html#typing.Optional

   (39) https://docs.python.org/3/library/functions.html#float

   (40) https://docs.python.org/3/library/typing.html#typing.Union

   (41) https://docs.python.org/3/library/stdtypes.html#bytes

   (42) https://docs.python.org/3/library/typing.html#typing.IO

   (43) https://docs.python.org/3/library/typing.html#typing.Any

   (44) https://docs.python.org/3/library/functions.html#int

   (45) 
https://docs.python.org/3/library/subprocess.html#subprocess.Popen

   (46) https://docs.python.org/3/library/stdtypes.html#bytes

   (47) 
https://docs.python.org/3/library/subprocess.html#subprocess.Popen

   (48) 
https://docs.python.org/3/library/subprocess.html#subprocess.Popen

   (49) https://docs.python.org/3/library/typing.html#typing.Union

   (50) https://docs.python.org/3/library/stdtypes.html#str

   (51) https://docs.python.org/3/library/os.html#os.PathLike

   (52) https://docs.python.org/3/library/stdtypes.html#str

   (53) https://docs.python.org/3/library/typing.html#typing.Optional

   (54) https://docs.python.org/3/library/functions.html#float

   (55) https://docs.python.org/3/library/typing.html#typing.Union

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatch

   (58) https://docs.python.org/3/library/re.html#re.match

   (59) https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatch

   (60) https://docs.python.org/3/library/typing.html#typing.Sequence

   (61) https://docs.python.org/3/library/stdtypes.html#str

   (62) https://docs.python.org/3/library/functions.html#bool

   (63) https://docs.python.org/3/library/re.html#re.match

   (64) https://docs.python.org/3/library/typing.html#typing.Sequence

   (65) https://docs.python.org/3/library/stdtypes.html#str

   (66) https://docs.python.org/3/library/functions.html#bool

   (67) https://docs.python.org/3/library/stdtypes.html#str

   (68) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: record_property,  Next: record_testsuite_property,  Prev: pytester,  Up: Fixtures

26.4.12 record_property
-----------------------

‘Tutorial’: record_property example

 -- Function: record_property ()

     Add extra properties to the calling test.

     User properties become part of the test report and are available to
     the configured reporters, like JUnit XML.

     The fixture is callable with ‘name, value’.  The value is
     automatically XML-encoded.

     Example:

          def test_function(record_property):
              record_property("example_key", 1)


File: pytest.info,  Node: record_testsuite_property,  Next: recwarn,  Prev: record_property,  Up: Fixtures

26.4.13 record_testsuite_property
---------------------------------

‘Tutorial’: record_testsuite_property example

 -- Function: record_testsuite_property ()

     Record a new ‘<property>’ tag as child of the root ‘<testsuite>’.

     This is suitable to writing global information regarding the entire
     test suite, and is compatible with ‘xunit2’ JUnit family.

     This is a ‘session’-scoped fixture which is called with ‘(name,
     value)’.  Example:

          def test_foo(record_testsuite_property):
              record_testsuite_property("ARCH", "PPC")
              record_testsuite_property("STORAGE_TYPE", "CEPH")

     ‘name’ must be a string, ‘value’ will be converted to a string and
     properly xml-escaped.

          Warning: Currently this fixture ‘does not work’ with the
          pytest-xdist(1) plugin.  See issue #7767(2) for details.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest-xdist

   (2) https://github.com/pytest-dev/pytest/issues/7767


File: pytest.info,  Node: recwarn,  Next: request,  Prev: record_testsuite_property,  Up: Fixtures

26.4.14 recwarn
---------------

‘Tutorial’: *note Asserting warnings with the warns function: 10a.

 -- Function: recwarn ()

     Return a *note WarningsRecorder: 10f. instance that records all
     warnings emitted by test functions.

     See ‘https://docs.python.org/library/how-to/capture-warnings.html’
     for information on warning categories.

 -- Class: WarningsRecorder

     A context manager to record raised warnings.

     Each recorded warning is an instance of ‘warnings.WarningMessage’.

     Adapted from ‘warnings.catch_warnings’.

          Note: ‘DeprecationWarning’ and ‘PendingDeprecationWarning’ are
          treated differently; see *note Ensuring code triggers a
          deprecation warning: 108.

      -- Property: list: List(1)[WarningMessage]

          The list of recorded warnings.

      -- Method: pop (cls=<class 'Warning'>)

          Pop the first recorded warning, raise exception if not exists.

      -- Method: clear ()

          Clear the list of recorded warnings.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.List


File: pytest.info,  Node: request,  Next: testdir,  Prev: recwarn,  Up: Fixtures

26.4.15 request
---------------

‘Example’: *note Pass different values to a test function, depending on
command line options: 26c.

The ‘request’ fixture is a special fixture providing information of the
requesting test function.

 -- Class: FixtureRequest

     A request for a fixture from a test or fixture function.

     A request object gives access to the requesting test context and
     has an optional ‘param’ attribute in case the fixture is
     parametrized indirectly.

      -- Attribute: fixturename: Optional(1)[str(2)]

          Fixture for which this request is being performed.

      -- Property: scope: _ScopeName

          Scope string, one of “function”, “class”, “module”, “package”,
          “session”.

      -- Property: fixturenames: List(3)[str(4)]

          Names of all active fixtures in this request.

      -- Property: node

          Underlying collection node (depends on current request scope).

      -- Property: config: *note Config: 39.

          The pytest config object associated with this request.

      -- Property: function

          Test function object if the request has a per-function scope.

      -- Property: cls

          Class (can be None) where the test function was collected.

      -- Property: instance

          Instance (can be None) on which test function was collected.

      -- Property: module

          Python module object where the test function was collected.

      -- Property: path: Path(5)

          Path where the test function was collected.

      -- Property: keywords: MutableMapping(6)[str(7), Any(8)]

          Keywords/markers dictionary for the underlying node.

      -- Property: session: *note Session: 175.

          Pytest session object.

      -- Method: addfinalizer (finalizer)

          Add finalizer/teardown function to be called after the last
          test within the requesting test context finished execution.

      -- Method: applymarker (marker)

          Apply a marker to a single test function invocation.

          This method is useful if you don’t want to have a
          keyword/marker on all function invocations.


          Parameters: ‘marker’ (Union(9)‘[’str(10)‘, ’*note
          MarkDecorator: 27b.‘]’) – A *note pytest.MarkDecorator: 27b.
          object created by a call to ‘pytest.mark.NAME(...)’.

      -- Method: raiseerror (msg)

          Raise a FixtureLookupError with the given message.

      -- Method: getfixturevalue (argname)

          Dynamically run a named fixture function.

          Declaring fixtures via function argument is recommended where
          possible.  But if you can only decide whether to use another
          fixture at test setup time, you may use this function to
          retrieve it inside a fixture or test function body.


          Raises: ‘pytest.FixtureLookupError’ – If the given fixture
          could not be found.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.Optional

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/typing.html#typing.List

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (6) 
https://docs.python.org/3/library/typing.html#typing.MutableMapping

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/typing.html#typing.Any

   (9) https://docs.python.org/3/library/typing.html#typing.Union

   (10) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: testdir,  Next: tmp_path,  Prev: request,  Up: Fixtures

26.4.16 testdir
---------------

Identical to *note pytester: 224, but provides an instance whose methods
return legacy ‘py.path.local’ objects instead when applicable.

New code should avoid using *note testdir: 1ac. in favor of *note
pytester: 224.

 -- Class: final class Testdir

     Similar to *note Pytester: 15f, but this class works with legacy
     legacy_path objects instead.

     All methods just forward to an internal *note Pytester: 15f.
     instance, converting results to ‘legacy_path’ objects as necessary.

      -- Exception: TimeoutExpired

      -- Property: tmpdir: LocalPath

          Temporary directory where tests are executed.

      -- Method: make_hook_recorder (pluginmanager)

          See *note Pytester.make_hook_recorder(): 229.

      -- Method: chdir ()

          See *note Pytester.chdir(): 22b.

      -- Method: finalize ()

          See ‘Pytester._finalize()’.

      -- Method: makefile (ext, *args, **kwargs)

          See *note Pytester.makefile(): 22c.

      -- Method: makeconftest (source)

          See *note Pytester.makeconftest(): 22d.

      -- Method: makeini (source)

          See *note Pytester.makeini(): 22e.

      -- Method: getinicfg (source)

          See *note Pytester.getinicfg(): 22f.

      -- Method: makepyprojecttoml (source)

          See *note Pytester.makepyprojecttoml(): 230.

      -- Method: makepyfile (*args, **kwargs)

          See *note Pytester.makepyfile(): 231.

      -- Method: maketxtfile (*args, **kwargs)

          See *note Pytester.maketxtfile(): 232.

      -- Method: syspathinsert (path=None)

          See *note Pytester.syspathinsert(): 233.

      -- Method: mkdir (name)

          See *note Pytester.mkdir(): 234.

      -- Method: mkpydir (name)

          See *note Pytester.mkpydir(): 235.

      -- Method: copy_example (name=None)

          See *note Pytester.copy_example(): 236.

      -- Method: getnode (config, arg)

          See *note Pytester.getnode(): 237.

      -- Method: getpathnode (path)

          See *note Pytester.getpathnode(): 239.

      -- Method: genitems (colitems)

          See *note Pytester.genitems(): 23a.

      -- Method: runitem (source)

          See *note Pytester.runitem(): 23b.

      -- Method: inline_runsource (source, *cmdlineargs)

          See *note Pytester.inline_runsource(): 23c.

      -- Method: inline_genitems (*args)

          See *note Pytester.inline_genitems(): 23d.

      -- Method: inline_run (*args, plugins=(), no_reraise_ctrlc=False)

          See *note Pytester.inline_run(): 23e.

      -- Method: runpytest_inprocess (*args, **kwargs)

          See *note Pytester.runpytest_inprocess(): 23f.

      -- Method: runpytest (*args, **kwargs)

          See *note Pytester.runpytest(): 226.

      -- Method: parseconfig (*args)

          See *note Pytester.parseconfig(): 225.

      -- Method: parseconfigure (*args)

          See *note Pytester.parseconfigure(): 238.

      -- Method: getitem (source, funcname='test_func')

          See *note Pytester.getitem(): 240.

      -- Method: getitems (source)

          See *note Pytester.getitems(): 241.

      -- Method: getmodulecol (source, configargs=(), withinit=False)

          See *note Pytester.getmodulecol(): 242.

      -- Method: collect_by_name (modcol, name)

          See *note Pytester.collect_by_name(): 243.

      -- Method: popen (cmdargs, stdout=-1, stderr=-1,
               stdin=NotSetType.token, **kw)

          See *note Pytester.popen(): 245.

      -- Method: run (*cmdargs, timeout=None, stdin=NotSetType.token)

          See *note Pytester.run(): 246.

      -- Method: runpython (script)

          See *note Pytester.runpython(): 247.

      -- Method: runpython_c (command)

          See *note Pytester.runpython_c(): 248.

      -- Method: runpytest_subprocess (*args, timeout=None)

          See *note Pytester.runpytest_subprocess(): 249.

      -- Method: spawn_pytest (string, expect_timeout=10.0)

          See *note Pytester.spawn_pytest(): 24a.

      -- Method: spawn (cmd, expect_timeout=10.0)

          See *note Pytester.spawn(): 24b.


File: pytest.info,  Node: tmp_path,  Next: tmp_path_factory,  Prev: testdir,  Up: Fixtures

26.4.17 tmp_path
----------------

‘Tutorial’: *note How to use temporary directories and files in tests:
9c.

 -- Function: tmp_path ()

     Return a temporary directory path object which is unique to each
     test function invocation, created as a sub directory of the base
     temporary directory.

     By default, a new base temporary directory is created each test
     session, and old bases are removed after 3 sessions, to aid in
     debugging.  If ‘--basetemp’ is used then it is cleared each
     session.  See *note The default base temporary directory: 9e.

     The returned object is a pathlib.Path(1) object.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path


File: pytest.info,  Node: tmp_path_factory,  Next: tmpdir,  Prev: tmp_path,  Up: Fixtures

26.4.18 tmp_path_factory
------------------------

‘Tutorial’: *note The tmp_path_factory fixture: a0. ‘tmp_path_factory’
is an instance of *note TempPathFactory: 282.:

 -- Class: final class TempPathFactory

     Factory for temporary directories under the common base temp
     directory.

     The base directory can be configured using the ‘--basetemp’ option.

      -- Method: mktemp (basename, numbered=True)

          Create a new temporary directory managed by the factory.


          Parameters:

             * ‘basename’ (str(1)) – Directory base name, must be a
               relative path.

             * ‘numbered’ (bool(2)) – If ‘True’, ensure the directory is
               unique by adding a numbered suffix greater than any
               existing one: ‘basename="foo-"’ and ‘numbered=True’ means
               that this function will create directories named
               ‘"foo-0"’, ‘"foo-1"’, ‘"foo-2"’ and so on.


          Returns: The path to the new directory.


          Return type: Path(3)

      -- Method: getbasetemp ()

          Return the base temporary directory, creating it if needed.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#bool

   (3) https://docs.python.org/3/library/pathlib.html#pathlib.Path


File: pytest.info,  Node: tmpdir,  Next: tmpdir_factory,  Prev: tmp_path_factory,  Up: Fixtures

26.4.19 tmpdir
--------------

‘Tutorial’: *note The tmpdir and tmpdir_factory fixtures: a2.

 -- Function: tmpdir ()

     Return a temporary directory path object which is unique to each
     test function invocation, created as a sub directory of the base
     temporary directory.

     By default, a new base temporary directory is created each test
     session, and old bases are removed after 3 sessions, to aid in
     debugging.  If ‘--basetemp’ is used then it is cleared each
     session.  See *note The default base temporary directory: 9e.

     The returned object is a legacy_path(1) object.

          Note: These days, it is preferred to use ‘tmp_path’.

          *note About the tmpdir and tmpdir_factory fixtures: a2.

   ---------- Footnotes ----------

   (1) https://py.readthedocs.io/en/latest/path.html


File: pytest.info,  Node: tmpdir_factory,  Prev: tmpdir,  Up: Fixtures

26.4.20 tmpdir_factory
----------------------

‘Tutorial’: *note The tmpdir and tmpdir_factory fixtures: a2.

‘tmpdir_factory’ is an instance of *note TempdirFactory: 288.:

 -- Class: final class TempdirFactory

     Backward compatibility wrapper that implements ‘py.path.local’ for
     *note TempPathFactory: 282.

          Note: These days, it is preferred to use ‘tmp_path_factory’.

          *note About the tmpdir and tmpdir_factory fixtures: a2.

      -- Method: mktemp (basename, numbered=True)

          Same as *note TempPathFactory.mktemp(): 283, but returns a
          ‘py.path.local’ object.

      -- Method: getbasetemp ()

          Same as *note TempPathFactory.getbasetemp(): 284, but returns
          a ‘py.path.local’ object.


File: pytest.info,  Node: Hooks,  Next: Objects,  Prev: Fixtures,  Up: API Reference<2>

26.5 Hooks
==========

‘Tutorial’: *note Writing plugins: 13f.

Reference to all hooks which can be implemented by *note conftest.py
files: 152. and *note plugins: 15.

* Menu:

* Bootstrapping hooks::
* Initialization hooks::
* Collection hooks::
* Test running (runtest) hooks: Test running runtest hooks.
* Reporting hooks::
* Debugging/Interaction hooks::


File: pytest.info,  Node: Bootstrapping hooks,  Next: Initialization hooks,  Up: Hooks

26.5.1 Bootstrapping hooks
--------------------------

Bootstrapping hooks called for plugins registered early enough (internal
and setuptools plugins).

 -- Function: pytest_load_initial_conftests (early_config, parser, args)

     Called to implement the loading of initial conftest files ahead of
     command line option parsing.

          Note: This hook will not be called for ‘conftest.py’ files,
          only for setuptools plugins.


     Parameters:

        * ‘early_config’ (*note pytest.Config: 39.) – The pytest config
          object.

        * ‘args’ (‘List’‘[’str(1)‘]’) – Arguments passed on the command
          line.

        * ‘parser’ (*note pytest.Parser: 28f.) – To add command line
          options.

 -- Function: pytest_cmdline_preparse (config, args)

     (‘Deprecated’) modify command line arguments before option parsing.

     This hook is considered deprecated and will be removed in a future
     pytest version.  Consider using *note
     pytest_load_initial_conftests: 28d. instead.

          Note: This hook will not be called for ‘conftest.py’ files,
          only for setuptools plugins.


     Parameters:

        * ‘config’ (*note pytest.Config: 39.) – The pytest config
          object.

        * ‘args’ (‘List’‘[’str(2)‘]’) – Arguments passed on the command
          line.

 -- Function: pytest_cmdline_parse (pluginmanager, args)

     Return an initialized config object, parsing the specified args.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.

          Note: This hook will only be called for plugin classes passed
          to the ‘plugins’ arg when using *note pytest.main: 1e0. to
          perform an in-process test run.


     Parameters:

        * ‘pluginmanager’ (*note pytest.PytestPluginManager: 16c.) – The
          pytest plugin manager.

        * ‘args’ (‘List’‘[’str(3)‘]’) – List of arguments passed on the
          command line.

 -- Function: pytest_cmdline_main (config)

     Called for performing the main command line action.  The default
     implementation will invoke the configure hooks and
     runtest_mainloop.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.


     Parameters: ‘config’ (*note pytest.Config: 39.) – The pytest config
     object.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: Initialization hooks,  Next: Collection hooks,  Prev: Bootstrapping hooks,  Up: Hooks

26.5.2 Initialization hooks
---------------------------

Initialization hooks called for plugins and ‘conftest.py’ files.

 -- Function: pytest_addoption (parser, pluginmanager)

     Register argparse-style options and ini-style config values, called
     once at the beginning of a test run.

          Note: This function should be implemented only in plugins or
          ‘conftest.py’ files situated at the tests root directory due
          to how pytest *note discovers plugins during startup: 150.


     Parameters:

        * ‘parser’ (*note pytest.Parser: 28f.) – To add command line
          options, call *note parser.addoption(...): 299.  To add
          ini-file values call *note parser.addini(...): 29a.

        * ‘pluginmanager’ (*note pytest.PytestPluginManager: 16c.) – The
          pytest plugin manager, which can be used to install
          ‘hookspec()’’s or ‘hookimpl()’’s and allow one plugin to call
          another plugin’s hooks to change how command line options are
          added.

     Options can later be accessed through the *note config: 39. object,
     respectively:

        - *note config.getoption(name): 29b. to retrieve the value of a
          command line option.

        - *note config.getini(name): 29c. to retrieve a value read from
          an ini-style file.

     The config object is passed around on many internal objects via the
     ‘.config’ attribute or can be retrieved as the ‘pytestconfig’
     fixture.

          Note: This hook is incompatible with ‘hookwrapper=True’.

 -- Function: pytest_addhooks (pluginmanager)

     Called at plugin registration time to allow adding new hooks via a
     call to ‘pluginmanager.add_hookspecs(module_or_class, prefix)’.


     Parameters: ‘pluginmanager’ (*note pytest.PytestPluginManager:
     16c.) – The pytest plugin manager.

          Note: This hook is incompatible with ‘hookwrapper=True’.

 -- Function: pytest_configure (config)

     Allow plugins and conftest files to perform initial configuration.

     This hook is called for every plugin and initial conftest file
     after command line options have been parsed.

     After that, the hook is called for other conftest files as they are
     imported.

          Note: This hook is incompatible with ‘hookwrapper=True’.


     Parameters: ‘config’ (*note pytest.Config: 39.) – The pytest config
     object.

 -- Function: pytest_unconfigure (config)

     Called before test process is exited.


     Parameters: ‘config’ (*note pytest.Config: 39.) – The pytest config
     object.

 -- Function: pytest_sessionstart (session)

     Called after the ‘Session’ object has been created and before
     performing collection and entering the run test loop.


     Parameters: ‘session’ (*note pytest.Session: 175.) – The pytest
     session object.

 -- Function: pytest_sessionfinish (session, exitstatus)

     Called after whole test run finished, right before returning the
     exit status to the system.


     Parameters:

        * ‘session’ (*note pytest.Session: 175.) – The pytest session
          object.

        * ‘exitstatus’ (int(1)) – The status which pytest will return to
          the system.

 -- Function: pytest_plugin_registered (plugin, manager)

     A new pytest plugin got registered.


     Parameters:

        * ‘plugin’ (‘_PluggyPlugin’) – The plugin module or instance.

        * ‘manager’ (*note pytest.PytestPluginManager: 16c.) – pytest
          plugin manager.

          Note: This hook is incompatible with ‘hookwrapper=True’.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: pytest.info,  Node: Collection hooks,  Next: Test running runtest hooks,  Prev: Initialization hooks,  Up: Hooks

26.5.3 Collection hooks
-----------------------

‘pytest’ calls the following hooks for collecting files and directories:

 -- Function: pytest_collection (session)

     Perform the collection phase for the given session.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.  The return value is not used, but only
     stops further processing.

     The default collection phase is this (see individual hooks for full
     details):

       1. Starting from ‘session’ as the initial collector:

            1. ‘pytest_collectstart(collector)’

            2. ‘report = pytest_make_collect_report(collector)’

            3. ‘pytest_exception_interact(collector, call, report)’ if
               an interactive exception occurred

            4. For each collected node:

                 1. If an item, ‘pytest_itemcollected(item)’

                 2. If a collector, recurse into it.

            5. ‘pytest_collectreport(report)’

       2. ‘pytest_collection_modifyitems(session, config, items)’

            1. ‘pytest_deselected(items)’ for any deselected items (may
               be called multiple times)

       3. ‘pytest_collection_finish(session)’

       4. Set ‘session.items’ to the list of collected items

       5. Set ‘session.testscollected’ to the number of collected items

     You can implement this hook to only perform some action before
     collection, for example the terminal plugin uses it to start
     displaying the collection counter (and returns ‘None’).


     Parameters: ‘session’ (*note pytest.Session: 175.) – The pytest
     session object.

 -- Function: pytest_ignore_collect (collection_path, path, config)

     Return True to prevent considering this path for collection.

     This hook is consulted for all files and directories prior to
     calling more specific hooks.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.

     :param pathlib.Path collection_path : The path to analyze.  :param
     LEGACY_PATH path: The path to analyze (deprecated).  :param
     pytest.Config config: The pytest config object.

     Changed in version 7.0.0: The ‘collection_path’ parameter was added
     as a pathlib.Path(1) equivalent of the ‘path’ parameter.  The
     ‘path’ parameter has been deprecated.

 -- Function: pytest_collect_file (file_path, path, parent)

     Create a Collector for the given path, or None if not relevant.

     The new node needs to have the specified ‘parent’ as a parent.


     Parameters:

        * ‘file_path’ (pathlib.Path(2)) – The path to analyze.

        * ‘path’ (‘LEGACY_PATH’) – The path to collect (deprecated).

     Changed in version 7.0.0: The ‘file_path’ parameter was added as a
     pathlib.Path(3) equivalent of the ‘path’ parameter.  The ‘path’
     parameter has been deprecated.

 -- Function: pytest_pycollect_makemodule (module_path, path, parent)

     Return a Module collector or None for the given path.

     This hook will be called for each matching test module path.  The
     pytest_collect_file hook needs to be used if you want to create
     test modules for files that do not match as a test module.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.


     Parameters:

        * ‘module_path’ (pathlib.Path(4)) – The path of the module to
          collect.

        * ‘path’ (‘LEGACY_PATH’) – The path of the module to collect
          (deprecated).

     Changed in version 7.0.0: The ‘module_path’ parameter was added as
     a pathlib.Path(5) equivalent of the ‘path’ parameter.

     The ‘path’ parameter has been deprecated in favor of ‘fspath’.

For influencing the collection of objects in Python modules you can use
the following hook:

 -- Function: pytest_pycollect_makeitem (collector, name, obj)

     Return a custom item/collector for a Python object in a module, or
     None.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.

 -- Function: pytest_generate_tests (metafunc)

     Generate (multiple) parametrized calls to a test function.

 -- Function: pytest_make_parametrize_id (config, val, argname)

     Return a user-friendly string representation of the given ‘val’
     that will be used by @pytest.mark.parametrize calls, or None if the
     hook doesn’t know about ‘val’.

     The parameter name is available as ‘argname’, if required.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.


     Parameters:

        * ‘config’ (*note pytest.Config: 39.) – The pytest config
          object.

        * ‘val’ (object(6)) – The parametrized value.

        * ‘argname’ (str(7)) – The automatic parameter name produced by
          pytest.

Hooks for influencing test skipping:

 -- Function: pytest_markeval_namespace (config)

     Called when constructing the globals dictionary used for evaluating
     string conditions in xfail/skipif markers.

     This is useful when the condition for a marker requires objects
     that are expensive or impossible to obtain during collection time,
     which is required by normal boolean conditions.

     New in version 6.2.


     Parameters: ‘config’ (*note pytest.Config: 39.) – The pytest config
     object.


     Returns: A dictionary of additional globals to add.


     Return type: Dict(8)[str(9), Any(10)]

After collection is complete, you can modify the order of items, delete
or otherwise amend the test items:

 -- Function: pytest_collection_modifyitems (session, config, items)

     Called after collection has been performed.  May filter or re-order
     the items in-place.


     Parameters:

        * ‘session’ (*note pytest.Session: 175.) – The pytest session
          object.

        * ‘config’ (*note pytest.Config: 39.) – The pytest config
          object.

        * ‘items’ (‘List’‘[’*note pytest.Item: 172.‘]’) – List of item
          objects.

     Note: If this hook is implemented in ‘conftest.py’ files, it always
     receives all collected items, not only those under the
     ‘conftest.py’ where it is implemented.

 -- Function: pytest_collection_finish (session)

     Called after collection has been performed and modified.


     Parameters: ‘session’ (*note pytest.Session: 175.) – The pytest
     session object.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (2) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (3) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (4) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (5) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (6) https://docs.python.org/3/library/functions.html#object

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/typing.html#typing.Dict

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/typing.html#typing.Any


File: pytest.info,  Node: Test running runtest hooks,  Next: Reporting hooks,  Prev: Collection hooks,  Up: Hooks

26.5.4 Test running (runtest) hooks
-----------------------------------

All runtest related hooks receive a *note pytest.Item: 172. object.

 -- Function: pytest_runtestloop (session)

     Perform the main runtest loop (after collection finished).

     The default hook implementation performs the runtest protocol for
     all items collected in the session (‘session.items’), unless the
     collection failed or the ‘collectonly’ pytest option is set.

     If at any point *note pytest.exit(): 1df. is called, the loop is
     terminated immediately.

     If at any point ‘session.shouldfail’ or ‘session.shouldstop’ are
     set, the loop is terminated after the runtest protocol for the
     current item is finished.


     Parameters: ‘session’ (*note pytest.Session: 175.) – The pytest
     session object.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.  The return value is not used, but only
     stops further processing.

 -- Function: pytest_runtest_protocol (item, nextitem)

     Perform the runtest protocol for a single test item.

     The default runtest protocol is this (see individual hooks for full
     details):

        - ‘pytest_runtest_logstart(nodeid, location)’

        - 
          Setup phase:

                  - ‘call = pytest_runtest_setup(item)’ (wrapped in
                    ‘CallInfo(when="setup")’)

                  - ‘report = pytest_runtest_makereport(item, call)’

                  - ‘pytest_runtest_logreport(report)’

                  - ‘pytest_exception_interact(call, report)’ if an
                    interactive exception occurred

        - 
          Call phase, if the the setup passed and the ‘setuponly’ pytest option is not set:

                  - ‘call = pytest_runtest_call(item)’ (wrapped in
                    ‘CallInfo(when="call")’)

                  - ‘report = pytest_runtest_makereport(item, call)’

                  - ‘pytest_runtest_logreport(report)’

                  - ‘pytest_exception_interact(call, report)’ if an
                    interactive exception occurred

        - 
          Teardown phase:

                  - ‘call = pytest_runtest_teardown(item, nextitem)’
                    (wrapped in ‘CallInfo(when="teardown")’)

                  - ‘report = pytest_runtest_makereport(item, call)’

                  - ‘pytest_runtest_logreport(report)’

                  - ‘pytest_exception_interact(call, report)’ if an
                    interactive exception occurred

        - ‘pytest_runtest_logfinish(nodeid, location)’


     Parameters:

        * ‘item’ (*note Item: 172.) – Test item for which the runtest
          protocol is performed.

        * ‘nextitem’ (‘Optional’‘[’*note Item: 172.‘]’) – The
          scheduled-to-be-next test item (or None if this is the end my
          friend).

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.  The return value is not used, but only
     stops further processing.

 -- Function: pytest_runtest_logstart (nodeid, location)

     Called at the start of running the runtest protocol for a single
     item.

     See *note pytest_runtest_protocol: 2c0. for a description of the
     runtest protocol.


     Parameters:

        * ‘nodeid’ (str(1)) – Full node ID of the item.

        * ‘location’ (Tuple(2)‘[’str(3)‘, ’Optional(4)‘[’int(5)‘]’‘,
          ’str(6)‘]’) – A tuple of ‘(filename, lineno, testname)’.

 -- Function: pytest_runtest_logfinish (nodeid, location)

     Called at the end of running the runtest protocol for a single
     item.

     See *note pytest_runtest_protocol: 2c0. for a description of the
     runtest protocol.


     Parameters:

        * ‘nodeid’ (str(7)) – Full node ID of the item.

        * ‘location’ (Tuple(8)‘[’str(9)‘, ’Optional(10)‘[’int(11)‘]’‘,
          ’str(12)‘]’) – A tuple of ‘(filename, lineno, testname)’.

 -- Function: pytest_runtest_setup (item)

     Called to perform the setup phase for a test item.

     The default implementation runs ‘setup()’ on ‘item’ and all of its
     parents (which haven’t been setup yet).  This includes obtaining
     the values of fixtures required by the item (which haven’t been
     obtained yet).

 -- Function: pytest_runtest_call (item)

     Called to run the test for test item (the call phase).

     The default implementation calls ‘item.runtest()’.

 -- Function: pytest_runtest_teardown (item, nextitem)

     Called to perform the teardown phase for a test item.

     The default implementation runs the finalizers and calls
     ‘teardown()’ on ‘item’ and all of its parents (which need to be
     torn down).  This includes running the teardown phase of fixtures
     required by the item (if they go out of scope).


     Parameters: ‘nextitem’ (Optional(13)‘[’*note Item: 172.‘]’) – The
     scheduled-to-be-next test item (None if no further test item is
     scheduled).  This argument is used to perform exact teardowns, i.e.
     calling just enough finalizers so that nextitem only needs to call
     setup functions.

 -- Function: pytest_runtest_makereport (item, call)

     Called to create a *note TestReport: 2ce. for each of the setup,
     call and teardown runtest phases of a test item.

     See *note pytest_runtest_protocol: 2c0. for a description of the
     runtest protocol.


     Parameters: ‘call’ (*note CallInfo: 2cf.‘[’‘None’‘]’) – The *note
     CallInfo: 2cf. for the phase.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.

For deeper understanding you may look at the default implementation of
these hooks in ‘_pytest.runner’ and maybe also in ‘_pytest.pdb’ which
interacts with ‘_pytest.capture’ and its input/output capturing in order
to immediately drop into interactive debugging when a test failure
occurs.

 -- Function: pytest_pyfunc_call (pyfuncitem)

     Call underlying test function.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/typing.html#typing.Tuple

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/typing.html#typing.Optional

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/typing.html#typing.Tuple

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/typing.html#typing.Optional

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/stdtypes.html#str

   (13) https://docs.python.org/3/library/typing.html#typing.Optional


File: pytest.info,  Node: Reporting hooks,  Next: Debugging/Interaction hooks,  Prev: Test running runtest hooks,  Up: Hooks

26.5.5 Reporting hooks
----------------------

Session related reporting hooks:

 -- Function: pytest_collectstart (collector)

     Collector starts collecting.

 -- Function: pytest_make_collect_report (collector)

     Perform *note collector.collect(): 2d7. and return a *note
     CollectReport: 2d8.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.

 -- Function: pytest_itemcollected (item)

     We just collected a test item.

 -- Function: pytest_collectreport (report)

     Collector finished collecting.

 -- Function: pytest_deselected (items)

     Called for deselected test items, e.g.  by keyword.

     May be called multiple times.

 -- Function: pytest_report_header (config, start_path, startdir)

     Return a string or list of strings to be displayed as header info
     for terminal reporting.


     Parameters:

        * ‘config’ (*note pytest.Config: 39.) – The pytest config
          object.

        * ‘start_path’ (‘Path’) – The starting dir.

        * ‘startdir’ (‘LEGACY_PATH’) – The starting dir (deprecated).

          Note: Lines returned by a plugin are displayed before those of
          plugins which ran before it.  If you want to have your line(s)
          displayed first, use *note trylast=True: 16a.

          Note: This function should be implemented only in plugins or
          ‘conftest.py’ files situated at the tests root directory due
          to how pytest *note discovers plugins during startup: 150.

     Changed in version 7.0.0: The ‘start_path’ parameter was added as a
     pathlib.Path(1) equivalent of the ‘startdir’ parameter.  The
     ‘startdir’ parameter has been deprecated.

 -- Function: pytest_report_collectionfinish (config, start_path,
          startdir, items)

     Return a string or list of strings to be displayed after collection
     has finished successfully.

     These strings will be displayed after the standard “collected X
     items” message.

     New in version 3.2.


     Parameters:

        * ‘config’ (*note pytest.Config: 39.) – The pytest config
          object.

        * ‘start_path’ (‘Path’) – The starting dir.

        * ‘startdir’ (‘LEGACY_PATH’) – The starting dir (deprecated).

        * ‘items’ (Sequence(2)‘[’*note Item: 172.‘]’) – List of pytest
          items that are going to be executed; this list should not be
          modified.

          Note: Lines returned by a plugin are displayed before those of
          plugins which ran before it.  If you want to have your line(s)
          displayed first, use *note trylast=True: 16a.

     Changed in version 7.0.0: The ‘start_path’ parameter was added as a
     pathlib.Path(3) equivalent of the ‘startdir’ parameter.  The
     ‘startdir’ parameter has been deprecated.

 -- Function: pytest_report_teststatus (report, config)

     Return result-category, shortletter and verbose word for status
     reporting.

     The result-category is a category in which to count the result, for
     example “passed”, “skipped”, “error” or the empty string.

     The shortletter is shown as testing progresses, for example “.”,
     “s”, “E” or the empty string.

     The verbose word is shown as testing progresses in verbose mode,
     for example “PASSED”, “SKIPPED”, “ERROR” or the empty string.

     pytest may style these implicitly according to the report outcome.
     To provide explicit styling, return a tuple for the verbose word,
     for example ‘"rerun", "R", ("RERUN", {"yellow": True})’.


     Parameters:

        * ‘report’ (Union(4)‘[’*note CollectReport: 2d8.‘, ’*note
          TestReport: 2ce.‘]’) – The report object whose status is to be
          returned.

        * ‘config’ (*note Config: 39.) – The pytest config object.

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.

 -- Function: pytest_report_to_serializable (config, report)

     Serialize the given report object into a data structure suitable
     for sending over the wire, e.g.  converted to JSON.

 -- Function: pytest_report_from_serializable (config, data)

     Restore a report object previously serialized with *note
     pytest_report_to_serializable: 2e5.

 -- Function: pytest_terminal_summary (terminalreporter, exitstatus,
          config)

     Add a section to terminal summary reporting.


     Parameters:

        * ‘terminalreporter’ (‘_pytest.terminal.TerminalReporter’) – The
          internal terminal reporter object.

        * ‘exitstatus’ (int(5)) – The exit status that will be reported
          back to the OS.

        * ‘config’ (*note pytest.Config: 39.) – The pytest config
          object.

     New in version 4.2: The ‘config’ parameter.

 -- Function: pytest_fixture_setup (fixturedef, request)

     Perform fixture setup execution.


     Returns: The return value of the call to the fixture function.


     Return type: Optional(6)[object(7)]

     Stops at first non-None result, see *note firstresult; stop at
     first non-None result: 165.

          Note: If the fixture function returns None, other
          implementations of this hook function will continue to be
          called, according to the behavior of the *note firstresult;
          stop at first non-None result: 165. option.

 -- Function: pytest_fixture_post_finalizer (fixturedef, request)

     Called after fixture teardown, but before the cache is cleared, so
     the fixture result ‘fixturedef.cached_result’ is still available
     (not ‘None’).

 -- Function: pytest_warning_recorded (warning_message, when, nodeid,
          location)

     Process a warning captured by the internal pytest warnings plugin.


     Parameters:

        * ‘warning_message’ (‘warnings.WarningMessage’) – The captured
          warning.  This is the same object produced by
          ‘warnings.catch_warnings()’, and contains the same attributes
          as the parameters of warnings.showwarning()(8).

        * ‘when’ (str(9)) – Indicates when the warning was captured.
          Possible values:

             * ‘"config"’: during pytest configuration/initialization
               stage.

             * ‘"collect"’: during test collection.

             * ‘"runtest"’: during test execution.

        * ‘nodeid’ (str(10)) – Full id of the item.

        * ‘location’ (tuple(11)‘|’‘None’) – When available, holds
          information about the execution context of the captured
          warning (filename, linenumber, function).  ‘function’
          evaluates to <module> when the execution context is at the
          module level.

     New in version 6.0.

Central hook for reporting about test execution:

 -- Function: pytest_runtest_logreport (report)

     Process the *note TestReport: 2ce. produced for each of the setup,
     call and teardown runtest phases of an item.

     See *note pytest_runtest_protocol: 2c0. for a description of the
     runtest protocol.

Assertion related hooks:

 -- Function: pytest_assertrepr_compare (config, op, left, right)

     Return explanation for comparisons in failing assert expressions.

     Return None for no custom explanation, otherwise return a list of
     strings.  The strings will be joined by newlines but any newlines
     ‘in’ a string will be escaped.  Note that all but the first line
     will be indented slightly, the intention is for the first line to
     be a summary.


     Parameters: ‘config’ (*note pytest.Config: 39.) – The pytest config
     object.

 -- Function: pytest_assertion_pass (item, lineno, orig, expl)

     Called whenever an assertion passes.

     New in version 5.0.

     Use this hook to do some processing after a passing assertion.  The
     original assertion information is available in the ‘orig’ string
     and the pytest introspected assertion information is available in
     the ‘expl’ string.

     This hook must be explicitly enabled by the
     ‘enable_assertion_pass_hook’ ini-file option:

          [pytest]
          enable_assertion_pass_hook=true

     You need to ‘clean the .pyc’ files in your project directory and
     interpreter libraries when enabling this option, as assertions will
     require to be re-written.


     Parameters:

        * ‘item’ (*note pytest.Item: 172.) – pytest item object of
          current test.

        * ‘lineno’ (int(12)) – Line number of the assert statement.

        * ‘orig’ (str(13)) – String with the original assertion.

        * ‘expl’ (str(14)) – String with the assert explanation.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (2) https://docs.python.org/3/library/typing.html#typing.Sequence

   (3) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (4) https://docs.python.org/3/library/typing.html#typing.Union

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/typing.html#typing.Optional

   (7) https://docs.python.org/3/library/functions.html#object

   (8) 
https://docs.python.org/3/library/warnings.html#warnings.showwarning

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/stdtypes.html#str

   (11) https://docs.python.org/3/library/stdtypes.html#tuple

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/stdtypes.html#str

   (14) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: Debugging/Interaction hooks,  Prev: Reporting hooks,  Up: Hooks

26.5.6 Debugging/Interaction hooks
----------------------------------

There are few hooks which can be used for special reporting or
interaction with exceptions:

 -- Function: pytest_internalerror (excrepr, excinfo)

     Called for internal errors.

     Return True to suppress the fallback handling of printing an
     INTERNALERROR message directly to sys.stderr.

 -- Function: pytest_keyboard_interrupt (excinfo)

     Called for keyboard interrupt.

 -- Function: pytest_exception_interact (node, call, report)

     Called when an exception was raised which can potentially be
     interactively handled.

     May be called during collection (see *note
     pytest_make_collect_report: 2d5.), in which case ‘report’ is a
     ‘CollectReport’.

     May be called during runtest of an item (see *note
     pytest_runtest_protocol: 2c0.), in which case ‘report’ is a
     ‘TestReport’.

     This hook is not called if the exception that was raised is an
     internal exception like ‘skip.Exception’.

 -- Function: pytest_enter_pdb (config, pdb)

     Called upon pdb.set_trace().

     Can be used by plugins to take special action just before the
     python debugger enters interactive mode.


     Parameters:

        * ‘config’ (*note pytest.Config: 39.) – The pytest config
          object.

        * ‘pdb’ (pdb.Pdb(1)) – The Pdb instance.

 -- Function: pytest_leave_pdb (config, pdb)

     Called when leaving pdb (e.g.  with continue after
     pdb.set_trace()).

     Can be used by plugins to take special action just after the python
     debugger leaves interactive mode.


     Parameters:

        * ‘config’ (*note pytest.Config: 39.) – The pytest config
          object.

        * ‘pdb’ (pdb.Pdb(2)) – The Pdb instance.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pdb.html#pdb.Pdb

   (2) https://docs.python.org/3/library/pdb.html#pdb.Pdb


File: pytest.info,  Node: Objects,  Next: Global Variables,  Prev: Hooks,  Up: API Reference<2>

26.6 Objects
============

Full reference to objects accessible from *note fixtures: d9. or *note
hooks: 14e.

* Menu:

* CallInfo::
* Class::
* Collector::
* CollectReport::
* Config::
* ExceptionInfo::
* ExitCode::
* File::
* FixtureDef::
* FSCollector::
* Function::
* FunctionDefinition::
* Item::
* MarkDecorator::
* MarkGenerator::
* Mark::
* Metafunc::
* Module::
* Node::
* Parser::
* OptionGroup::
* PytestPluginManager::
* Session::
* TestReport::
* _Result::
* Stash::


File: pytest.info,  Node: CallInfo,  Next: Class,  Up: Objects

26.6.1 CallInfo
---------------

 -- Class: final class CallInfo

     Result/Exception info of a function invocation.

      -- Attribute: excinfo: Optional(1)[*note ExceptionInfo:
               32.[BaseException(2)]]

          The captured exception of the call, if it raised.

      -- Attribute: start: float(3)

          The system time when the call started, in seconds since the
          epoch.

      -- Attribute: stop: float(4)

          The system time when the call ended, in seconds since the
          epoch.

      -- Attribute: duration: float(5)

          The call duration, in seconds.

      -- Attribute: when: Literal['collect', 'setup', 'call',
               'teardown']

          The context of invocation: “collect”, “setup”, “call” or
          “teardown”.

      -- Property: result: TResult

          The return value of the call, if it didn’t raise.

          Can only be accessed if excinfo is None.

      -- Method: classmethod from_call (func, when, reraise=None)

          Call func, wrapping the result in a CallInfo.


          Parameters:

             * ‘func’ (‘Callable’‘[’‘[’‘]’‘, ’‘TResult’‘]’) – The
               function to call.  Called without arguments.

             * ‘when’ (‘Literal’‘[’‘'collect'’‘, ’‘'setup'’‘,
               ’‘'call'’‘, ’‘'teardown'’‘]’) – The phase in which the
               function is called.

             * ‘reraise’
               (Optional(6)‘[’Union(7)‘[’Type(8)‘[’BaseException(9)‘]’‘,
               ’Tuple(10)‘[’Type(11)‘[’BaseException(12)‘]’‘,
               ’‘...’‘]’‘]’‘]’) – Exception or exceptions that shall
               propagate if raised by the function, instead of being
               wrapped in the CallInfo.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.Optional

   (2) https://docs.python.org/3/library/exceptions.html#BaseException

   (3) https://docs.python.org/3/library/functions.html#float

   (4) https://docs.python.org/3/library/functions.html#float

   (5) https://docs.python.org/3/library/functions.html#float

   (6) https://docs.python.org/3/library/typing.html#typing.Optional

   (7) https://docs.python.org/3/library/typing.html#typing.Union

   (8) https://docs.python.org/3/library/typing.html#typing.Type

   (9) https://docs.python.org/3/library/exceptions.html#BaseException

   (10) https://docs.python.org/3/library/typing.html#typing.Tuple

   (11) https://docs.python.org/3/library/typing.html#typing.Type

   (12) https://docs.python.org/3/library/exceptions.html#BaseException


File: pytest.info,  Node: Class,  Next: Collector,  Prev: CallInfo,  Up: Objects

26.6.2 Class
------------

 -- Class: Class

     Bases: ‘PyCollector’

     Collector for test methods.

      -- Method: classmethod from_parent (parent, *, name, obj=None,
               **kw)

          The public constructor.

      -- Method: collect ()

          Return a list of children (items and collectors) for this
          collection node.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: path: Path

          Filesystem path where this node was collected from (can be
          None).

      -- Attribute: fspath: LocalPath

          A ‘LEGACY_PATH’ copy of the *note path: 312. attribute.
          Intended for usage for methods not migrated to ‘pathlib.Path’
          yet, such as *note Item.reportinfo(): 314.  Will be deprecated
          in a future release, prefer using *note path: 312. instead.


File: pytest.info,  Node: Collector,  Next: CollectReport,  Prev: Class,  Up: Objects

26.6.3 Collector
----------------

 -- Class: Collector

     Bases: *note Node: 316.

     Collector instances create children through collect() and thus
     iteratively build a tree.

      -- Exception: CollectError

          Bases: Exception(1)

          An error during collection, contains a custom message.

      -- Method: collect ()

          Return a list of children (items and collectors) for this
          collection node.

      -- Method: repr_failure (excinfo)

          Return a representation of a collection failure.


          Parameters: ‘excinfo’ (*note ExceptionInfo:
          32.‘[’BaseException(2)‘]’) – Exception information for the
          failure.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: path: Path(3)

          Filesystem path where this node was collected from (can be
          None).

      -- Attribute: fspath: LocalPath

          A ‘LEGACY_PATH’ copy of the *note path: 31d. attribute.
          Intended for usage for methods not migrated to ‘pathlib.Path’
          yet, such as *note Item.reportinfo(): 314.  Will be deprecated
          in a future release, prefer using *note path: 31d. instead.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#Exception

   (2) https://docs.python.org/3/library/exceptions.html#BaseException

   (3) https://docs.python.org/3/library/pathlib.html#pathlib.Path


File: pytest.info,  Node: CollectReport,  Next: Config,  Prev: Collector,  Up: Objects

26.6.4 CollectReport
--------------------

 -- Class: final class CollectReport

     Bases: ‘BaseReport’

     Collection report object.

     Reports can contain arbitrary extra attributes.

      -- Attribute: nodeid: str(1)

          Normalized collection nodeid.

      -- Attribute: outcome: Literal['passed', 'failed', 'skipped']

          Test outcome, always one of “passed”, “failed”, “skipped”.

      -- Attribute: longrepr: Union(2)[None(3), *note ExceptionInfo:
               32.[BaseException(4)], Tuple(5)[str(6), int(7), str(8)],
               str(9), TerminalRepr]

          None or a failure representation.

      -- Attribute: result

          The collected items and collection nodes.

      -- Attribute: sections: List(10)[Tuple(11)[str(12), str(13)]]

          Tuples of str ‘(heading, content)’ with extra information for
          the test report.  Used by pytest to add text captured from
          ‘stdout’, ‘stderr’, and intercepted logging events.  May be
          used by other plugins to add arbitrary information to reports.

      -- Property: caplog: str(14)

          Return captured log lines, if log capturing is enabled.

          New in version 3.5.

      -- Property: capstderr: str(15)

          Return captured text from stderr, if capturing is enabled.

          New in version 3.0.

      -- Property: capstdout: str(16)

          Return captured text from stdout, if capturing is enabled.

          New in version 3.0.

      -- Property: count_towards_summary: bool(17)

          ‘Experimental’ Whether this report should be counted towards
          the totals shown at the end of the test session: “1 passed, 1
          failure, etc”.

               Note: This function is considered ‘experimental’, so
               beware that it is subject to changes even in patch
               releases.

      -- Property: failed: bool(18)

          Whether the outcome is failed.

      -- Property: fspath: str(19)

          The path portion of the reported node, as a string.

      -- Property: head_line: Optional(20)[str(21)]

          ‘Experimental’ The head line shown with longrepr output for
          this report, more commonly during traceback representation
          during failures:

               ________ Test.foo ________

          In the example above, the head_line is “Test.foo”.

               Note: This function is considered ‘experimental’, so
               beware that it is subject to changes even in patch
               releases.

      -- Property: longreprtext: str(22)

          Read-only property that returns the full string representation
          of ‘longrepr’.

          New in version 3.0.

      -- Property: passed: bool(23)

          Whether the outcome is passed.

      -- Property: skipped: bool(24)

          Whether the outcome is skipped.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/typing.html#typing.Union

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/exceptions.html#BaseException

   (5) https://docs.python.org/3/library/typing.html#typing.Tuple

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/stdtypes.html#str

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/typing.html#typing.List

   (11) https://docs.python.org/3/library/typing.html#typing.Tuple

   (12) https://docs.python.org/3/library/stdtypes.html#str

   (13) https://docs.python.org/3/library/stdtypes.html#str

   (14) https://docs.python.org/3/library/stdtypes.html#str

   (15) https://docs.python.org/3/library/stdtypes.html#str

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/functions.html#bool

   (18) https://docs.python.org/3/library/functions.html#bool

   (19) https://docs.python.org/3/library/stdtypes.html#str

   (20) https://docs.python.org/3/library/typing.html#typing.Optional

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/stdtypes.html#str

   (23) https://docs.python.org/3/library/functions.html#bool

   (24) https://docs.python.org/3/library/functions.html#bool


File: pytest.info,  Node: Config,  Next: ExceptionInfo,  Prev: CollectReport,  Up: Objects

26.6.5 Config
-------------

 -- Class: final class Config

     Access to configuration values, pluginmanager and plugin hooks.


     Parameters:

        * ‘pluginmanager’ (*note PytestPluginManager: 16c.) – A pytest
          PluginManager.

        * ‘invocation_params’ (*note InvocationParams: 330.) – Object
          containing parameters regarding the *note pytest.main(): 1e1.
          invocation.

      -- Class: final class InvocationParams (args, plugins, dir)

          Holds parameters passed during *note pytest.main(): 1e1.

          The object attributes are read-only.

          New in version 5.1.

               Note: Note that the environment variable ‘PYTEST_ADDOPTS’
               and the ‘addopts’ ini option are handled by pytest, not
               being included in the ‘args’ attribute.

               Plugins accessing ‘InvocationParams’ must be aware of
               that.

           -- Attribute: args: Tuple(1)[str(2), ...]

               The command-line arguments as passed to *note
               pytest.main(): 1e1.

           -- Attribute: plugins:
                    Optional(3)[Sequence(4)[Union(5)[str(6),
                    object(7)]]]

               Extra plugins, might be ‘None’.

           -- Attribute: dir: Path(8)

               The directory from which *note pytest.main(): 1e1. was
               invoked.

      -- Attribute: option

          Access to command line option as attributes.


          Type: argparse.Namespace(9)

      -- Attribute: invocation_params

          The parameters with which pytest was invoked.


          Type: *note InvocationParams: 330.

      -- Attribute: pluginmanager

          The plugin manager handles plugin registration and hook
          invocation.


          Type: *note PytestPluginManager: 16c.

      -- Attribute: stash

          A place where plugins can store information on the config for
          their own use.


          Type: *note Stash: 338.

      -- Property: rootpath: Path(10)

          The path to the *note rootdir: 1c4.


          Type: pathlib.Path(11)

          New in version 6.1.

      -- Property: inipath: Optional(12)[Path(13)]

          The path to the *note configfile: 1c5.


          Type: Optional[pathlib.Path(14)]

          New in version 6.1.

      -- Method: add_cleanup (func)

          Add a function to be called when the config object gets out of
          use (usually coinciding with pytest_unconfigure).

      -- Method: classmethod fromdictargs (option_dict, args)

          Constructor usable for subprocesses.

      -- Method: issue_config_time_warning (warning, stacklevel)

          Issue and handle a warning during the “configure” stage.

          During ‘pytest_configure’ we can’t capture warnings using the
          ‘catch_warnings_for_item’ function because it is not possible
          to have hookwrappers around ‘pytest_configure’.

          This function is mainly intended for plugins that need to
          issue warnings during ‘pytest_configure’ (or similar stages).


          Parameters:

             * ‘warning’ (Warning(15)) – The warning instance.

             * ‘stacklevel’ (int(16)) – stacklevel forwarded to
               warnings.warn.

      -- Method: addinivalue_line (name, line)

          Add a line to an ini-file option.  The option must have been
          declared but might not yet be set in which case the line
          becomes the first line in its value.

      -- Method: getini (name)

          Return configuration value from an *note ini file: 1c5.

          If the specified name hasn’t been registered through a prior
          *note parser.addini: 29a. call (usually from a plugin), a
          ValueError is raised.

      -- Method: getoption (name, default=<NOTSET>, skip=False)

          Return command line option value.


          Parameters:

             * ‘name’ (str(17)) – Name of the option.  You may also
               specify the literal ‘--OPT’ option instead of the “dest”
               option name.

             * ‘default’ – Default value if no option of that name
               exists.

             * ‘skip’ (bool(18)) – If True, raise pytest.skip if option
               does not exists or has a None value.

      -- Method: getvalue (name, path=None)

          Deprecated, use getoption() instead.

      -- Method: getvalueorskip (name, path=None)

          Deprecated, use getoption(skip=True) instead.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.Tuple

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/typing.html#typing.Optional

   (4) https://docs.python.org/3/library/typing.html#typing.Sequence

   (5) https://docs.python.org/3/library/typing.html#typing.Union

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/functions.html#object

   (8) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (9) 
https://docs.python.org/3/library/argparse.html#argparse.Namespace

   (10) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (11) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (12) https://docs.python.org/3/library/typing.html#typing.Optional

   (13) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (14) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (15) https://docs.python.org/3/library/exceptions.html#Warning

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/stdtypes.html#str

   (18) https://docs.python.org/3/library/functions.html#bool


File: pytest.info,  Node: ExceptionInfo,  Next: ExitCode,  Prev: Config,  Up: Objects

26.6.6 ExceptionInfo
--------------------

 -- Class: final class ExceptionInfo

     Wraps sys.exc_info() objects and offers help for navigating the
     traceback.

      -- Method: classmethod from_exc_info (exc_info, exprinfo=None)

          Return an ExceptionInfo for an existing exc_info tuple.

               Warning: Experimental API


          Parameters: ‘exprinfo’ (Optional(1)‘[’str(2)‘]’) – A text
          string helping to determine if we should strip
          ‘AssertionError’ from the output.  Defaults to the exception
          message/‘__str__()’.

      -- Method: classmethod from_current (exprinfo=None)

          Return an ExceptionInfo matching the current traceback.

               Warning: Experimental API


          Parameters: ‘exprinfo’ (Optional(3)‘[’str(4)‘]’) – A text
          string helping to determine if we should strip
          ‘AssertionError’ from the output.  Defaults to the exception
          message/‘__str__()’.

      -- Method: classmethod for_later ()

          Return an unfilled ExceptionInfo.

      -- Method: fill_unfilled (exc_info)

          Fill an unfilled ExceptionInfo created with ‘for_later()’.

      -- Property: type: Type(5)[E]

          The exception class.

      -- Property: value: E

          The exception value.

      -- Property: tb: TracebackType(6)

          The exception raw traceback.

      -- Property: typename: str(7)

          The type name of the exception.

      -- Property: traceback: Traceback

          The traceback.

      -- Method: exconly (tryshort=False)

          Return the exception as a string.

          When ‘tryshort’ resolves to True, and the exception is an
          AssertionError, only the actual exception part of the
          exception representation is returned (so ‘AssertionError: ‘ is
          removed from the beginning).

      -- Method: errisinstance (exc)

          Return True if the exception is an instance of exc.

          Consider using ‘isinstance(excinfo.value, exc)’ instead.

      -- Method: getrepr (showlocals=False, style='long', abspath=False,
               tbfilter=True, funcargs=False, truncate_locals=True,
               chain=True)

          Return str()able representation of this exception info.


          Parameters:

             * ‘showlocals’ (bool(8)) – Show locals per traceback entry.
               Ignored if ‘style=="native"’.

             * ‘style’ (str(9)) – long|short|no|native|value traceback
               style.

             * ‘abspath’ (bool(10)) – If paths should be changed to
               absolute or left unchanged.

             * ‘tbfilter’ (bool(11)) – Hide entries that contain a local
               variable ‘__tracebackhide__==True’.  Ignored if
               ‘style=="native"’.

             * ‘funcargs’ (bool(12)) – Show fixtures (“funcargs” for
               legacy purposes) per traceback entry.

             * ‘truncate_locals’ (bool(13)) – With ‘showlocals==True’,
               make sure locals can be safely represented as strings.

             * ‘chain’ (bool(14)) – If chained exceptions in Python 3
               should be shown.

          Changed in version 3.9: Added the ‘chain’ parameter.

      -- Method: match (regexp)

          Check whether the regular expression ‘regexp’ matches the
          string representation of the exception using re.search()(15).

          If it matches ‘True’ is returned, otherwise an
          ‘AssertionError’ is raised.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.Optional

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/typing.html#typing.Optional

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/typing.html#typing.Type

   (6) https://docs.python.org/3/library/types.html#types.TracebackType

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/functions.html#bool

   (11) https://docs.python.org/3/library/functions.html#bool

   (12) https://docs.python.org/3/library/functions.html#bool

   (13) https://docs.python.org/3/library/functions.html#bool

   (14) https://docs.python.org/3/library/functions.html#bool

   (15) https://docs.python.org/3/library/re.html#re.search


File: pytest.info,  Node: ExitCode,  Next: File,  Prev: ExceptionInfo,  Up: Objects

26.6.7 ExitCode
---------------

 -- Class: final class ExitCode (value)

     Encodes the valid exit codes by pytest.

     Currently users and plugins may supply other exit codes as well.

     New in version 5.0.

      -- Attribute: OK = 0

          Tests passed.

      -- Attribute: TESTS_FAILED = 1

          Tests failed.

      -- Attribute: INTERRUPTED = 2

          pytest was interrupted.

      -- Attribute: INTERNAL_ERROR = 3

          An internal error got in the way.

      -- Attribute: USAGE_ERROR = 4

          pytest was misused.

      -- Attribute: NO_TESTS_COLLECTED = 5

          pytest couldn’t find tests.


File: pytest.info,  Node: File,  Next: FixtureDef,  Prev: ExitCode,  Up: Objects

26.6.8 File
-----------

 -- Class: File

     Bases: *note FSCollector: 356.

     Base class for collecting tests from a file.

     *note Working with non-python tests: 357.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: path: Path(1)

          Filesystem path where this node was collected from (can be
          None).

      -- Attribute: fspath: LocalPath

          A ‘LEGACY_PATH’ copy of the *note path: 35c. attribute.
          Intended for usage for methods not migrated to ‘pathlib.Path’
          yet, such as *note Item.reportinfo(): 314.  Will be deprecated
          in a future release, prefer using *note path: 35c. instead.

      -- Attribute: keywords: MutableMapping(2)[str(3), Any(4)]

          Keywords/markers collected from all scopes.

      -- Attribute: own_markers: List(5)[*note Mark: 1fc.]

          The marker objects belonging to this node.

      -- Attribute: extra_keyword_matches: Set(6)[str(7)]

          Allow adding of extra keywords to use for matching.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (2) 
https://docs.python.org/3/library/typing.html#typing.MutableMapping

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/typing.html#typing.Any

   (5) https://docs.python.org/3/library/typing.html#typing.List

   (6) https://docs.python.org/3/library/typing.html#typing.Set

   (7) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: FixtureDef,  Next: FSCollector,  Prev: File,  Up: Objects

26.6.9 FixtureDef
-----------------

 -- Class: final class FixtureDef

     Bases: Generic(1)[‘FixtureValue’]

     A container for a fixture definition.

      -- Property: scope: _ScopeName

          Scope string, one of “function”, “class”, “module”, “package”,
          “session”.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.Generic


File: pytest.info,  Node: FSCollector,  Next: Function,  Prev: FixtureDef,  Up: Objects

26.6.10 FSCollector
-------------------

 -- Class: FSCollector

     Bases: *note Collector: 244.

      -- Attribute: path: Path(1)

          Filesystem path where this node was collected from (can be
          None).

      -- Method: classmethod from_parent (parent, *, fspath=None,
               path=None, **kw)

          The public constructor.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: fspath: LocalPath

          A ‘LEGACY_PATH’ copy of the *note path: 365. attribute.
          Intended for usage for methods not migrated to ‘pathlib.Path’
          yet, such as ‘Item.reportinfo()’.  Will be deprecated in a
          future release, prefer using *note path: 365. instead.

      -- Attribute: keywords: MutableMapping(2)[str(3), Any(4)]

          Keywords/markers collected from all scopes.

      -- Attribute: own_markers: List(5)[*note Mark: 1fc.]

          The marker objects belonging to this node.

      -- Attribute: extra_keyword_matches: Set(6)[str(7)]

          Allow adding of extra keywords to use for matching.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (2) 
https://docs.python.org/3/library/typing.html#typing.MutableMapping

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/typing.html#typing.Any

   (5) https://docs.python.org/3/library/typing.html#typing.List

   (6) https://docs.python.org/3/library/typing.html#typing.Set

   (7) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: Function,  Next: FunctionDefinition,  Prev: FSCollector,  Up: Objects

26.6.11 Function
----------------

 -- Class: Function

     Bases: ‘PyobjMixin’, *note Item: 172.

     An Item responsible for setting up and executing a Python test
     function.


     Parameters:

        * ‘name’ – The full function name, including any decorations
          like those added by parametrization (‘my_func[my_param]’).

        * ‘parent’ – The parent Node.

        * ‘config’ – The pytest Config object.

        * ‘callspec’ – If given, this is function has been parametrized
          and the callspec contains meta information about the
          parametrization.

        * ‘callobj’ – If given, the object which will be called when the
          Function is invoked, otherwise the callobj will be obtained
          from ‘parent’ using ‘originalname’.

        * ‘keywords’ – Keywords bound to the function object for “-k”
          matching.

        * ‘session’ – The pytest Session object.

        * ‘fixtureinfo’ – Fixture information already resolved at this
          fixture node..

        * ‘originalname’ – The attribute name to use for accessing the
          underlying function object.  Defaults to ‘name’.  Set this if
          name is different from the original name, for example when it
          contains decorations like those added by parametrization
          (‘my_func[my_param]’).

      -- Attribute: originalname

          Original function name, without any decorations (for example
          parametrization adds a ‘"[...]"’ suffix to function names),
          used to access the underlying function object from ‘parent’
          (in case ‘callobj’ is not given explicitly).

          New in version 3.0.

      -- Method: classmethod from_parent (parent, **kw)

          The public constructor.

      -- Property: function

          Underlying python ‘function’ object.

      -- Method: runtest ()

          Execute the underlying test function.

      -- Method: repr_failure (excinfo)

          Return a representation of a collection or test failure.

          See also
          ........

          *note Working with non-python tests: 357.


          Parameters: ‘excinfo’ (*note ExceptionInfo:
          32.‘[’BaseException(1)‘]’) – Exception information for the
          failure.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: path: Path

          Filesystem path where this node was collected from (can be
          None).

      -- Attribute: fspath: LocalPath

          A ‘LEGACY_PATH’ copy of the *note path: 37a. attribute.
          Intended for usage for methods not migrated to ‘pathlib.Path’
          yet, such as *note Item.reportinfo(): 314.  Will be deprecated
          in a future release, prefer using *note path: 37a. instead.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#BaseException


File: pytest.info,  Node: FunctionDefinition,  Next: Item,  Prev: Function,  Up: Objects

26.6.12 FunctionDefinition
--------------------------

 -- Class: FunctionDefinition

     Bases: *note Function: 370.

     This class is a step gap solution until we evolve to have actual
     function definition nodes and manage to get rid of ‘metafunc’.

      -- Method: runtest ()

          Execute the underlying test function.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: path: Path

          Filesystem path where this node was collected from (can be
          None).

      -- Method: setup ()

          Execute the underlying test function.

      -- Attribute: fspath: LocalPath

          A ‘LEGACY_PATH’ copy of the *note path: 383. attribute.
          Intended for usage for methods not migrated to ‘pathlib.Path’
          yet, such as ‘Item.reportinfo()’.  Will be deprecated in a
          future release, prefer using *note path: 383. instead.

      -- Attribute: user_properties: List[Tuple[str(1), object(2)]]

          A list of tuples (name, value) that holds user defined
          properties for this test.

      -- Attribute: keywords: MutableMapping[str(3), Any]

          Keywords/markers collected from all scopes.

      -- Attribute: own_markers: List[*note Mark: 1fc.]

          The marker objects belonging to this node.

      -- Attribute: extra_keyword_matches: Set[str(4)]

          Allow adding of extra keywords to use for matching.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#object

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: Item,  Next: MarkDecorator,  Prev: FunctionDefinition,  Up: Objects

26.6.13 Item
------------

 -- Class: Item

     Bases: *note Node: 316.

     A basic test invocation item.

     Note that for a single function there might be multiple test
     invocation items.

      -- Attribute: user_properties: List(1)[Tuple(2)[str(3),
               object(4)]]

          A list of tuples (name, value) that holds user defined
          properties for this test.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: path: Path(5)

          Filesystem path where this node was collected from (can be
          None).

      -- Attribute: fspath: LocalPath

          A ‘LEGACY_PATH’ copy of the *note path: 390. attribute.
          Intended for usage for methods not migrated to ‘pathlib.Path’
          yet, such as *note Item.reportinfo(): 314.  Will be deprecated
          in a future release, prefer using *note path: 390. instead.

      -- Method: runtest ()

          Run the test case for this item.

          Must be implemented by subclasses.

          See also
          ........

          *note Working with non-python tests: 357.

      -- Method: add_report_section (when, key, content)

          Add a new report section, similar to what’s done internally to
          add stdout and stderr captured output:

               item.add_report_section("call", "stdout", "report section contents")


          Parameters:

             * ‘when’ (str(6)) – One of the possible capture states,
               ‘"setup"’, ‘"call"’, ‘"teardown"’.

             * ‘key’ (str(7)) – Name of the section, can be customized
               at will.  Pytest uses ‘"stdout"’ and ‘"stderr"’
               internally.

             * ‘content’ (str(8)) – The full contents as a string.

      -- Method: reportinfo ()

          Get location information for this item for test reports.

          Returns a tuple with three elements:

             - The path of the test (default ‘self.path’)

             - The line number of the test (default ‘None’)

             - A name of the test to be shown (default ‘""’)

          See also
          ........

          *note Working with non-python tests: 357.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.List

   (2) https://docs.python.org/3/library/typing.html#typing.Tuple

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/functions.html#object

   (5) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: MarkDecorator,  Next: MarkGenerator,  Prev: Item,  Up: Objects

26.6.14 MarkDecorator
---------------------

 -- Class: MarkDecorator

     A decorator for applying a mark on test functions and classes.

     ‘MarkDecorators’ are created with ‘pytest.mark’:

          mark1 = pytest.mark.NAME              # Simple MarkDecorator
          mark2 = pytest.mark.NAME(name1=value) # Parametrized MarkDecorator

     and can then be applied as decorators to test functions:

          @mark2
          def test_function():
              pass

     When a ‘MarkDecorator’ is called, it does the following:

       1. If called with a single class as its only positional argument
          and no additional keyword arguments, it attaches the mark to
          the class so it gets applied automatically to all test cases
          found in that class.

       2. If called with a single function as its only positional
          argument and no additional keyword arguments, it attaches the
          mark to the function, containing all the arguments already
          stored internally in the ‘MarkDecorator’.

       3. When called in any other case, it returns a new
          ‘MarkDecorator’ instance with the original ‘MarkDecorator’’s
          content updated with the arguments passed to this call.

     Note: The rules above prevent a ‘MarkDecorator’ from storing only a
     single function or class reference as its positional argument with
     no additional keyword or positional arguments.  You can work around
     this by using ‘with_args()’.

      -- Property: name: str(1)

          Alias for mark.name.

      -- Property: args: Tuple(2)[Any(3), ...]

          Alias for mark.args.

      -- Property: kwargs: Mapping(4)[str(5), Any(6)]

          Alias for mark.kwargs.

      -- Method: with_args (*args, **kwargs)

          Return a MarkDecorator with extra arguments added.

          Unlike calling the MarkDecorator, with_args() can be used even
          if the sole argument is a callable/class.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/typing.html#typing.Tuple

   (3) https://docs.python.org/3/library/typing.html#typing.Any

   (4) https://docs.python.org/3/library/typing.html#typing.Mapping

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/typing.html#typing.Any


File: pytest.info,  Node: MarkGenerator,  Next: Mark,  Prev: MarkDecorator,  Up: Objects

26.6.15 MarkGenerator
---------------------

 -- Class: final class MarkGenerator

     Factory for *note MarkDecorator: 27b. objects - exposed as a
     ‘pytest.mark’ singleton instance.

     Example:

          import pytest

          @pytest.mark.slowtest
          def test_function():
             pass

     applies a ‘slowtest’ *note Mark: 1fc. on ‘test_function’.


File: pytest.info,  Node: Mark,  Next: Metafunc,  Prev: MarkGenerator,  Up: Objects

26.6.16 Mark
------------

 -- Class: final class Mark

      -- Attribute: name: str(1)

          Name of the mark.

      -- Attribute: args: Tuple(2)[Any(3), ...]

          Positional arguments of the mark decorator.

      -- Attribute: kwargs: Mapping(4)[str(5), Any(6)]

          Keyword arguments of the mark decorator.

      -- Method: combined_with (other)

          Return a new Mark which is a combination of this Mark and
          another Mark.

          Combines by appending args and merging kwargs.


          Parameters: ‘other’ (*note Mark: 1fc.) – The mark to combine
          with.


          Return type: *note Mark: 1fc.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/typing.html#typing.Tuple

   (3) https://docs.python.org/3/library/typing.html#typing.Any

   (4) https://docs.python.org/3/library/typing.html#typing.Mapping

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/typing.html#typing.Any


File: pytest.info,  Node: Metafunc,  Next: Module,  Prev: Mark,  Up: Objects

26.6.17 Metafunc
----------------

 -- Class: final class Metafunc

     Objects passed to the *note pytest_generate_tests: 2b4. hook.

     They help to inspect a test function and to generate tests
     according to test configuration or values specified in the class or
     module where a test function is defined.

      -- Attribute: definition

          Access to the underlying *note
          _pytest.python.FunctionDefinition: 37d.

      -- Attribute: config

          Access to the *note pytest.Config: 39. object for the test
          session.

      -- Attribute: module

          The module object where the test function is defined in.

      -- Attribute: function

          Underlying Python test function.

      -- Attribute: fixturenames

          Set of fixture names required by the test function.

      -- Attribute: cls

          Class object where the test function is defined in or ‘None’.

      -- Method: parametrize (argnames, argvalues, indirect=False,
               ids=None, scope=None, *, _param_mark=None)

          Add new invocations to the underlying test function using the
          list of argvalues for the given argnames.  Parametrization is
          performed during the collection phase.  If you need to setup
          expensive resources see about setting indirect to do it rather
          than at test setup time.

          Can be called multiple times, in which case each call
          parametrizes all previous parametrizations, e.g.

               unparametrized:         t
               parametrize ["x", "y"]: t[x], t[y]
               parametrize [1, 2]:     t[x-1], t[x-2], t[y-1], t[y-2]


          Parameters:

             * ‘argnames’ (Union(1)‘[’str(2)‘, ’List(3)‘[’str(4)‘]’‘,
               ’Tuple(5)‘[’str(6)‘, ’‘...’‘]’‘]’) – A comma-separated
               string denoting one or more argument names, or a
               list/tuple of argument strings.

             * ‘argvalues’ (Iterable(7)‘[’Union(8)‘[’‘ParameterSet’‘,
               ’Sequence(9)‘[’object(10)‘]’‘, ’object(11)‘]’‘]’) – The
               list of argvalues determines how often a test is invoked
               with different argument values.

               If only one argname was specified argvalues is a list of
               values.  If N argnames were specified, argvalues must be
               a list of N-tuples, where each tuple-element specifies a
               value for its respective argname.

             * ‘indirect’ (Union(12)‘[’bool(13)‘,
               ’Sequence(14)‘[’str(15)‘]’‘]’) – A list of arguments’
               names (subset of argnames) or a boolean.  If True the
               list contains all names from the argnames.  Each argvalue
               corresponding to an argname in this list will be passed
               as request.param to its respective argname fixture
               function so that it can perform more expensive setups
               during the setup phase of a test rather than at
               collection time.

             * ‘ids’
               (Optional(16)‘[’Union(17)‘[’Iterable(18)‘[’Optional(19)‘[’object(20)‘]’‘]’‘,
               ’Callable(21)‘[’‘[’Any(22)‘]’‘,
               ’Optional(23)‘[’object(24)‘]’‘]’‘]’‘]’) – Sequence of (or
               generator for) ids for ‘argvalues’, or a callable to
               return part of the id for each argvalue.

               With sequences (and generators like ‘itertools.count()’)
               the returned ids should be of type ‘string’, ‘int’,
               ‘float’, ‘bool’, or ‘None’.  They are mapped to the
               corresponding index in ‘argvalues’.  ‘None’ means to use
               the auto-generated id.

               If it is a callable it will be called for each entry in
               ‘argvalues’, and the return value is used as part of the
               auto-generated id for the whole set (where parts are
               joined with dashes (“-“)).  This is useful to provide
               more specific ids for certain items, e.g.  dates.
               Returning ‘None’ will use an auto-generated id.

               If no ids are provided they will be generated
               automatically from the argvalues.

             * ‘scope’ (‘Optional’‘[’‘_ScopeName’‘]’) – If specified it
               denotes the scope of the parameters.  The scope is used
               for grouping tests by parameter instances.  It will also
               override any fixture-function defined scope, allowing to
               set a dynamic scope using test context or configuration.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.Union

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/typing.html#typing.List

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/typing.html#typing.Tuple

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/typing.html#typing.Iterable

   (8) https://docs.python.org/3/library/typing.html#typing.Union

   (9) https://docs.python.org/3/library/typing.html#typing.Sequence

   (10) https://docs.python.org/3/library/functions.html#object

   (11) https://docs.python.org/3/library/functions.html#object

   (12) https://docs.python.org/3/library/typing.html#typing.Union

   (13) https://docs.python.org/3/library/functions.html#bool

   (14) https://docs.python.org/3/library/typing.html#typing.Sequence

   (15) https://docs.python.org/3/library/stdtypes.html#str

   (16) https://docs.python.org/3/library/typing.html#typing.Optional

   (17) https://docs.python.org/3/library/typing.html#typing.Union

   (18) https://docs.python.org/3/library/typing.html#typing.Iterable

   (19) https://docs.python.org/3/library/typing.html#typing.Optional

   (20) https://docs.python.org/3/library/functions.html#object

   (21) https://docs.python.org/3/library/typing.html#typing.Callable

   (22) https://docs.python.org/3/library/typing.html#typing.Any

   (23) https://docs.python.org/3/library/typing.html#typing.Optional

   (24) https://docs.python.org/3/library/functions.html#object


File: pytest.info,  Node: Module,  Next: Node,  Prev: Metafunc,  Up: Objects

26.6.18 Module
--------------

 -- Class: Module

     Bases: *note File: 355, ‘PyCollector’

     Collector for test classes and functions.

      -- Method: collect ()

          Return a list of children (items and collectors) for this
          collection node.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: path: Path

          Filesystem path where this node was collected from (can be
          None).

      -- Attribute: fspath: LocalPath

          A ‘LEGACY_PATH’ copy of the *note path: 3af. attribute.
          Intended for usage for methods not migrated to ‘pathlib.Path’
          yet, such as *note Item.reportinfo(): 314.  Will be deprecated
          in a future release, prefer using *note path: 3af. instead.

      -- Attribute: keywords: MutableMapping[str(1), Any]

          Keywords/markers collected from all scopes.

      -- Attribute: own_markers: List[*note Mark: 1fc.]

          The marker objects belonging to this node.

      -- Attribute: extra_keyword_matches: Set[str(2)]

          Allow adding of extra keywords to use for matching.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: pytest.info,  Node: Node,  Next: Parser,  Prev: Module,  Up: Objects

26.6.19 Node
------------

 -- Class: Node

     Base class for Collector and Item, the components of the test
     collection tree.

     Collector subclasses have children; Items are leaf nodes.

      -- Attribute: fspath: LocalPath

          A ‘LEGACY_PATH’ copy of the *note path: 3b6. attribute.
          Intended for usage for methods not migrated to ‘pathlib.Path’
          yet, such as ‘Item.reportinfo()’.  Will be deprecated in a
          future release, prefer using *note path: 3b6. instead.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: path: Path(1)

          Filesystem path where this node was collected from (can be
          None).

      -- Attribute: keywords: MutableMapping(2)[str(3), Any(4)]

          Keywords/markers collected from all scopes.

      -- Attribute: own_markers: List(5)[*note Mark: 1fc.]

          The marker objects belonging to this node.

      -- Attribute: extra_keyword_matches: Set(6)[str(7)]

          Allow adding of extra keywords to use for matching.

      -- Attribute: stash

          A place where plugins can store information on the node for
          their own use.


          Type: *note Stash: 338.

      -- Method: classmethod from_parent (parent, **kw)

          Public constructor for Nodes.

          This indirection got introduced in order to enable removing
          the fragile logic from the node constructors.

          Subclasses can use ‘super().from_parent(...)’ when overriding
          the construction.


          Parameters: ‘parent’ (*note Node: 316.) – The parent node of
          this Node.

      -- Property: ihook

          fspath-sensitive hook proxy used to call pytest hooks.

      -- Method: warn (warning)

          Issue a warning for this Node.

          Warnings will be displayed after the test session, unless
          explicitly suppressed.


          Parameters: ‘warning’ (Warning(8)) – The warning instance to
          issue.


          Raises: ValueError(9) – If ‘warning’ instance is not a
          subclass of Warning.

          Example usage:

               node.warn(PytestWarning("some message"))
               node.warn(UserWarning("some message"))

          Changed in version 6.2: Any subclass of Warning(10) is now
          accepted, rather than only *note PytestWarning: 3c1.
          subclasses.

      -- Property: nodeid: str(11)

          A ::-separated string denoting its collection tree address.

      -- Method: listchain ()

          Return list of all parent collectors up to self, starting from
          the root of collection tree.

      -- Method: add_marker (marker, append=True)

          Dynamically add a marker object to the node.


          Parameters: ‘append’ (bool(12)) – Whether to append the
          marker, or prepend it.

      -- Method: iter_markers (name=None)

          Iterate over all markers of the node.


          Parameters: ‘name’ (Optional(13)‘[’str(14)‘]’) – If given,
          filter the results by the name attribute.

      -- Method: for ... in iter_markers_with_node (name=None)

          Iterate over all markers of the node.


          Parameters: ‘name’ (Optional(15)‘[’str(16)‘]’) – If given,
          filter the results by the name attribute.


          Returns: An iterator of (node, mark) tuples.


          Return type: Iterator(17)[Tuple(18)[*note Node: 316, *note
          Mark: 1fc.]]

      -- Method: get_closest_marker (name: str) -> Optional[Mark]

      -- Method: get_closest_marker (name: str, default: Mark) -> Mark

          Return the first marker matching the name, from closest (for
          example function) to farther level (for example module level).


          Parameters:

             * ‘default’ – Fallback return value if no marker was found.

             * ‘name’ – Name to filter by.

      -- Method: listextrakeywords ()

          Return a set of all extra keywords in self and any parents.

      -- Method: addfinalizer (fin)

          Register a function to be called when this node is finalized.

          This method can only be called when this node is active in a
          setup chain, for example during self.setup().

      -- Method: getparent (cls)

          Get the next parent node (including self) which is an instance
          of the given class.

      -- Method: repr_failure (excinfo, style=None)

          Return a representation of a collection or test failure.

          See also
          ........

          *note Working with non-python tests: 357.


          Parameters: ‘excinfo’ (*note ExceptionInfo:
          32.‘[’BaseException(19)‘]’) – Exception information for the
          failure.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (2) 
https://docs.python.org/3/library/typing.html#typing.MutableMapping

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/typing.html#typing.Any

   (5) https://docs.python.org/3/library/typing.html#typing.List

   (6) https://docs.python.org/3/library/typing.html#typing.Set

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/exceptions.html#Warning

   (9) https://docs.python.org/3/library/exceptions.html#ValueError

   (10) https://docs.python.org/3/library/exceptions.html#Warning

   (11) https://docs.python.org/3/library/stdtypes.html#str

   (12) https://docs.python.org/3/library/functions.html#bool

   (13) https://docs.python.org/3/library/typing.html#typing.Optional

   (14) https://docs.python.org/3/library/stdtypes.html#str

   (15) https://docs.python.org/3/library/typing.html#typing.Optional

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/typing.html#typing.Iterator

   (18) https://docs.python.org/3/library/typing.html#typing.Tuple

   (19) https://docs.python.org/3/library/exceptions.html#BaseException


File: pytest.info,  Node: Parser,  Next: OptionGroup,  Prev: Node,  Up: Objects

26.6.20 Parser
--------------

 -- Class: final class Parser

     Parser for command line arguments and ini-file values.


     Variables: ‘extra_info’ – Dict of generic param -> value to display
     in case there’s an error processing the command line arguments.

      -- Method: getgroup (name, description='', after=None)

          Get (or create) a named option Group.


          Name: Name of the option group.


          Description: Long description for –help output.


          After: Name of another group, used for ordering –help output.

          The returned group object has an ‘addoption’ method with the
          same signature as *note parser.addoption: 299. but will be
          shown in the respective group in the output of ‘pytest.
          --help’.

      -- Method: addoption (*opts, **attrs)

          Register a command line option.


          Opts: Option names, can be short or long options.


          Attrs: Same attributes which the ‘add_argument()’ function of
          the argparse library(1) accepts.

          After command line parsing, options are available on the
          pytest config object via ‘config.option.NAME’ where ‘NAME’ is
          usually set by passing a ‘dest’ attribute, for example
          ‘addoption("--long", dest="NAME", ...)’.

      -- Method: parse_known_args (args, namespace=None)

          Parse and return a namespace object with known arguments at
          this point.

      -- Method: parse_known_and_unknown_args (args, namespace=None)

          Parse and return a namespace object with known arguments, and
          the remaining arguments unknown at this point.

      -- Method: addini (name, help, type=None, default=None)

          Register an ini-file option.


          Name: Name of the ini-variable.


          Type: Type of the variable.  Can be:

                  * ‘string’: a string

                  * ‘bool’: a boolean

                  * ‘args’: a list of strings, separated as in a shell

                  * ‘linelist’: a list of strings, separated by line
                    breaks

                  * ‘paths’: a list of pathlib.Path(2), separated as in
                    a shell

                  * ‘pathlist’: a list of ‘py.path’, separated as in a
                    shell

          New in version 7.0: The ‘paths’ variable type.

          Defaults to ‘string’ if ‘None’ or not passed.


          Default: Default value if no ini-file option exists but is
          queried.

          The value of ini-variables can be retrieved via a call to
          *note config.getini(name): 29c.

   ---------- Footnotes ----------

   (1) https://docs.python.org/library/argparse.html

   (2) https://docs.python.org/3/library/pathlib.html#pathlib.Path


File: pytest.info,  Node: OptionGroup,  Next: PytestPluginManager,  Prev: Parser,  Up: Objects

26.6.21 OptionGroup
-------------------

 -- Class: OptionGroup

     A group of options shown in its own section.

      -- Method: addoption (*optnames, **attrs)

          Add an option to this group.

          If a shortened version of a long option is specified, it will
          be suppressed in the help.  ‘addoption('--twowords',
          '--two-words')’ results in help showing ‘--two-words’ only,
          but ‘--twowords’ gets accepted ‘and’ the automatic destination
          is in ‘args.twowords’.


File: pytest.info,  Node: PytestPluginManager,  Next: Session,  Prev: OptionGroup,  Up: Objects

26.6.22 PytestPluginManager
---------------------------

 -- Class: final class PytestPluginManager

     Bases: ‘PluginManager’

     A pluggy.PluginManager(1) with additional pytest-specific
     functionality:

        * Loading plugins from the command line, ‘PYTEST_PLUGINS’ env
          variable and ‘pytest_plugins’ global variables found in
          plugins being loaded.

        * ‘conftest.py’ loading during start-up.

      -- Method: parse_hookimpl_opts (plugin, name)

      -- Method: parse_hookspec_opts (module_or_class, name)

      -- Method: register (plugin, name=None)

          Register a plugin and return its canonical name or ‘None’ if
          the name is blocked from registering.  Raise a ValueError(2)
          if the plugin is already registered.

      -- Method: getplugin (name)

      -- Method: hasplugin (name)

          Return whether a plugin with the given name is registered.

      -- Method: import_plugin (modname, consider_entry_points=False)

          Import a plugin with ‘modname’.

          If ‘consider_entry_points’ is True, entry point names are also
          considered to find a plugin.

      -- Method: add_hookcall_monitoring (before, after)

          add before/after tracing functions for all hooks and return an
          undo function which, when called, will remove the added
          tracers.

          ‘before(hook_name, hook_impls, kwargs)’ will be called ahead
          of all hook calls and receive a hookcaller instance, a list of
          HookImpl instances and the keyword arguments for the hook
          call.

          ‘after(outcome, hook_name, hook_impls, kwargs)’ receives the
          same arguments as ‘before’ but also a
          pluggy._callers._Result(3) object which represents the result
          of the overall hook call.

      -- Method: add_hookspecs (module_or_class)

          add new hook specifications defined in the given
          ‘module_or_class’.  Functions are recognized if they have been
          decorated accordingly.

      -- Method: check_pending ()

          Verify that all hooks which have not been verified against a
          hook specification are optional, otherwise raise
          ‘PluginValidationError’.

      -- Method: enable_tracing ()

          enable tracing of hook calls and return an undo function.

      -- Method: get_canonical_name (plugin)

          Return canonical name for a plugin object.  Note that a plugin
          may be registered under a different name which was specified
          by the caller of ‘register(plugin, name)’.  To obtain the name
          of an registered plugin use ‘get_name(plugin)’ instead.

      -- Method: get_hookcallers (plugin)

          get all hook callers for the specified plugin.

      -- Method: get_name (plugin)

          Return name for registered plugin or ‘None’ if not registered.

      -- Method: get_plugin (name)

          Return a plugin or ‘None’ for the given name.

      -- Method: get_plugins ()

          return the set of registered plugins.

      -- Method: has_plugin (name)

          Return ‘True’ if a plugin with the given name is registered.

      -- Method: is_blocked (name)

          return ‘True’ if the given plugin name is blocked.

      -- Method: is_registered (plugin)

          Return ‘True’ if the plugin is already registered.

      -- Method: list_name_plugin ()

          return list of name/plugin pairs.

      -- Method: list_plugin_distinfo ()

          return list of distinfo/plugin tuples for all setuptools
          registered plugins.

      -- Method: load_setuptools_entrypoints (group, name=None)

          Load modules from querying the specified setuptools ‘group’.


          Parameters:

             * ‘group’ (str(4)) – entry point group to load plugins

             * ‘name’ (str(5)) – if given, loads only plugins with the
               given ‘name’.


          Return type: int(6)


          Returns: return the number of loaded plugins by this call.

      -- Method: set_blocked (name)

          block registrations of the given name, unregister if already
          registered.

      -- Method: subset_hook_caller (name, remove_plugins)

          Return a new ‘_hooks._HookCaller’ instance for the named
          method which manages calls to all registered plugins except
          the ones from remove_plugins.

      -- Method: unregister (plugin=None, name=None)

          unregister a plugin object and all its contained hook
          implementations from internal data structures.

   ---------- Footnotes ----------

   (1) 
https://pluggy.readthedocs.io/en/stable/api_reference.html#pluggy.PluginManager

   (2) https://docs.python.org/3/library/exceptions.html#ValueError

   (3) 
https://pluggy.readthedocs.io/en/stable/api_reference.html#pluggy._callers._Result

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/functions.html#int


File: pytest.info,  Node: Session,  Next: TestReport,  Prev: PytestPluginManager,  Up: Objects

26.6.23 Session
---------------

 -- Class: final class Session

     Bases: *note FSCollector: 356.

      -- Exception: Interrupted

          Bases: KeyboardInterrupt(1)

          Signals that the test run was interrupted.

      -- Exception: Failed

          Bases: Exception(2)

          Signals a stop as failed test run.

      -- Property: startpath: Path(3)

          The path from which pytest was invoked.

          New in version 7.0.0.

      -- Method: perform_collect (args: Optional[Sequence[str]] = None,
               genitems: Literal[True] = True) -> Sequence[Item]

      -- Method: perform_collect (args: Optional[Sequence[str]] = None,
               genitems: bool = True) -> Sequence[Union[Item,
               Collector]]

          Perform the collection phase for this session.

          This is called by the default *note pytest_collection: 2aa.
          hook implementation; see the documentation of this hook for
          more details.  For testing purposes, it may also be called
          directly on a fresh ‘Session’.

          This function normally recursively expands any collectors
          collected from the session to their items, and only items are
          returned.  For testing purposes, this may be suppressed by
          passing ‘genitems=False’, in which case the return value
          contains these collectors unexpanded, and ‘session.items’ is
          empty.

      -- Method: for ... in collect ()

          Return a list of children (items and collectors) for this
          collection node.

      -- Attribute: name

          A unique name within the scope of the parent node.

      -- Attribute: parent

          The parent collector node.

      -- Attribute: config: *note Config: 39.

          The pytest config object.

      -- Attribute: session

          The pytest session this node is part of.

      -- Attribute: path: Path

          Filesystem path where this node was collected from (can be
          None).

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/exceptions.html#KeyboardInterrupt

   (2) https://docs.python.org/3/library/exceptions.html#Exception

   (3) https://docs.python.org/3/library/pathlib.html#pathlib.Path


File: pytest.info,  Node: TestReport,  Next: _Result,  Prev: Session,  Up: Objects

26.6.24 TestReport
------------------

 -- Class: final class TestReport

     Bases: ‘BaseReport’

     Basic test report object (also used for setup and teardown calls if
     they fail).

     Reports can contain arbitrary extra attributes.

      -- Attribute: nodeid: str(1)

          Normalized collection nodeid.

      -- Attribute: location: Optional(2)[Tuple(3)[str(4),
               Optional(5)[int(6)], str(7)]]

          A (filesystempath, lineno, domaininfo) tuple indicating the
          actual location of a test item - it might be different from
          the collected one e.g.  if a method is inherited from a
          different module.

      -- Attribute: keywords

          A name -> value dictionary containing all keywords and markers
          associated with a test invocation.

      -- Attribute: outcome: Literal['passed', 'failed', 'skipped']

          Test outcome, always one of “passed”, “failed”, “skipped”.

      -- Attribute: longrepr: Union(8)[None(9), *note ExceptionInfo:
               32.[BaseException(10)], Tuple(11)[str(12), int(13),
               str(14)], str(15), TerminalRepr]

          None or a failure representation.

      -- Attribute: when: Optional(16)[str(17)]

          One of ‘setup’, ‘call’, ‘teardown’ to indicate runtest phase.

      -- Attribute: user_properties

          User properties is a list of tuples (name, value) that holds
          user defined properties of the test.

      -- Attribute: sections: List(18)[Tuple(19)[str(20), str(21)]]

          Tuples of str ‘(heading, content)’ with extra information for
          the test report.  Used by pytest to add text captured from
          ‘stdout’, ‘stderr’, and intercepted logging events.  May be
          used by other plugins to add arbitrary information to reports.

      -- Attribute: duration

          Time it took to run just the test.

      -- Method: classmethod from_item_and_call (item, call)

          Create and fill a TestReport with standard item and call info.

      -- Property: caplog: str(22)

          Return captured log lines, if log capturing is enabled.

          New in version 3.5.

      -- Property: capstderr: str(23)

          Return captured text from stderr, if capturing is enabled.

          New in version 3.0.

      -- Property: capstdout: str(24)

          Return captured text from stdout, if capturing is enabled.

          New in version 3.0.

      -- Property: count_towards_summary: bool(25)

          ‘Experimental’ Whether this report should be counted towards
          the totals shown at the end of the test session: “1 passed, 1
          failure, etc”.

               Note: This function is considered ‘experimental’, so
               beware that it is subject to changes even in patch
               releases.

      -- Property: failed: bool(26)

          Whether the outcome is failed.

      -- Property: fspath: str(27)

          The path portion of the reported node, as a string.

      -- Property: head_line: Optional(28)[str(29)]

          ‘Experimental’ The head line shown with longrepr output for
          this report, more commonly during traceback representation
          during failures:

               ________ Test.foo ________

          In the example above, the head_line is “Test.foo”.

               Note: This function is considered ‘experimental’, so
               beware that it is subject to changes even in patch
               releases.

      -- Property: longreprtext: str(30)

          Read-only property that returns the full string representation
          of ‘longrepr’.

          New in version 3.0.

      -- Property: passed: bool(31)

          Whether the outcome is passed.

      -- Property: skipped: bool(32)

          Whether the outcome is skipped.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/typing.html#typing.Optional

   (3) https://docs.python.org/3/library/typing.html#typing.Tuple

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/typing.html#typing.Optional

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/typing.html#typing.Union

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/exceptions.html#BaseException

   (11) https://docs.python.org/3/library/typing.html#typing.Tuple

   (12) https://docs.python.org/3/library/stdtypes.html#str

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/stdtypes.html#str

   (15) https://docs.python.org/3/library/stdtypes.html#str

   (16) https://docs.python.org/3/library/typing.html#typing.Optional

   (17) https://docs.python.org/3/library/stdtypes.html#str

   (18) https://docs.python.org/3/library/typing.html#typing.List

   (19) https://docs.python.org/3/library/typing.html#typing.Tuple

   (20) https://docs.python.org/3/library/stdtypes.html#str

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/stdtypes.html#str

   (23) https://docs.python.org/3/library/stdtypes.html#str

   (24) https://docs.python.org/3/library/stdtypes.html#str

   (25) https://docs.python.org/3/library/functions.html#bool

   (26) https://docs.python.org/3/library/functions.html#bool

   (27) https://docs.python.org/3/library/stdtypes.html#str

   (28) https://docs.python.org/3/library/typing.html#typing.Optional

   (29) https://docs.python.org/3/library/stdtypes.html#str

   (30) https://docs.python.org/3/library/stdtypes.html#str

   (31) https://docs.python.org/3/library/functions.html#bool

   (32) https://docs.python.org/3/library/functions.html#bool


File: pytest.info,  Node: _Result,  Next: Stash,  Prev: TestReport,  Up: Objects

26.6.25 _Result
---------------

Result object used within *note hook wrappers: 167, see _Result in the
pluggy documentation(1) for more information.

   ---------- Footnotes ----------

   (1) 
https://pluggy.readthedocs.io/en/stable/api_reference.html#pluggy._callers._Result


File: pytest.info,  Node: Stash,  Prev: _Result,  Up: Objects

26.6.26 Stash
-------------

 -- Class: Stash

     ‘Stash’ is a type-safe heterogeneous mutable mapping that allows
     keys and value types to be defined separately from where it (the
     ‘Stash’) is created.

     Usually you will be given an object which has a ‘Stash’, for
     example *note Config: 39. or a *note Node: 316.:

          stash: Stash = some_object.stash

     If a module or plugin wants to store data in this ‘Stash’, it
     creates *note StashKey: 40c.s for its keys (at the module level):

          # At the top-level of the module
          some_str_key = StashKey[str]()
          some_bool_key = StashKey[bool]()

     To store information:

          # Value type must match the key.
          stash[some_str_key] = "value"
          stash[some_bool_key] = True

     To retrieve the information:

          # The static type of some_str is str.
          some_str = stash[some_str_key]
          # The static type of some_bool is bool.
          some_bool = stash[some_bool_key]

      -- Method: __setitem__ (key, value)

          Set a value for key.

      -- Method: __getitem__ (key)

          Get the value for key.

          Raises ‘KeyError’ if the key wasn’t set before.

      -- Method: get (key, default)

          Get the value for key, or return default if the key wasn’t set
          before.

      -- Method: setdefault (key, default)

          Return the value of key if already set, otherwise set the
          value of key to default and return default.

      -- Method: __delitem__ (key)

          Delete the value for key.

          Raises ‘KeyError’ if the key wasn’t set before.

      -- Method: __contains__ (key)

          Return whether key was set.

      -- Method: __len__ ()

          Return how many items exist in the stash.

 -- Class: StashKey

     Bases: Generic(1)[‘T’]

     ‘StashKey’ is an object used as a key to a *note Stash: 338.

     A ‘StashKey’ is associated with the type ‘T’ of the value of the
     key.

     A ‘StashKey’ is unique and cannot conflict with another key.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/typing.html#typing.Generic


File: pytest.info,  Node: Global Variables,  Next: Environment Variables,  Prev: Objects,  Up: API Reference<2>

26.7 Global Variables
=====================

pytest treats some global variables in a special manner when defined in
a test module or ‘conftest.py’ files.

 -- Global Variable Interpreted By Pytest: collect_ignore

‘Tutorial’: *note Customizing test collection: 12a.

Can be declared in ‘conftest.py files’ to exclude test directories or
modules.  Needs to be a list of paths (‘str’, pathlib.Path(1) or any
os.PathLike(2)).

     collect_ignore = ["setup.py"]

 -- Global Variable Interpreted By Pytest: collect_ignore_glob

‘Tutorial’: *note Customizing test collection: 12a.

Can be declared in ‘conftest.py files’ to exclude test directories or
modules with Unix shell-style wildcards.  Needs to be ‘list[str]’ where
‘str’ can contain glob patterns.

     collect_ignore_glob = ["*_ignore.py"]

 -- Global Variable Interpreted By Pytest: pytest_plugins

‘Tutorial’: *note Requiring/Loading plugins in a test module or conftest
file: 141.

Can be declared at the ‘global’ level in ‘test modules’ and ‘conftest.py
files’ to register additional plugins.  Can be either a ‘str’ or
‘Sequence[str]’.

     pytest_plugins = "myapp.testsupport.myplugin"

     pytest_plugins = ("myapp.testsupport.tools", "myapp.testsupport.regression")

 -- Global Variable Interpreted By Pytest: pytestmark

‘Tutorial’: *note Marking whole classes or modules: 417.

Can be declared at the ‘global’ level in ‘test modules’ to apply one or
more *note marks: 7f. to all test functions and methods.  Can be either
a single mark or a list of marks (applied in left-to-right order).

     import pytest

     pytestmark = pytest.mark.webtest

     import pytest

     pytestmark = [pytest.mark.integration, pytest.mark.slow]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (2) https://docs.python.org/3/library/os.html#os.PathLike


File: pytest.info,  Node: Environment Variables,  Next: Exceptions,  Prev: Global Variables,  Up: API Reference<2>

26.8 Environment Variables
==========================

Environment variables that can be used to change pytest’s behavior.

 -- Environment Variable: PYTEST_ADDOPTS

This contains a command-line (parsed by the py:mod:‘shlex’ module) that
will be ‘prepended’ to the command line given by the user, see *note
Builtin configuration file options: 1cb. for more information.

 -- Environment Variable: PYTEST_CURRENT_TEST

This is not meant to be set by users, but is set by pytest internally
with the name of the current test so other processes can inspect it, see
*note PYTEST_CURRENT_TEST environment variable: 41b. for more
information.

 -- Environment Variable: PYTEST_DEBUG

When set, pytest will print tracing and debug information.

 -- Environment Variable: PYTEST_DISABLE_PLUGIN_AUTOLOAD

When set, disables plugin auto-loading through setuptools entrypoints.
Only explicitly specified plugins will be loaded.

 -- Environment Variable: PYTEST_PLUGINS

Contains comma-separated list of modules that should be loaded as
plugins:

     export PYTEST_PLUGINS=mymodule.plugin,xdist

 -- Environment Variable: PYTEST_THEME

Sets a pygment style(1) to use for the code output.

 -- Environment Variable: PYTEST_THEME_MODE

Sets the *note PYTEST_THEME: 1ce. to be either ‘dark’ or ‘light’.

 -- Environment Variable: PY_COLORS

When set to ‘1’, pytest will use color in terminal output.  When set to
‘0’, pytest will not use color.  ‘PY_COLORS’ takes precedence over
‘NO_COLOR’ and ‘FORCE_COLOR’.

 -- Environment Variable: NO_COLOR

When set (regardless of value), pytest will not use color in terminal
output.  ‘PY_COLORS’ takes precedence over ‘NO_COLOR’, which takes
precedence over ‘FORCE_COLOR’.  See no-color.org(2) for other libraries
supporting this community standard.

 -- Environment Variable: FORCE_COLOR

When set (regardless of value), pytest will use color in terminal
output.  ‘PY_COLORS’ and ‘NO_COLOR’ take precedence over ‘FORCE_COLOR’.

   ---------- Footnotes ----------

   (1) https://pygments.org/docs/styles/

   (2) https://no-color.org/


File: pytest.info,  Node: Exceptions,  Next: Warnings,  Prev: Environment Variables,  Up: API Reference<2>

26.9 Exceptions
===============

 -- Class: final class UsageError

     Bases: Exception(1)

     Error in pytest usage or invocation.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#Exception


File: pytest.info,  Node: Warnings,  Next: Configuration Options,  Prev: Exceptions,  Up: API Reference<2>

26.10 Warnings
==============

Custom warnings generated in some situations such as improper usage or
deprecated features.

 -- Class: PytestWarning

     Bases: UserWarning(1)

     Base class for all warnings emitted by pytest.

 -- Class: PytestAssertRewriteWarning

     Bases: *note PytestWarning: 3c1.

     Warning emitted by the pytest assert rewrite module.

 -- Class: PytestCacheWarning

     Bases: *note PytestWarning: 3c1.

     Warning emitted by the cache plugin in various situations.

 -- Class: PytestCollectionWarning

     Bases: *note PytestWarning: 3c1.

     Warning emitted when pytest is not able to collect a file or symbol
     in a module.

 -- Class: PytestConfigWarning

     Bases: *note PytestWarning: 3c1.

     Warning emitted for configuration issues.

 -- Class: PytestDeprecationWarning

     Bases: *note PytestWarning: 3c1, DeprecationWarning(2)

     Warning class for features that will be removed in a future
     version.

 -- Class: PytestExperimentalApiWarning

     Bases: *note PytestWarning: 3c1, FutureWarning(3)

     Warning category used to denote experiments in pytest.

     Use sparingly as the API might change or even be removed completely
     in a future version.

 -- Class: PytestUnhandledCoroutineWarning

     Bases: *note PytestWarning: 3c1.

     Warning emitted for an unhandled coroutine.

     A coroutine was encountered when collecting test functions, but was
     not handled by any async-aware plugin.  Coroutine test functions
     are not natively supported.

 -- Class: PytestUnknownMarkWarning

     Bases: *note PytestWarning: 3c1.

     Warning emitted on use of unknown markers.

     See *note How to mark test functions with attributes: 14. for
     details.

 -- Class: PytestUnraisableExceptionWarning

     Bases: *note PytestWarning: 3c1.

     An unraisable exception was reported.

     Unraisable exceptions are exceptions raised in __del__(4)
     implementations and similar situations when the exception cannot be
     raised as normal.

 -- Class: PytestUnhandledThreadExceptionWarning

     Bases: *note PytestWarning: 3c1.

     An unhandled exception occurred in a Thread(5).

     Such exceptions don’t propagate normally.

Consult the *note Internal pytest warnings: 116. section in the
documentation for more information.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#UserWarning

   (2) 
https://docs.python.org/3/library/exceptions.html#DeprecationWarning

   (3) https://docs.python.org/3/library/exceptions.html#FutureWarning

   (4) https://docs.python.org/3/reference/datamodel.html#object.__del__

   (5) https://docs.python.org/3/library/threading.html#threading.Thread


File: pytest.info,  Node: Configuration Options,  Next: Command-line Flags,  Prev: Warnings,  Up: API Reference<2>

26.11 Configuration Options
===========================

Here is a list of builtin configuration options that may be written in a
‘pytest.ini’ (or ‘.pytest.ini’), ‘pyproject.toml’, ‘tox.ini’, or
‘setup.cfg’ file, usually located at the root of your repository.

To see each file format in details, see *note Configuration file
formats: 1bd.

     Warning: Usage of ‘setup.cfg’ is not recommended except for very
     simple use cases.  ‘.cfg’ files use a different parser than
     ‘pytest.ini’ and ‘tox.ini’ which might cause hard to track down
     problems.  When possible, it is recommended to use the latter
     files, or ‘pyproject.toml’, to hold your pytest configuration.

Configuration options may be overwritten in the command-line by using
‘-o/--override-ini’, which can also be passed multiple times.  The
expected format is ‘name=value’.  For example:

     pytest -o console_output_style=classic -o cache_dir=/tmp/mycache

 -- Configuration Value: addopts

     Add the specified ‘OPTS’ to the set of command line arguments as if
     they had been specified by the user.  Example: if you have this ini
     file content:

          # content of pytest.ini
          [pytest]
          addopts = --maxfail=2 -rf  # exit after 2 failures, report fail info

     issuing ‘pytest test_hello.py’ actually means:

          pytest --maxfail=2 -rf test_hello.py

     Default is to add no options.

 -- Configuration Value: cache_dir

     Sets a directory where stores content of cache plugin.  Default
     directory is ‘.pytest_cache’ which is created in *note rootdir:
     1c4.  Directory may be relative or absolute path.  If setting
     relative path, then directory is created relative to *note rootdir:
     1c4.  Additionally path may contain environment variables, that
     will be expanded.  For more information about cache plugin please
     refer to *note How to re-run failed tests and maintain state
     between test runs: cf.

 -- Configuration Value: console_output_style

     Sets the console output style while running tests:

        * ‘classic’: classic pytest output.

        * ‘progress’: like classic pytest output, but with a progress
          indicator.

        * ‘count’: like progress, but shows progress as the number of
          tests completed instead of a percent.

     The default is ‘progress’, but you can fallback to ‘classic’ if you
     prefer or the new mode is causing unexpected problems:

          # content of pytest.ini
          [pytest]
          console_output_style = classic

 -- Configuration Value: doctest_encoding

     Default encoding to use to decode text files with docstrings.
     *note See how pytest handles doctests: be.

 -- Configuration Value: doctest_optionflags

     One or more doctest flag names from the standard ‘doctest’ module.
     *note See how pytest handles doctests: be.

 -- Configuration Value: empty_parameter_set_mark

     Allows to pick the action for empty parametersets in
     parameterization

        * ‘skip’ skips tests with an empty parameterset (default)

        * ‘xfail’ marks tests with an empty parameterset as
          xfail(run=False)

        * ‘fail_at_collect’ raises an exception if parametrize collects
          an empty parameter set

          # content of pytest.ini
          [pytest]
          empty_parameter_set_mark = xfail

          Note: The default value of this option is planned to change to
          ‘xfail’ in future releases as this is considered less error
          prone, see issue #3155(1) for more details.

 -- Configuration Value: faulthandler_timeout

     Dumps the tracebacks of all threads if a test takes longer than ‘X’
     seconds to run (including fixture setup and teardown).  Implemented
     using the faulthandler.dump_traceback_later()(2) function, so all
     caveats there apply.

          # content of pytest.ini
          [pytest]
          faulthandler_timeout=5

     For more information please refer to faulthandler.

 -- Configuration Value: filterwarnings

     Sets a list of filters and actions that should be taken for matched
     warnings.  By default all warnings emitted during the test session
     will be displayed in a summary at the end of the test session.

          # content of pytest.ini
          [pytest]
          filterwarnings =
              error
              ignore::DeprecationWarning

     This tells pytest to ignore deprecation warnings and turn all other
     warnings into errors.  For more information please refer to *note
     How to capture warnings: fa.

 -- Configuration Value: junit_duration_report

     New in version 4.1.

     Configures how durations are recorded into the JUnit XML report:

        * ‘total’ (the default): duration times reported include setup,
          call, and teardown times.

        * ‘call’: duration times reported include only call times,
          excluding setup and teardown.

          [pytest]
          junit_duration_report = call

 -- Configuration Value: junit_family

     New in version 4.2.

     Changed in version 6.1: Default changed to ‘xunit2’.

     Configures the format of the generated JUnit XML file.  The
     possible options are:

        * ‘xunit1’ (or ‘legacy’): produces old style output, compatible
          with the xunit 1.0 format.

        * ‘xunit2’: produces xunit 2.0 style output(3), which should be
          more compatible with latest Jenkins versions.  ‘This is the
          default’.

          [pytest]
          junit_family = xunit2

 -- Configuration Value: junit_logging

     New in version 3.5.

     Changed in version 5.4: ‘log’, ‘all’, ‘out-err’ options added.

     Configures if captured output should be written to the JUnit XML
     file.  Valid values are:

        * ‘log’: write only ‘logging’ captured output.

        * ‘system-out’: write captured ‘stdout’ contents.

        * ‘system-err’: write captured ‘stderr’ contents.

        * ‘out-err’: write both captured ‘stdout’ and ‘stderr’ contents.

        * ‘all’: write captured ‘logging’, ‘stdout’ and ‘stderr’
          contents.

        * ‘no’ (the default): no captured output is written.

          [pytest]
          junit_logging = system-out

 -- Configuration Value: junit_log_passing_tests

     New in version 4.6.

     If ‘junit_logging != "no"’, configures if the captured output
     should be written to the JUnit XML file for ‘passing’ tests.
     Default is ‘True’.

          [pytest]
          junit_log_passing_tests = False

 -- Configuration Value: junit_suite_name

     To set the name of the root test suite xml item, you can configure
     the ‘junit_suite_name’ option in your config file:

          [pytest]
          junit_suite_name = my_suite

 -- Configuration Value: log_auto_indent

     Allow selective auto-indentation of multiline log messages.

     Supports command line option ‘--log-auto-indent [value]’ and config
     option ‘log_auto_indent = [value]’ to set the auto-indentation
     behavior for all logging.

     ‘[value]’ can be:

             * True or “On” - Dynamically auto-indent multiline log
               messages

             * False or “Off” or 0 - Do not auto-indent multiline log
               messages (the default behavior)

             * [positive integer] - auto-indent multiline log messages
               by [value] spaces

          [pytest]
          log_auto_indent = False

     Supports passing kwarg ‘extra={"auto_indent": [value]}’ to calls to
     ‘logging.log()’ to specify auto-indentation behavior for a specific
     entry in the log.  ‘extra’ kwarg overrides the value specified on
     the command line or in the config.

 -- Configuration Value: log_cli

     Enable log display during test run (also known as *note “live
     logging”: e5.).  The default is ‘False’.

          [pytest]
          log_cli = True

 -- Configuration Value: log_cli_date_format

     Sets a time.strftime()(4)-compatible string that will be used when
     formatting dates for live logging.

          [pytest]
          log_cli_date_format = %Y-%m-%d %H:%M:%S

     For more information, see *note Live Logs: e5.

 -- Configuration Value: log_cli_format

     Sets a logging(5)-compatible string used to format live logging
     messages.

          [pytest]
          log_cli_format = %(asctime)s %(levelname)s %(message)s

     For more information, see *note Live Logs: e5.

 -- Configuration Value: log_cli_level

     Sets the minimum log message level that should be captured for live
     logging.  The integer value or the names of the levels can be used.

          [pytest]
          log_cli_level = INFO

     For more information, see *note Live Logs: e5.

 -- Configuration Value: log_date_format

     Sets a time.strftime()(6)-compatible string that will be used when
     formatting dates for logging capture.

          [pytest]
          log_date_format = %Y-%m-%d %H:%M:%S

     For more information, see *note How to manage logging: e1.

 -- Configuration Value: log_file

     Sets a file name relative to the current working directory where
     log messages should be written to, in addition to the other logging
     facilities that are active.

          [pytest]
          log_file = logs/pytest-logs.txt

     For more information, see *note How to manage logging: e1.

 -- Configuration Value: log_file_date_format

     Sets a time.strftime()(7)-compatible string that will be used when
     formatting dates for the logging file.

          [pytest]
          log_file_date_format = %Y-%m-%d %H:%M:%S

     For more information, see *note How to manage logging: e1.

 -- Configuration Value: log_file_format

     Sets a logging(8)-compatible string used to format logging messages
     redirected to the logging file.

          [pytest]
          log_file_format = %(asctime)s %(levelname)s %(message)s

     For more information, see *note How to manage logging: e1.

 -- Configuration Value: log_file_level

     Sets the minimum log message level that should be captured for the
     logging file.  The integer value or the names of the levels can be
     used.

          [pytest]
          log_file_level = INFO

     For more information, see *note How to manage logging: e1.

 -- Configuration Value: log_format

     Sets a logging(9)-compatible string used to format captured logging
     messages.

          [pytest]
          log_format = %(asctime)s %(levelname)s %(message)s

     For more information, see *note How to manage logging: e1.

 -- Configuration Value: log_level

     Sets the minimum log message level that should be captured for
     logging capture.  The integer value or the names of the levels can
     be used.

          [pytest]
          log_level = INFO

     For more information, see *note How to manage logging: e1.

 -- Configuration Value: markers

     When the ‘--strict-markers’ or ‘--strict’ command-line arguments
     are used, only known markers - defined in code by core pytest or
     some plugin - are allowed.

     You can list additional markers in this setting to add them to the
     whitelist, in which case you probably want to add
     ‘--strict-markers’ to ‘addopts’ to avoid future regressions:

          [pytest]
          addopts = --strict-markers
          markers =
              slow
              serial

          Note: The use of ‘--strict-markers’ is highly preferred.
          ‘--strict’ was kept for backward compatibility only and may be
          confusing for others as it only applies to markers and not to
          other options.

 -- Configuration Value: minversion

     Specifies a minimal pytest version required for running tests.

          # content of pytest.ini
          [pytest]
          minversion = 3.0  # will fail if we run with pytest-2.8

 -- Configuration Value: norecursedirs

     Set the directory basename patterns to avoid when recursing for
     test discovery.  The individual (fnmatch-style) patterns are
     applied to the basename of a directory to decide if to recurse into
     it.  Pattern matching characters:

          *       matches everything
          ?       matches any single character
          [seq]   matches any character in seq
          [!seq]  matches any char not in seq

     Default patterns are ‘'*.egg'’, ‘'.*'’, ‘'_darcs'’, ‘'build'’,
     ‘'CVS'’, ‘'dist'’, ‘'node_modules'’, ‘'venv'’, ‘'{arch}'’.  Setting
     a ‘norecursedirs’ replaces the default.  Here is an example of how
     to avoid certain directories:

          [pytest]
          norecursedirs = .svn _build tmp*

     This would tell ‘pytest’ to not look into typical subversion or
     sphinx-build directories or into any ‘tmp’ prefixed directory.

     Additionally, ‘pytest’ will attempt to intelligently identify and
     ignore a virtualenv by the presence of an activation script.  Any
     directory deemed to be the root of a virtual environment will not
     be considered during test collection unless
     ‘‑‑collect‑in‑virtualenv’ is given.  Note also that ‘norecursedirs’
     takes precedence over ‘‑‑collect‑in‑virtualenv’; e.g.  if you
     intend to run tests in a virtualenv with a base directory that
     matches ‘'.*'’ you ‘must’ override ‘norecursedirs’ in addition to
     using the ‘‑‑collect‑in‑virtualenv’ flag.

 -- Configuration Value: python_classes

     One or more name prefixes or glob-style patterns determining which
     classes are considered for test collection.  Search for multiple
     glob patterns by adding a space between patterns.  By default,
     pytest will consider any class prefixed with ‘Test’ as a test
     collection.  Here is an example of how to collect tests from
     classes that end in ‘Suite’:

          [pytest]
          python_classes = *Suite

     Note that ‘unittest.TestCase’ derived classes are always collected
     regardless of this option, as ‘unittest’’s own collection framework
     is used to collect those tests.

 -- Configuration Value: python_files

     One or more Glob-style file patterns determining which python files
     are considered as test modules.  Search for multiple glob patterns
     by adding a space between patterns:

          [pytest]
          python_files = test_*.py check_*.py example_*.py

     Or one per line:

          [pytest]
          python_files =
              test_*.py
              check_*.py
              example_*.py

     By default, files matching ‘test_*.py’ and ‘*_test.py’ will be
     considered test modules.

 -- Configuration Value: python_functions

     One or more name prefixes or glob-patterns determining which test
     functions and methods are considered tests.  Search for multiple
     glob patterns by adding a space between patterns.  By default,
     pytest will consider any function prefixed with ‘test’ as a test.
     Here is an example of how to collect test functions and methods
     that end in ‘_test’:

          [pytest]
          python_functions = *_test

     Note that this has no effect on methods that live on a
     ‘unittest.TestCase’ derived class, as ‘unittest’’s own collection
     framework is used to collect those tests.

     See *note Changing naming conventions: 448. for more detailed
     examples.

 -- Configuration Value: pythonpath

     Sets list of directories that should be added to the python search
     path.  Directories will be added to the head of sys.path(10).
     Similar to the PYTHONPATH(11) environment variable, the directories
     will be included in where Python will look for imported modules.
     Paths are relative to the *note rootdir: 1c4. directory.
     Directories remain in path for the duration of the test session.

          [pytest]
          pythonpath = src1 src2

 -- Configuration Value: required_plugins

     A space separated list of plugins that must be present for pytest
     to run.  Plugins can be listed with or without version specifiers
     directly following their name.  Whitespace between different
     version specifiers is not allowed.  If any one of the plugins is
     not found, emit an error.

          [pytest]
          required_plugins = pytest-django>=3.0.0,<4.0.0 pytest-html pytest-xdist>=1.0.0

 -- Configuration Value: testpaths

     Sets list of directories that should be searched for tests when no
     specific directories, files or test ids are given in the command
     line when executing pytest from the *note rootdir: 1c4. directory.
     File system paths may use shell-style wildcards, including the
     recursive ‘**’ pattern.  Useful when all project tests are in a
     known location to speed up test collection and to avoid picking up
     undesired tests by accident.

          [pytest]
          testpaths = testing doc

     This tells pytest to only look for tests in ‘testing’ and ‘doc’
     directories when executing from the root directory.

 -- Configuration Value: usefixtures

     List of fixtures that will be applied to all test functions; this
     is semantically the same to apply the ‘@pytest.mark.usefixtures’
     marker to all test functions.

          [pytest]
          usefixtures =
              clean_db

 -- Configuration Value: xfail_strict

     If set to ‘True’, tests marked with ‘@pytest.mark.xfail’ that
     actually succeed will by default fail the test suite.  For more
     information, see *note strict parameter: 135.

          [pytest]
          xfail_strict = True

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3155

   (2) 
https://docs.python.org/3/library/faulthandler.html#faulthandler.dump_traceback_later

   (3) 
https://github.com/jenkinsci/xunit-plugin/blob/xunit-2.3.2/src/main/resources/org/jenkinsci/plugins/xunit/types/model/xsd/junit-10.xsd

   (4) https://docs.python.org/3/library/time.html#time.strftime

   (5) https://docs.python.org/3/library/logging.html#module-logging

   (6) https://docs.python.org/3/library/time.html#time.strftime

   (7) https://docs.python.org/3/library/time.html#time.strftime

   (8) https://docs.python.org/3/library/logging.html#module-logging

   (9) https://docs.python.org/3/library/logging.html#module-logging

   (10) https://docs.python.org/3/library/sys.html#sys.path

   (11) https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH


File: pytest.info,  Node: Command-line Flags,  Prev: Configuration Options,  Up: API Reference<2>

26.12 Command-line Flags
========================

All the command-line flags can be obtained by running ‘pytest --help’:

     $ pytest --help
     usage: pytest [options] [file_or_dir] [file_or_dir] [...]

     Positional arguments:
       file_or_dir

     General:
       -k EXPRESSION         Only run tests which match the given substring
                             expression. An expression is a python evaluatable
                             expression where all names are substring-matched
                             against test names and their parent classes.
                             Example: -k 'test_method or test_other' matches all
                             test functions and classes whose name contains
                             'test_method' or 'test_other', while -k 'not
                             test_method' matches those that don't contain
                             'test_method' in their names. -k 'not test_method
                             and not test_other' will eliminate the matches.
                             Additionally keywords are matched to classes and
                             functions containing extra names in their
                             'extra_keyword_matches' set, as well as functions
                             which have names assigned directly to them. The
                             matching is case-insensitive.
       -m MARKEXPR           Only run tests matching given mark expression.
                             For example: -m 'mark1 and not mark2'.
       --markers             Show markers (builtin, plugin and per-project ones)
       -x, --exitfirst       Exit instantly on first error or failed test
       --fixtures, --funcargs
                             Show available fixtures, sorted by plugin appearance
                             (fixtures with leading '_' are only shown with '-v')
       --fixtures-per-test   Show fixtures per test
       --pdb                 Start the interactive Python debugger on errors or
                             KeyboardInterrupt
       --pdbcls=modulename:classname
                             Specify a custom interactive Python debugger for use
                             with --pdb. For example:
                             --pdbcls=IPython.terminal.debugger:TerminalPdb
       --trace               Immediately break when running each test
       --capture=method      Per-test capturing method: one of fd|sys|no|tee-sys.
       -s                    Shortcut for --capture=no.
       --runxfail            Report the results of xfail tests as if they were
                             not marked
       --lf, --last-failed   Rerun only the tests that failed at the last run (or
                             all if none failed)
       --ff, --failed-first  Run all tests, but run the last failures first
                             This may re-order tests and thus lead to repeated
                             fixture setup/teardown
       --nf, --new-first     Run tests from new files first, then the rest of the
                             tests sorted by file mtime
       --cache-show=[CACHESHOW]
                             Show cache contents, don't perform collection or
                             tests. Optional argument: glob (default: '*').
       --cache-clear         Remove all cache contents at start of test run
       --lfnf={all,none}, --last-failed-no-failures={all,none}
                             Which tests to run with no previously (known)
                             failures
       --sw, --stepwise      Exit on test failure and continue from last failing
                             test next time
       --sw-skip, --stepwise-skip
                             Ignore the first failing test but stop on the next
                             failing test.
                             implicitly enables --stepwise.

     Reporting:
       --durations=N         show N slowest setup/test durations (N=0 for all)
       --durations-min=N     Minimal duration in seconds for inclusion in slowest
                             list. Default: 0.005.
       -v, --verbose         Increase verbosity
       --no-header           Disable header
       --no-summary          Disable summary
       -q, --quiet           Decrease verbosity
       --verbosity=VERBOSE   Set verbosity. Default: 0.
       -r chars              Show extra test summary info as specified by chars:
                             (f)ailed, (E)rror, (s)kipped, (x)failed, (X)passed,
                             (p)assed, (P)assed with output, (a)ll except passed
                             (p/P), or (A)ll. (w)arnings are enabled by default
                             (see --disable-warnings), 'N' can be used to reset
                             the list. (default: 'fE').
       --disable-warnings, --disable-pytest-warnings
                             Disable warnings summary
       -l, --showlocals      Show locals in tracebacks (disabled by default)
       --tb=style            Traceback print mode
                             (auto/long/short/line/native/no).
       --show-capture={no,stdout,stderr,log,all}
                             Controls how captured stdout/stderr/log is shown on
                             failed tests. Default: all.
       --full-trace          Don't cut any tracebacks (default is to cut)
       --color=color         Color terminal output (yes/no/auto)
       --code-highlight={yes,no}
                             Whether code should be highlighted (only if --color
                             is also enabled). Default: yes.
       --pastebin=mode       Send failed|all info to bpaste.net pastebin service
       --junit-xml=path      Create junit-xml style report file at given path
       --junit-prefix=str    Prepend prefix to classnames in junit-xml output

     pytest-warnings:
       -W PYTHONWARNINGS, --pythonwarnings=PYTHONWARNINGS
                             Set which warnings to report, see -W option of
                             Python itself
       --maxfail=num         Exit after first num failures or errors
       --strict-config       Any warnings encountered while parsing the `pytest`
                             section of the configuration file raise errors
       --strict-markers      Markers not registered in the `markers` section of
                             the configuration file raise errors
       --strict              (Deprecated) alias to --strict-markers
       -c file               Load configuration from `file` instead of trying to
                             locate one of the implicit configuration files
       --continue-on-collection-errors
                             Force test execution even if collection errors
                             occur
       --rootdir=ROOTDIR     Define root directory for tests. Can be relative
                             path: 'root_dir', './root_dir',
                             'root_dir/another_dir/'; absolute path:
                             '/home/user/root_dir'; path with variables:
                             '$HOME/root_dir'.

     Collection:
       --collect-only, --co  Only collect tests, don't execute them
       --pyargs              Try to interpret all arguments as Python packages
       --ignore=path         Ignore path during collection (multi-allowed)
       --ignore-glob=path    Ignore path pattern during collection (multi-
                             allowed)
       --deselect=nodeid_prefix
                             Deselect item (via node id prefix) during collection
                             (multi-allowed)
       --confcutdir=dir      Only load conftest.py's relative to specified dir
       --noconftest          Don't load any conftest.py files
       --keep-duplicates     Keep duplicate tests
       --collect-in-virtualenv
                             Don't ignore tests in a local virtualenv directory
       --import-mode={prepend,append,importlib}
                             Prepend/append to sys.path when importing test
                             modules and conftest files. Default: prepend.
       --doctest-modules     Run doctests in all .py modules
       --doctest-report={none,cdiff,ndiff,udiff,only_first_failure}
                             Choose another output format for diffs on doctest
                             failure
       --doctest-glob=pat    Doctests file matching pattern, default: test*.txt
       --doctest-ignore-import-errors
                             Ignore doctest ImportErrors
       --doctest-continue-on-failure
                             For a given doctest, continue to run after the first
                             failure

     Test session debugging and configuration:
       --basetemp=dir        Base temporary directory for this test run. (Warning:
                             this directory is removed if it exists.)
       -V, --version         Display pytest version and information about
                             plugins. When given twice, also display information
                             about plugins.
       -h, --help            Show help message and configuration info
       -p name               Early-load given plugin module name or entry point
                             (multi-allowed)
                             To avoid loading of plugins, use the `no:` prefix,
                             e.g. `no:doctest`
       --trace-config        Trace considerations of conftest.py files
       --debug=[DEBUG_FILE_NAME]
                             Store internal tracing debug information in this log
                             file.
                             This file is opened with 'w' and truncated as a
                             result, care advised.
                             Default: pytestdebug.log.
       -o OVERRIDE_INI, --override-ini=OVERRIDE_INI
                             Override ini option with "option=value" style, e.g.
                             `-o xfail_strict=True -o cache_dir=cache`
       --assert=MODE         Control assertion debugging tools.
                             'plain' performs no assertion debugging.
                             'rewrite' (the default) rewrites assert statements
                             in test modules on import to provide assert
                             expression information.
       --setup-only          Only setup fixtures, do not execute tests
       --setup-show          Show setup of fixtures while executing tests
       --setup-plan          Show what fixtures and tests would be executed but
                             don't execute anything

     Logging:
       --log-level=LEVEL     Level of messages to catch/display.
                             Not set by default, so it depends on the root/parent
                             log handler's effective level, where it is "WARNING"
                             by default.
       --log-format=LOG_FORMAT
                             Log format used by the logging module
       --log-date-format=LOG_DATE_FORMAT
                             Log date format used by the logging module
       --log-cli-level=LOG_CLI_LEVEL
                             CLI logging level
       --log-cli-format=LOG_CLI_FORMAT
                             Log format used by the logging module
       --log-cli-date-format=LOG_CLI_DATE_FORMAT
                             Log date format used by the logging module
       --log-file=LOG_FILE   Path to a file when logging will be written to
       --log-file-level=LOG_FILE_LEVEL
                             Log file logging level
       --log-file-format=LOG_FILE_FORMAT
                             Log format used by the logging module
       --log-file-date-format=LOG_FILE_DATE_FORMAT
                             Log date format used by the logging module
       --log-auto-indent=LOG_AUTO_INDENT
                             Auto-indent multiline messages passed to the logging
                             module. Accepts true|on, false|off or an integer.

     [pytest] ini-options in the first pytest.ini|tox.ini|setup.cfg file found:

       markers (linelist):   Markers for test functions
       empty_parameter_set_mark (string):
                             Default marker for empty parametersets
       norecursedirs (args): Directory patterns to avoid for recursion
       testpaths (args):     Directories to search for tests when no files or
                             directories are given in the command line
       filterwarnings (linelist):
                             Each line specifies a pattern for
                             warnings.filterwarnings. Processed after
                             -W/--pythonwarnings.
       usefixtures (args):   List of default fixtures to be used with this
                             project
       python_files (args):  Glob-style file patterns for Python test module
                             discovery
       python_classes (args):
                             Prefixes or glob names for Python test class
                             discovery
       python_functions (args):
                             Prefixes or glob names for Python test function and
                             method discovery
       disable_test_id_escaping_and_forfeit_all_rights_to_community_support (bool):
                             Disable string escape non-ASCII characters, might
                             cause unwanted side effects(use at your own risk)
       console_output_style (string):
                             Console output: "classic", or with additional
                             progress information ("progress" (percentage) |
                             "count")
       xfail_strict (bool):  Default for the strict parameter of xfail markers
                             when not given explicitly (default: False)
       enable_assertion_pass_hook (bool):
                             Enables the pytest_assertion_pass hook. Make sure to
                             delete any previously generated pyc cache files.
       junit_suite_name (string):
                             Test suite name for JUnit report
       junit_logging (string):
                             Write captured log messages to JUnit report: one of
                             no|log|system-out|system-err|out-err|all
       junit_log_passing_tests (bool):
                             Capture log information for passing tests to JUnit
                             report:
       junit_duration_report (string):
                             Duration time to report: one of total|call
       junit_family (string):
                             Emit XML for schema: one of legacy|xunit1|xunit2
       doctest_optionflags (args):
                             Option flags for doctests
       doctest_encoding (string):
                             Encoding used for doctest files
       cache_dir (string):   Cache directory path
       log_level (string):   Default value for --log-level
       log_format (string):  Default value for --log-format
       log_date_format (string):
                             Default value for --log-date-format
       log_cli (bool):       Enable log display during test run (also known as
                             "live logging")
       log_cli_level (string):
                             Default value for --log-cli-level
       log_cli_format (string):
                             Default value for --log-cli-format
       log_cli_date_format (string):
                             Default value for --log-cli-date-format
       log_file (string):    Default value for --log-file
       log_file_level (string):
                             Default value for --log-file-level
       log_file_format (string):
                             Default value for --log-file-format
       log_file_date_format (string):
                             Default value for --log-file-date-format
       log_auto_indent (string):
                             Default value for --log-auto-indent
       pythonpath (paths):   Add paths to sys.path
       faulthandler_timeout (string):
                             Dump the traceback of all threads if a test takes
                             more than TIMEOUT seconds to finish
       addopts (args):       Extra command line options
       minversion (string):  Minimally required pytest version
       required_plugins (args):
                             Plugins that must be present for pytest to run

     Environment variables:
       PYTEST_ADDOPTS           Extra command line options
       PYTEST_PLUGINS           Comma-separated plugins to load during startup
       PYTEST_DISABLE_PLUGIN_AUTOLOAD Set to disable plugin auto-loading
       PYTEST_DEBUG             Set to enable debug tracing of pytest's internals


     to see available markers type: pytest --markers
     to see available fixtures type: pytest --fixtures
     (shown according to specified file_or_dir or current dir if not specified; fixtures with leading '_' are only shown with the '-v' option


File: pytest.info,  Node: Anatomy of a test,  Next: About fixtures,  Prev: API Reference<2>,  Up: Top

27 Anatomy of a test
********************

In the simplest terms, a test is meant to look at the result of a
particular behavior, and make sure that result aligns with what you
would expect.  Behavior is not something that can be empirically
measured, which is why writing tests can be challenging.

“Behavior” is the way in which some system ‘acts in response’ to a
particular situation and/or stimuli.  But exactly ‘how’ or ‘why’
something is done is not quite as important as ‘what’ was done.

You can think of a test as being broken down into four steps:

  1. ‘Arrange’

  2. ‘Act’

  3. ‘Assert’

  4. ‘Cleanup’

‘Arrange’ is where we prepare everything for our test.  This means
pretty much everything except for the “‘act’”.  It’s lining up the
dominoes so that the ‘act’ can do its thing in one, state-changing step.
This can mean preparing objects, starting/killing services, entering
records into a database, or even things like defining a URL to query,
generating some credentials for a user that doesn’t exist yet, or just
waiting for some process to finish.

‘Act’ is the singular, state-changing action that kicks off the
‘behavior’ we want to test.  This behavior is what carries out the
changing of the state of the system under test (SUT), and it’s the
resulting changed state that we can look at to make a judgement about
the behavior.  This typically takes the form of a function/method call.

‘Assert’ is where we look at that resulting state and check if it looks
how we’d expect after the dust has settled.  It’s where we gather
evidence to say the behavior does or does not aligns with what we
expect.  The ‘assert’ in our test is where we take that
measurement/observation and apply our judgement to it.  If something
should be green, we’d say ‘assert thing == "green"’.

‘Cleanup’ is where the test picks up after itself, so other tests aren’t
being accidentally influenced by it.

At its core, the test is ultimately the ‘act’ and ‘assert’ steps, with
the ‘arrange’ step only providing the context.  ‘Behavior’ exists
between ‘act’ and ‘assert’.


File: pytest.info,  Node: About fixtures,  Next: Good Integration Practices,  Prev: Anatomy of a test,  Up: Top

28 About fixtures
*****************

See also
........

*note How to use fixtures: 41.

See also
........

*note Fixtures reference: 44.

pytest fixtures are designed to be explicit, modular and scalable.

* Menu:

* What fixtures are::
* Improvements over xUnit-style setup/teardown functions::
* Fixture errors::
* Sharing test data::
* A note about fixture cleanup::


File: pytest.info,  Node: What fixtures are,  Next: Improvements over xUnit-style setup/teardown functions,  Up: About fixtures

28.1 What fixtures are
======================

In testing, a fixture(1) provides a defined, reliable and consistent
context for the tests.  This could include environment (for example a
database configured with known parameters) or content (such as a
dataset).

Fixtures define the steps and data that constitute the ‘arrange’ phase
of a test (see *note Anatomy of a test: 451.).  In pytest, they are
functions you define that serve this purpose.  They can also be used to
define a test’s ‘act’ phase; this is a powerful technique for designing
more complex tests.

The services, state, or other operating environments set up by fixtures
are accessed by test functions through arguments.  For each fixture used
by a test function there is typically a parameter (named after the
fixture) in the test function’s definition.

We can tell pytest that a particular function is a fixture by decorating
it with *note @pytest.fixture: 50.  Here’s a simple example of what a
fixture in pytest might look like:

     import pytest


     class Fruit:
         def __init__(self, name):
             self.name = name

         def __eq__(self, other):
             return self.name == other.name


     @pytest.fixture
     def my_fruit():
         return Fruit("apple")


     @pytest.fixture
     def fruit_basket(my_fruit):
         return [Fruit("banana"), my_fruit]


     def test_my_fruit_in_basket(my_fruit, fruit_basket):
         assert my_fruit in fruit_basket

Tests don’t have to be limited to a single fixture, either.  They can
depend on as many fixtures as you want, and fixtures can use other
fixtures, as well.  This is where pytest’s fixture system really shines.

   ---------- Footnotes ----------

   (1) https://en.wikipedia.org/wiki/Test_fixture#Software


File: pytest.info,  Node: Improvements over xUnit-style setup/teardown functions,  Next: Fixture errors,  Prev: What fixtures are,  Up: About fixtures

28.2 Improvements over xUnit-style setup/teardown functions
===========================================================

pytest fixtures offer dramatic improvements over the classic xUnit style
of setup/teardown functions:

   * fixtures have explicit names and are activated by declaring their
     use from test functions, modules, classes or whole projects.

   * fixtures are implemented in a modular manner, as each fixture name
     triggers a ‘fixture function’ which can itself use other fixtures.

   * fixture management scales from simple unit to complex functional
     testing, allowing to parametrize fixtures and tests according to
     configuration and component options, or to re-use fixtures across
     function, class, module or whole test session scopes.

   * teardown logic can be easily, and safely managed, no matter how
     many fixtures are used, without the need to carefully handle errors
     by hand or micromanage the order that cleanup steps are added.

In addition, pytest continues to support *note How to implement
xunit-style set-up: 191.  You can mix both styles, moving incrementally
from classic to new style, as you prefer.  You can also start out from
existing *note unittest.TestCase style: 17b. or *note nose based: 188.
projects.


File: pytest.info,  Node: Fixture errors,  Next: Sharing test data,  Prev: Improvements over xUnit-style setup/teardown functions,  Up: About fixtures

28.3 Fixture errors
===================

pytest does its best to put all the fixtures for a given test in a
linear order so that it can see which fixture happens first, second,
third, and so on.  If an earlier fixture has a problem, though, and
raises an exception, pytest will stop executing fixtures for that test
and mark the test as having an error.

When a test is marked as having an error, it doesn’t mean the test
failed, though.  It just means the test couldn’t even be attempted
because one of the things it depends on had a problem.

This is one reason why it’s a good idea to cut out as many unnecessary
dependencies as possible for a given test.  That way a problem in
something unrelated isn’t causing us to have an incomplete picture of
what may or may not have issues.

Here’s a quick example to help explain:

     import pytest


     @pytest.fixture
     def order():
         return []


     @pytest.fixture
     def append_first(order):
         order.append(1)


     @pytest.fixture
     def append_second(order, append_first):
         order.extend([2])


     @pytest.fixture(autouse=True)
     def append_third(order, append_second):
         order += [3]


     def test_order(order):
         assert order == [1, 2, 3]

If, for whatever reason, ‘order.append(1)’ had a bug and it raises an
exception, we wouldn’t be able to know if ‘order.extend([2])’ or ‘order
+= [3]’ would also have problems.  After ‘append_first’ throws an
exception, pytest won’t run any more fixtures for ‘test_order’, and it
won’t even try to run ‘test_order’ itself.  The only things that
would’ve run would be ‘order’ and ‘append_first’.


File: pytest.info,  Node: Sharing test data,  Next: A note about fixture cleanup,  Prev: Fixture errors,  Up: About fixtures

28.4 Sharing test data
======================

If you want to make test data from files available to your tests, a good
way to do this is by loading these data in a fixture for use by your
tests.  This makes use of the automatic caching mechanisms of pytest.

Another good approach is by adding the data files in the ‘tests’ folder.
There are also community plugins available to help to manage this aspect
of testing, e.g.  pytest-datadir(1) and pytest-datafiles(2).

   ---------- Footnotes ----------

   (1) https://pypi.org/project/pytest-datadir/

   (2) https://pypi.org/project/pytest-datafiles/


File: pytest.info,  Node: A note about fixture cleanup,  Prev: Sharing test data,  Up: About fixtures

28.5 A note about fixture cleanup
=================================

pytest does not do any special processing for SIGTERM(1) and ‘SIGQUIT’
signals (SIGINT(2) is handled naturally by the Python runtime via
KeyboardInterrupt(3)), so fixtures that manage external resources which
are important to be cleared when the Python process is terminated (by
those signals) might leak resources.

The reason pytest does not handle those signals to perform fixture
cleanup is that signal handlers are global, and changing them might
interfere with the code under execution.

If fixtures in your suite need special care regarding termination in
those scenarios, see this comment(4) in the issue tracker for a possible
workaround.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/signal.html#signal.SIGTERM

   (2) https://docs.python.org/3/library/signal.html#signal.SIGINT

   (3) 
https://docs.python.org/3/library/exceptions.html#KeyboardInterrupt

   (4) 
https://github.com/pytest-dev/pytest/issues/5243#issuecomment-491522595


File: pytest.info,  Node: Good Integration Practices,  Next: Flaky tests,  Prev: About fixtures,  Up: Top

29 Good Integration Practices
*****************************

* Menu:

* Install package with pip::
* Conventions for Python test discovery::
* Choosing a test layout / import rules::
* tox::
* Do not run via setuptools::


File: pytest.info,  Node: Install package with pip,  Next: Conventions for Python test discovery,  Up: Good Integration Practices

29.1 Install package with pip
=============================

For development, we recommend you use venv(1) for virtual environments
and pip(2) for installing your application and any dependencies, as well
as the ‘pytest’ package itself.  This ensures your code and dependencies
are isolated from your system Python installation.

Create a ‘pyproject.toml’ file in the root of your repository as
described in Packaging Python Projects(3).  The first few lines should
look like this:

     [build-system]
     requires = ["hatchling"]
     build-backend = "hatchling.build"

     [metadata]
     name = "PACKAGENAME"

where ‘PACKAGENAME’ is the name of your package.

You can then install your package in “editable” mode by running from the
same directory:

     pip install -e .

which lets you change your source code (both tests and application) and
rerun tests at will.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/venv.html#module-venv

   (2) https://pip.pypa.io/en/stable/

   (3) 
https://packaging.python.org/en/latest/tutorials/packaging-projects/


File: pytest.info,  Node: Conventions for Python test discovery,  Next: Choosing a test layout / import rules,  Prev: Install package with pip,  Up: Good Integration Practices

29.2 Conventions for Python test discovery
==========================================

‘pytest’ implements the following standard test discovery:

   * If no arguments are specified then collection starts from *note
     testpaths: 44b. (if configured) or the current directory.
     Alternatively, command line arguments can be used in any
     combination of directories, file names or node ids.

   * Recurse into directories, unless they match *note norecursedirs:
     446.

   * In those directories, search for ‘test_*.py’ or ‘*_test.py’ files,
     imported by their *note test package name: 45f.

   * From those files, collect test items:

        * ‘test’ prefixed test functions or methods outside of class

        * ‘test’ prefixed test functions or methods inside ‘Test’
          prefixed test classes (without an ‘__init__’ method)

For examples of how to customize your test discovery *note Changing
standard (Python) test discovery: 460.

Within Python modules, ‘pytest’ also discovers tests using the standard
*note unittest.TestCase: 17b. subclassing technique.


File: pytest.info,  Node: Choosing a test layout / import rules,  Next: tox,  Prev: Conventions for Python test discovery,  Up: Good Integration Practices

29.3 Choosing a test layout / import rules
==========================================

‘pytest’ supports two common test layouts:

* Menu:

* Tests outside application code::
* Tests as part of application code::
* Choosing an import mode::


File: pytest.info,  Node: Tests outside application code,  Next: Tests as part of application code,  Up: Choosing a test layout / import rules

29.3.1 Tests outside application code
-------------------------------------

Putting tests into an extra directory outside your actual application
code might be useful if you have many functional tests or for other
reasons want to keep tests separate from actual application code (often
a good idea):

     pyproject.toml
     src/
         mypkg/
             __init__.py
             app.py
             view.py
     tests/
         test_app.py
         test_view.py
         ...

This has the following benefits:

   * Your tests can run against an installed version after executing
     ‘pip install .’.

   * Your tests can run against the local copy with an editable install
     after executing ‘pip install --editable .’.

   * If you don’t use an editable install and are relying on the fact
     that Python by default puts the current directory in ‘sys.path’ to
     import your package, you can execute ‘python -m pytest’ to execute
     the tests against the local copy directly, without using ‘pip’.

     Note: See *note Invoking pytest versus python -m pytest: 463. for
     more information about the difference between calling ‘pytest’ and
     ‘python -m pytest’.

For new projects, we recommend to use ‘importlib’ *note import mode:
464. (see *note which-import-mode: 465. for a detailed explanation).  To
this end, add the following to your ‘pyproject.toml’:

     [tool.pytest.ini_options]
     addopts = [
         "--import-mode=importlib",
     ]
Generally, but especially if you use the default import mode ‘prepend’,
it is ‘strongly’ suggested to use a ‘src’ layout.  Here, your
application root package resides in a sub-directory of your root, i.e.
‘src/mypkg/’ instead of ‘mypkg’.

This layout prevents a lot of common pitfalls and has many benefits,
which are better explained in this excellent blog post(1) by Ionel
Cristian Mărieș.

   ---------- Footnotes ----------

   (1) 
https://blog.ionelmc.ro/2014/05/25/python-packaging/#the-structure>


File: pytest.info,  Node: Tests as part of application code,  Next: Choosing an import mode,  Prev: Tests outside application code,  Up: Choosing a test layout / import rules

29.3.2 Tests as part of application code
----------------------------------------

Inlining test directories into your application package is useful if you
have direct relation between tests and application modules and want to
distribute them along with your application:

     pyproject.toml
     [src/]mypkg/
         __init__.py
         app.py
         view.py
         tests/
             __init__.py
             test_app.py
             test_view.py
             ...

In this scheme, it is easy to run your tests using the ‘--pyargs’
option:

     pytest --pyargs mypkg

‘pytest’ will discover where ‘mypkg’ is installed and collect tests from
there.

Note that this layout also works in conjunction with the ‘src’ layout
mentioned in the previous section.

     Note: You can use namespace packages (PEP420) for your application
     but pytest will still perform *note test package name: 45f.
     discovery based on the presence of ‘__init__.py’ files.  If you use
     one of the two recommended file system layouts above but leave away
     the ‘__init__.py’ files from your directories, it should just work.
     From “inlined tests”, however, you will need to use absolute
     imports for getting at your application code.
     Note: In ‘prepend’ and ‘append’ import-modes, if pytest finds a
     ‘"a/b/test_module.py"’ test file while recursing into the
     filesystem it determines the import name as follows:

        * determine ‘basedir’: this is the first “upward” (towards the
          root) directory not containing an ‘__init__.py’.  If e.g.
          both ‘a’ and ‘b’ contain an ‘__init__.py’ file then the parent
          directory of ‘a’ will become the ‘basedir’.

        * perform ‘sys.path.insert(0, basedir)’ to make the test module
          importable under the fully qualified import name.

        * ‘import a.b.test_module’ where the path is determined by
          converting path separators ‘/’ into “.” characters.  This
          means you must follow the convention of having directory and
          file names map directly to the import names.

     The reason for this somewhat evolved importing technique is that in
     larger projects multiple test modules might import from each other
     and thus deriving a canonical import name helps to avoid surprises
     such as a test module getting imported twice.

     With ‘--import-mode=importlib’ things are less convoluted because
     pytest doesn’t need to change ‘sys.path’ or ‘sys.modules’, making
     things much less surprising.


File: pytest.info,  Node: Choosing an import mode,  Prev: Tests as part of application code,  Up: Choosing a test layout / import rules

29.3.3 Choosing an import mode
------------------------------

For historical reasons, pytest defaults to the ‘prepend’ *note import
mode: 464. instead of the ‘importlib’ import mode we recommend for new
projects.  The reason lies in the way the ‘prepend’ mode works:

Since there are no packages to derive a full package name from, ‘pytest’
will import your test files as ‘top-level’ modules.  The test files in
the first example (*note src layout: 466.) would be imported as
‘test_app’ and ‘test_view’ top-level modules by adding ‘tests/’ to
‘sys.path’.

This results in a drawback compared to the import mode ‘importlib’: your
test files must have ‘unique names’.

If you need to have test modules with the same name, as a workaround you
might add ‘__init__.py’ files to your ‘tests’ folder and subfolders,
changing them to packages:

     pyproject.toml
     mypkg/
         ...
     tests/
         __init__.py
         foo/
             __init__.py
             test_view.py
         bar/
             __init__.py
             test_view.py

Now pytest will load the modules as ‘tests.foo.test_view’ and
‘tests.bar.test_view’, allowing you to have modules with the same name.
But now this introduces a subtle problem: in order to load the test
modules from the ‘tests’ directory, pytest prepends the root of the
repository to ‘sys.path’, which adds the side-effect that now ‘mypkg’ is
also importable.

This is problematic if you are using a tool like *note tox: 46a. to test
your package in a virtual environment, because you want to test the
‘installed’ version of your package, not the local code from the
repository.

The ‘importlib’ import mode does not have any of the drawbacks above,
because ‘sys.path’ is not changed when importing test modules.


File: pytest.info,  Node: tox,  Next: Do not run via setuptools,  Prev: Choosing a test layout / import rules,  Up: Good Integration Practices

29.4 tox
========

Once you are done with your work and want to make sure that your actual
package passes all tests you may want to look into tox(1), the
virtualenv test automation tool and its pytest support(2).  tox helps
you to setup virtualenv environments with pre-defined dependencies and
then executing a pre-configured test command with options.  It will run
tests against the installed package and not against your source code
checkout, helping to detect packaging glitches.

   ---------- Footnotes ----------

   (1) https://tox.wiki/en/stable/index.html

   (2) https://tox.wiki/en/stable/example/pytest.html


File: pytest.info,  Node: Do not run via setuptools,  Prev: tox,  Up: Good Integration Practices

29.5 Do not run via setuptools
==============================

Integration with setuptools is ‘not recommended’, i.e.  you should not
be using ‘python setup.py test’ or ‘pytest-runner’, and may stop working
in the future.

This is deprecated since it depends on deprecated features of setuptools
and relies on features that break security mechanisms in pip.  For
example ‘setup_requires’ and ‘tests_require’ bypass ‘pip
--require-hashes’.  For more information and migration instructions, see
the pytest-runner notice(1).  See also pypa/setuptools#1684(2).

setuptools intends to remove the test command(3).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest-runner#deprecation-notice

   (2) https://github.com/pypa/setuptools/issues/1684

   (3) https://github.com/pypa/setuptools/issues/931


File: pytest.info,  Node: Flaky tests,  Next: pytest import mechanisms and sys path/PYTHONPATH,  Prev: Good Integration Practices,  Up: Top

30 Flaky tests
**************

A “flaky” test is one that exhibits intermittent or sporadic failure,
that seems to have non-deterministic behaviour.  Sometimes it passes,
sometimes it fails, and it’s not clear why.  This page discusses pytest
features that can help and other general strategies for identifying,
fixing or mitigating them.

* Menu:

* Why flaky tests are a problem::
* Potential root causes::
* Pytest features::
* Other general strategies::
* Research::
* Resources::


File: pytest.info,  Node: Why flaky tests are a problem,  Next: Potential root causes,  Up: Flaky tests

30.1 Why flaky tests are a problem
==================================

Flaky tests are particularly troublesome when a continuous integration
(CI) server is being used, so that all tests must pass before a new code
change can be merged.  If the test result is not a reliable signal –
that a test failure means the code change broke the test – developers
can become mistrustful of the test results, which can lead to
overlooking genuine failures.  It is also a source of wasted time as
developers must re-run test suites and investigate spurious failures.


File: pytest.info,  Node: Potential root causes,  Next: Pytest features,  Prev: Why flaky tests are a problem,  Up: Flaky tests

30.2 Potential root causes
==========================

* Menu:

* System state::
* Overly strict assertion::


File: pytest.info,  Node: System state,  Next: Overly strict assertion,  Up: Potential root causes

30.2.1 System state
-------------------

Broadly speaking, a flaky test indicates that the test relies on some
system state that is not being appropriately controlled - the test
environment is not sufficiently isolated.  Higher level tests are more
likely to be flaky as they rely on more state.

Flaky tests sometimes appear when a test suite is run in parallel (such
as use of pytest-xdist).  This can indicate a test is reliant on test
ordering.

   - Perhaps a different test is failing to clean up after itself and
     leaving behind data which causes the flaky test to fail.

   - The flaky test is reliant on data from a previous test that doesn’t
     clean up after itself, and in parallel runs that previous test is
     not always present

   - Tests that modify global state typically cannot be run in parallel.


File: pytest.info,  Node: Overly strict assertion,  Prev: System state,  Up: Potential root causes

30.2.2 Overly strict assertion
------------------------------

Overly strict assertions can cause problems with floating point
comparison as well as timing issues.  *note pytest.approx(): c3. is
useful here.


File: pytest.info,  Node: Pytest features,  Next: Other general strategies,  Prev: Potential root causes,  Up: Flaky tests

30.3 Pytest features
====================

* Menu:

* Xfail strict::
* PYTEST_CURRENT_TEST::
* Plugins::


File: pytest.info,  Node: Xfail strict,  Next: PYTEST_CURRENT_TEST,  Up: Pytest features

30.3.1 Xfail strict
-------------------

*note pytest.mark.xfail: 12f. with ‘strict=False’ can be used to mark a
test so that its failure does not cause the whole build to break.  This
could be considered like a manual quarantine, and is rather dangerous to
use permanently.


File: pytest.info,  Node: PYTEST_CURRENT_TEST,  Next: Plugins,  Prev: Xfail strict,  Up: Pytest features

30.3.2 PYTEST_CURRENT_TEST
--------------------------

*note PYTEST_CURRENT_TEST: 41a. may be useful for figuring out “which
test got stuck”.  See *note PYTEST_CURRENT_TEST environment variable:
41b. for more details.


File: pytest.info,  Node: Plugins,  Prev: PYTEST_CURRENT_TEST,  Up: Pytest features

30.3.3 Plugins
--------------

Rerunning any failed tests can mitigate the negative effects of flaky
tests by giving them additional chances to pass, so that the overall
build does not fail.  Several pytest plugins support this:

   * flaky(1)

   * pytest-flakefinder(2) - blog post(3)

   * pytest-rerunfailures(4)

   * pytest-replay(5): This plugin helps to reproduce locally crashes or
     flaky tests observed during CI runs.

Plugins to deliberately randomize tests can help expose tests with state
problems:

   * pytest-random-order(6)

   * pytest-randomly(7)

   ---------- Footnotes ----------

   (1) https://github.com/box/flaky

   (2) https://github.com/dropbox/pytest-flakefinder

   (3) 
https://blogs.dropbox.com/tech/2016/03/open-sourcing-pytest-tools/

   (4) https://github.com/pytest-dev/pytest-rerunfailures

   (5) https://github.com/ESSS/pytest-replay

   (6) https://github.com/jbasko/pytest-random-order

   (7) https://github.com/pytest-dev/pytest-randomly


File: pytest.info,  Node: Other general strategies,  Next: Research,  Prev: Pytest features,  Up: Flaky tests

30.4 Other general strategies
=============================

* Menu:

* Split up test suites::
* Video/screenshot on failure::
* Delete or rewrite the test::
* Quarantine::
* CI tools that rerun on failure::


File: pytest.info,  Node: Split up test suites,  Next: Video/screenshot on failure,  Up: Other general strategies

30.4.1 Split up test suites
---------------------------

It can be common to split a single test suite into two, such as unit vs
integration, and only use the unit test suite as a CI gate.  This also
helps keep build times manageable as high level tests tend to be slower.
However, it means it does become possible for code that breaks the build
to be merged, so extra vigilance is needed for monitoring the
integration test results.


File: pytest.info,  Node: Video/screenshot on failure,  Next: Delete or rewrite the test,  Prev: Split up test suites,  Up: Other general strategies

30.4.2 Video/screenshot on failure
----------------------------------

For UI tests these are important for understanding what the state of the
UI was when the test failed.  pytest-splinter can be used with plugins
like pytest-bdd and can save a screenshot on test failure(1), which can
help to isolate the cause.

   ---------- Footnotes ----------

   (1) 
https://pytest-splinter.readthedocs.io/en/latest/#automatic-screenshots-on-test-failure


File: pytest.info,  Node: Delete or rewrite the test,  Next: Quarantine,  Prev: Video/screenshot on failure,  Up: Other general strategies

30.4.3 Delete or rewrite the test
---------------------------------

If the functionality is covered by other tests, perhaps the test can be
removed.  If not, perhaps it can be rewritten at a lower level which
will remove the flakiness or make its source more apparent.


File: pytest.info,  Node: Quarantine,  Next: CI tools that rerun on failure,  Prev: Delete or rewrite the test,  Up: Other general strategies

30.4.4 Quarantine
-----------------

Mark Lapierre discusses the Pros and Cons of Quarantined Tests(1) in a
post from 2018.

   ---------- Footnotes ----------

   (1) https://dev.to/mlapierre/pros-and-cons-of-quarantined-tests-2emj


File: pytest.info,  Node: CI tools that rerun on failure,  Prev: Quarantine,  Up: Other general strategies

30.4.5 CI tools that rerun on failure
-------------------------------------

Azure Pipelines (the Azure cloud CI/CD tool, formerly Visual Studio Team
Services or VSTS) has a feature to identify flaky tests(1) and rerun
failed tests.

   ---------- Footnotes ----------

   (1) 
https://docs.microsoft.com/en-us/previous-versions/azure/devops/2017/dec-11-vsts?view=tfs-2017#identify-flaky-tests


File: pytest.info,  Node: Research,  Next: Resources,  Prev: Other general strategies,  Up: Flaky tests

30.5 Research
=============

This is a limited list, please submit an issue or pull request to expand
it!

   * Gao, Zebao, Yalan Liang, Myra B. Cohen, Atif M. Memon, and Zhen
     Wang.  “Making system user interactive tests repeatable: When and
     what should we control?.” In ‘Software Engineering (ICSE), 2015
     IEEE/ACM 37th IEEE International Conference on’, vol.  1, pp.
     55-65.  IEEE, 2015.  PDF(1)

   * Palomba, Fabio, and Andy Zaidman.  “Does refactoring of test smells
     induce fixing flaky tests?.” In ‘Software Maintenance and Evolution
     (ICSME), 2017 IEEE International Conference on’, pp.  1-12.  IEEE,
     2017.  PDF in Google Drive(2)

   * Bell, Jonathan, Owolabi Legunsen, Michael Hilton, Lamyaa Eloussi,
     Tifany Yung, and Darko Marinov.  “DeFlaker: Automatically detecting
     flaky tests.” In ‘Proceedings of the 2018 International Conference
     on Software Engineering’.  2018.  PDF(3)

   ---------- Footnotes ----------

   (1) http://www.cs.umd.edu/~atif/pubs/gao-icse15.pdf

   (2) 
https://drive.google.com/file/d/10HdcCQiuQVgW3yYUJD-TSTq1NbYEprl0/view

   (3) https://www.jonbell.net/icse18-deflaker.pdf


File: pytest.info,  Node: Resources,  Prev: Research,  Up: Flaky tests

30.6 Resources
==============

   * Eradicating Non-Determinism in Tests(1) by Martin Fowler, 2011

   * No more flaky tests on the Go team(2) by Pavan Sudarshan, 2012

   * The Build That Cried Broken: Building Trust in your Continuous
     Integration Tests(3) talk (video) by Angie Jones(4) at SeleniumConf
     Austin 2017

   * Test and Code Podcast: Flaky Tests and How to Deal with Them(5) by
     Brian Okken and Anthony Shaw, 2018

   * Microsoft:

        * How we approach testing VSTS to enable continuous delivery(6)
          by Brian Harry MS, 2017

        * Eliminating Flaky Tests(7) blog and talk (video) by Munil
          Shah, 2017

   * Google:

        * Flaky Tests at Google and How We Mitigate Them(8) by John
          Micco, 2016

        * Where do Google’s flaky tests come from?(9)  by Jeff
          Listfield, 2017

   ---------- Footnotes ----------

   (1) https://martinfowler.com/articles/nonDeterminism.html

   (2) 
https://www.thoughtworks.com/insights/blog/no-more-flaky-tests-go-team

   (3) https://www.youtube.com/embed/VotJqV4n8ig

   (4) https://angiejones.tech/

   (5) https://testandcode.com/50

   (6) 
https://blogs.msdn.microsoft.com/bharry/2017/06/28/testing-in-a-cloud-delivery-cadence/

   (7) 
https://docs.microsoft.com/en-us/azure/devops/learn/devops-at-microsoft/eliminating-flaky-tests

   (8) 
https://testing.googleblog.com/2016/05/flaky-tests-at-google-and-how-we.html

   (9) 
https://testing.googleblog.com/2017/04/where-do-our-flaky-tests-come-from.html


File: pytest.info,  Node: pytest import mechanisms and sys path/PYTHONPATH,  Next: Examples and customization tricks,  Prev: Flaky tests,  Up: Top

31 pytest import mechanisms and ‘sys.path’/‘PYTHONPATH’
*******************************************************

* Menu:

* Import modes::
* prepend and append import modes scenarios::
* Invoking pytest versus python -m pytest::


File: pytest.info,  Node: Import modes,  Next: prepend and append import modes scenarios,  Up: pytest import mechanisms and sys path/PYTHONPATH

31.1 Import modes
=================

pytest as a testing framework needs to import test modules and
‘conftest.py’ files for execution.

Importing files in Python (at least until recently) is a non-trivial
processes, often requiring changing sys.path(1).  Some aspects of the
import process can be controlled through the ‘--import-mode’
command-line flag, which can assume these values:

   * ‘prepend’ (default): the directory path containing each module will
     be inserted into the ‘beginning’ of sys.path(2) if not already
     there, and then imported with the __import__(3) builtin.

     This requires test module names to be unique when the test
     directory tree is not arranged in packages, because the modules
     will put in sys.modules(4) after importing.

     This is the classic mechanism, dating back from the time Python 2
     was still supported.

   * ‘append’: the directory containing each module is appended to the
     end of sys.path(5) if not already there, and imported with
     ‘__import__’.

     This better allows to run test modules against installed versions
     of a package even if the package under test has the same import
     root.  For example:

          testing/__init__.py
          testing/test_pkg_under_test.py
          pkg_under_test/

     the tests will run against the installed version of
     ‘pkg_under_test’ when ‘--import-mode=append’ is used whereas with
     ‘prepend’ they would pick up the local version.  This kind of
     confusion is why we advocate for using *note src: 466. layouts.

     Same as ‘prepend’, requires test module names to be unique when the
     test directory tree is not arranged in packages, because the
     modules will put in sys.modules(6) after importing.

   * ‘importlib’: new in pytest-6.0, this mode uses importlib(7) to
     import test modules.  This gives full control over the import
     process, and doesn’t require changing sys.path(8).

     For this reason this doesn’t require test module names to be
     unique.

     One drawback however is that test modules are non-importable by
     each other.  Also, utility modules in the tests directories are not
     automatically importable because the tests directory is no longer
     added to sys.path(9).

     Initially we intended to make ‘importlib’ the default in future
     releases, however it is clear now that it has its own set of
     drawbacks so the default will remain ‘prepend’ for the foreseeable
     future.

See also
........

The *note pythonpath: 449. configuration variable.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/sys.html#sys.path

   (2) https://docs.python.org/3/library/sys.html#sys.path

   (3) https://docs.python.org/3/library/functions.html#import__

   (4) https://docs.python.org/3/library/sys.html#sys.modules

   (5) https://docs.python.org/3/library/sys.html#sys.path

   (6) https://docs.python.org/3/library/sys.html#sys.modules

   (7) https://docs.python.org/3/library/importlib.html#module-importlib

   (8) https://docs.python.org/3/library/sys.html#sys.path

   (9) https://docs.python.org/3/library/sys.html#sys.path


File: pytest.info,  Node: prepend and append import modes scenarios,  Next: Invoking pytest versus python -m pytest,  Prev: Import modes,  Up: pytest import mechanisms and sys path/PYTHONPATH

31.2 ‘prepend’ and ‘append’ import modes scenarios
==================================================

Here’s a list of scenarios when using ‘prepend’ or ‘append’ import modes
where pytest needs to change ‘sys.path’ in order to import test modules
or ‘conftest.py’ files, and the issues users might encounter because of
that.

* Menu:

* Test modules / conftest.py files inside packages: Test modules / conftest py files inside packages.
* Standalone test modules / conftest.py files: Standalone test modules / conftest py files.


File: pytest.info,  Node: Test modules / conftest py files inside packages,  Next: Standalone test modules / conftest py files,  Up: prepend and append import modes scenarios

31.2.1 Test modules / ‘conftest.py’ files inside packages
---------------------------------------------------------

Consider this file and directory layout:

     root/
     |- foo/
        |- __init__.py
        |- conftest.py
        |- bar/
           |- __init__.py
           |- tests/
              |- __init__.py
              |- test_foo.py

When executing:

     pytest root/

pytest will find ‘foo/bar/tests/test_foo.py’ and realize it is part of a
package given that there’s an ‘__init__.py’ file in the same folder.  It
will then search upwards until it can find the last folder which still
contains an ‘__init__.py’ file in order to find the package ‘root’ (in
this case ‘foo/’).  To load the module, it will insert ‘root/’ to the
front of ‘sys.path’ (if not there already) in order to load
‘test_foo.py’ as the ‘module’ ‘foo.bar.tests.test_foo’.

The same logic applies to the ‘conftest.py’ file: it will be imported as
‘foo.conftest’ module.

Preserving the full package name is important when tests live in a
package to avoid problems and allow test modules to have duplicated
names.  This is also discussed in details in *note Conventions for
Python test discovery: a.


File: pytest.info,  Node: Standalone test modules / conftest py files,  Prev: Test modules / conftest py files inside packages,  Up: prepend and append import modes scenarios

31.2.2 Standalone test modules / ‘conftest.py’ files
----------------------------------------------------

Consider this file and directory layout:

     root/
     |- foo/
        |- conftest.py
        |- bar/
           |- tests/
              |- test_foo.py

When executing:

     pytest root/

pytest will find ‘foo/bar/tests/test_foo.py’ and realize it is NOT part
of a package given that there’s no ‘__init__.py’ file in the same
folder.  It will then add ‘root/foo/bar/tests’ to ‘sys.path’ in order to
import ‘test_foo.py’ as the ‘module’ ‘test_foo’.  The same is done with
the ‘conftest.py’ file by adding ‘root/foo’ to ‘sys.path’ to import it
as ‘conftest’.

For this reason this layout cannot have test modules with the same name,
as they all will be imported in the global import namespace.

This is also discussed in details in *note Conventions for Python test
discovery: a.


File: pytest.info,  Node: Invoking pytest versus python -m pytest,  Prev: prepend and append import modes scenarios,  Up: pytest import mechanisms and sys path/PYTHONPATH

31.3 Invoking ‘pytest’ versus ‘python -m pytest’
================================================

Running pytest with ‘pytest [...]’ instead of ‘python -m pytest [...]’
yields nearly equivalent behaviour, except that the latter will add the
current directory to ‘sys.path’, which is standard ‘python’ behavior.

See also *note Calling pytest through python -m pytest: 26.


File: pytest.info,  Node: Examples and customization tricks,  Next: Backwards Compatibility Policy,  Prev: pytest import mechanisms and sys path/PYTHONPATH,  Up: Top

32 Examples and customization tricks
************************************

Here is a (growing) list of examples.  *note Contact: 488. us if you
need more examples or have questions.  Also take a look at the *note
comprehensive documentation: 489. which contains many example snippets
as well.  Also, pytest on stackoverflow.com(1) often comes with example
answers.

For basic examples, see

   - *note Get Started: 2. for basic introductory examples

   - *note How to write and report assertions in tests: 2a. for basic
     assertion examples

   - *note Fixtures: 10. for basic fixture/setup examples

   - *note How to parametrize fixtures and test functions: 8f. for basic
     test function parametrization

   - *note How to use unittest-based tests with pytest: 17e. for basic
     unittest integration

   - *note How to run tests written for nose: 178. for basic nosetests
     integration

The following examples aim at various use cases you might encounter.

* Menu:

* Demo of Python failure reports with pytest::
* Basic patterns and examples::
* Parametrizing tests::
* Working with custom markers::
* A session-fixture which can look at all collected tests::
* Changing standard (Python) test discovery: Changing standard Python test discovery.
* Working with non-python tests::

   ---------- Footnotes ----------

   (1) http://stackoverflow.com/search?q=pytest


File: pytest.info,  Node: Demo of Python failure reports with pytest,  Next: Basic patterns and examples,  Up: Examples and customization tricks

32.1 Demo of Python failure reports with pytest
===============================================

Here is a nice run of several failures and how ‘pytest’ presents things:

     assertion $ pytest failure_demo.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project/assertion
     collected 44 items

     failure_demo.py FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF         [100%]

     ================================= FAILURES =================================
     ___________________________ test_generative[3-6] ___________________________

     param1 = 3, param2 = 6

         @pytest.mark.parametrize("param1, param2", [(3, 6)])
         def test_generative(param1, param2):
     >       assert param1 * 2 < param2
     E       assert (3 * 2) < 6

     failure_demo.py:19: AssertionError
     _________________________ TestFailing.test_simple __________________________

     self = <failure_demo.TestFailing object at 0xdeadbeef0001>

         def test_simple(self):
             def f():
                 return 42

             def g():
                 return 43

     >       assert f() == g()
     E       assert 42 == 43
     E        +  where 42 = <function TestFailing.test_simple.<locals>.f at 0xdeadbeef0002>()
     E        +  and   43 = <function TestFailing.test_simple.<locals>.g at 0xdeadbeef0003>()

     failure_demo.py:30: AssertionError
     ____________________ TestFailing.test_simple_multiline _____________________

     self = <failure_demo.TestFailing object at 0xdeadbeef0004>

         def test_simple_multiline(self):
     >       otherfunc_multi(42, 6 * 9)

     failure_demo.py:33:
     _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

     a = 42, b = 54

         def otherfunc_multi(a, b):
     >       assert a == b
     E       assert 42 == 54

     failure_demo.py:14: AssertionError
     ___________________________ TestFailing.test_not ___________________________

     self = <failure_demo.TestFailing object at 0xdeadbeef0005>

         def test_not(self):
             def f():
                 return 42

     >       assert not f()
     E       assert not 42
     E        +  where 42 = <function TestFailing.test_not.<locals>.f at 0xdeadbeef0006>()

     failure_demo.py:39: AssertionError
     _________________ TestSpecialisedExplanations.test_eq_text _________________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0007>

         def test_eq_text(self):
     >       assert "spam" == "eggs"
     E       AssertionError: assert 'spam' == 'eggs'
     E         - eggs
     E         + spam

     failure_demo.py:44: AssertionError
     _____________ TestSpecialisedExplanations.test_eq_similar_text _____________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0008>

         def test_eq_similar_text(self):
     >       assert "foo 1 bar" == "foo 2 bar"
     E       AssertionError: assert 'foo 1 bar' == 'foo 2 bar'
     E         - foo 2 bar
     E         ?     ^
     E         + foo 1 bar
     E         ?     ^

     failure_demo.py:47: AssertionError
     ____________ TestSpecialisedExplanations.test_eq_multiline_text ____________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0009>

         def test_eq_multiline_text(self):
     >       assert "foo\nspam\nbar" == "foo\neggs\nbar"
     E       AssertionError: assert 'foo\nspam\nbar' == 'foo\neggs\nbar'
     E           foo
     E         - eggs
     E         + spam
     E           bar

     failure_demo.py:50: AssertionError
     ______________ TestSpecialisedExplanations.test_eq_long_text _______________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef000a>

         def test_eq_long_text(self):
             a = "1" * 100 + "a" + "2" * 100
             b = "1" * 100 + "b" + "2" * 100
     >       assert a == b
     E       AssertionError: assert '111111111111...2222222222222' == '111111111111...2222222222222'
     E         Skipping 90 identical leading characters in diff, use -v to show
     E         Skipping 91 identical trailing characters in diff, use -v to show
     E         - 1111111111b222222222
     E         ?           ^
     E         + 1111111111a222222222
     E         ?           ^

     failure_demo.py:55: AssertionError
     _________ TestSpecialisedExplanations.test_eq_long_text_multiline __________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef000b>

         def test_eq_long_text_multiline(self):
             a = "1\n" * 100 + "a" + "2\n" * 100
             b = "1\n" * 100 + "b" + "2\n" * 100
     >       assert a == b
     E       AssertionError: assert '1\n1\n1\n1\n...n2\n2\n2\n2\n' == '1\n1\n1\n1\n...n2\n2\n2\n2\n'
     E         Skipping 190 identical leading characters in diff, use -v to show
     E         Skipping 191 identical trailing characters in diff, use -v to show
     E           1
     E           1
     E           1
     E           1
     E           1...
     E
     E         ...Full output truncated (7 lines hidden), use '-vv' to show

     failure_demo.py:60: AssertionError
     _________________ TestSpecialisedExplanations.test_eq_list _________________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef000c>

         def test_eq_list(self):
     >       assert [0, 1, 2] == [0, 1, 3]
     E       assert [0, 1, 2] == [0, 1, 3]
     E         At index 2 diff: 2 != 3
     E         Use -v to get more diff

     failure_demo.py:63: AssertionError
     ______________ TestSpecialisedExplanations.test_eq_list_long _______________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef000d>

         def test_eq_list_long(self):
             a = [0] * 100 + [1] + [3] * 100
             b = [0] * 100 + [2] + [3] * 100
     >       assert a == b
     E       assert [0, 0, 0, 0, 0, 0, ...] == [0, 0, 0, 0, 0, 0, ...]
     E         At index 100 diff: 1 != 2
     E         Use -v to get more diff

     failure_demo.py:68: AssertionError
     _________________ TestSpecialisedExplanations.test_eq_dict _________________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef000e>

         def test_eq_dict(self):
     >       assert {"a": 0, "b": 1, "c": 0} == {"a": 0, "b": 2, "d": 0}
     E       AssertionError: assert {'a': 0, 'b': 1, 'c': 0} == {'a': 0, 'b': 2, 'd': 0}
     E         Omitting 1 identical items, use -vv to show
     E         Differing items:
     E         {'b': 1} != {'b': 2}
     E         Left contains 1 more item:
     E         {'c': 0}
     E         Right contains 1 more item:
     E         {'d': 0}...
     E
     E         ...Full output truncated (2 lines hidden), use '-vv' to show

     failure_demo.py:71: AssertionError
     _________________ TestSpecialisedExplanations.test_eq_set __________________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef000f>

         def test_eq_set(self):
     >       assert {0, 10, 11, 12} == {0, 20, 21}
     E       AssertionError: assert {0, 10, 11, 12} == {0, 20, 21}
     E         Extra items in the left set:
     E         10
     E         11
     E         12
     E         Extra items in the right set:
     E         20
     E         21...
     E
     E         ...Full output truncated (2 lines hidden), use '-vv' to show

     failure_demo.py:74: AssertionError
     _____________ TestSpecialisedExplanations.test_eq_longer_list ______________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0010>

         def test_eq_longer_list(self):
     >       assert [1, 2] == [1, 2, 3]
     E       assert [1, 2] == [1, 2, 3]
     E         Right contains one more item: 3
     E         Use -v to get more diff

     failure_demo.py:77: AssertionError
     _________________ TestSpecialisedExplanations.test_in_list _________________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0011>

         def test_in_list(self):
     >       assert 1 in [0, 2, 3, 4, 5]
     E       assert 1 in [0, 2, 3, 4, 5]

     failure_demo.py:80: AssertionError
     __________ TestSpecialisedExplanations.test_not_in_text_multiline __________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0012>

         def test_not_in_text_multiline(self):
             text = "some multiline\ntext\nwhich\nincludes foo\nand a\ntail"
     >       assert "foo" not in text
     E       AssertionError: assert 'foo' not in 'some multil...nand a\ntail'
     E         'foo' is contained here:
     E           some multiline
     E           text
     E           which
     E           includes foo
     E         ?          +++
     E           and a...
     E
     E         ...Full output truncated (2 lines hidden), use '-vv' to show

     failure_demo.py:84: AssertionError
     ___________ TestSpecialisedExplanations.test_not_in_text_single ____________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0013>

         def test_not_in_text_single(self):
             text = "single foo line"
     >       assert "foo" not in text
     E       AssertionError: assert 'foo' not in 'single foo line'
     E         'foo' is contained here:
     E           single foo line
     E         ?        +++

     failure_demo.py:88: AssertionError
     _________ TestSpecialisedExplanations.test_not_in_text_single_long _________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0014>

         def test_not_in_text_single_long(self):
             text = "head " * 50 + "foo " + "tail " * 20
     >       assert "foo" not in text
     E       AssertionError: assert 'foo' not in 'head head h...l tail tail '
     E         'foo' is contained here:
     E           head head foo tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail
     E         ?           +++

     failure_demo.py:92: AssertionError
     ______ TestSpecialisedExplanations.test_not_in_text_single_long_term _______

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0015>

         def test_not_in_text_single_long_term(self):
             text = "head " * 50 + "f" * 70 + "tail " * 20
     >       assert "f" * 70 not in text
     E       AssertionError: assert 'fffffffffff...ffffffffffff' not in 'head head h...l tail tail '
     E         'ffffffffffffffffff...fffffffffffffffffff' is contained here:
     E           head head fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffftail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail tail
     E         ?           ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

     failure_demo.py:96: AssertionError
     ______________ TestSpecialisedExplanations.test_eq_dataclass _______________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0016>

         def test_eq_dataclass(self):
             from dataclasses import dataclass

             @dataclass
             class Foo:
                 a: int
                 b: str

             left = Foo(1, "b")
             right = Foo(1, "c")
     >       assert left == right
     E       AssertionError: assert TestSpecialis...oo(a=1, b='b') == TestSpecialis...oo(a=1, b='c')
     E
     E         Omitting 1 identical items, use -vv to show
     E         Differing attributes:
     E         ['b']
     E
     E         Drill down into differing attribute b:
     E           b: 'b' != 'c'...
     E
     E         ...Full output truncated (3 lines hidden), use '-vv' to show

     failure_demo.py:108: AssertionError
     ________________ TestSpecialisedExplanations.test_eq_attrs _________________

     self = <failure_demo.TestSpecialisedExplanations object at 0xdeadbeef0017>

         def test_eq_attrs(self):
             import attr

             @attr.s
             class Foo:
                 a = attr.ib()
                 b = attr.ib()

             left = Foo(1, "b")
             right = Foo(1, "c")
     >       assert left == right
     E       AssertionError: assert Foo(a=1, b='b') == Foo(a=1, b='c')
     E
     E         Omitting 1 identical items, use -vv to show
     E         Differing attributes:
     E         ['b']
     E
     E         Drill down into differing attribute b:
     E           b: 'b' != 'c'...
     E
     E         ...Full output truncated (3 lines hidden), use '-vv' to show

     failure_demo.py:120: AssertionError
     ______________________________ test_attribute ______________________________

         def test_attribute():
             class Foo:
                 b = 1

             i = Foo()
     >       assert i.b == 2
     E       assert 1 == 2
     E        +  where 1 = <failure_demo.test_attribute.<locals>.Foo object at 0xdeadbeef0018>.b

     failure_demo.py:128: AssertionError
     _________________________ test_attribute_instance __________________________

         def test_attribute_instance():
             class Foo:
                 b = 1

     >       assert Foo().b == 2
     E       AssertionError: assert 1 == 2
     E        +  where 1 = <failure_demo.test_attribute_instance.<locals>.Foo object at 0xdeadbeef0019>.b
     E        +    where <failure_demo.test_attribute_instance.<locals>.Foo object at 0xdeadbeef0019> = <class 'failure_demo.test_attribute_instance.<locals>.Foo'>()

     failure_demo.py:135: AssertionError
     __________________________ test_attribute_failure __________________________

         def test_attribute_failure():
             class Foo:
                 def _get_b(self):
                     raise Exception("Failed to get attrib")

                 b = property(_get_b)

             i = Foo()
     >       assert i.b == 2

     failure_demo.py:146:
     _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

     self = <failure_demo.test_attribute_failure.<locals>.Foo object at 0xdeadbeef001a>

         def _get_b(self):
     >       raise Exception("Failed to get attrib")
     E       Exception: Failed to get attrib

     failure_demo.py:141: Exception
     _________________________ test_attribute_multiple __________________________

         def test_attribute_multiple():
             class Foo:
                 b = 1

             class Bar:
                 b = 2

     >       assert Foo().b == Bar().b
     E       AssertionError: assert 1 == 2
     E        +  where 1 = <failure_demo.test_attribute_multiple.<locals>.Foo object at 0xdeadbeef001b>.b
     E        +    where <failure_demo.test_attribute_multiple.<locals>.Foo object at 0xdeadbeef001b> = <class 'failure_demo.test_attribute_multiple.<locals>.Foo'>()
     E        +  and   2 = <failure_demo.test_attribute_multiple.<locals>.Bar object at 0xdeadbeef001c>.b
     E        +    where <failure_demo.test_attribute_multiple.<locals>.Bar object at 0xdeadbeef001c> = <class 'failure_demo.test_attribute_multiple.<locals>.Bar'>()

     failure_demo.py:156: AssertionError
     __________________________ TestRaises.test_raises __________________________

     self = <failure_demo.TestRaises object at 0xdeadbeef001d>

         def test_raises(self):
             s = "qwe"
     >       raises(TypeError, int, s)
     E       ValueError: invalid literal for int() with base 10: 'qwe'

     failure_demo.py:166: ValueError
     ______________________ TestRaises.test_raises_doesnt _______________________

     self = <failure_demo.TestRaises object at 0xdeadbeef001e>

         def test_raises_doesnt(self):
     >       raises(OSError, int, "3")
     E       Failed: DID NOT RAISE <class 'OSError'>

     failure_demo.py:169: Failed
     __________________________ TestRaises.test_raise ___________________________

     self = <failure_demo.TestRaises object at 0xdeadbeef001f>

         def test_raise(self):
     >       raise ValueError("demo error")
     E       ValueError: demo error

     failure_demo.py:172: ValueError
     ________________________ TestRaises.test_tupleerror ________________________

     self = <failure_demo.TestRaises object at 0xdeadbeef0020>

         def test_tupleerror(self):
     >       a, b = [1]  # NOQA
     E       ValueError: not enough values to unpack (expected 2, got 1)

     failure_demo.py:175: ValueError
     ______ TestRaises.test_reinterpret_fails_with_print_for_the_fun_of_it ______

     self = <failure_demo.TestRaises object at 0xdeadbeef0021>

         def test_reinterpret_fails_with_print_for_the_fun_of_it(self):
             items = [1, 2, 3]
             print(f"items is {items!r}")
     >       a, b = items.pop()
     E       TypeError: cannot unpack non-iterable int object

     failure_demo.py:180: TypeError
     --------------------------- Captured stdout call ---------------------------
     items is [1, 2, 3]
     ________________________ TestRaises.test_some_error ________________________

     self = <failure_demo.TestRaises object at 0xdeadbeef0022>

         def test_some_error(self):
     >       if namenotexi:  # NOQA
     E       NameError: name 'namenotexi' is not defined

     failure_demo.py:183: NameError
     ____________________ test_dynamic_compile_shows_nicely _____________________

         def test_dynamic_compile_shows_nicely():
             import importlib.util
             import sys

             src = "def foo():\n assert 1 == 0\n"
             name = "abc-123"
             spec = importlib.util.spec_from_loader(name, loader=None)
             module = importlib.util.module_from_spec(spec)
             code = compile(src, name, "exec")
             exec(code, module.__dict__)
             sys.modules[name] = module
     >       module.foo()

     failure_demo.py:202:
     _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

     >   ???
     E   AssertionError

     abc-123:2: AssertionError
     ____________________ TestMoreErrors.test_complex_error _____________________

     self = <failure_demo.TestMoreErrors object at 0xdeadbeef0023>

         def test_complex_error(self):
             def f():
                 return 44

             def g():
                 return 43

     >       somefunc(f(), g())

     failure_demo.py:213:
     _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
     failure_demo.py:10: in somefunc
         otherfunc(x, y)
     _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

     a = 44, b = 43

         def otherfunc(a, b):
     >       assert a == b
     E       assert 44 == 43

     failure_demo.py:6: AssertionError
     ___________________ TestMoreErrors.test_z1_unpack_error ____________________

     self = <failure_demo.TestMoreErrors object at 0xdeadbeef0024>

         def test_z1_unpack_error(self):
             items = []
     >       a, b = items
     E       ValueError: not enough values to unpack (expected 2, got 0)

     failure_demo.py:217: ValueError
     ____________________ TestMoreErrors.test_z2_type_error _____________________

     self = <failure_demo.TestMoreErrors object at 0xdeadbeef0025>

         def test_z2_type_error(self):
             items = 3
     >       a, b = items
     E       TypeError: cannot unpack non-iterable int object

     failure_demo.py:221: TypeError
     ______________________ TestMoreErrors.test_startswith ______________________

     self = <failure_demo.TestMoreErrors object at 0xdeadbeef0026>

         def test_startswith(self):
             s = "123"
             g = "456"
     >       assert s.startswith(g)
     E       AssertionError: assert False
     E        +  where False = <built-in method startswith of str object at 0xdeadbeef0027>('456')
     E        +    where <built-in method startswith of str object at 0xdeadbeef0027> = '123'.startswith

     failure_demo.py:226: AssertionError
     __________________ TestMoreErrors.test_startswith_nested ___________________

     self = <failure_demo.TestMoreErrors object at 0xdeadbeef0028>

         def test_startswith_nested(self):
             def f():
                 return "123"

             def g():
                 return "456"

     >       assert f().startswith(g())
     E       AssertionError: assert False
     E        +  where False = <built-in method startswith of str object at 0xdeadbeef0027>('456')
     E        +    where <built-in method startswith of str object at 0xdeadbeef0027> = '123'.startswith
     E        +      where '123' = <function TestMoreErrors.test_startswith_nested.<locals>.f at 0xdeadbeef0029>()
     E        +    and   '456' = <function TestMoreErrors.test_startswith_nested.<locals>.g at 0xdeadbeef002a>()

     failure_demo.py:235: AssertionError
     _____________________ TestMoreErrors.test_global_func ______________________

     self = <failure_demo.TestMoreErrors object at 0xdeadbeef002b>

         def test_global_func(self):
     >       assert isinstance(globf(42), float)
     E       assert False
     E        +  where False = isinstance(43, float)
     E        +    where 43 = globf(42)

     failure_demo.py:238: AssertionError
     _______________________ TestMoreErrors.test_instance _______________________

     self = <failure_demo.TestMoreErrors object at 0xdeadbeef002c>

         def test_instance(self):
             self.x = 6 * 7
     >       assert self.x != 42
     E       assert 42 != 42
     E        +  where 42 = <failure_demo.TestMoreErrors object at 0xdeadbeef002c>.x

     failure_demo.py:242: AssertionError
     _______________________ TestMoreErrors.test_compare ________________________

     self = <failure_demo.TestMoreErrors object at 0xdeadbeef002d>

         def test_compare(self):
     >       assert globf(10) < 5
     E       assert 11 < 5
     E        +  where 11 = globf(10)

     failure_demo.py:245: AssertionError
     _____________________ TestMoreErrors.test_try_finally ______________________

     self = <failure_demo.TestMoreErrors object at 0xdeadbeef002e>

         def test_try_finally(self):
             x = 1
             try:
     >           assert x == 0
     E           assert 1 == 0

     failure_demo.py:250: AssertionError
     ___________________ TestCustomAssertMsg.test_single_line ___________________

     self = <failure_demo.TestCustomAssertMsg object at 0xdeadbeef002f>

         def test_single_line(self):
             class A:
                 a = 1

             b = 2
     >       assert A.a == b, "A.a appears not to be b"
     E       AssertionError: A.a appears not to be b
     E       assert 1 == 2
     E        +  where 1 = <class 'failure_demo.TestCustomAssertMsg.test_single_line.<locals>.A'>.a

     failure_demo.py:261: AssertionError
     ____________________ TestCustomAssertMsg.test_multiline ____________________

     self = <failure_demo.TestCustomAssertMsg object at 0xdeadbeef0030>

         def test_multiline(self):
             class A:
                 a = 1

             b = 2
     >       assert (
                 A.a == b
             ), "A.a appears not to be b\nor does not appear to be b\none of those"
     E       AssertionError: A.a appears not to be b
     E         or does not appear to be b
     E         one of those
     E       assert 1 == 2
     E        +  where 1 = <class 'failure_demo.TestCustomAssertMsg.test_multiline.<locals>.A'>.a

     failure_demo.py:268: AssertionError
     ___________________ TestCustomAssertMsg.test_custom_repr ___________________

     self = <failure_demo.TestCustomAssertMsg object at 0xdeadbeef0031>

         def test_custom_repr(self):
             class JSON:
                 a = 1

                 def __repr__(self):
                     return "This is JSON\n{\n  'foo': 'bar'\n}"

             a = JSON()
             b = 2
     >       assert a.a == b, a
     E       AssertionError: This is JSON
     E         {
     E           'foo': 'bar'
     E         }
     E       assert 1 == 2
     E        +  where 1 = This is JSON\n{\n  'foo': 'bar'\n}.a

     failure_demo.py:281: AssertionError
     ========================= short test summary info ==========================
     FAILED failure_demo.py::test_generative[3-6] - assert (3 * 2) < 6
     FAILED failure_demo.py::TestFailing::test_simple - assert 42 == 43
     FAILED failure_demo.py::TestFailing::test_simple_multiline - assert 42 == 54
     FAILED failure_demo.py::TestFailing::test_not - assert not 42
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_text - Asser...
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_similar_text
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_multiline_text
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_long_text - ...
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_long_text_multiline
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_list - asser...
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_list_long - ...
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_dict - Asser...
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_set - Assert...
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_longer_list
     FAILED failure_demo.py::TestSpecialisedExplanations::test_in_list - asser...
     FAILED failure_demo.py::TestSpecialisedExplanations::test_not_in_text_multiline
     FAILED failure_demo.py::TestSpecialisedExplanations::test_not_in_text_single
     FAILED failure_demo.py::TestSpecialisedExplanations::test_not_in_text_single_long
     FAILED failure_demo.py::TestSpecialisedExplanations::test_not_in_text_single_long_term
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_dataclass - ...
     FAILED failure_demo.py::TestSpecialisedExplanations::test_eq_attrs - Asse...
     FAILED failure_demo.py::test_attribute - assert 1 == 2
     FAILED failure_demo.py::test_attribute_instance - AssertionError: assert ...
     FAILED failure_demo.py::test_attribute_failure - Exception: Failed to get...
     FAILED failure_demo.py::test_attribute_multiple - AssertionError: assert ...
     FAILED failure_demo.py::TestRaises::test_raises - ValueError: invalid lit...
     FAILED failure_demo.py::TestRaises::test_raises_doesnt - Failed: DID NOT ...
     FAILED failure_demo.py::TestRaises::test_raise - ValueError: demo error
     FAILED failure_demo.py::TestRaises::test_tupleerror - ValueError: not eno...
     FAILED failure_demo.py::TestRaises::test_reinterpret_fails_with_print_for_the_fun_of_it
     FAILED failure_demo.py::TestRaises::test_some_error - NameError: name 'na...
     FAILED failure_demo.py::test_dynamic_compile_shows_nicely - AssertionError
     FAILED failure_demo.py::TestMoreErrors::test_complex_error - assert 44 == 43
     FAILED failure_demo.py::TestMoreErrors::test_z1_unpack_error - ValueError...
     FAILED failure_demo.py::TestMoreErrors::test_z2_type_error - TypeError: c...
     FAILED failure_demo.py::TestMoreErrors::test_startswith - AssertionError:...
     FAILED failure_demo.py::TestMoreErrors::test_startswith_nested - Assertio...
     FAILED failure_demo.py::TestMoreErrors::test_global_func - assert False
     FAILED failure_demo.py::TestMoreErrors::test_instance - assert 42 != 42
     FAILED failure_demo.py::TestMoreErrors::test_compare - assert 11 < 5
     FAILED failure_demo.py::TestMoreErrors::test_try_finally - assert 1 == 0
     FAILED failure_demo.py::TestCustomAssertMsg::test_single_line - Assertion...
     FAILED failure_demo.py::TestCustomAssertMsg::test_multiline - AssertionEr...
     FAILED failure_demo.py::TestCustomAssertMsg::test_custom_repr - Assertion...
     ============================ 44 failed in 0.12s ============================


File: pytest.info,  Node: Basic patterns and examples,  Next: Parametrizing tests,  Prev: Demo of Python failure reports with pytest,  Up: Examples and customization tricks

32.2 Basic patterns and examples
================================

* Menu:

* How to change command line options defaults::
* Pass different values to a test function, depending on command line options: Pass different values to a test function depending on command line options.
* Dynamically adding command line options::
* Control skipping of tests according to command line option::
* Writing well integrated assertion helpers::
* Detect if running from within a pytest run::
* Adding info to test report header::
* Profiling test duration::
* Incremental testing - test steps::
* Package/Directory-level fixtures (setups): Package/Directory-level fixtures setups.
* Post-process test reports / failures::
* Making test result information available in fixtures::
* PYTEST_CURRENT_TEST environment variable::
* Freezing pytest::


File: pytest.info,  Node: How to change command line options defaults,  Next: Pass different values to a test function depending on command line options,  Up: Basic patterns and examples

32.2.1 How to change command line options defaults
--------------------------------------------------

It can be tedious to type the same series of command line options every
time you use ‘pytest’.  For example, if you always want to see detailed
info on skipped and xfailed tests, as well as have terser “dot” progress
output, you can write it into a configuration file:

     # content of pytest.ini
     [pytest]
     addopts = -ra -q

Alternatively, you can set a ‘PYTEST_ADDOPTS’ environment variable to
add command line options while the environment is in use:

     export PYTEST_ADDOPTS="-v"

Here’s how the command-line is built in the presence of ‘addopts’ or the
environment variable:

     <pytest.ini:addopts> $PYTEST_ADDOPTS <extra command-line arguments>

So if the user executes in the command-line:

     pytest -m slow

The actual command line executed is:

     pytest -ra -q -v -m slow

Note that as usual for other command-line applications, in case of
conflicting options the last one wins, so the example above will show
verbose output because ‘-v’ overwrites ‘-q’.


File: pytest.info,  Node: Pass different values to a test function depending on command line options,  Next: Dynamically adding command line options,  Prev: How to change command line options defaults,  Up: Basic patterns and examples

32.2.2 Pass different values to a test function, depending on command line options
----------------------------------------------------------------------------------

Suppose we want to write a test that depends on a command line option.
Here is a basic pattern to achieve this:

     # content of test_sample.py
     def test_answer(cmdopt):
         if cmdopt == "type1":
             print("first")
         elif cmdopt == "type2":
             print("second")
         assert 0  # to see what was printed

For this to work we need to add a command line option and provide the
‘cmdopt’ through a *note fixture function: d9.:

     # content of conftest.py
     import pytest


     def pytest_addoption(parser):
         parser.addoption(
             "--cmdopt", action="store", default="type1", help="my option: type1 or type2"
         )


     @pytest.fixture
     def cmdopt(request):
         return request.config.getoption("--cmdopt")

Let’s run this without supplying our new option:

     $ pytest -q test_sample.py
     F                                                                    [100%]
     ================================= FAILURES =================================
     _______________________________ test_answer ________________________________

     cmdopt = 'type1'

         def test_answer(cmdopt):
             if cmdopt == "type1":
                 print("first")
             elif cmdopt == "type2":
                 print("second")
     >       assert 0  # to see what was printed
     E       assert 0

     test_sample.py:6: AssertionError
     --------------------------- Captured stdout call ---------------------------
     first
     ========================= short test summary info ==========================
     FAILED test_sample.py::test_answer - assert 0
     1 failed in 0.12s

And now with supplying a command line option:

     $ pytest -q --cmdopt=type2
     F                                                                    [100%]
     ================================= FAILURES =================================
     _______________________________ test_answer ________________________________

     cmdopt = 'type2'

         def test_answer(cmdopt):
             if cmdopt == "type1":
                 print("first")
             elif cmdopt == "type2":
                 print("second")
     >       assert 0  # to see what was printed
     E       assert 0

     test_sample.py:6: AssertionError
     --------------------------- Captured stdout call ---------------------------
     second
     ========================= short test summary info ==========================
     FAILED test_sample.py::test_answer - assert 0
     1 failed in 0.12s

You can see that the command line option arrived in our test.

We could add simple validation for the input by listing the choices:

     # content of conftest.py
     import pytest


     def pytest_addoption(parser):
         parser.addoption(
             "--cmdopt",
             action="store",
             default="type1",
             help="my option: type1 or type2",
             choices=("type1", "type2"),
         )

Now we’ll get feedback on a bad argument:

     $ pytest -q --cmdopt=type3
     ERROR: usage: pytest [options] [file_or_dir] [file_or_dir] [...]
     pytest: error: argument --cmdopt: invalid choice: 'type3' (choose from 'type1', 'type2')

If you need to provide more detailed error messages, you can use the
‘type’ parameter and raise ‘pytest.UsageError’:

     # content of conftest.py
     import pytest


     def type_checker(value):
         msg = "cmdopt must specify a numeric type as typeNNN"
         if not value.startswith("type"):
             raise pytest.UsageError(msg)
         try:
             int(value[4:])
         except ValueError:
             raise pytest.UsageError(msg)

         return value


     def pytest_addoption(parser):
         parser.addoption(
             "--cmdopt",
             action="store",
             default="type1",
             help="my option: type1 or type2",
             type=type_checker,
         )

This completes the basic pattern.  However, one often rather wants to
process command line options outside of the test and rather pass in
different or more complex objects.


File: pytest.info,  Node: Dynamically adding command line options,  Next: Control skipping of tests according to command line option,  Prev: Pass different values to a test function depending on command line options,  Up: Basic patterns and examples

32.2.3 Dynamically adding command line options
----------------------------------------------

Through *note addopts: 1c7. you can statically add command line options
for your project.  You can also dynamically modify the command line
arguments before they get processed:

     # setuptools plugin
     import sys


     def pytest_load_initial_conftests(args):
         if "xdist" in sys.modules:  # pytest-xdist plugin
             import multiprocessing

             num = max(multiprocessing.cpu_count() / 2, 1)
             args[:] = ["-n", str(num)] + args

If you have the xdist plugin(1) installed you will now always perform
test runs using a number of subprocesses close to your CPU. Running in
an empty directory with the above conftest.py:

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 0 items

     ========================== no tests ran in 0.12s ===========================

   ---------- Footnotes ----------

   (1) https://pypi.org/project/pytest-xdist/


File: pytest.info,  Node: Control skipping of tests according to command line option,  Next: Writing well integrated assertion helpers,  Prev: Dynamically adding command line options,  Up: Basic patterns and examples

32.2.4 Control skipping of tests according to command line option
-----------------------------------------------------------------

Here is a ‘conftest.py’ file adding a ‘--runslow’ command line option to
control skipping of ‘pytest.mark.slow’ marked tests:

     # content of conftest.py

     import pytest


     def pytest_addoption(parser):
         parser.addoption(
             "--runslow", action="store_true", default=False, help="run slow tests"
         )


     def pytest_configure(config):
         config.addinivalue_line("markers", "slow: mark test as slow to run")


     def pytest_collection_modifyitems(config, items):
         if config.getoption("--runslow"):
             # --runslow given in cli: do not skip slow tests
             return
         skip_slow = pytest.mark.skip(reason="need --runslow option to run")
         for item in items:
             if "slow" in item.keywords:
                 item.add_marker(skip_slow)

We can now write a test module like this:

     # content of test_module.py
     import pytest


     def test_func_fast():
         pass


     @pytest.mark.slow
     def test_func_slow():
         pass

and when running it will see a skipped “slow” test:

     $ pytest -rs    # "-rs" means report details on the little 's'
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items

     test_module.py .s                                                    [100%]

     ========================= short test summary info ==========================
     SKIPPED [1] test_module.py:8: need --runslow option to run
     ======================= 1 passed, 1 skipped in 0.12s =======================

Or run it including the ‘slow’ marked test:

     $ pytest --runslow
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items

     test_module.py ..                                                    [100%]

     ============================ 2 passed in 0.12s =============================


File: pytest.info,  Node: Writing well integrated assertion helpers,  Next: Detect if running from within a pytest run,  Prev: Control skipping of tests according to command line option,  Up: Basic patterns and examples

32.2.5 Writing well integrated assertion helpers
------------------------------------------------

If you have a test helper function called from a test you can use the
‘pytest.fail’ marker to fail a test with a certain message.  The test
support function will not show up in the traceback if you set the
‘__tracebackhide__’ option somewhere in the helper function.  Example:

     # content of test_checkconfig.py
     import pytest


     def checkconfig(x):
         __tracebackhide__ = True
         if not hasattr(x, "config"):
             pytest.fail(f"not configured: {x}")


     def test_something():
         checkconfig(42)

The ‘__tracebackhide__’ setting influences ‘pytest’ showing of
tracebacks: the ‘checkconfig’ function will not be shown unless the
‘--full-trace’ command line option is specified.  Let’s run our little
function:

     $ pytest -q test_checkconfig.py
     F                                                                    [100%]
     ================================= FAILURES =================================
     ______________________________ test_something ______________________________

         def test_something():
     >       checkconfig(42)
     E       Failed: not configured: 42

     test_checkconfig.py:11: Failed
     ========================= short test summary info ==========================
     FAILED test_checkconfig.py::test_something - Failed: not configured: 42
     1 failed in 0.12s

If you only want to hide certain exceptions, you can set
‘__tracebackhide__’ to a callable which gets the ‘ExceptionInfo’ object.
You can for example use this to make sure unexpected exception types
aren’t hidden:

     import operator

     import pytest


     class ConfigException(Exception):
         pass


     def checkconfig(x):
         __tracebackhide__ = operator.methodcaller("errisinstance", ConfigException)
         if not hasattr(x, "config"):
             raise ConfigException(f"not configured: {x}")


     def test_something():
         checkconfig(42)

This will avoid hiding the exception traceback on unrelated exceptions
(i.e.  bugs in assertion helpers).


File: pytest.info,  Node: Detect if running from within a pytest run,  Next: Adding info to test report header,  Prev: Writing well integrated assertion helpers,  Up: Basic patterns and examples

32.2.6 Detect if running from within a pytest run
-------------------------------------------------

Usually it is a bad idea to make application code behave differently if
called from a test.  But if you absolutely must find out if your
application code is running from a test you can do something like this:

     # content of your_module.py


     _called_from_test = False

     # content of conftest.py


     def pytest_configure(config):
         your_module._called_from_test = True

and then check for the ‘your_module._called_from_test’ flag:

     if your_module._called_from_test:
         # called from within a test run
         ...
     else:
         # called "normally"
         ...

accordingly in your application.


File: pytest.info,  Node: Adding info to test report header,  Next: Profiling test duration,  Prev: Detect if running from within a pytest run,  Up: Basic patterns and examples

32.2.7 Adding info to test report header
----------------------------------------

It’s easy to present extra information in a ‘pytest’ run:

     # content of conftest.py


     def pytest_report_header(config):
         return "project deps: mylib-1.1"

which will add the string to the test header accordingly:

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     project deps: mylib-1.1
     rootdir: /home/sweet/project
     collected 0 items

     ========================== no tests ran in 0.12s ===========================

It is also possible to return a list of strings which will be considered
as several lines of information.  You may consider
‘config.getoption('verbose')’ in order to display more information if
applicable:

     # content of conftest.py


     def pytest_report_header(config):
         if config.getoption("verbose") > 0:
             return ["info1: did you know that ...", "did you?"]

which will add info only when run with “–v”:

     $ pytest -v
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     info1: did you know that ...
     did you?
     rootdir: /home/sweet/project
     collecting ... collected 0 items

     ========================== no tests ran in 0.12s ===========================

and nothing when run plainly:

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 0 items

     ========================== no tests ran in 0.12s ===========================


File: pytest.info,  Node: Profiling test duration,  Next: Incremental testing - test steps,  Prev: Adding info to test report header,  Up: Basic patterns and examples

32.2.8 Profiling test duration
------------------------------

If you have a slow running large test suite you might want to find out
which tests are the slowest.  Let’s make an artificial test suite:

     # content of test_some_are_slow.py
     import time


     def test_funcfast():
         time.sleep(0.1)


     def test_funcslow1():
         time.sleep(0.2)


     def test_funcslow2():
         time.sleep(0.3)

Now we can profile which test functions execute the slowest:

     $ pytest --durations=3
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 3 items

     test_some_are_slow.py ...                                            [100%]

     =========================== slowest 3 durations ============================
     0.30s call     test_some_are_slow.py::test_funcslow2
     0.20s call     test_some_are_slow.py::test_funcslow1
     0.10s call     test_some_are_slow.py::test_funcfast
     ============================ 3 passed in 0.12s =============================


File: pytest.info,  Node: Incremental testing - test steps,  Next: Package/Directory-level fixtures setups,  Prev: Profiling test duration,  Up: Basic patterns and examples

32.2.9 Incremental testing - test steps
---------------------------------------

Sometimes you may have a testing situation which consists of a series of
test steps.  If one step fails it makes no sense to execute further
steps as they are all expected to fail anyway and their tracebacks add
no insight.  Here is a simple ‘conftest.py’ file which introduces an
‘incremental’ marker which is to be used on classes:

     # content of conftest.py

     from typing import Dict, Tuple

     import pytest

     # store history of failures per test class name and per index in parametrize (if parametrize used)
     _test_failed_incremental: Dict[str, Dict[Tuple[int, ...], str]] = {}


     def pytest_runtest_makereport(item, call):
         if "incremental" in item.keywords:
             # incremental marker is used
             if call.excinfo is not None:
                 # the test has failed
                 # retrieve the class name of the test
                 cls_name = str(item.cls)
                 # retrieve the index of the test (if parametrize is used in combination with incremental)
                 parametrize_index = (
                     tuple(item.callspec.indices.values())
                     if hasattr(item, "callspec")
                     else ()
                 )
                 # retrieve the name of the test function
                 test_name = item.originalname or item.name
                 # store in _test_failed_incremental the original name of the failed test
                 _test_failed_incremental.setdefault(cls_name, {}).setdefault(
                     parametrize_index, test_name
                 )


     def pytest_runtest_setup(item):
         if "incremental" in item.keywords:
             # retrieve the class name of the test
             cls_name = str(item.cls)
             # check if a previous test has failed for this class
             if cls_name in _test_failed_incremental:
                 # retrieve the index of the test (if parametrize is used in combination with incremental)
                 parametrize_index = (
                     tuple(item.callspec.indices.values())
                     if hasattr(item, "callspec")
                     else ()
                 )
                 # retrieve the name of the first test function to fail for this class name and index
                 test_name = _test_failed_incremental[cls_name].get(parametrize_index, None)
                 # if name found, test has failed for the combination of class name & test name
                 if test_name is not None:
                     pytest.xfail(f"previous test failed ({test_name})")

These two hook implementations work together to abort incremental-marked
tests in a class.  Here is a test module example:

     # content of test_step.py

     import pytest


     @pytest.mark.incremental
     class TestUserHandling:
         def test_login(self):
             pass

         def test_modification(self):
             assert 0

         def test_deletion(self):
             pass


     def test_normal():
         pass

If we run this:

     $ pytest -rx
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 4 items

     test_step.py .Fx.                                                    [100%]

     ================================= FAILURES =================================
     ____________________ TestUserHandling.test_modification ____________________

     self = <test_step.TestUserHandling object at 0xdeadbeef0001>

         def test_modification(self):
     >       assert 0
     E       assert 0

     test_step.py:11: AssertionError
     ========================= short test summary info ==========================
     XFAIL test_step.py::TestUserHandling::test_deletion
       reason: previous test failed (test_modification)
     ================== 1 failed, 2 passed, 1 xfailed in 0.12s ==================

We’ll see that ‘test_deletion’ was not executed because
‘test_modification’ failed.  It is reported as an “expected failure”.


File: pytest.info,  Node: Package/Directory-level fixtures setups,  Next: Post-process test reports / failures,  Prev: Incremental testing - test steps,  Up: Basic patterns and examples

32.2.10 Package/Directory-level fixtures (setups)
-------------------------------------------------

If you have nested test directories, you can have per-directory fixture
scopes by placing fixture functions in a ‘conftest.py’ file in that
directory.  You can use all types of fixtures including *note autouse
fixtures: 4c. which are the equivalent of xUnit’s setup/teardown
concept.  It’s however recommended to have explicit fixture references
in your tests or test classes rather than relying on implicitly
executing setup/teardown functions, especially if they are far away from
the actual tests.

Here is an example for making a ‘db’ fixture available in a directory:

     # content of a/conftest.py
     import pytest


     class DB:
         pass


     @pytest.fixture(scope="session")
     def db():
         return DB()

and then a test module in that directory:

     # content of a/test_db.py
     def test_a1(db):
         assert 0, db  # to show value

another test module:

     # content of a/test_db2.py
     def test_a2(db):
         assert 0, db  # to show value

and then a module in a sister directory which will not see the ‘db’
fixture:

     # content of b/test_error.py
     def test_root(db):  # no db here, will error out
         pass

We can run this:

     $ pytest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 7 items

     test_step.py .Fx.                                                    [ 57%]
     a/test_db.py F                                                       [ 71%]
     a/test_db2.py F                                                      [ 85%]
     b/test_error.py E                                                    [100%]

     ================================== ERRORS ==================================
     _______________________ ERROR at setup of test_root ________________________
     file /home/sweet/project/b/test_error.py, line 1
       def test_root(db):  # no db here, will error out
     E       fixture 'db' not found
     >       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
     >       use 'pytest --fixtures [testpath]' for help on them.

     /home/sweet/project/b/test_error.py:1
     ================================= FAILURES =================================
     ____________________ TestUserHandling.test_modification ____________________

     self = <test_step.TestUserHandling object at 0xdeadbeef0002>

         def test_modification(self):
     >       assert 0
     E       assert 0

     test_step.py:11: AssertionError
     _________________________________ test_a1 __________________________________

     db = <conftest.DB object at 0xdeadbeef0003>

         def test_a1(db):
     >       assert 0, db  # to show value
     E       AssertionError: <conftest.DB object at 0xdeadbeef0003>
     E       assert 0

     a/test_db.py:2: AssertionError
     _________________________________ test_a2 __________________________________

     db = <conftest.DB object at 0xdeadbeef0003>

         def test_a2(db):
     >       assert 0, db  # to show value
     E       AssertionError: <conftest.DB object at 0xdeadbeef0003>
     E       assert 0

     a/test_db2.py:2: AssertionError
     ========================= short test summary info ==========================
     FAILED test_step.py::TestUserHandling::test_modification - assert 0
     FAILED a/test_db.py::test_a1 - AssertionError: <conftest.DB object at 0x7...
     FAILED a/test_db2.py::test_a2 - AssertionError: <conftest.DB object at 0x...
     ERROR b/test_error.py::test_root
     ============= 3 failed, 2 passed, 1 xfailed, 1 error in 0.12s ==============

The two test modules in the ‘a’ directory see the same ‘db’ fixture
instance while the one test in the sister-directory ‘b’ doesn’t see it.
We could of course also define a ‘db’ fixture in that sister directory’s
‘conftest.py’ file.  Note that each fixture is only instantiated if
there is a test actually needing it (unless you use “autouse” fixture
which are always executed ahead of the first test executing).


File: pytest.info,  Node: Post-process test reports / failures,  Next: Making test result information available in fixtures,  Prev: Package/Directory-level fixtures setups,  Up: Basic patterns and examples

32.2.11 Post-process test reports / failures
--------------------------------------------

If you want to postprocess test reports and need access to the executing
environment you can implement a hook that gets called when the test
“report” object is about to be created.  Here we write out all failing
test calls and also access a fixture (if it was used by the test) in
case you want to query/look at it during your post processing.  In our
case we just write some information out to a ‘failures’ file:

     # content of conftest.py

     import os.path

     import pytest


     @pytest.hookimpl(tryfirst=True, hookwrapper=True)
     def pytest_runtest_makereport(item, call):
         # execute all other hooks to obtain the report object
         outcome = yield
         rep = outcome.get_result()

         # we only look at actual failing test calls, not setup/teardown
         if rep.when == "call" and rep.failed:
             mode = "a" if os.path.exists("failures") else "w"
             with open("failures", mode) as f:
                 # let's also access a fixture for the fun of it
                 if "tmp_path" in item.fixturenames:
                     extra = " ({})".format(item.funcargs["tmp_path"])
                 else:
                     extra = ""

                 f.write(rep.nodeid + extra + "\n")

if you then have failing tests:

     # content of test_module.py
     def test_fail1(tmp_path):
         assert 0


     def test_fail2():
         assert 0

and run them:

     $ pytest test_module.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items

     test_module.py FF                                                    [100%]

     ================================= FAILURES =================================
     ________________________________ test_fail1 ________________________________

     tmp_path = PosixPath('PYTEST_TMPDIR/test_fail10')

         def test_fail1(tmp_path):
     >       assert 0
     E       assert 0

     test_module.py:2: AssertionError
     ________________________________ test_fail2 ________________________________

         def test_fail2():
     >       assert 0
     E       assert 0

     test_module.py:6: AssertionError
     ========================= short test summary info ==========================
     FAILED test_module.py::test_fail1 - assert 0
     FAILED test_module.py::test_fail2 - assert 0
     ============================ 2 failed in 0.12s =============================

you will have a “failures” file which contains the failing test ids:

     $ cat failures
     test_module.py::test_fail1 (PYTEST_TMPDIR/test_fail10)
     test_module.py::test_fail2


File: pytest.info,  Node: Making test result information available in fixtures,  Next: PYTEST_CURRENT_TEST environment variable,  Prev: Post-process test reports / failures,  Up: Basic patterns and examples

32.2.12 Making test result information available in fixtures
------------------------------------------------------------

If you want to make test result reports available in fixture finalizers
here is a little example implemented via a local plugin:

     # content of conftest.py

     import pytest


     @pytest.hookimpl(tryfirst=True, hookwrapper=True)
     def pytest_runtest_makereport(item, call):
         # execute all other hooks to obtain the report object
         outcome = yield
         rep = outcome.get_result()

         # set a report attribute for each phase of a call, which can
         # be "setup", "call", "teardown"

         setattr(item, "rep_" + rep.when, rep)


     @pytest.fixture
     def something(request):
         yield
         # request.node is an "item" because we use the default
         # "function" scope
         if request.node.rep_setup.failed:
             print("setting up a test failed!", request.node.nodeid)
         elif request.node.rep_setup.passed:
             if request.node.rep_call.failed:
                 print("executing test failed", request.node.nodeid)

if you then have failing tests:

     # content of test_module.py

     import pytest


     @pytest.fixture
     def other():
         assert 0


     def test_setup_fails(something, other):
         pass


     def test_call_fails(something):
         assert 0


     def test_fail2():
         assert 0

and run it:

     $ pytest -s test_module.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 3 items

     test_module.py Esetting up a test failed! test_module.py::test_setup_fails
     Fexecuting test failed test_module.py::test_call_fails
     F

     ================================== ERRORS ==================================
     ____________________ ERROR at setup of test_setup_fails ____________________

         @pytest.fixture
         def other():
     >       assert 0
     E       assert 0

     test_module.py:7: AssertionError
     ================================= FAILURES =================================
     _____________________________ test_call_fails ______________________________

     something = None

         def test_call_fails(something):
     >       assert 0
     E       assert 0

     test_module.py:15: AssertionError
     ________________________________ test_fail2 ________________________________

         def test_fail2():
     >       assert 0
     E       assert 0

     test_module.py:19: AssertionError
     ========================= short test summary info ==========================
     FAILED test_module.py::test_call_fails - assert 0
     FAILED test_module.py::test_fail2 - assert 0
     ERROR test_module.py::test_setup_fails - assert 0
     ======================== 2 failed, 1 error in 0.12s ========================

You’ll see that the fixture finalizers could use the precise reporting
information.


File: pytest.info,  Node: PYTEST_CURRENT_TEST environment variable,  Next: Freezing pytest,  Prev: Making test result information available in fixtures,  Up: Basic patterns and examples

32.2.13 ‘PYTEST_CURRENT_TEST’ environment variable
--------------------------------------------------

Sometimes a test session might get stuck and there might be no easy way
to figure out which test got stuck, for example if pytest was run in
quiet mode (‘-q’) or you don’t have access to the console output.  This
is particularly a problem if the problem happens only sporadically, the
famous “flaky” kind of tests.

‘pytest’ sets the *note PYTEST_CURRENT_TEST: 41a. environment variable
when running tests, which can be inspected by process monitoring
utilities or libraries like psutil(1) to discover which test got stuck
if necessary:

     import psutil

     for pid in psutil.pids():
         environ = psutil.Process(pid).environ()
         if "PYTEST_CURRENT_TEST" in environ:
             print(f'pytest process {pid} running: {environ["PYTEST_CURRENT_TEST"]}')

During the test session pytest will set ‘PYTEST_CURRENT_TEST’ to the
current test *note nodeid: 1d. and the current stage, which can be
‘setup’, ‘call’, or ‘teardown’.

For example, when running a single test function named ‘test_foo’ from
‘foo_module.py’, ‘PYTEST_CURRENT_TEST’ will be set to:

  1. ‘foo_module.py::test_foo (setup)’

  2. ‘foo_module.py::test_foo (call)’

  3. ‘foo_module.py::test_foo (teardown)’

In that order.

     Note: The contents of ‘PYTEST_CURRENT_TEST’ is meant to be human
     readable and the actual format can be changed between releases
     (even bug fixes) so it shouldn’t be relied on for scripting or
     automation.

   ---------- Footnotes ----------

   (1) https://pypi.org/project/psutil/


File: pytest.info,  Node: Freezing pytest,  Prev: PYTEST_CURRENT_TEST environment variable,  Up: Basic patterns and examples

32.2.14 Freezing pytest
-----------------------

If you freeze your application using a tool like PyInstaller(1) in order
to distribute it to your end-users, it is a good idea to also package
your test runner and run your tests using the frozen application.  This
way packaging errors such as dependencies not being included into the
executable can be detected early while also allowing you to send test
files to users so they can run them in their machines, which can be
useful to obtain more information about a hard to reproduce bug.

Fortunately recent ‘PyInstaller’ releases already have a custom hook for
pytest, but if you are using another tool to freeze executables such as
‘cx_freeze’ or ‘py2exe’, you can use ‘pytest.freeze_includes()’ to
obtain the full list of internal pytest modules.  How to configure the
tools to find the internal modules varies from tool to tool, however.

Instead of freezing the pytest runner as a separate executable, you can
make your frozen program work as the pytest runner by some clever
argument handling during program startup.  This allows you to have a
single executable, which is usually more convenient.  Please note that
the mechanism for plugin discovery used by pytest (setuptools entry
points) doesn’t work with frozen executables so pytest can’t find any
third party plugins automatically.  To include third party plugins like
‘pytest-timeout’ they must be imported explicitly and passed on to
pytest.main.

     # contents of app_main.py
     import sys

     import pytest_timeout  # Third party plugin

     if len(sys.argv) > 1 and sys.argv[1] == "--pytest":
         import pytest

         sys.exit(pytest.main(sys.argv[2:], plugins=[pytest_timeout]))
     else:
         # normal application execution: at this point argv can be parsed
         # by your argument-parsing library of choice as usual
         ...

This allows you to execute tests using the frozen application with
standard ‘pytest’ command-line options:

     ./app_main --pytest --verbose --tb=long --junitxml=results.xml test-suite/

   ---------- Footnotes ----------

   (1) https://pyinstaller.readthedocs.io


File: pytest.info,  Node: Parametrizing tests,  Next: Working with custom markers,  Prev: Basic patterns and examples,  Up: Examples and customization tricks

32.3 Parametrizing tests
========================

‘pytest’ allows to easily parametrize test functions.  For basic docs,
see *note How to parametrize fixtures and test functions: 92.

In the following we provide some examples using the builtin mechanisms.

* Menu:

* Generating parameters combinations, depending on command line: Generating parameters combinations depending on command line.
* Different options for test IDs::
* A quick port of “testscenarios”::
* Deferring the setup of parametrized resources::
* Indirect parametrization::
* Apply indirect on particular arguments::
* Parametrizing test methods through per-class configuration::
* Indirect parametrization with multiple fixtures::
* Indirect parametrization of optional implementations/imports::
* Set marks or test ID for individual parametrized test::
* Parametrizing conditional raising::


File: pytest.info,  Node: Generating parameters combinations depending on command line,  Next: Different options for test IDs,  Up: Parametrizing tests

32.3.1 Generating parameters combinations, depending on command line
--------------------------------------------------------------------

Let’s say we want to execute a test with different computation
parameters and the parameter range shall be determined by a command line
argument.  Let’s first write a simple (do-nothing) computation test:

     # content of test_compute.py


     def test_compute(param1):
         assert param1 < 4

Now we add a test configuration like this:

     # content of conftest.py


     def pytest_addoption(parser):
         parser.addoption("--all", action="store_true", help="run all combinations")


     def pytest_generate_tests(metafunc):
         if "param1" in metafunc.fixturenames:
             if metafunc.config.getoption("all"):
                 end = 5
             else:
                 end = 2
             metafunc.parametrize("param1", range(end))

This means that we only run 2 tests if we do not pass ‘--all’:

     $ pytest -q test_compute.py
     ..                                                                   [100%]
     2 passed in 0.12s

We run only two computations, so we see two dots.  let’s run the full
monty:

     $ pytest -q --all
     ....F                                                                [100%]
     ================================= FAILURES =================================
     _____________________________ test_compute[4] ______________________________

     param1 = 4

         def test_compute(param1):
     >       assert param1 < 4
     E       assert 4 < 4

     test_compute.py:4: AssertionError
     ========================= short test summary info ==========================
     FAILED test_compute.py::test_compute[4] - assert 4 < 4
     1 failed, 4 passed in 0.12s

As expected when running the full range of ‘param1’ values we’ll get an
error on the last one.


File: pytest.info,  Node: Different options for test IDs,  Next: A quick port of “testscenarios”,  Prev: Generating parameters combinations depending on command line,  Up: Parametrizing tests

32.3.2 Different options for test IDs
-------------------------------------

pytest will build a string that is the test ID for each set of values in
a parametrized test.  These IDs can be used with ‘-k’ to select specific
cases to run, and they will also identify the specific case when one is
failing.  Running pytest with ‘--collect-only’ will show the generated
IDs.

Numbers, strings, booleans and None will have their usual string
representation used in the test ID. For other objects, pytest will make
a string based on the argument name:

     # content of test_time.py

     from datetime import datetime, timedelta

     import pytest

     testdata = [
         (datetime(2001, 12, 12), datetime(2001, 12, 11), timedelta(1)),
         (datetime(2001, 12, 11), datetime(2001, 12, 12), timedelta(-1)),
     ]


     @pytest.mark.parametrize("a,b,expected", testdata)
     def test_timedistance_v0(a, b, expected):
         diff = a - b
         assert diff == expected


     @pytest.mark.parametrize("a,b,expected", testdata, ids=["forward", "backward"])
     def test_timedistance_v1(a, b, expected):
         diff = a - b
         assert diff == expected


     def idfn(val):
         if isinstance(val, (datetime,)):
             # note this wouldn't show any hours/minutes/seconds
             return val.strftime("%Y%m%d")


     @pytest.mark.parametrize("a,b,expected", testdata, ids=idfn)
     def test_timedistance_v2(a, b, expected):
         diff = a - b
         assert diff == expected


     @pytest.mark.parametrize(
         "a,b,expected",
         [
             pytest.param(
                 datetime(2001, 12, 12), datetime(2001, 12, 11), timedelta(1), id="forward"
             ),
             pytest.param(
                 datetime(2001, 12, 11), datetime(2001, 12, 12), timedelta(-1), id="backward"
             ),
         ],
     )
     def test_timedistance_v3(a, b, expected):
         diff = a - b
         assert diff == expected

In ‘test_timedistance_v0’, we let pytest generate the test IDs.

In ‘test_timedistance_v1’, we specified ‘ids’ as a list of strings which
were used as the test IDs.  These are succinct, but can be a pain to
maintain.

In ‘test_timedistance_v2’, we specified ‘ids’ as a function that can
generate a string representation to make part of the test ID. So our
‘datetime’ values use the label generated by ‘idfn’, but because we
didn’t generate a label for ‘timedelta’ objects, they are still using
the default pytest representation:

     $ pytest test_time.py --collect-only
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 8 items

     <Module test_time.py>
       <Function test_timedistance_v0[a0-b0-expected0]>
       <Function test_timedistance_v0[a1-b1-expected1]>
       <Function test_timedistance_v1[forward]>
       <Function test_timedistance_v1[backward]>
       <Function test_timedistance_v2[20011212-20011211-expected0]>
       <Function test_timedistance_v2[20011211-20011212-expected1]>
       <Function test_timedistance_v3[forward]>
       <Function test_timedistance_v3[backward]>

     ======================== 8 tests collected in 0.12s ========================

In ‘test_timedistance_v3’, we used ‘pytest.param’ to specify the test
IDs together with the actual data, instead of listing them separately.


File: pytest.info,  Node: A quick port of “testscenarios”,  Next: Deferring the setup of parametrized resources,  Prev: Different options for test IDs,  Up: Parametrizing tests

32.3.3 A quick port of “testscenarios”
--------------------------------------

Here is a quick port to run tests configured with testscenarios(1), an
add-on from Robert Collins for the standard unittest framework.  We only
have to work a bit to construct the correct arguments for pytest’s
‘Metafunc.parametrize()’:

     # content of test_scenarios.py


     def pytest_generate_tests(metafunc):
         idlist = []
         argvalues = []
         for scenario in metafunc.cls.scenarios:
             idlist.append(scenario[0])
             items = scenario[1].items()
             argnames = [x[0] for x in items]
             argvalues.append([x[1] for x in items])
         metafunc.parametrize(argnames, argvalues, ids=idlist, scope="class")


     scenario1 = ("basic", {"attribute": "value"})
     scenario2 = ("advanced", {"attribute": "value2"})


     class TestSampleWithScenarios:
         scenarios = [scenario1, scenario2]

         def test_demo1(self, attribute):
             assert isinstance(attribute, str)

         def test_demo2(self, attribute):
             assert isinstance(attribute, str)

this is a fully self-contained example which you can run with:

     $ pytest test_scenarios.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 4 items

     test_scenarios.py ....                                               [100%]

     ============================ 4 passed in 0.12s =============================

If you just collect tests you’ll also nicely see ‘advanced’ and ‘basic’
as variants for the test function:

     $ pytest --collect-only test_scenarios.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 4 items

     <Module test_scenarios.py>
       <Class TestSampleWithScenarios>
         <Function test_demo1[basic]>
         <Function test_demo2[basic]>
         <Function test_demo1[advanced]>
         <Function test_demo2[advanced]>

     ======================== 4 tests collected in 0.12s ========================

Note that we told ‘metafunc.parametrize()’ that your scenario values
should be considered class-scoped.  With pytest-2.3 this leads to a
resource-based ordering.

   ---------- Footnotes ----------

   (1) https://pypi.org/project/testscenarios/


File: pytest.info,  Node: Deferring the setup of parametrized resources,  Next: Indirect parametrization,  Prev: A quick port of “testscenarios”,  Up: Parametrizing tests

32.3.4 Deferring the setup of parametrized resources
----------------------------------------------------

The parametrization of test functions happens at collection time.  It is
a good idea to setup expensive resources like DB connections or
subprocess only when the actual test is run.  Here is a simple example
how you can achieve that.  This test requires a ‘db’ object fixture:

     # content of test_backends.py

     import pytest


     def test_db_initialized(db):
         # a dummy test
         if db.__class__.__name__ == "DB2":
             pytest.fail("deliberately failing for demo purposes")

We can now add a test configuration that generates two invocations of
the ‘test_db_initialized’ function and also implements a factory that
creates a database object for the actual test invocations:

     # content of conftest.py
     import pytest


     def pytest_generate_tests(metafunc):
         if "db" in metafunc.fixturenames:
             metafunc.parametrize("db", ["d1", "d2"], indirect=True)


     class DB1:
         "one database object"


     class DB2:
         "alternative database object"


     @pytest.fixture
     def db(request):
         if request.param == "d1":
             return DB1()
         elif request.param == "d2":
             return DB2()
         else:
             raise ValueError("invalid internal test config")

Let’s first see how it looks like at collection time:

     $ pytest test_backends.py --collect-only
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items

     <Module test_backends.py>
       <Function test_db_initialized[d1]>
       <Function test_db_initialized[d2]>

     ======================== 2 tests collected in 0.12s ========================

And then when we run the test:

     $ pytest -q test_backends.py
     .F                                                                   [100%]
     ================================= FAILURES =================================
     _________________________ test_db_initialized[d2] __________________________

     db = <conftest.DB2 object at 0xdeadbeef0001>

         def test_db_initialized(db):
             # a dummy test
             if db.__class__.__name__ == "DB2":
     >           pytest.fail("deliberately failing for demo purposes")
     E           Failed: deliberately failing for demo purposes

     test_backends.py:8: Failed
     ========================= short test summary info ==========================
     FAILED test_backends.py::test_db_initialized[d2] - Failed: deliberately f...
     1 failed, 1 passed in 0.12s

The first invocation with ‘db == "DB1"’ passed while the second with ‘db
== "DB2"’ failed.  Our ‘db’ fixture function has instantiated each of
the DB values during the setup phase while the ‘pytest_generate_tests’
generated two according calls to the ‘test_db_initialized’ during the
collection phase.


File: pytest.info,  Node: Indirect parametrization,  Next: Apply indirect on particular arguments,  Prev: Deferring the setup of parametrized resources,  Up: Parametrizing tests

32.3.5 Indirect parametrization
-------------------------------

Using the ‘indirect=True’ parameter when parametrizing a test allows to
parametrize a test with a fixture receiving the values before passing
them to a test:

     import pytest


     @pytest.fixture
     def fixt(request):
         return request.param * 3


     @pytest.mark.parametrize("fixt", ["a", "b"], indirect=True)
     def test_indirect(fixt):
         assert len(fixt) == 3

This can be used, for example, to do more expensive setup at test run
time in the fixture, rather than having to run those setup steps at
collection time.


File: pytest.info,  Node: Apply indirect on particular arguments,  Next: Parametrizing test methods through per-class configuration,  Prev: Indirect parametrization,  Up: Parametrizing tests

32.3.6 Apply indirect on particular arguments
---------------------------------------------

Very often parametrization uses more than one argument name.  There is
opportunity to apply ‘indirect’ parameter on particular arguments.  It
can be done by passing list or tuple of arguments’ names to ‘indirect’.
In the example below there is a function ‘test_indirect’ which uses two
fixtures: ‘x’ and ‘y’.  Here we give to indirect the list, which
contains the name of the fixture ‘x’.  The indirect parameter will be
applied to this argument only, and the value ‘a’ will be passed to
respective fixture function:

     # content of test_indirect_list.py

     import pytest


     @pytest.fixture(scope="function")
     def x(request):
         return request.param * 3


     @pytest.fixture(scope="function")
     def y(request):
         return request.param * 2


     @pytest.mark.parametrize("x, y", [("a", "b")], indirect=["x"])
     def test_indirect(x, y):
         assert x == "aaa"
         assert y == "b"

The result of this test will be successful:

     $ pytest -v test_indirect_list.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 1 item

     test_indirect_list.py::test_indirect[a-b] PASSED                     [100%]

     ============================ 1 passed in 0.12s =============================


File: pytest.info,  Node: Parametrizing test methods through per-class configuration,  Next: Indirect parametrization with multiple fixtures,  Prev: Apply indirect on particular arguments,  Up: Parametrizing tests

32.3.7 Parametrizing test methods through per-class configuration
-----------------------------------------------------------------

Here is an example ‘pytest_generate_tests’ function implementing a
parametrization scheme similar to Michael Foord’s unittest
parametrizer(1) but in a lot less code:

     # content of ./test_parametrize.py
     import pytest


     def pytest_generate_tests(metafunc):
         # called once per each test function
         funcarglist = metafunc.cls.params[metafunc.function.__name__]
         argnames = sorted(funcarglist[0])
         metafunc.parametrize(
             argnames, [[funcargs[name] for name in argnames] for funcargs in funcarglist]
         )


     class TestClass:
         # a map specifying multiple argument sets for a test method
         params = {
             "test_equals": [dict(a=1, b=2), dict(a=3, b=3)],
             "test_zerodivision": [dict(a=1, b=0)],
         }

         def test_equals(self, a, b):
             assert a == b

         def test_zerodivision(self, a, b):
             with pytest.raises(ZeroDivisionError):
                 a / b

Our test generator looks up a class-level definition which specifies
which argument sets to use for each test function.  Let’s run it:

     $ pytest -q
     F..                                                                  [100%]
     ================================= FAILURES =================================
     ________________________ TestClass.test_equals[1-2] ________________________

     self = <test_parametrize.TestClass object at 0xdeadbeef0002>, a = 1, b = 2

         def test_equals(self, a, b):
     >       assert a == b
     E       assert 1 == 2

     test_parametrize.py:21: AssertionError
     ========================= short test summary info ==========================
     FAILED test_parametrize.py::TestClass::test_equals[1-2] - assert 1 == 2
     1 failed, 2 passed in 0.12s

   ---------- Footnotes ----------

   (1) 
https://github.com/testing-cabal/unittest-ext/blob/master/params.py


File: pytest.info,  Node: Indirect parametrization with multiple fixtures,  Next: Indirect parametrization of optional implementations/imports,  Prev: Parametrizing test methods through per-class configuration,  Up: Parametrizing tests

32.3.8 Indirect parametrization with multiple fixtures
------------------------------------------------------

Here is a stripped down real-life example of using parametrized testing
for testing serialization of objects between different python
interpreters.  We define a ‘test_basic_objects’ function which is to be
run with different sets of arguments for its three arguments:

   * ‘python1’: first python interpreter, run to pickle-dump an object
     to a file

   * ‘python2’: second interpreter, run to pickle-load an object from a
     file

   * ‘obj’: object to be dumped/loaded

     """
     module containing a parametrized tests testing cross-python
     serialization via the pickle module.
     """
     import shutil
     import subprocess
     import textwrap

     import pytest

     pythonlist = ["python3.5", "python3.6", "python3.7"]


     @pytest.fixture(params=pythonlist)
     def python1(request, tmp_path):
         picklefile = tmp_path / "data.pickle"
         return Python(request.param, picklefile)


     @pytest.fixture(params=pythonlist)
     def python2(request, python1):
         return Python(request.param, python1.picklefile)


     class Python:
         def __init__(self, version, picklefile):
             self.pythonpath = shutil.which(version)
             if not self.pythonpath:
                 pytest.skip(f"{version!r} not found")
             self.picklefile = picklefile

         def dumps(self, obj):
             dumpfile = self.picklefile.with_name("dump.py")
             dumpfile.write_text(
                 textwrap.dedent(
                     r"""
                     import pickle
                     f = open({!r}, 'wb')
                     s = pickle.dump({!r}, f, protocol=2)
                     f.close()
                     """.format(
                         str(self.picklefile), obj
                     )
                 )
             )
             subprocess.check_call((self.pythonpath, str(dumpfile)))

         def load_and_is_true(self, expression):
             loadfile = self.picklefile.with_name("load.py")
             loadfile.write_text(
                 textwrap.dedent(
                     r"""
                     import pickle
                     f = open({!r}, 'rb')
                     obj = pickle.load(f)
                     f.close()
                     res = eval({!r})
                     if not res:
                         raise SystemExit(1)
                     """.format(
                         str(self.picklefile), expression
                     )
                 )
             )
             print(loadfile)
             subprocess.check_call((self.pythonpath, str(loadfile)))


     @pytest.mark.parametrize("obj", [42, {}, {1: 3}])
     def test_basic_objects(python1, python2, obj):
         python1.dumps(obj)
         python2.load_and_is_true(f"obj == {obj}")

Running it results in some skips if we don’t have all the python
interpreters installed and otherwise runs all combinations (3
interpreters times 3 interpreters times 3 objects to
serialize/deserialize):

     . $ pytest -rs -q multipython.py
     sssssssssssssssssssssssssss                                          [100%]
     ========================= short test summary info ==========================
     SKIPPED [9] multipython.py:29: 'python3.5' not found
     SKIPPED [9] multipython.py:29: 'python3.6' not found
     SKIPPED [9] multipython.py:29: 'python3.7' not found
     27 skipped in 0.12s


File: pytest.info,  Node: Indirect parametrization of optional implementations/imports,  Next: Set marks or test ID for individual parametrized test,  Prev: Indirect parametrization with multiple fixtures,  Up: Parametrizing tests

32.3.9 Indirect parametrization of optional implementations/imports
-------------------------------------------------------------------

If you want to compare the outcomes of several implementations of a
given API, you can write test functions that receive the already
imported implementations and get skipped in case the implementation is
not importable/available.  Let’s say we have a “base” implementation and
the other (possibly optimized ones) need to provide similar results:

     # content of conftest.py

     import pytest


     @pytest.fixture(scope="session")
     def basemod(request):
         return pytest.importorskip("base")


     @pytest.fixture(scope="session", params=["opt1", "opt2"])
     def optmod(request):
         return pytest.importorskip(request.param)

And then a base implementation of a simple function:

     # content of base.py
     def func1():
         return 1

And an optimized version:

     # content of opt1.py
     def func1():
         return 1.0001

And finally a little test module:

     # content of test_module.py


     def test_func1(basemod, optmod):
         assert round(basemod.func1(), 3) == round(optmod.func1(), 3)

If you run this with reporting for skips enabled:

     $ pytest -rs test_module.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 2 items

     test_module.py .s                                                    [100%]

     ========================= short test summary info ==========================
     SKIPPED [1] conftest.py:12: could not import 'opt2': No module named 'opt2'
     ======================= 1 passed, 1 skipped in 0.12s =======================

You’ll see that we don’t have an ‘opt2’ module and thus the second test
run of our ‘test_func1’ was skipped.  A few notes:

   - the fixture functions in the ‘conftest.py’ file are
     “session-scoped” because we don’t need to import more than once

   - if you have multiple test functions and a skipped import, you will
     see the ‘[1]’ count increasing in the report

   - you can put *note @pytest.mark.parametrize: 6c. style
     parametrization on the test functions to parametrize input/output
     values as well.


File: pytest.info,  Node: Set marks or test ID for individual parametrized test,  Next: Parametrizing conditional raising,  Prev: Indirect parametrization of optional implementations/imports,  Up: Parametrizing tests

32.3.10 Set marks or test ID for individual parametrized test
-------------------------------------------------------------

Use ‘pytest.param’ to apply marks or set test ID to individual
parametrized test.  For example:

     # content of test_pytest_param_example.py
     import pytest


     @pytest.mark.parametrize(
         "test_input,expected",
         [
             ("3+5", 8),
             pytest.param("1+7", 8, marks=pytest.mark.basic),
             pytest.param("2+4", 6, marks=pytest.mark.basic, id="basic_2+4"),
             pytest.param(
                 "6*9", 42, marks=[pytest.mark.basic, pytest.mark.xfail], id="basic_6*9"
             ),
         ],
     )
     def test_eval(test_input, expected):
         assert eval(test_input) == expected

In this example, we have 4 parametrized tests.  Except for the first
test, we mark the rest three parametrized tests with the custom marker
‘basic’, and for the fourth test we also use the built-in mark ‘xfail’
to indicate this test is expected to fail.  For explicitness, we set
test ids for some tests.

Then run ‘pytest’ with verbose mode and with only the ‘basic’ marker:

     $ pytest -v -m basic
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 24 items / 21 deselected / 3 selected

     test_pytest_param_example.py::test_eval[1+7-8] PASSED                [ 33%]
     test_pytest_param_example.py::test_eval[basic_2+4] PASSED            [ 66%]
     test_pytest_param_example.py::test_eval[basic_6*9] XFAIL             [100%]

     =============== 2 passed, 21 deselected, 1 xfailed in 0.12s ================

As the result:

   - Four tests were collected

   - One test was deselected because it doesn’t have the ‘basic’ mark.

   - Three tests with the ‘basic’ mark was selected.

   - The test ‘test_eval[1+7-8]’ passed, but the name is autogenerated
     and confusing.

   - The test ‘test_eval[basic_2+4]’ passed.

   - The test ‘test_eval[basic_6*9]’ was expected to fail and did fail.


File: pytest.info,  Node: Parametrizing conditional raising,  Prev: Set marks or test ID for individual parametrized test,  Up: Parametrizing tests

32.3.11 Parametrizing conditional raising
-----------------------------------------

Use *note pytest.raises(): 31. with the *note pytest.mark.parametrize:
95. decorator to write parametrized tests in which some tests raise
exceptions and others do not.

It may be helpful to use ‘nullcontext’ as a complement to ‘raises’.

For example:

     from contextlib import nullcontext as does_not_raise

     import pytest


     @pytest.mark.parametrize(
         "example_input,expectation",
         [
             (3, does_not_raise()),
             (2, does_not_raise()),
             (1, does_not_raise()),
             (0, pytest.raises(ZeroDivisionError)),
         ],
     )
     def test_division(example_input, expectation):
         """Test how much I know division."""
         with expectation:
             assert (6 / example_input) is not None

In the example above, the first three test cases should run
unexceptionally, while the fourth should raise ‘ZeroDivisionError’.


File: pytest.info,  Node: Working with custom markers,  Next: A session-fixture which can look at all collected tests,  Prev: Parametrizing tests,  Up: Examples and customization tricks

32.4 Working with custom markers
================================

Here are some examples using the *note How to mark test functions with
attributes: 14. mechanism.

* Menu:

* Marking test functions and selecting them for a run::
* Selecting tests based on their node ID::
* Using -k expr to select tests based on their name::
* Registering markers::
* Marking whole classes or modules::
* Marking individual tests when using parametrize::
* Custom marker and command line option to control test runs::
* Passing a callable to custom markers::
* Reading markers which were set from multiple places::
* Marking platform specific tests with pytest::
* Automatically adding markers based on test names::


File: pytest.info,  Node: Marking test functions and selecting them for a run,  Next: Selecting tests based on their node ID,  Up: Working with custom markers

32.4.1 Marking test functions and selecting them for a run
----------------------------------------------------------

You can “mark” a test function with custom metadata like this:

     # content of test_server.py

     import pytest


     @pytest.mark.webtest
     def test_send_http():
         pass  # perform some webtest test for your app


     def test_something_quick():
         pass


     def test_another():
         pass


     class TestClass:
         def test_method(self):
             pass

You can then restrict a test run to only run tests marked with
‘webtest’:

     $ pytest -v -m webtest
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 4 items / 3 deselected / 1 selected

     test_server.py::test_send_http PASSED                                [100%]

     ===================== 1 passed, 3 deselected in 0.12s ======================

Or the inverse, running all tests except the webtest ones:

     $ pytest -v -m "not webtest"
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 4 items / 1 deselected / 3 selected

     test_server.py::test_something_quick PASSED                          [ 33%]
     test_server.py::test_another PASSED                                  [ 66%]
     test_server.py::TestClass::test_method PASSED                        [100%]

     ===================== 3 passed, 1 deselected in 0.12s ======================


File: pytest.info,  Node: Selecting tests based on their node ID,  Next: Using -k expr to select tests based on their name,  Prev: Marking test functions and selecting them for a run,  Up: Working with custom markers

32.4.2 Selecting tests based on their node ID
---------------------------------------------

You can provide one or more *note node IDs: 4af. as positional arguments
to select only specified tests.  This makes it easy to select tests
based on their module, class, method, or function name:

     $ pytest -v test_server.py::TestClass::test_method
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 1 item

     test_server.py::TestClass::test_method PASSED                        [100%]

     ============================ 1 passed in 0.12s =============================

You can also select on the class:

     $ pytest -v test_server.py::TestClass
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 1 item

     test_server.py::TestClass::test_method PASSED                        [100%]

     ============================ 1 passed in 0.12s =============================

Or select multiple nodes:

     $ pytest -v test_server.py::TestClass test_server.py::test_send_http
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 2 items

     test_server.py::TestClass::test_method PASSED                        [ 50%]
     test_server.py::test_send_http PASSED                                [100%]

     ============================ 2 passed in 0.12s =============================
     Note: Node IDs are of the form ‘module.py::class::method’ or
     ‘module.py::function’.  Node IDs control which tests are collected,
     so ‘module.py::class’ will select all test methods on the class.
     Nodes are also created for each parameter of a parametrized fixture
     or test, so selecting a parametrized test must include the
     parameter value, e.g.  ‘module.py::function[param]’.

     Node IDs for failing tests are displayed in the test summary info
     when running pytest with the ‘-rf’ option.  You can also construct
     Node IDs from the output of ‘pytest --collectonly’.


File: pytest.info,  Node: Using -k expr to select tests based on their name,  Next: Registering markers,  Prev: Selecting tests based on their node ID,  Up: Working with custom markers

32.4.3 Using ‘-k expr’ to select tests based on their name
----------------------------------------------------------

New in version 2.0/2.3.4.

You can use the ‘-k’ command line option to specify an expression which
implements a substring match on the test names instead of the exact
match on markers that ‘-m’ provides.  This makes it easy to select tests
based on their names:

Changed in version 5.4.

The expression matching is now case-insensitive.

     $ pytest -v -k http  # running with the above defined example module
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 4 items / 3 deselected / 1 selected

     test_server.py::test_send_http PASSED                                [100%]

     ===================== 1 passed, 3 deselected in 0.12s ======================

And you can also run all tests except the ones that match the keyword:

     $ pytest -k "not send_http" -v
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 4 items / 1 deselected / 3 selected

     test_server.py::test_something_quick PASSED                          [ 33%]
     test_server.py::test_another PASSED                                  [ 66%]
     test_server.py::TestClass::test_method PASSED                        [100%]

     ===================== 3 passed, 1 deselected in 0.12s ======================

Or to select “http” and “quick” tests:

     $ pytest -k "http or quick" -v
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project
     collecting ... collected 4 items / 2 deselected / 2 selected

     test_server.py::test_send_http PASSED                                [ 50%]
     test_server.py::test_something_quick PASSED                          [100%]

     ===================== 2 passed, 2 deselected in 0.12s ======================

You can use ‘and’, ‘or’, ‘not’ and parentheses.

In addition to the test’s name, ‘-k’ also matches the names of the
test’s parents (usually, the name of the file and class it’s in),
attributes set on the test function, markers applied to it or its
parents and any *note extra keywords: 3bd. explicitly added to it or its
parents.


File: pytest.info,  Node: Registering markers,  Next: Marking whole classes or modules,  Prev: Using -k expr to select tests based on their name,  Up: Working with custom markers

32.4.4 Registering markers
--------------------------

Registering markers for your test suite is simple:

     # content of pytest.ini
     [pytest]
     markers =
         webtest: mark a test as a webtest.
         slow: mark test as slow.

Multiple custom markers can be registered, by defining each one in its
own line, as shown in above example.

You can ask which markers exist for your test suite - the list includes
our just defined ‘webtest’ and ‘slow’ markers:

     $ pytest --markers
     @pytest.mark.webtest: mark a test as a webtest.

     @pytest.mark.slow: mark test as slow.

     @pytest.mark.filterwarnings(warning): add a warning filter to the given test. see https://docs.pytest.org/en/stable/how-to/capture-warnings.html#pytest-mark-filterwarnings

     @pytest.mark.skip(reason=None): skip the given test function with an optional reason. Example: skip(reason="no way of currently testing this") skips the test.

     @pytest.mark.skipif(condition, ..., *, reason=...): skip the given test function if any of the conditions evaluate to True. Example: skipif(sys.platform == 'win32') skips the test if we are on the win32 platform. See https://docs.pytest.org/en/stable/reference/reference.html#pytest-mark-skipif

     @pytest.mark.xfail(condition, ..., *, reason=..., run=True, raises=None, strict=xfail_strict): mark the test function as an expected failure if any of the conditions evaluate to True. Optionally specify a reason for better reporting and run=False if you don't even want to execute the test function. If only specific exception(s) are expected, you can list them in raises, and if the test fails in other ways, it will be reported as a true failure. See https://docs.pytest.org/en/stable/reference/reference.html#pytest-mark-xfail

     @pytest.mark.parametrize(argnames, argvalues): call a test function multiple times passing in different arguments in turn. argvalues generally needs to be a list of values if argnames specifies only one name or a list of tuples of values if argnames specifies multiple names. Example: @parametrize('arg1', [1,2]) would lead to two calls of the decorated test function, one with arg1=1 and another with arg1=2.see https://docs.pytest.org/en/stable/how-to/parametrize.html for more info and examples.

     @pytest.mark.usefixtures(fixturename1, fixturename2, ...): mark tests as needing all of the specified fixtures. see https://docs.pytest.org/en/stable/explanation/fixtures.html#usefixtures

     @pytest.mark.tryfirst: mark a hook implementation function such that the plugin machinery will try to call it first/as early as possible.

     @pytest.mark.trylast: mark a hook implementation function such that the plugin machinery will try to call it last/as late as possible.

For an example on how to add and work with markers from a plugin, see
*note Custom marker and command line option to control test runs: 4b2.

     Note: It is recommended to explicitly register markers so that:

        * There is one place in your test suite defining your markers

        * Asking for existing markers via ‘pytest --markers’ gives good
          output

        * Typos in function markers are treated as an error if you use
          the ‘--strict-markers’ option.


File: pytest.info,  Node: Marking whole classes or modules,  Next: Marking individual tests when using parametrize,  Prev: Registering markers,  Up: Working with custom markers

32.4.5 Marking whole classes or modules
---------------------------------------

You may use ‘pytest.mark’ decorators with classes to apply markers to
all of its test methods:

     # content of test_mark_classlevel.py
     import pytest


     @pytest.mark.webtest
     class TestClass:
         def test_startup(self):
             pass

         def test_startup_and_more(self):
             pass

This is equivalent to directly applying the decorator to the two test
functions.

To apply marks at the module level, use the *note pytestmark: 73. global
variable:

     import pytest
     pytestmark = pytest.mark.webtest

or multiple markers:

     pytestmark = [pytest.mark.webtest, pytest.mark.slowtest]

Due to legacy reasons, before class decorators were introduced, it is
possible to set the *note pytestmark: 73. attribute on a test class like
this:

     import pytest


     class TestClass:
         pytestmark = pytest.mark.webtest


File: pytest.info,  Node: Marking individual tests when using parametrize,  Next: Custom marker and command line option to control test runs,  Prev: Marking whole classes or modules,  Up: Working with custom markers

32.4.6 Marking individual tests when using parametrize
------------------------------------------------------

When using parametrize, applying a mark will make it apply to each
individual test.  However it is also possible to apply a marker to an
individual test instance:

     import pytest


     @pytest.mark.foo
     @pytest.mark.parametrize(
         ("n", "expected"), [(1, 2), pytest.param(1, 3, marks=pytest.mark.bar), (2, 3)]
     )
     def test_increment(n, expected):
         assert n + 1 == expected

In this example the mark “foo” will apply to each of the three tests,
whereas the “bar” mark is only applied to the second test.  Skip and
xfail marks can also be applied in this way, see *note Skip/xfail with
parametrize: 139.


File: pytest.info,  Node: Custom marker and command line option to control test runs,  Next: Passing a callable to custom markers,  Prev: Marking individual tests when using parametrize,  Up: Working with custom markers

32.4.7 Custom marker and command line option to control test runs
-----------------------------------------------------------------

Plugins can provide custom markers and implement specific behaviour
based on it.  This is a self-contained example which adds a command line
option and a parametrized test function marker to run tests specified
via named environments:

     # content of conftest.py

     import pytest


     def pytest_addoption(parser):
         parser.addoption(
             "-E",
             action="store",
             metavar="NAME",
             help="only run tests matching the environment NAME.",
         )


     def pytest_configure(config):
         # register an additional marker
         config.addinivalue_line(
             "markers", "env(name): mark test to run only on named environment"
         )


     def pytest_runtest_setup(item):
         envnames = [mark.args[0] for mark in item.iter_markers(name="env")]
         if envnames:
             if item.config.getoption("-E") not in envnames:
                 pytest.skip(f"test requires env in {envnames!r}")

A test file using this local plugin:

     # content of test_someenv.py

     import pytest


     @pytest.mark.env("stage1")
     def test_basic_db_operation():
         pass

and an example invocations specifying a different environment than what
the test needs:

     $ pytest -E stage2
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_someenv.py s                                                    [100%]

     ============================ 1 skipped in 0.12s ============================

and here is one that specifies exactly the environment needed:

     $ pytest -E stage1
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 1 item

     test_someenv.py .                                                    [100%]

     ============================ 1 passed in 0.12s =============================

The ‘--markers’ option always gives you a list of available markers:

     $ pytest --markers
     @pytest.mark.env(name): mark test to run only on named environment

     @pytest.mark.filterwarnings(warning): add a warning filter to the given test. see https://docs.pytest.org/en/stable/how-to/capture-warnings.html#pytest-mark-filterwarnings

     @pytest.mark.skip(reason=None): skip the given test function with an optional reason. Example: skip(reason="no way of currently testing this") skips the test.

     @pytest.mark.skipif(condition, ..., *, reason=...): skip the given test function if any of the conditions evaluate to True. Example: skipif(sys.platform == 'win32') skips the test if we are on the win32 platform. See https://docs.pytest.org/en/stable/reference/reference.html#pytest-mark-skipif

     @pytest.mark.xfail(condition, ..., *, reason=..., run=True, raises=None, strict=xfail_strict): mark the test function as an expected failure if any of the conditions evaluate to True. Optionally specify a reason for better reporting and run=False if you don't even want to execute the test function. If only specific exception(s) are expected, you can list them in raises, and if the test fails in other ways, it will be reported as a true failure. See https://docs.pytest.org/en/stable/reference/reference.html#pytest-mark-xfail

     @pytest.mark.parametrize(argnames, argvalues): call a test function multiple times passing in different arguments in turn. argvalues generally needs to be a list of values if argnames specifies only one name or a list of tuples of values if argnames specifies multiple names. Example: @parametrize('arg1', [1,2]) would lead to two calls of the decorated test function, one with arg1=1 and another with arg1=2.see https://docs.pytest.org/en/stable/how-to/parametrize.html for more info and examples.

     @pytest.mark.usefixtures(fixturename1, fixturename2, ...): mark tests as needing all of the specified fixtures. see https://docs.pytest.org/en/stable/explanation/fixtures.html#usefixtures

     @pytest.mark.tryfirst: mark a hook implementation function such that the plugin machinery will try to call it first/as early as possible.

     @pytest.mark.trylast: mark a hook implementation function such that the plugin machinery will try to call it last/as late as possible.


File: pytest.info,  Node: Passing a callable to custom markers,  Next: Reading markers which were set from multiple places,  Prev: Custom marker and command line option to control test runs,  Up: Working with custom markers

32.4.8 Passing a callable to custom markers
-------------------------------------------

Below is the config file that will be used in the next examples:

     # content of conftest.py
     import sys


     def pytest_runtest_setup(item):
         for marker in item.iter_markers(name="my_marker"):
             print(marker)
             sys.stdout.flush()

A custom marker can have its argument set, i.e.  ‘args’ and ‘kwargs’
properties, defined by either invoking it as a callable or using
‘pytest.mark.MARKER_NAME.with_args’.  These two methods achieve the same
effect most of the time.

However, if there is a callable as the single positional argument with
no keyword arguments, using the ‘pytest.mark.MARKER_NAME(c)’ will not
pass ‘c’ as a positional argument but decorate ‘c’ with the custom
marker (see *note MarkDecorator: 14.).  Fortunately,
‘pytest.mark.MARKER_NAME.with_args’ comes to the rescue:

     # content of test_custom_marker.py
     import pytest


     def hello_world(*args, **kwargs):
         return "Hello World"


     @pytest.mark.my_marker.with_args(hello_world)
     def test_with_args():
         pass

The output is as follows:

     $ pytest -q -s
     Mark(name='my_marker', args=(<function hello_world at 0xdeadbeef0001>,), kwargs={})
     .
     1 passed in 0.12s

We can see that the custom marker has its argument set extended with the
function ‘hello_world’.  This is the key difference between creating a
custom marker as a callable, which invokes ‘__call__’ behind the scenes,
and using ‘with_args’.


File: pytest.info,  Node: Reading markers which were set from multiple places,  Next: Marking platform specific tests with pytest,  Prev: Passing a callable to custom markers,  Up: Working with custom markers

32.4.9 Reading markers which were set from multiple places
----------------------------------------------------------

If you are heavily using markers in your test suite you may encounter
the case where a marker is applied several times to a test function.
From plugin code you can read over all such settings.  Example:

     # content of test_mark_three_times.py
     import pytest

     pytestmark = pytest.mark.glob("module", x=1)


     @pytest.mark.glob("class", x=2)
     class TestClass:
         @pytest.mark.glob("function", x=3)
         def test_something(self):
             pass

Here we have the marker “glob” applied three times to the same test
function.  From a conftest file we can read it like this:

     # content of conftest.py
     import sys


     def pytest_runtest_setup(item):
         for mark in item.iter_markers(name="glob"):
             print(f"glob args={mark.args} kwargs={mark.kwargs}")
             sys.stdout.flush()

Let’s run this without capturing output and see what we get:

     $ pytest -q -s
     glob args=('function',) kwargs={'x': 3}
     glob args=('class',) kwargs={'x': 2}
     glob args=('module',) kwargs={'x': 1}
     .
     1 passed in 0.12s


File: pytest.info,  Node: Marking platform specific tests with pytest,  Next: Automatically adding markers based on test names,  Prev: Reading markers which were set from multiple places,  Up: Working with custom markers

32.4.10 Marking platform specific tests with pytest
---------------------------------------------------

Consider you have a test suite which marks tests for particular
platforms, namely ‘pytest.mark.darwin’, ‘pytest.mark.win32’ etc.  and
you also have tests that run on all platforms and have no specific
marker.  If you now want to have a way to only run the tests for your
particular platform, you could use the following plugin:

     # content of conftest.py
     #
     import sys

     import pytest

     ALL = set("darwin linux win32".split())


     def pytest_runtest_setup(item):
         supported_platforms = ALL.intersection(mark.name for mark in item.iter_markers())
         plat = sys.platform
         if supported_platforms and plat not in supported_platforms:
             pytest.skip(f"cannot run on platform {plat}")

then tests will be skipped if they were specified for a different
platform.  Let’s do a little test file to show how this looks like:

     # content of test_plat.py

     import pytest


     @pytest.mark.darwin
     def test_if_apple_is_evil():
         pass


     @pytest.mark.linux
     def test_if_linux_works():
         pass


     @pytest.mark.win32
     def test_if_win32_crashes():
         pass


     def test_runs_everywhere():
         pass

then you will see two tests skipped and two executed tests as expected:

     $ pytest -rs # this option reports skip reasons
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 4 items

     test_plat.py s.s.                                                    [100%]

     ========================= short test summary info ==========================
     SKIPPED [2] conftest.py:12: cannot run on platform linux
     ======================= 2 passed, 2 skipped in 0.12s =======================

Note that if you specify a platform via the marker-command line option
like this:

     $ pytest -m linux
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 4 items / 3 deselected / 1 selected

     test_plat.py .                                                       [100%]

     ===================== 1 passed, 3 deselected in 0.12s ======================

then the unmarked-tests will not be run.  It is thus a way to restrict
the run to the specific tests.


File: pytest.info,  Node: Automatically adding markers based on test names,  Prev: Marking platform specific tests with pytest,  Up: Working with custom markers

32.4.11 Automatically adding markers based on test names
--------------------------------------------------------

If you have a test suite where test function names indicate a certain
type of test, you can implement a hook that automatically defines
markers so that you can use the ‘-m’ option with it.  Let’s look at this
test module:

     # content of test_module.py


     def test_interface_simple():
         assert 0


     def test_interface_complex():
         assert 0


     def test_event_simple():
         assert 0


     def test_something_else():
         assert 0

We want to dynamically define two markers and can do it in a
‘conftest.py’ plugin:

     # content of conftest.py

     import pytest


     def pytest_collection_modifyitems(items):
         for item in items:
             if "interface" in item.nodeid:
                 item.add_marker(pytest.mark.interface)
             elif "event" in item.nodeid:
                 item.add_marker(pytest.mark.event)

We can now use the ‘-m option’ to select one set:

     $ pytest -m interface --tb=short
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 4 items / 2 deselected / 2 selected

     test_module.py FF                                                    [100%]

     ================================= FAILURES =================================
     __________________________ test_interface_simple ___________________________
     test_module.py:4: in test_interface_simple
         assert 0
     E   assert 0
     __________________________ test_interface_complex __________________________
     test_module.py:8: in test_interface_complex
         assert 0
     E   assert 0
     ========================= short test summary info ==========================
     FAILED test_module.py::test_interface_simple - assert 0
     FAILED test_module.py::test_interface_complex - assert 0
     ===================== 2 failed, 2 deselected in 0.12s ======================

or to select both “event” and “interface” tests:

     $ pytest -m "interface or event" --tb=short
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project
     collected 4 items / 1 deselected / 3 selected

     test_module.py FFF                                                   [100%]

     ================================= FAILURES =================================
     __________________________ test_interface_simple ___________________________
     test_module.py:4: in test_interface_simple
         assert 0
     E   assert 0
     __________________________ test_interface_complex __________________________
     test_module.py:8: in test_interface_complex
         assert 0
     E   assert 0
     ____________________________ test_event_simple _____________________________
     test_module.py:12: in test_event_simple
         assert 0
     E   assert 0
     ========================= short test summary info ==========================
     FAILED test_module.py::test_interface_simple - assert 0
     FAILED test_module.py::test_interface_complex - assert 0
     FAILED test_module.py::test_event_simple - assert 0
     ===================== 3 failed, 1 deselected in 0.12s ======================


File: pytest.info,  Node: A session-fixture which can look at all collected tests,  Next: Changing standard Python test discovery,  Prev: Working with custom markers,  Up: Examples and customization tricks

32.5 A session-fixture which can look at all collected tests
============================================================

A session-scoped fixture effectively has access to all collected test
items.  Here is an example of a fixture function which walks all
collected tests and looks if their test class defines a ‘callme’ method
and calls it:

     # content of conftest.py

     import pytest


     @pytest.fixture(scope="session", autouse=True)
     def callattr_ahead_of_alltests(request):
         print("callattr_ahead_of_alltests called")
         seen = {None}
         session = request.node
         for item in session.items:
             cls = item.getparent(pytest.Class)
             if cls not in seen:
                 if hasattr(cls.obj, "callme"):
                     cls.obj.callme()
                 seen.add(cls)

test classes may now define a ‘callme’ method which will be called ahead
of running any tests:

     # content of test_module.py


     class TestHello:
         @classmethod
         def callme(cls):
             print("callme called!")

         def test_method1(self):
             print("test_method1 called")

         def test_method2(self):
             print("test_method2 called")


     class TestOther:
         @classmethod
         def callme(cls):
             print("callme other called")

         def test_other(self):
             print("test other")


     # works with unittest as well ...
     import unittest


     class SomeTest(unittest.TestCase):
         @classmethod
         def callme(self):
             print("SomeTest callme called")

         def test_unit1(self):
             print("test_unit1 method called")

If you run this without output capturing:

     $ pytest -q -s test_module.py
     callattr_ahead_of_alltests called
     callme called!
     callme other called
     SomeTest callme called
     test_method1 called
     .test_method2 called
     .test other
     .test_unit1 method called
     .
     4 passed in 0.12s


File: pytest.info,  Node: Changing standard Python test discovery,  Next: Working with non-python tests,  Prev: A session-fixture which can look at all collected tests,  Up: Examples and customization tricks

32.6 Changing standard (Python) test discovery
==============================================

* Menu:

* Ignore paths during test collection::
* Deselect tests during test collection::
* Keeping duplicate paths specified from command line::
* Changing directory recursion::
* Changing naming conventions::
* Interpreting cmdline arguments as Python packages::
* Finding out what is collected::
* Customizing test collection::


File: pytest.info,  Node: Ignore paths during test collection,  Next: Deselect tests during test collection,  Up: Changing standard Python test discovery

32.6.1 Ignore paths during test collection
------------------------------------------

You can easily ignore certain test directories and modules during
collection by passing the ‘--ignore=path’ option on the cli.  ‘pytest’
allows multiple ‘--ignore’ options.  Example:

     tests/
     |-- example
     |   |-- test_example_01.py
     |   |-- test_example_02.py
     |   '-- test_example_03.py
     |-- foobar
     |   |-- test_foobar_01.py
     |   |-- test_foobar_02.py
     |   '-- test_foobar_03.py
     '-- hello
         '-- world
             |-- test_world_01.py
             |-- test_world_02.py
             '-- test_world_03.py

Now if you invoke ‘pytest’ with ‘--ignore=tests/foobar/test_foobar_03.py
--ignore=tests/hello/’, you will see that ‘pytest’ only collects
test-modules, which do not match the patterns specified:

     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-5.x.y, py-1.x.y, pluggy-0.x.y
     rootdir: $REGENDOC_TMPDIR, inifile:
     collected 5 items

     tests/example/test_example_01.py .                                   [ 20%]
     tests/example/test_example_02.py .                                   [ 40%]
     tests/example/test_example_03.py .                                   [ 60%]
     tests/foobar/test_foobar_01.py .                                     [ 80%]
     tests/foobar/test_foobar_02.py .                                     [100%]

     ========================= 5 passed in 0.02 seconds =========================

The ‘--ignore-glob’ option allows to ignore test file paths based on
Unix shell-style wildcards.  If you want to exclude test-modules that
end with ‘_01.py’, execute ‘pytest’ with ‘--ignore-glob='*_01.py'’.


File: pytest.info,  Node: Deselect tests during test collection,  Next: Keeping duplicate paths specified from command line,  Prev: Ignore paths during test collection,  Up: Changing standard Python test discovery

32.6.2 Deselect tests during test collection
--------------------------------------------

Tests can individually be deselected during collection by passing the
‘--deselect=item’ option.  For example, say
‘tests/foobar/test_foobar_01.py’ contains ‘test_a’ and ‘test_b’.  You
can run all of the tests within ‘tests/’ ‘except’ for
‘tests/foobar/test_foobar_01.py::test_a’ by invoking ‘pytest’ with
‘--deselect tests/foobar/test_foobar_01.py::test_a’.  ‘pytest’ allows
multiple ‘--deselect’ options.


File: pytest.info,  Node: Keeping duplicate paths specified from command line,  Next: Changing directory recursion,  Prev: Deselect tests during test collection,  Up: Changing standard Python test discovery

32.6.3 Keeping duplicate paths specified from command line
----------------------------------------------------------

Default behavior of ‘pytest’ is to ignore duplicate paths specified from
the command line.  Example:

     pytest path_a path_a

     ...
     collected 1 item
     ...

Just collect tests once.

To collect duplicate tests, use the ‘--keep-duplicates’ option on the
cli.  Example:

     pytest --keep-duplicates path_a path_a

     ...
     collected 2 items
     ...

As the collector just works on directories, if you specify twice a
single test file, ‘pytest’ will still collect it twice, no matter if the
‘--keep-duplicates’ is not specified.  Example:

     pytest test_a.py test_a.py

     ...
     collected 2 items
     ...


File: pytest.info,  Node: Changing directory recursion,  Next: Changing naming conventions,  Prev: Keeping duplicate paths specified from command line,  Up: Changing standard Python test discovery

32.6.4 Changing directory recursion
-----------------------------------

You can set the *note norecursedirs: 446. option in an ini-file, for
example your ‘pytest.ini’ in the project root directory:

     # content of pytest.ini
     [pytest]
     norecursedirs = .svn _build tmp*

This would tell ‘pytest’ to not recurse into typical subversion or
sphinx-build directories or into any ‘tmp’ prefixed directory.


File: pytest.info,  Node: Changing naming conventions,  Next: Interpreting cmdline arguments as Python packages,  Prev: Changing directory recursion,  Up: Changing standard Python test discovery

32.6.5 Changing naming conventions
----------------------------------

You can configure different naming conventions by setting the *note
python_files: c8, *note python_classes: 117. and *note python_functions:
447. in your *note configuration file: 1bd.  Here is an example:

     # content of pytest.ini
     # Example 1: have pytest look for "check" instead of "test"
     [pytest]
     python_files = check_*.py
     python_classes = Check
     python_functions = *_check

This would make ‘pytest’ look for tests in files that match the ‘check_*
.py’ glob-pattern, ‘Check’ prefixes in classes, and functions and
methods that match ‘*_check’.  For example, if we have:

     # content of check_myapp.py
     class CheckMyApp:
         def simple_check(self):
             pass

         def complex_check(self):
             pass

The test collection would look like this:

     $ pytest --collect-only
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project, configfile: pytest.ini
     collected 2 items

     <Module check_myapp.py>
       <Class CheckMyApp>
         <Function simple_check>
         <Function complex_check>

     ======================== 2 tests collected in 0.12s ========================

You can check for multiple glob patterns by adding a space between the
patterns:

     # Example 2: have pytest look for files with "test" and "example"
     # content of pytest.ini
     [pytest]
     python_files = test_*.py example_*.py

     Note: the ‘python_functions’ and ‘python_classes’ options has no
     effect for ‘unittest.TestCase’ test discovery because pytest
     delegates discovery of test case methods to unittest code.


File: pytest.info,  Node: Interpreting cmdline arguments as Python packages,  Next: Finding out what is collected,  Prev: Changing naming conventions,  Up: Changing standard Python test discovery

32.6.6 Interpreting cmdline arguments as Python packages
--------------------------------------------------------

You can use the ‘--pyargs’ option to make ‘pytest’ try interpreting
arguments as python package names, deriving their file system path and
then running the test.  For example if you have unittest2 installed you
can type:

     pytest --pyargs unittest2.test.test_skipping -q

which would run the respective test module.  Like with other options,
through an ini-file and the *note addopts: 1c7. option you can make this
change more permanently:

     # content of pytest.ini
     [pytest]
     addopts = --pyargs

Now a simple invocation of ‘pytest NAME’ will check if NAME exists as an
importable package/module and otherwise treat it as a filesystem path.


File: pytest.info,  Node: Finding out what is collected,  Next: Customizing test collection,  Prev: Interpreting cmdline arguments as Python packages,  Up: Changing standard Python test discovery

32.6.7 Finding out what is collected
------------------------------------

You can always peek at the collection tree without running tests like
this:

     . $ pytest --collect-only pythoncollection.py
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project, configfile: pytest.ini
     collected 3 items

     <Module CWD/pythoncollection.py>
       <Function test_function>
       <Class TestClass>
         <Function test_method>
         <Function test_anothermethod>

     ======================== 3 tests collected in 0.12s ========================


File: pytest.info,  Node: Customizing test collection,  Prev: Finding out what is collected,  Up: Changing standard Python test discovery

32.6.8 Customizing test collection
----------------------------------

You can easily instruct ‘pytest’ to discover tests from every Python
file:

     # content of pytest.ini
     [pytest]
     python_files = *.py

However, many projects will have a ‘setup.py’ which they don’t want to
be imported.  Moreover, there may files only importable by a specific
python version.  For such cases you can dynamically define files to be
ignored by listing them in a ‘conftest.py’ file:

     # content of conftest.py
     import sys

     collect_ignore = ["setup.py"]
     if sys.version_info[0] > 2:
         collect_ignore.append("pkg/module_py2.py")

and then if you have a module file like this:

     # content of pkg/module_py2.py
     def test_only_on_python2():
         try:
             assert 0
         except Exception, e:
             pass

and a ‘setup.py’ dummy file like this:

     # content of setup.py
     0 / 0  # will raise exception if imported

If you run with a Python 2 interpreter then you will find the one test
and will leave out the ‘setup.py’ file:

     #$ pytest --collect-only
     ====== test session starts ======
     platform linux2 -- Python 2.7.10, pytest-2.9.1, py-1.4.31, pluggy-0.3.1
     rootdir: $REGENDOC_TMPDIR, inifile: pytest.ini
     collected 1 items
     <Module 'pkg/module_py2.py'>
       <Function 'test_only_on_python2'>

     ====== 1 tests found in 0.04 seconds ======

If you run with a Python 3 interpreter both the one test and the
‘setup.py’ file will be left out:

     $ pytest --collect-only
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project, configfile: pytest.ini
     collected 0 items

     ======================= no tests collected in 0.12s ========================

It’s also possible to ignore files based on Unix shell-style wildcards
by adding patterns to *note collect_ignore_glob: 416.

The following example ‘conftest.py’ ignores the file ‘setup.py’ and in
addition all files that end with ‘*_py2.py’ when executed with a Python
3 interpreter:

     # content of conftest.py
     import sys

     collect_ignore = ["setup.py"]
     if sys.version_info[0] > 2:
         collect_ignore_glob = ["*_py2.py"]

Since Pytest 2.6, users can prevent pytest from discovering classes that
start with ‘Test’ by setting a boolean ‘__test__’ attribute to ‘False’.

     # Will not be discovered as a test
     class TestClass:
         __test__ = False


File: pytest.info,  Node: Working with non-python tests,  Prev: Changing standard Python test discovery,  Up: Examples and customization tricks

32.7 Working with non-python tests
==================================

* Menu:

* A basic example for specifying tests in Yaml files::


File: pytest.info,  Node: A basic example for specifying tests in Yaml files,  Up: Working with non-python tests

32.7.1 A basic example for specifying tests in Yaml files
---------------------------------------------------------

Here is an example ‘conftest.py’ (extracted from Ali Afshar’s special
purpose pytest-yamlwsgi(1) plugin).  This ‘conftest.py’ will collect
‘test*.yaml’ files and will execute the yaml-formatted content as custom
tests:

     # content of conftest.py
     import pytest


     def pytest_collect_file(parent, file_path):
         if file_path.suffix == ".yaml" and file_path.name.startswith("test"):
             return YamlFile.from_parent(parent, path=file_path)


     class YamlFile(pytest.File):
         def collect(self):
             # We need a yaml parser, e.g. PyYAML.
             import yaml

             raw = yaml.safe_load(self.path.open())
             for name, spec in sorted(raw.items()):
                 yield YamlItem.from_parent(self, name=name, spec=spec)


     class YamlItem(pytest.Item):
         def __init__(self, *, spec, **kwargs):
             super().__init__(**kwargs)
             self.spec = spec

         def runtest(self):
             for name, value in sorted(self.spec.items()):
                 # Some custom test execution (dumb example follows).
                 if name != value:
                     raise YamlException(self, name, value)

         def repr_failure(self, excinfo):
             """Called when self.runtest() raises an exception."""
             if isinstance(excinfo.value, YamlException):
                 return "\n".join(
                     [
                         "usecase execution failed",
                         "   spec failed: {1!r}: {2!r}".format(*excinfo.value.args),
                         "   no further details known at this point.",
                     ]
                 )

         def reportinfo(self):
             return self.path, 0, f"usecase: {self.name}"


     class YamlException(Exception):
         """Custom exception for error reporting."""

You can create a simple example file:

     # test_simple.yaml
     ok:
         sub1: sub1

     hello:
         world: world
         some: other

and if you installed PyYAML(2) or a compatible YAML-parser you can now
execute the test specification:

     nonpython $ pytest test_simple.yaml
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project/nonpython
     collected 2 items

     test_simple.yaml F.                                                  [100%]

     ================================= FAILURES =================================
     ______________________________ usecase: hello ______________________________
     usecase execution failed
        spec failed: 'some': 'other'
        no further details known at this point.
     ========================= short test summary info ==========================
     FAILED test_simple.yaml::hello
     ======================= 1 failed, 1 passed in 0.12s ========================

You get one dot for the passing ‘sub1: sub1’ check and one failure.
Obviously in the above ‘conftest.py’ you’ll want to implement a more
interesting interpretation of the yaml-values.  You can easily write
your own domain specific testing language this way.

     Note: ‘repr_failure(excinfo)’ is called for representing test
     failures.  If you create custom collection nodes you can return an
     error representation string of your choice.  It will be reported as
     a (red) string.

‘reportinfo()’ is used for representing the test location and is also
consulted when reporting in ‘verbose’ mode:

     nonpython $ pytest -v
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y -- $PYTHON_PREFIX/bin/python
     cachedir: .pytest_cache
     rootdir: /home/sweet/project/nonpython
     collecting ... collected 2 items

     test_simple.yaml::hello FAILED                                       [ 50%]
     test_simple.yaml::ok PASSED                                          [100%]

     ================================= FAILURES =================================
     ______________________________ usecase: hello ______________________________
     usecase execution failed
        spec failed: 'some': 'other'
        no further details known at this point.
     ========================= short test summary info ==========================
     FAILED test_simple.yaml::hello
     ======================= 1 failed, 1 passed in 0.12s ========================

While developing your custom test collection and execution it’s also
interesting to just look at the collection tree:

     nonpython $ pytest --collect-only
     =========================== test session starts ============================
     platform linux -- Python 3.x.y, pytest-7.x.y, pluggy-1.x.y
     rootdir: /home/sweet/project/nonpython
     collected 2 items

     <Package nonpython>
       <YamlFile test_simple.yaml>
         <YamlItem hello>
         <YamlItem ok>

     ======================== 2 tests collected in 0.12s ========================

   ---------- Footnotes ----------

   (1) 
http://bitbucket.org/aafshar/pytest-yamlwsgi/src/tip/pytest_yamlwsgi.py

   (2) https://pypi.org/project/PyYAML/


File: pytest.info,  Node: Backwards Compatibility Policy,  Next: History,  Prev: Examples and customization tricks,  Up: Top

33 Backwards Compatibility Policy
*********************************

pytest is actively evolving and is a project that has been decades in
the making, we keep learning about new and better structures to express
different details about testing.

While we implement those modifications we try to ensure an easy
transition and don’t want to impose unnecessary churn on our users and
community/plugin authors.

As of now, pytest considers multiple types of backward compatibility
transitions:

  a. trivial: APIs which trivially translate to the new mechanism, and
     do not cause problematic changes.

     We try to support those indefinitely while encouraging users to
     switch to newer/better mechanisms through documentation.

  b. transitional: the old and new API don’t conflict and we can help
     users transition by using warnings, while supporting both for a
     prolonged time.

     We will only start the removal of deprecated functionality in major
     releases (e.g.  if we deprecate something in 3.0 we will start to
     remove it in 4.0), and keep it around for at least two minor
     releases (e.g.  if we deprecate something in 3.9 and 4.0 is the
     next release, we start to remove it in 5.0, not in 4.0).

     A deprecated feature scheduled to be removed in major version X
     will use the warning class ‘PytestRemovedInXWarning’ (a subclass of
     ‘PytestDeprecationwarning’).

     When the deprecation expires (e.g.  4.0 is released), we won’t
     remove the deprecated functionality immediately, but will use the
     standard warning filters to turn ‘PytestRemovedInXWarning’ (e.g.
     ‘PytestRemovedIn4Warning’) into ‘errors’ by default.  This approach
     makes it explicit that removal is imminent, and still gives you
     time to turn the deprecated feature into a warning instead of an
     error so it can be dealt with in your own time.  In the next minor
     release (e.g.  4.1), the feature will be effectively removed.

  c. true breakage: should only be considered when normal transition is
     unreasonably unsustainable and would offset important
     development/features by years.  In addition, they should be limited
     to APIs where the number of actual users is very small (for example
     only impacting some plugins), and can be coordinated with the
     community in advance.

     Examples for such upcoming changes:

        * removal of ‘pytest_runtest_protocol/nextitem’ - issue #895(1)

        * rearranging of the node tree to include ‘FunctionDefinition’

        * rearranging of ‘SetupState’ issue #895(2)

     True breakages must be announced first in an issue containing:

        * Detailed description of the change

        * Rationale

        * Expected impact on users and plugin authors (example in issue
          #895(3))

     After there’s no hard ‘-1’ on the issue it should be followed up by
     an initial proof-of-concept Pull Request.

     This POC serves as both a coordination point to assess impact and
     potential inspiration to come up with a transitional solution after
     all.

     After a reasonable amount of time the PR can be merged to base a
     new major release.

     For the PR to mature from POC to acceptance, it must contain: *
     Setup of deprecation errors/warnings that help users fix and port
     their code.  If it is possible to introduce a deprecation period
     under the current series, before the true breakage, it should be
     introduced in a separate PR and be part of the current release
     stream.  * Detailed description of the rationale and examples on
     how to port code in ‘doc/en/deprecations.rst’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/895

   (2) https://github.com/pytest-dev/pytest/issues/895

   (3) https://github.com/pytest-dev/pytest/issues/895


File: pytest.info,  Node: History,  Next: Python version support,  Prev: Backwards Compatibility Policy,  Up: Top

34 History
**********

* Menu:

* Focus primary on smooth transition - stance (pre 6.0): Focus primary on smooth transition - stance pre 6 0.


File: pytest.info,  Node: Focus primary on smooth transition - stance pre 6 0,  Up: History

34.1 Focus primary on smooth transition - stance (pre 6.0)
==========================================================

Keeping backwards compatibility has a very high priority in the pytest
project.  Although we have deprecated functionality over the years, most
of it is still supported.  All deprecations in pytest were done because
simpler or more efficient ways of accomplishing the same tasks have
emerged, making the old way of doing things unnecessary.

With the pytest 3.0 release we introduced a clear communication scheme
for when we will actually remove the old busted joint and politely ask
you to use the new hotness instead, while giving you enough time to
adjust your tests or raise concerns if there are valid reasons to keep
deprecated functionality around.

To communicate changes we issue deprecation warnings using a custom
warning hierarchy (see *note Internal pytest warnings: 116.).  These
warnings may be suppressed using the standard means: ‘-W’ command-line
flag or ‘filterwarnings’ ini options (see *note How to capture warnings:
fa.), but we suggest to use these sparingly and temporarily, and heed
the warnings when possible.

We will only start the removal of deprecated functionality in major
releases (e.g.  if we deprecate something in 3.0 we will start to remove
it in 4.0), and keep it around for at least two minor releases (e.g.  if
we deprecate something in 3.9 and 4.0 is the next release, we start to
remove it in 5.0, not in 4.0).

When the deprecation expires (e.g.  4.0 is released), we won’t remove
the deprecated functionality immediately, but will use the standard
warning filters to turn them into ‘errors’ by default.  This approach
makes it explicit that removal is imminent, and still gives you time to
turn the deprecated feature into a warning instead of an error so it can
be dealt with in your own time.  In the next minor release (e.g.  4.1),
the feature will be effectively removed.

* Menu:

* Deprecation Roadmap::


File: pytest.info,  Node: Deprecation Roadmap,  Up: Focus primary on smooth transition - stance pre 6 0

34.1.1 Deprecation Roadmap
--------------------------

Features currently deprecated and removed in previous releases can be
found in *note Deprecations and Removals: 4cf.

We track future deprecation and removal of features using milestones and
the deprecation(1) and removal(2) labels on GitHub.

   ---------- Footnotes ----------

   (1) 
https://github.com/pytest-dev/pytest/issues?q=label%3A%22type%3A+deprecation%22

   (2) https://github.com/pytest-dev/pytest/labels/type%3A%20removal


File: pytest.info,  Node: Python version support,  Next: Deprecations and Removals,  Prev: History,  Up: Top

35 Python version support
*************************

Released pytest versions support all Python versions that are actively
maintained at the time of the release:

pytest version     min.  Python version
                   
-------------------------------------------
                   
7.1+               3.7+
                   
                   
6.2 - 7.0          3.6+
                   
                   
5.0 - 6.1          3.5+
                   
                   
3.3 - 4.6          2.7, 3.4+
                   


File: pytest.info,  Node: Deprecations and Removals,  Next: Contribution getting started,  Prev: Python version support,  Up: Top

36 Deprecations and Removals
****************************

This page lists all pytest features that are currently deprecated or
have been removed in past major releases.  The objective is to give
users a clear rationale why a certain feature has been removed, and what
alternatives should be used instead.

* Menu:

* Deprecated Features::
* Removed Features::


File: pytest.info,  Node: Deprecated Features,  Next: Removed Features,  Up: Deprecations and Removals

36.1 Deprecated Features
========================

Below is a complete list of all pytest features which are considered
deprecated.  Using those features will issue *note PytestWarning: 3c1.
or subclasses, which can be filtered using *note standard warning
filters: fa.

* Menu:

* The pytest.Instance collector: The pytest Instance collector.
* fspath argument for Node constructors replaced with pathlib.Path: fspath argument for Node constructors replaced with pathlib Path.
* py.path.local arguments for hooks replaced with pathlib.Path: py path local arguments for hooks replaced with pathlib Path.
* Directly constructing internal classes::
* Passing msg= to pytest.skip, pytest.fail or pytest.exit: Passing msg= to pytest skip pytest fail or pytest exit.
* Implementing the pytest_cmdline_preparse hook::
* Diamond inheritance between pytest.Collector and pytest.Item: Diamond inheritance between pytest Collector and pytest Item.
* Constructors of custom pytest.Node subclasses should take **kwargs: Constructors of custom pytest Node subclasses should take **kwargs.
* Backward compatibilities in Parser.addoption: Backward compatibilities in Parser addoption.
* Using pytest.warns(None): Using pytest warns None.
* Returning non-None value in test functions::
* The --strict command-line option::
* The yield_fixture function/decorator::


File: pytest.info,  Node: The pytest Instance collector,  Next: fspath argument for Node constructors replaced with pathlib Path,  Up: Deprecated Features

36.1.1 The ‘pytest.Instance’ collector
--------------------------------------

Removed in version 7.0.

The ‘pytest.Instance’ collector type has been removed.

Previously, Python test methods were collected as *note Class: 174. ->
‘Instance’ -> *note Function: 370.  Now *note Class: 174. collects the
test methods directly.

Most plugins which reference ‘Instance’ do so in order to ignore or skip
it, using a check such as ‘if isinstance(node, Instance): return’.  Such
plugins should simply remove consideration of ‘Instance’ on pytest>=7.
However, to keep such uses working, a dummy type has been instanted in
‘pytest.Instance’ and ‘_pytest.python.Instance’, and importing it emits
a deprecation warning.  This will be removed in pytest 8.


File: pytest.info,  Node: fspath argument for Node constructors replaced with pathlib Path,  Next: py path local arguments for hooks replaced with pathlib Path,  Prev: The pytest Instance collector,  Up: Deprecated Features

36.1.2 ‘fspath’ argument for Node constructors replaced with ‘pathlib.Path’
---------------------------------------------------------------------------

Deprecated since version 7.0.

In order to support the transition from ‘py.path.local’ to pathlib(1),
the ‘fspath’ argument to *note Node: 316. constructors like *note
pytest.Function.from_parent(): 372. and *note
pytest.Class.from_parent(): 30c. is now deprecated.

Plugins which construct nodes should pass the ‘path’ argument, of type
pathlib.Path(2), instead of the ‘fspath’ argument.

Plugins which implement custom items and collectors are encouraged to
replace ‘fspath’ parameters (‘py.path.local’) with ‘path’ parameters
(‘pathlib.Path’), and drop any other usage of the ‘py’ library if
possible.

If possible, plugins with custom items should use *note cooperative
constructors: 4d8. to avoid hardcoding arguments they only pass on to
the superclass.

     Note: The name of the *note Node: 316. arguments and attributes
     (the new attribute being ‘path’) is ‘the opposite’ of the situation
     for hooks, *note outlined below: 4d9. (the old argument being
     ‘path’).

     This is an unfortunate artifact due to historical reasons, which
     should be resolved in future versions as we slowly get rid of the
     py(3) dependency (see issue #9283(4) for a longer discussion).

Due to the ongoing migration of methods like ‘reportinfo()’ which still
is expected to return a ‘py.path.local’ object, nodes still have both
‘fspath’ (‘py.path.local’) and ‘path’ (‘pathlib.Path’) attributes, no
matter what argument was used in the constructor.  We expect to
deprecate the ‘fspath’ attribute in a future release.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#module-pathlib

   (2) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (3) https://pypi.org/project/py/

   (4) https://github.com/pytest-dev/pytest/issues/9283


File: pytest.info,  Node: py path local arguments for hooks replaced with pathlib Path,  Next: Directly constructing internal classes,  Prev: fspath argument for Node constructors replaced with pathlib Path,  Up: Deprecated Features

36.1.3 ‘py.path.local’ arguments for hooks replaced with ‘pathlib.Path’
-----------------------------------------------------------------------

Deprecated since version 7.0.

In order to support the transition from ‘py.path.local’ to pathlib(1),
the following hooks now receive additional arguments:

   * *note pytest_ignore_collect(collection_path; pathlib.Path): 2ac. as
     equivalent to ‘path’

   * *note pytest_collect_file(file_path; pathlib.Path): 2ae. as
     equivalent to ‘path’

   * *note pytest_pycollect_makemodule(module_path; pathlib.Path): 2b0.
     as equivalent to ‘path’

   * *note pytest_report_header(start_path; pathlib.Path): 2df. as
     equivalent to ‘startdir’

   * *note pytest_report_collectionfinish(start_path; pathlib.Path):
     2e1. as equivalent to ‘startdir’

The accompanying ‘py.path.local’ based paths have been deprecated:
plugins which manually invoke those hooks should only pass the new
‘pathlib.Path’ arguments, and users should change their hook
implementations to use the new ‘pathlib.Path’ arguments.

     Note: The name of the *note Node: 316. arguments and attributes,
     *note outlined above: 4d7. (the new attribute being ‘path’) is ‘the
     opposite’ of the situation for hooks (the old argument being
     ‘path’).

     This is an unfortunate artifact due to historical reasons, which
     should be resolved in future versions as we slowly get rid of the
     py(2) dependency (see issue #9283(3) for a longer discussion).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pathlib.html#module-pathlib

   (2) https://pypi.org/project/py/

   (3) https://github.com/pytest-dev/pytest/issues/9283


File: pytest.info,  Node: Directly constructing internal classes,  Next: Passing msg= to pytest skip pytest fail or pytest exit,  Prev: py path local arguments for hooks replaced with pathlib Path,  Up: Deprecated Features

36.1.4 Directly constructing internal classes
---------------------------------------------

Deprecated since version 7.0.

Directly constructing the following classes is now deprecated:

   - ‘_pytest.mark.structures.Mark’

   - ‘_pytest.mark.structures.MarkDecorator’

   - ‘_pytest.mark.structures.MarkGenerator’

   - ‘_pytest.python.Metafunc’

   - ‘_pytest.runner.CallInfo’

   - ‘_pytest._code.ExceptionInfo’

   - ‘_pytest.config.argparsing.Parser’

   - ‘_pytest.config.argparsing.OptionGroup’

   - ‘_pytest.pytester.HookRecorder’

These constructors have always been considered private, but now issue a
deprecation warning, which may become a hard error in pytest 8.


File: pytest.info,  Node: Passing msg= to pytest skip pytest fail or pytest exit,  Next: Implementing the pytest_cmdline_preparse hook,  Prev: Directly constructing internal classes,  Up: Deprecated Features

36.1.5 Passing ‘msg=’ to ‘pytest.skip’, ‘pytest.fail’ or ‘pytest.exit’
----------------------------------------------------------------------

Deprecated since version 7.0.

Passing the keyword argument ‘msg’ to *note pytest.skip(): cc, *note
pytest.fail(): 114. or *note pytest.exit(): 1df. is now deprecated and
‘reason’ should be used instead.  This change is to bring consistency
between these functions and the ‘@pytest.mark.skip’ and
‘@pytest.mark.xfail’ markers which already accept a ‘reason’ argument.

     def test_fail_example():
         # old
         pytest.fail(msg="foo")
         # new
         pytest.fail(reason="bar")


     def test_skip_example():
         # old
         pytest.skip(msg="foo")
         # new
         pytest.skip(reason="bar")


     def test_exit_example():
         # old
         pytest.exit(msg="foo")
         # new
         pytest.exit(reason="bar")


File: pytest.info,  Node: Implementing the pytest_cmdline_preparse hook,  Next: Diamond inheritance between pytest Collector and pytest Item,  Prev: Passing msg= to pytest skip pytest fail or pytest exit,  Up: Deprecated Features

36.1.6 Implementing the ‘pytest_cmdline_preparse’ hook
------------------------------------------------------

Deprecated since version 7.0.

Implementing the *note pytest_cmdline_preparse: 290. hook has been
officially deprecated.  Implement the *note
pytest_load_initial_conftests: 28d. hook instead.

     def pytest_cmdline_preparse(config: Config, args: List[str]) -> None:
         ...


     # becomes:


     def pytest_load_initial_conftests(
         early_config: Config, parser: Parser, args: List[str]
     ) -> None:
         ...


File: pytest.info,  Node: Diamond inheritance between pytest Collector and pytest Item,  Next: Constructors of custom pytest Node subclasses should take **kwargs,  Prev: Implementing the pytest_cmdline_preparse hook,  Up: Deprecated Features

36.1.7 Diamond inheritance between ‘pytest.Collector’ and ‘pytest.Item’
-----------------------------------------------------------------------

Deprecated since version 7.0.

Defining a custom pytest node type which is both an ‘pytest.Item’ and a
‘pytest.Collector’ (e.g.  ‘pytest.File’) now issues a warning.  It was
never sanely supported and triggers hard to debug errors.

Some plugins providing linting/code analysis have been using this as a
hack.  Instead, a separate collector node should be used, which collects
the item.  See *note Working with non-python tests: 357. for an example,
as well as an example pr fixing inheritance(1).

   ---------- Footnotes ----------

   (1) https://github.com/asmeurer/pytest-flakes/pull/40/files


File: pytest.info,  Node: Constructors of custom pytest Node subclasses should take **kwargs,  Next: Backward compatibilities in Parser addoption,  Prev: Diamond inheritance between pytest Collector and pytest Item,  Up: Deprecated Features

36.1.8 Constructors of custom ‘pytest.Node’ subclasses should take ‘**kwargs’
-----------------------------------------------------------------------------

Deprecated since version 7.0.

If custom subclasses of nodes like *note pytest.Item: 172. override the
‘__init__’ method, they should take ‘**kwargs’.  Thus,

     class CustomItem(pytest.Item):
         def __init__(self, name, parent, additional_arg):
             super().__init__(name, parent)
             self.additional_arg = additional_arg

should be turned into:

     class CustomItem(pytest.Item):
         def __init__(self, *, additional_arg, **kwargs):
             super().__init__(**kwargs)
             self.additional_arg = additional_arg

to avoid hard-coding the arguments pytest can pass to the superclass.
See *note Working with non-python tests: 357. for a full example.

For cases without conflicts, no deprecation warning is emitted.  For
cases with conflicts (such as *note pytest.File: 355. now taking ‘path’
instead of ‘fspath’, as *note outlined above: 4d7.), a deprecation
warning is now raised.


File: pytest.info,  Node: Backward compatibilities in Parser addoption,  Next: Using pytest warns None,  Prev: Constructors of custom pytest Node subclasses should take **kwargs,  Up: Deprecated Features

36.1.9 Backward compatibilities in ‘Parser.addoption’
-----------------------------------------------------

Deprecated since version 2.4.

Several behaviors of *note Parser.addoption: 299. are now scheduled for
removal in pytest 8 (deprecated since pytest 2.4.0):

   - ‘parser.addoption(..., help=".. %default ..")’ - use ‘%(default)s’
     instead.

   - ‘parser.addoption(..., type="int/string/float/complex")’ - use
     ‘type=int’ etc.  instead.


File: pytest.info,  Node: Using pytest warns None,  Next: Returning non-None value in test functions,  Prev: Backward compatibilities in Parser addoption,  Up: Deprecated Features

36.1.10 Using ‘pytest.warns(None)’
----------------------------------

Deprecated since version 7.0.

*note pytest.warns(None): 103. is now deprecated because it was
frequently misused.  Its correct usage was checking that the code emits
at least one warning of any type - like ‘pytest.warns()’ or
‘pytest.warns(Warning)’.

See *note Additional use cases of warnings in tests: 111. for examples.


File: pytest.info,  Node: Returning non-None value in test functions,  Next: The --strict command-line option,  Prev: Using pytest warns None,  Up: Deprecated Features

36.1.11 Returning non-None value in test functions
--------------------------------------------------

Deprecated since version 7.2.

A ‘pytest.PytestReturnNotNoneWarning’ is now emitted if a test function
returns something other than ‘None’.

This prevents a common mistake among beginners that expect that
returning a ‘bool’ would cause a test to pass or fail, for example:

     @pytest.mark.parametrize(
         ["a", "b", "result"],
         [
             [1, 2, 5],
             [2, 3, 8],
             [5, 3, 18],
         ],
     )
     def test_foo(a, b, result):
         return foo(a, b) == result

Given that pytest ignores the return value, this might be surprising
that it will never fail.

The proper fix is to change the ‘return’ to an ‘assert’:

     @pytest.mark.parametrize(
         ["a", "b", "result"],
         [
             [1, 2, 5],
             [2, 3, 8],
             [5, 3, 18],
         ],
     )
     def test_foo(a, b, result):
         assert foo(a, b) == result


File: pytest.info,  Node: The --strict command-line option,  Next: The yield_fixture function/decorator,  Prev: Returning non-None value in test functions,  Up: Deprecated Features

36.1.12 The ‘--strict’ command-line option
------------------------------------------

Deprecated since version 6.2.

The ‘--strict’ command-line option has been deprecated in favor of
‘--strict-markers’, which better conveys what the option does.

We have plans to maybe in the future to reintroduce ‘--strict’ and make
it an encompassing flag for all strictness related options
(‘--strict-markers’ and ‘--strict-config’ at the moment, more might be
introduced in the future).


File: pytest.info,  Node: The yield_fixture function/decorator,  Prev: The --strict command-line option,  Up: Deprecated Features

36.1.13 The ‘yield_fixture’ function/decorator
----------------------------------------------

Deprecated since version 6.2.

‘pytest.yield_fixture’ is a deprecated alias for *note pytest.fixture():
50.

It has been so for a very long time, so can be search/replaced safely.


File: pytest.info,  Node: Removed Features,  Prev: Deprecated Features,  Up: Deprecations and Removals

36.2 Removed Features
=====================

As stated in our *note Backwards Compatibility Policy: 118. policy,
deprecated features are removed only in major releases after an
appropriate period of deprecation has passed.

* Menu:

* The pytest.collect module: The pytest collect module.
* The pytest_warning_captured hook::
* The pytest._fillfuncargs function: The pytest _fillfuncargs function.
* --no-print-logs command-line option::
* Result log (–result-log): Result log --result-log.
* pytest_collect_directory hook::
* TerminalReporter.writer: TerminalReporter writer.
* junit_family default value change to “xunit2”::
* Node Construction changed to Node.from_parent: Node Construction changed to Node from_parent.
* pytest.fixture arguments are keyword only: pytest fixture arguments are keyword only.
* funcargnames alias for fixturenames::
* pytest.config global: pytest config global.
* "message" parameter of pytest.raises: "message" parameter of pytest raises.
* raises / warns with a string as the second argument::
* Using Class in custom Collectors::
* marks in pytest.mark.parametrize: marks in pytest mark parametrize.
* pytest_funcarg__ prefix::
* [pytest] section in setup.cfg files: [pytest] section in setup cfg files.
* Metafunc.addcall: Metafunc addcall.
* cached_setup::
* pytest_plugins in non-top-level conftest files::
* Config.warn and Node.warn: Config warn and Node warn.
* record_xml_property::
* Passing command-line string to pytest.main(): Passing command-line string to pytest main.
* Calling fixtures directly::
* yield tests::
* Internal classes accessed through Node::
* Node.get_marker: Node get_marker.
* somefunction.markname: somefunction markname.
* pytest_namespace::


File: pytest.info,  Node: The pytest collect module,  Next: The pytest_warning_captured hook,  Up: Removed Features

36.2.1 The ‘pytest.collect’ module
----------------------------------

Deprecated since version 6.0.

Removed in version 7.0.

The ‘pytest.collect’ module is no longer part of the public API, all its
names should now be imported from ‘pytest’ directly instead.


File: pytest.info,  Node: The pytest_warning_captured hook,  Next: The pytest _fillfuncargs function,  Prev: The pytest collect module,  Up: Removed Features

36.2.2 The ‘pytest_warning_captured’ hook
-----------------------------------------

Deprecated since version 6.0.

Removed in version 7.0.

This hook has an ‘item’ parameter which cannot be serialized by
‘pytest-xdist’.

Use the ‘pytest_warning_recorded’ hook instead, which replaces the
‘item’ parameter by a ‘nodeid’ parameter.


File: pytest.info,  Node: The pytest _fillfuncargs function,  Next: --no-print-logs command-line option,  Prev: The pytest_warning_captured hook,  Up: Removed Features

36.2.3 The ‘pytest._fillfuncargs’ function
------------------------------------------

Deprecated since version 6.0.

Removed in version 7.0.

This function was kept for backward compatibility with an older plugin.

It’s functionality is not meant to be used directly, but if you must
replace it, use ‘function._request._fillfixtures()’ instead, though note
this is not a public API and may break in the future.


File: pytest.info,  Node: --no-print-logs command-line option,  Next: Result log --result-log,  Prev: The pytest _fillfuncargs function,  Up: Removed Features

36.2.4 ‘--no-print-logs’ command-line option
--------------------------------------------

Deprecated since version 5.4.

Removed in version 6.0.

The ‘--no-print-logs’ option and ‘log_print’ ini setting are removed.
If you used them, please use ‘--show-capture’ instead.

A ‘--show-capture’ command-line option was added in ‘pytest 3.5.0’ which
allows to specify how to display captured output when tests fail: ‘no’,
‘stdout’, ‘stderr’, ‘log’ or ‘all’ (the default).


File: pytest.info,  Node: Result log --result-log,  Next: pytest_collect_directory hook,  Prev: --no-print-logs command-line option,  Up: Removed Features

36.2.5 Result log (‘--result-log’)
----------------------------------

Deprecated since version 4.0.

Removed in version 6.0.

The ‘--result-log’ option produces a stream of test reports which can be
analysed at runtime, but it uses a custom format which requires users to
implement their own parser.

The pytest-reportlog(1) plugin provides a ‘--report-log’ option, a more
standard and extensible alternative, producing one JSON object per-line,
and should cover the same use cases.  Please try it out and provide
feedback.

The ‘pytest-reportlog’ plugin might even be merged into the core at some
point, depending on the plans for the plugins and number of users using
it.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest-reportlog


File: pytest.info,  Node: pytest_collect_directory hook,  Next: TerminalReporter writer,  Prev: Result log --result-log,  Up: Removed Features

36.2.6 ‘pytest_collect_directory’ hook
--------------------------------------

Removed in version 6.0.

The ‘pytest_collect_directory’ hook has not worked properly for years
(it was called but the results were ignored).  Users may consider using
*note pytest_collection_modifyitems: 2ba. instead.


File: pytest.info,  Node: TerminalReporter writer,  Next: junit_family default value change to “xunit2”,  Prev: pytest_collect_directory hook,  Up: Removed Features

36.2.7 TerminalReporter.writer
------------------------------

Removed in version 6.0.

The ‘TerminalReporter.writer’ attribute has been deprecated and should
no longer be used.  This was inadvertently exposed as part of the public
API of that plugin and ties it too much with ‘py.io.TerminalWriter’.

Plugins that used ‘TerminalReporter.writer’ directly should instead use
‘TerminalReporter’ methods that provide the same functionality.


File: pytest.info,  Node: junit_family default value change to “xunit2”,  Next: Node Construction changed to Node from_parent,  Prev: TerminalReporter writer,  Up: Removed Features

36.2.8 ‘junit_family’ default value change to “xunit2”
------------------------------------------------------

Changed in version 6.0.

The default value of ‘junit_family’ option will change to ‘xunit2’ in
pytest 6.0, which is an update of the old ‘xunit1’ format and is
supported by default in modern tools that manipulate this type of file
(for example, Jenkins, Azure Pipelines, etc.).

Users are recommended to try the new ‘xunit2’ format and see if their
tooling that consumes the JUnit XML file supports it.

To use the new format, update your ‘pytest.ini’:

     [pytest]
     junit_family=xunit2

If you discover that your tooling does not support the new format, and
want to keep using the legacy version, set the option to ‘legacy’
instead:

     [pytest]
     junit_family=legacy

By using ‘legacy’ you will keep using the legacy/xunit1 format when
upgrading to pytest 6.0, where the default format will be ‘xunit2’.

In order to let users know about the transition, pytest will issue a
warning in case the ‘--junitxml’ option is given in the command line but
‘junit_family’ is not explicitly configured in ‘pytest.ini’.

Services known to support the ‘xunit2’ format:

   * Jenkins(1) with the JUnit(2) plugin.

   * Azure Pipelines(3).

   ---------- Footnotes ----------

   (1) https://www.jenkins.io/

   (2) https://plugins.jenkins.io/junit

   (3) https://azure.microsoft.com/en-us/services/devops/pipelines


File: pytest.info,  Node: Node Construction changed to Node from_parent,  Next: pytest fixture arguments are keyword only,  Prev: junit_family default value change to “xunit2”,  Up: Removed Features

36.2.9 Node Construction changed to ‘Node.from_parent’
------------------------------------------------------

Changed in version 6.0.

The construction of nodes now should use the named constructor
‘from_parent’.  This limitation in api surface intends to enable
better/simpler refactoring of the collection tree.

This means that instead of ‘MyItem(name="foo", parent=collector,
obj=42)’ one now has to invoke ‘MyItem.from_parent(collector,
name="foo")’.

Plugins that wish to support older versions of pytest and suppress the
warning can use ‘hasattr’ to check if ‘from_parent’ exists in that
version:

     def pytest_pycollect_makeitem(collector, name, obj):
         if hasattr(MyItem, "from_parent"):
             item = MyItem.from_parent(collector, name="foo")
             item.obj = 42
             return item
         else:
             return MyItem(name="foo", parent=collector, obj=42)

Note that ‘from_parent’ should only be called with keyword arguments for
the parameters.


File: pytest.info,  Node: pytest fixture arguments are keyword only,  Next: funcargnames alias for fixturenames,  Prev: Node Construction changed to Node from_parent,  Up: Removed Features

36.2.10 ‘pytest.fixture’ arguments are keyword only
---------------------------------------------------

Removed in version 6.0.

Passing arguments to pytest.fixture() as positional arguments has been
removed - pass them by keyword instead.


File: pytest.info,  Node: funcargnames alias for fixturenames,  Next: pytest config global,  Prev: pytest fixture arguments are keyword only,  Up: Removed Features

36.2.11 ‘funcargnames’ alias for ‘fixturenames’
-----------------------------------------------

Removed in version 6.0.

The ‘FixtureRequest’, ‘Metafunc’, and ‘Function’ classes track the names
of their associated fixtures, with the aptly-named ‘fixturenames’
attribute.

Prior to pytest 2.3, this attribute was named ‘funcargnames’, and we
have kept that as an alias since.  It is finally due for removal, as it
is often confusing in places where we or plugin authors must distinguish
between fixture names and names supplied by non-fixture things such as
‘pytest.mark.parametrize’.


File: pytest.info,  Node: pytest config global,  Next: "message" parameter of pytest raises,  Prev: funcargnames alias for fixturenames,  Up: Removed Features

36.2.12 ‘pytest.config’ global
------------------------------

Removed in version 5.0.

The ‘pytest.config’ global object is deprecated.  Instead use
‘request.config’ (via the ‘request’ fixture) or if you are a plugin
author use the ‘pytest_configure(config)’ hook.  Note that many hooks
can also access the ‘config’ object indirectly, through ‘session.config’
or ‘item.config’ for example.


File: pytest.info,  Node: "message" parameter of pytest raises,  Next: raises / warns with a string as the second argument,  Prev: pytest config global,  Up: Removed Features

36.2.13 ‘"message"’ parameter of ‘pytest.raises’
------------------------------------------------

Removed in version 5.0.

It is a common mistake to think this parameter will match the exception
message, while in fact it only serves to provide a custom message in
case the ‘pytest.raises’ check fails.  To prevent users from making this
mistake, and because it is believed to be little used, pytest is
deprecating it without providing an alternative for the moment.

If you have a valid use case for this parameter, consider that to obtain
the same results you can just call ‘pytest.fail’ manually at the end of
the ‘with’ statement.

For example:

     with pytest.raises(TimeoutError, message="Client got unexpected message"):
         wait_for(websocket.recv(), 0.5)

Becomes:

     with pytest.raises(TimeoutError):
         wait_for(websocket.recv(), 0.5)
         pytest.fail("Client got unexpected message")

If you still have concerns about this deprecation and future removal,
please comment on issue #3974(1).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3974


File: pytest.info,  Node: raises / warns with a string as the second argument,  Next: Using Class in custom Collectors,  Prev: "message" parameter of pytest raises,  Up: Removed Features

36.2.14 ‘raises’ / ‘warns’ with a string as the second argument
---------------------------------------------------------------

Removed in version 5.0.

Use the context manager form of these instead.  When necessary, invoke
‘exec’ directly.

Example:

     pytest.raises(ZeroDivisionError, "1 / 0")
     pytest.raises(SyntaxError, "a $ b")

     pytest.warns(DeprecationWarning, "my_function()")
     pytest.warns(SyntaxWarning, "assert(1, 2)")

Becomes:

     with pytest.raises(ZeroDivisionError):
         1 / 0
     with pytest.raises(SyntaxError):
         exec("a $ b")  # exec is required for invalid syntax

     with pytest.warns(DeprecationWarning):
         my_function()
     with pytest.warns(SyntaxWarning):
         exec("assert(1, 2)")  # exec is used to avoid a top-level warning


File: pytest.info,  Node: Using Class in custom Collectors,  Next: marks in pytest mark parametrize,  Prev: raises / warns with a string as the second argument,  Up: Removed Features

36.2.15 Using ‘Class’ in custom Collectors
------------------------------------------

Removed in version 4.0.

Using objects named ‘"Class"’ as a way to customize the type of nodes
that are collected in ‘Collector’ subclasses has been deprecated.  Users
instead should use ‘pytest_pycollect_makeitem’ to customize node types
during collection.

This issue should affect only advanced plugins who create new collection
types, so if you see this warning message please contact the authors so
they can change the code.


File: pytest.info,  Node: marks in pytest mark parametrize,  Next: pytest_funcarg__ prefix,  Prev: Using Class in custom Collectors,  Up: Removed Features

36.2.16 marks in ‘pytest.mark.parametrize’
------------------------------------------

Removed in version 4.0.

Applying marks to values of a ‘pytest.mark.parametrize’ call is now
deprecated.  For example:

     @pytest.mark.parametrize(
         "a, b",
         [
             (3, 9),
             pytest.mark.xfail(reason="flaky")(6, 36),
             (10, 100),
             (20, 200),
             (40, 400),
             (50, 500),
         ],
     )
     def test_foo(a, b):
         ...

This code applies the ‘pytest.mark.xfail(reason="flaky")’ mark to the
‘(6, 36)’ value of the above parametrization call.

This was considered hard to read and understand, and also its
implementation presented problems to the code preventing further
internal improvements in the marks architecture.

To update the code, use ‘pytest.param’:

     @pytest.mark.parametrize(
         "a, b",
         [
             (3, 9),
             pytest.param(6, 36, marks=pytest.mark.xfail(reason="flaky")),
             (10, 100),
             (20, 200),
             (40, 400),
             (50, 500),
         ],
     )
     def test_foo(a, b):
         ...


File: pytest.info,  Node: pytest_funcarg__ prefix,  Next: [pytest] section in setup cfg files,  Prev: marks in pytest mark parametrize,  Up: Removed Features

36.2.17 ‘pytest_funcarg__’ prefix
---------------------------------

Removed in version 4.0.

In very early pytest versions fixtures could be defined using the
‘pytest_funcarg__’ prefix:

     def pytest_funcarg__data():
         return SomeData()

Switch over to the ‘@pytest.fixture’ decorator:

     @pytest.fixture
     def data():
         return SomeData()


File: pytest.info,  Node: [pytest] section in setup cfg files,  Next: Metafunc addcall,  Prev: pytest_funcarg__ prefix,  Up: Removed Features

36.2.18 [pytest] section in setup.cfg files
-------------------------------------------

Removed in version 4.0.

‘[pytest]’ sections in ‘setup.cfg’ files should now be named
‘[tool:pytest]’ to avoid conflicts with other distutils commands.


File: pytest.info,  Node: Metafunc addcall,  Next: cached_setup,  Prev: [pytest] section in setup cfg files,  Up: Removed Features

36.2.19 Metafunc.addcall
------------------------

Removed in version 4.0.

‘Metafunc.addcall’ was a precursor to the current parametrized
mechanism.  Users should use *note pytest.Metafunc.parametrize(): 1f1.
instead.

Example:

     def pytest_generate_tests(metafunc):
         metafunc.addcall({"i": 1}, id="1")
         metafunc.addcall({"i": 2}, id="2")

Becomes:

     def pytest_generate_tests(metafunc):
         metafunc.parametrize("i", [1, 2], ids=["1", "2"])


File: pytest.info,  Node: cached_setup,  Next: pytest_plugins in non-top-level conftest files,  Prev: Metafunc addcall,  Up: Removed Features

36.2.20 ‘cached_setup’
----------------------

Removed in version 4.0.

‘request.cached_setup’ was the precursor of the setup/teardown mechanism
available to fixtures.

Example:

     @pytest.fixture
     def db_session():
         return request.cached_setup(
             setup=Session.create, teardown=lambda session: session.close(), scope="module"
         )

This should be updated to make use of standard fixture mechanisms:

     @pytest.fixture(scope="module")
     def db_session():
         session = Session.create()
         yield session
         session.close()

You can consult funcarg comparison section in the docs for more
information.


File: pytest.info,  Node: pytest_plugins in non-top-level conftest files,  Next: Config warn and Node warn,  Prev: cached_setup,  Up: Removed Features

36.2.21 pytest_plugins in non-top-level conftest files
------------------------------------------------------

Removed in version 4.0.

Defining *note pytest_plugins: 7c. is now deprecated in non-top-level
conftest.py files because they will activate referenced plugins
‘globally’, which is surprising because for all other pytest features
‘conftest.py’ files are only ‘active’ for tests at or below it.


File: pytest.info,  Node: Config warn and Node warn,  Next: record_xml_property,  Prev: pytest_plugins in non-top-level conftest files,  Up: Removed Features

36.2.22 ‘Config.warn’ and ‘Node.warn’
-------------------------------------

Removed in version 4.0.

Those methods were part of the internal pytest warnings system, but
since ‘3.8’ pytest is using the builtin warning system for its own
warnings, so those two functions are now deprecated.

‘Config.warn’ should be replaced by calls to the standard
‘warnings.warn’, example:

     config.warn("C1", "some warning")

Becomes:

     warnings.warn(pytest.PytestWarning("some warning"))

‘Node.warn’ now supports two signatures:

   * ‘node.warn(PytestWarning("some message"))’: is now the
     ‘recommended’ way to call this function.  The warning instance must
     be a PytestWarning or subclass.

   * ‘node.warn("CI", "some message")’: this code/message form has been
     ‘removed’ and should be converted to the warning instance form
     above.


File: pytest.info,  Node: record_xml_property,  Next: Passing command-line string to pytest main,  Prev: Config warn and Node warn,  Up: Removed Features

36.2.23 record_xml_property
---------------------------

Removed in version 4.0.

The ‘record_xml_property’ fixture is now deprecated in favor of the more
generic ‘record_property’, which can be used by other consumers (for
example ‘pytest-html’) to obtain custom information about the test run.

This is just a matter of renaming the fixture as the API is the same:

     def test_foo(record_xml_property):
         ...

Change to:

     def test_foo(record_property):
         ...


File: pytest.info,  Node: Passing command-line string to pytest main,  Next: Calling fixtures directly,  Prev: record_xml_property,  Up: Removed Features

36.2.24 Passing command-line string to ‘pytest.main()’
------------------------------------------------------

Removed in version 4.0.

Passing a command-line string to ‘pytest.main()’ is deprecated:

     pytest.main("-v -s")

Pass a list instead:

     pytest.main(["-v", "-s"])

By passing a string, users expect that pytest will interpret that
command-line using the shell rules they are working on (for example
‘bash’ or ‘Powershell’), but this is very hard/impossible to do in a
portable way.


File: pytest.info,  Node: Calling fixtures directly,  Next: yield tests,  Prev: Passing command-line string to pytest main,  Up: Removed Features

36.2.25 Calling fixtures directly
---------------------------------

Removed in version 4.0.

Calling a fixture function directly, as opposed to request them in a
test function, is deprecated.

For example:

     @pytest.fixture
     def cell():
         return ...


     @pytest.fixture
     def full_cell():
         cell = cell()
         cell.make_full()
         return cell

This is a great source of confusion to new users, which will often call
the fixture functions and request them from test functions
interchangeably, which breaks the fixture resolution model.

In those cases just request the function directly in the dependent
fixture:

     @pytest.fixture
     def cell():
         return ...


     @pytest.fixture
     def full_cell(cell):
         cell.make_full()
         return cell

Alternatively if the fixture function is called multiple times inside a
test (making it hard to apply the above pattern) or if you would like to
make minimal changes to the code, you can create a fixture which calls
the original function together with the ‘name’ parameter:

     def cell():
         return ...


     @pytest.fixture(name="cell")
     def cell_fixture():
         return cell()


File: pytest.info,  Node: yield tests,  Next: Internal classes accessed through Node,  Prev: Calling fixtures directly,  Up: Removed Features

36.2.26 ‘yield’ tests
---------------------

Removed in version 4.0.

pytest supported ‘yield’-style tests, where a test function actually
‘yield’ functions and values that are then turned into proper test
methods.  Example:

     def check(x, y):
         assert x ** x == y


     def test_squared():
         yield check, 2, 4
         yield check, 3, 9

This would result into two actual test functions being generated.

This form of test function doesn’t support fixtures properly, and users
should switch to ‘pytest.mark.parametrize’:

     @pytest.mark.parametrize("x, y", [(2, 4), (3, 9)])
     def test_squared(x, y):
         assert x ** x == y


File: pytest.info,  Node: Internal classes accessed through Node,  Next: Node get_marker,  Prev: yield tests,  Up: Removed Features

36.2.27 Internal classes accessed through ‘Node’
------------------------------------------------

Removed in version 4.0.

Access of ‘Module’, ‘Function’, ‘Class’, ‘Instance’, ‘File’ and ‘Item’
through ‘Node’ instances now issue this warning:

     usage of Function.Module is deprecated, please use pytest.Module instead

Users should just ‘import pytest’ and access those objects using the
‘pytest’ module.

This has been documented as deprecated for years, but only now we are
actually emitting deprecation warnings.


File: pytest.info,  Node: Node get_marker,  Next: somefunction markname,  Prev: Internal classes accessed through Node,  Up: Removed Features

36.2.28 ‘Node.get_marker’
-------------------------

Removed in version 4.0.

As part of a large *note Marker revamp and iteration: 514,
‘_pytest.nodes.Node.get_marker’ is removed.  See *note the
documentation: 515. on tips on how to update your code.


File: pytest.info,  Node: somefunction markname,  Next: pytest_namespace,  Prev: Node get_marker,  Up: Removed Features

36.2.29 ‘somefunction.markname’
-------------------------------

Removed in version 4.0.

As part of a large *note Marker revamp and iteration: 514. we already
deprecated using ‘MarkInfo’ the only correct way to get markers of an
element is via ‘node.iter_markers(name)’.


File: pytest.info,  Node: pytest_namespace,  Prev: somefunction markname,  Up: Removed Features

36.2.30 ‘pytest_namespace’
--------------------------

Removed in version 4.0.

This hook is deprecated because it greatly complicates the pytest
internals regarding configuration and initialization, making some bug
fixes and refactorings impossible.

Example of usage:

     class MySymbol:
         ...


     def pytest_namespace():
         return {"my_symbol": MySymbol()}

Plugin authors relying on this hook should instead require that users
now import the plugin modules directly (with an appropriate public API).

As a stopgap measure, plugin authors may still inject their names into
pytest’s namespace, usually during ‘pytest_configure’:

     import pytest


     def pytest_configure():
         pytest.my_symbol = MySymbol()


File: pytest.info,  Node: Contribution getting started,  Next: Development Guide,  Prev: Deprecations and Removals,  Up: Top

37 Contribution getting started
*******************************

Contributions are highly welcomed and appreciated.  Every little bit of
help counts, so do not hesitate!

* Menu:

* Feature requests and feedback::
* Report bugs::
* Fix bugs::
* Implement features::
* Write documentation::
* Submitting Plugins to pytest-dev::
* Preparing Pull Requests::
* Joining the Development Team::
* Backporting bug fixes for the next patch release::
* Handling stale issues/PRs::
* Closing Issues::


File: pytest.info,  Node: Feature requests and feedback,  Next: Report bugs,  Up: Contribution getting started

37.1 Feature requests and feedback
==================================

Do you like pytest?  Share some love on Twitter or in your blog posts!

We’d also like to hear about your propositions and suggestions.  Feel
free to submit them as issues(1) and:

   * Explain in detail how they should work.

   * Keep the scope as narrow as possible.  This will make it easier to
     implement.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues


File: pytest.info,  Node: Report bugs,  Next: Fix bugs,  Prev: Feature requests and feedback,  Up: Contribution getting started

37.2 Report bugs
================

Report bugs for pytest in the issue tracker(1).

If you are reporting a bug, please include:

   * Your operating system name and version.

   * Any details about your local setup that might be helpful in
     troubleshooting, specifically the Python interpreter version,
     installed libraries, and pytest version.

   * Detailed steps to reproduce the bug.

If you can write a demonstration test that currently fails but should
pass (xfail), that is a very useful commit to make as well, even if you
cannot fix the bug itself.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues


File: pytest.info,  Node: Fix bugs,  Next: Implement features,  Prev: Report bugs,  Up: Contribution getting started

37.3 Fix bugs
=============

Look through the GitHub issues for bugs(1).  See also the "status: easy"
issues(2) that are friendly to new contributors.

*note Talk: 488. to developers to find out how you can fix specific
bugs.  To indicate that you are going to work on a particular issue, add
a comment to that effect on the specific issue.

Don’t forget to check the issue trackers of your favourite plugins, too!

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/labels/type:%20bug

   (2) https://github.com/pytest-dev/pytest/labels/status%3A%20easy


File: pytest.info,  Node: Implement features,  Next: Write documentation,  Prev: Fix bugs,  Up: Contribution getting started

37.4 Implement features
=======================

Look through the GitHub issues for enhancements(1).

*note Talk: 488. to developers to find out how you can implement
specific features.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/labels/type:%20enhancement


File: pytest.info,  Node: Write documentation,  Next: Submitting Plugins to pytest-dev,  Prev: Implement features,  Up: Contribution getting started

37.5 Write documentation
========================

Pytest could always use more documentation.  What exactly is needed?

   * More complementary documentation.  Have you perhaps found something
     unclear?

   * Documentation translations.  We currently have only English.

   * Docstrings.  There can never be too many of them.

   * Blog posts, articles and such – they’re all very appreciated.

You can also edit documentation files directly in the GitHub web
interface, without using a local copy.  This can be convenient for small
fixes.

     Note: Build the documentation locally with the following command:

          $ tox -e docs

     The built documentation should be available in
     ‘doc/en/_build/html’, where ‘en’ refers to the documentation
     language.

Pytest has an API reference which in large part is generated
automatically(1) from the docstrings of the documented items.  Pytest
uses the Sphinx docstring format(2).  For example:

     def my_function(arg: ArgType) -> Foo:
         """Do important stuff.

         More detailed info here, in separate paragraphs from the subject line.
         Use proper sentences -- start sentences with capital letters and end
         with periods.

         Can include annotated documentation:

         :param short_arg: An argument which determines stuff.
         :param long_arg:
             A long explanation which spans multiple lines, overflows
             like this.
         :returns: The result.
         :raises ValueError:
             Detailed information when this can happen.

         .. versionadded:: 6.0

         Including types into the annotations above is not necessary when
         type-hinting is being used (as in this example).
         """

   ---------- Footnotes ----------

   (1) 
https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html

   (2) 
https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html


File: pytest.info,  Node: Submitting Plugins to pytest-dev,  Next: Preparing Pull Requests,  Prev: Write documentation,  Up: Contribution getting started

37.6 Submitting Plugins to pytest-dev
=====================================

Pytest development of the core, some plugins and support code happens in
repositories living under the ‘pytest-dev’ organisations:

   - pytest-dev on GitHub(1)

All pytest-dev Contributors team members have write access to all
contained repositories.  Pytest core and plugins are generally developed
using *note pull requests: 526. to respective repositories.

The objectives of the ‘pytest-dev’ organisation are:

   * Having a central location for popular pytest plugins

   * Sharing some of the maintenance responsibility (in case a
     maintainer no longer wishes to maintain a plugin)

You can submit your plugin by subscribing to the pytest-dev mail list(2)
and writing a mail pointing to your existing pytest plugin repository
which must have the following:

   - PyPI presence with packaging metadata that contains a ‘pytest-’
     prefixed name, version number, authors, short and long description.

   - a tox configuration(3) for running tests using tox(4).

   - a ‘README’ describing how to use the plugin and on which platforms
     it runs.

   - a ‘LICENSE’ file containing the licensing information, with
     matching info in its packaging metadata.

   - an issue tracker for bug reports and enhancement requests.

   - a changelog(5).

If no contributor strongly objects and two agree, the repository can
then be transferred to the ‘pytest-dev’ organisation.

Here’s a rundown of how a repository transfer usually proceeds (using a
repository named ‘joedoe/pytest-xyz’ as example):

   * ‘joedoe’ transfers repository ownership to ‘pytest-dev’
     administrator ‘calvin’.

   * ‘calvin’ creates ‘pytest-xyz-admin’ and ‘pytest-xyz-developers’
     teams, inviting ‘joedoe’ to both as ‘maintainer’.

   * ‘calvin’ transfers repository to ‘pytest-dev’ and configures team
     access:

        - ‘pytest-xyz-admin’ ‘admin’ access;

        - ‘pytest-xyz-developers’ ‘write’ access;

The ‘pytest-dev/Contributors’ team has write access to all projects, and
every project administrator is in it.  We recommend that each plugin has
at least three people who have the right to release to PyPI.

Repository owners can rest assured that no ‘pytest-dev’ administrator
will ever make releases of your repository or take ownership in any way,
except in rare cases where someone becomes unresponsive after months of
contact attempts.  As stated, the objective is to share maintenance and
avoid “plugin-abandon”.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev

   (2) https://mail.python.org/mailman/listinfo/pytest-dev

   (3) 
https://tox.readthedocs.io/en/latest/config.html#configuration-discovery

   (4) https://tox.readthedocs.io

   (5) https://keepachangelog.com/


File: pytest.info,  Node: Preparing Pull Requests,  Next: Joining the Development Team,  Prev: Submitting Plugins to pytest-dev,  Up: Contribution getting started

37.7 Preparing Pull Requests
============================

* Menu:

* Short version::
* Long version::
* Writing Tests::


File: pytest.info,  Node: Short version,  Next: Long version,  Up: Preparing Pull Requests

37.7.1 Short version
--------------------

  1. Fork the repository.

  2. Enable and install pre-commit(1) to ensure style-guides and code
     checks are followed.

  3. Follow ‘PEP-8’ for naming and black(2) for formatting.

  4. Tests are run using ‘tox’:

          tox -e linting,py37

     The test environments above are usually enough to cover most cases
     locally.

  5. Write a ‘changelog’ entry: ‘changelog/2574.bugfix.rst’, use issue
     id number and one of ‘feature’, ‘improvement’, ‘bugfix’, ‘doc’,
     ‘deprecation’, ‘breaking’, ‘vendor’ or ‘trivial’ for the issue
     type.

  6. Unless your change is a trivial or a documentation fix (e.g., a
     typo or reword of a small section) please add yourself to the
     ‘AUTHORS’ file, in alphabetical order.

   ---------- Footnotes ----------

   (1) https://pre-commit.com

   (2) https://github.com/psf/black


File: pytest.info,  Node: Long version,  Next: Writing Tests,  Prev: Short version,  Up: Preparing Pull Requests

37.7.2 Long version
-------------------

What is a “pull request”?  It informs the project’s core developers
about the changes you want to review and merge.  Pull requests are
stored on GitHub servers(1).  Once you send a pull request, we can
discuss its potential modifications and even add more commits to it
later on.  There’s an excellent tutorial on how Pull Requests work in
the GitHub Help Center(2).

Here is a simple overview, with pytest-specific bits:

  1. Fork the pytest GitHub repository(3).  It’s fine to use ‘pytest’ as
     your fork repository name because it will live under your user.

  2. Clone your fork locally using git(4) and create a branch:

          $ git clone git@github.com:YOUR_GITHUB_USERNAME/pytest.git
          $ cd pytest
          # now, create your own branch off "main":

              $ git checkout -b your-bugfix-branch-name main

     Given we have “major.minor.micro” version numbers, bug fixes will
     usually be released in micro releases whereas features will be
     released in minor releases and incompatible changes in major
     releases.

     If you need some help with Git, follow this quick start guide:
     ‘https://git.wiki.kernel.org/index.php/QuickStart’

  3. Install pre-commit(5) and its hook on the pytest repo:

          $ pip install --user pre-commit
          $ pre-commit install

     Afterwards ‘pre-commit’ will run whenever you commit.

     ‘https://pre-commit.com/’ is a framework for managing and
     maintaining multi-language pre-commit hooks to ensure code-style
     and code formatting is consistent.

  4. Install tox

     Tox is used to run all the tests and will automatically setup
     virtualenvs to run the tests in.  (will implicitly use
     ‘https://virtualenv.pypa.io/en/latest/’):

          $ pip install tox

  5. Run all the tests

     You need to have Python 3.7 available in your system.  Now running
     tests is as simple as issuing this command:

          $ tox -e linting,py37

     This command will run tests via the “tox” tool against Python 3.7
     and also perform “lint” coding-style checks.

  6. You can now edit your local working copy and run the tests again as
     necessary.  Please follow PEP-8 for naming.

     You can pass different options to ‘tox’.  For example, to run tests
     on Python 3.7 and pass options to pytest (e.g.  enter pdb on
     failure) to pytest you can do:

          $ tox -e py37 -- --pdb

     Or to only run tests in a particular test module on Python 3.7:

          $ tox -e py37 -- testing/test_config.py

     When committing, ‘pre-commit’ will re-format the files if
     necessary.

  7. If instead of using ‘tox’ you prefer to run the tests directly,
     then we suggest to create a virtual environment and use an editable
     install with the ‘testing’ extra:

          $ python3 -m venv .venv
          $ source .venv/bin/activate  # Linux
          $ .venv/Scripts/activate.bat  # Windows
          $ pip install -e ".[testing]"

     Afterwards, you can edit the files and run pytest normally:

          $ pytest testing/test_config.py

  8. Create a new changelog entry in ‘changelog’.  The file should be
     named ‘<issueid>.<type>.rst’, where ‘issueid’ is the number of the
     issue related to the change and ‘type’ is one of ‘feature’,
     ‘improvement’, ‘bugfix’, ‘doc’, ‘deprecation’, ‘breaking’, ‘vendor’
     or ‘trivial’.  You may skip creating the changelog entry if the
     change doesn’t affect the documented behaviour of pytest.

  9. Add yourself to ‘AUTHORS’ file if not there yet, in alphabetical
     order.

  10. Commit and push once your tests pass and you are happy with your
     change(s):

          $ git commit -a -m "<commit message>"
          $ git push -u

  11. Finally, submit a pull request through the GitHub website using
     this data:

          head-fork: YOUR_GITHUB_USERNAME/pytest
          compare: your-branch-name

          base-fork: pytest-dev/pytest
          base: main

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/pulls

   (2) https://help.github.com/articles/using-pull-requests/

   (3) https://github.com/pytest-dev/pytest

   (4) https://git-scm.com/

   (5) https://pre-commit.com


File: pytest.info,  Node: Writing Tests,  Prev: Long version,  Up: Preparing Pull Requests

37.7.3 Writing Tests
--------------------

Writing tests for plugins or for pytest itself is often done using the
pytester fixture(1), as a “black-box” test.

For example, to ensure a simple test passes you can write:

     def test_true_assertion(pytester):
         pytester.makepyfile(
             """
             def test_foo():
                 assert True
         """
         )
         result = pytester.runpytest()
         result.assert_outcomes(failed=0, passed=1)

Alternatively, it is possible to make checks based on the actual output
of the termal using ‘glob-like’ expressions:

     def test_true_assertion(pytester):
         pytester.makepyfile(
             """
             def test_foo():
                 assert False
         """
         )
         result = pytester.runpytest()
         result.stdout.fnmatch_lines(["*assert False*", "*1 failed*"])

When choosing a file where to write a new test, take a look at the
existing files and see if there’s one file which looks like a good fit.
For example, a regression test about a bug in the ‘--lf’ option should
go into ‘test_cacheprovider.py’, given that this option is implemented
in ‘cacheprovider.py’.  If in doubt, go ahead and open a PR with your
best guess and we can discuss this over the code.

   ---------- Footnotes ----------

   (1) 
https://docs.pytest.org/en/stable/reference/reference.html#pytester


File: pytest.info,  Node: Joining the Development Team,  Next: Backporting bug fixes for the next patch release,  Prev: Preparing Pull Requests,  Up: Contribution getting started

37.8 Joining the Development Team
=================================

Anyone who has successfully seen through a pull request which did not
require any extra work from the development team to merge will
themselves gain commit access if they so wish (if we forget to ask
please send a friendly reminder).  This does not mean there is any
change in your contribution workflow: everyone goes through the same
pull-request-and-review process and no-one merges their own pull
requests unless already approved.  It does however mean you can
participate in the development process more fully since you can merge
pull requests from other contributors yourself after having reviewed
them.


File: pytest.info,  Node: Backporting bug fixes for the next patch release,  Next: Handling stale issues/PRs,  Prev: Joining the Development Team,  Up: Contribution getting started

37.9 Backporting bug fixes for the next patch release
=====================================================

Pytest makes feature release every few weeks or months.  In between,
patch releases are made to the previous feature release, containing bug
fixes only.  The bug fixes usually fix regressions, but may be any
change that should reach users before the next feature release.

Suppose for example that the latest release was 1.2.3, and you want to
include a bug fix in 1.2.4 (check
‘https://github.com/pytest-dev/pytest/releases’ for the actual latest
release).  The procedure for this is:

  1. First, make sure the bug is fixed the ‘main’ branch, with a regular
     pull request, as described above.  An exception to this is if the
     bug fix is not applicable to ‘main’ anymore.

Automatic method:

Add a ‘backport 1.2.x’ label to the PR you want to backport.  This will
create a backport PR against the ‘1.2.x’ branch.

Manual method:

  1. ‘git checkout origin/1.2.x -b backport-XXXX’ # use the main PR
     number here

  2. Locate the merge commit on the PR, in the ‘merged’ message, for
     example:

          nicoddemus merged commit 0f8b462 into pytest-dev:main

  3. ‘git cherry-pick -x -m1 REVISION’ # use the revision you found
     above (‘0f8b462’).

  4. Open a PR targeting ‘1.2.x’:

        * Prefix the message with ‘[1.2.x]’.

        * Delete the PR body, it usually contains a duplicate commit
          message.

* Menu:

* Who does the backporting::


File: pytest.info,  Node: Who does the backporting,  Up: Backporting bug fixes for the next patch release

37.9.1 Who does the backporting
-------------------------------

As mentioned above, bugs should first be fixed on ‘main’ (except in rare
occasions that a bug only happens in a previous release).  So, who
should do the backport procedure described above?

  1. If the bug was fixed by a core developer, it is the main
     responsibility of that core developer to do the backport.

  2. However, often the merge is done by another maintainer, in which
     case it is nice of them to do the backport procedure if they have
     the time.

  3. For bugs submitted by non-maintainers, it is expected that a core
     developer will to do the backport, normally the one that merged the
     PR on ‘main’.

  4. If a non-maintainers notices a bug which is fixed on ‘main’ but has
     not been backported (due to maintainers forgetting to apply the
     ‘needs backport’ label, or just plain missing it), they are also
     welcome to open a PR with the backport.  The procedure is simple
     and really helps with the maintenance of the project.

All the above are not rules, but merely some guidelines/suggestions on
what we should expect about backports.


File: pytest.info,  Node: Handling stale issues/PRs,  Next: Closing Issues,  Prev: Backporting bug fixes for the next patch release,  Up: Contribution getting started

37.10 Handling stale issues/PRs
===============================

Stale issues/PRs are those where pytest contributors have asked for
questions/changes and the authors didn’t get around to answer/implement
them yet after a somewhat long time, or the discussion simply died
because people seemed to lose interest.

There are many reasons why people don’t answer questions or implement
requested changes: they might get busy, lose interest, or just forget
about it, but the fact is that this is very common in open source
software.

The pytest team really appreciates every issue and pull request, but
being a high-volume project with many issues and pull requests being
submitted daily, we try to reduce the number of stale issues and PRs by
regularly closing them.  When an issue/pull request is closed in this
manner, it is by no means a dismissal of the topic being tackled by the
issue/pull request, but it is just a way for us to clear up the queue
and make the maintainers’ work more manageable.  Submitters can always
reopen the issue/pull request in their own time later if it makes sense.

* Menu:

* When to close::
* Closing pull requests::


File: pytest.info,  Node: When to close,  Next: Closing pull requests,  Up: Handling stale issues/PRs

37.10.1 When to close
---------------------

Here are a few general rules the maintainers use deciding when to close
issues/PRs because of lack of inactivity:

   * Issues labeled ‘question’ or ‘needs information’: closed after 14
     days inactive.

   * Issues labeled ‘proposal’: closed after six months inactive.

   * Pull requests: after one month, consider pinging the author, update
     linked issue, or consider closing.  For pull requests which are
     nearly finished, the team should consider finishing it up and
     merging it.

The above are ‘not hard rules’, but merely ‘guidelines’, and can be (and
often are!)  reviewed on a case-by-case basis.


File: pytest.info,  Node: Closing pull requests,  Prev: When to close,  Up: Handling stale issues/PRs

37.10.2 Closing pull requests
-----------------------------

When closing a Pull Request, it needs to be acknowledging the time,
effort, and interest demonstrated by the person which submitted it.  As
mentioned previously, it is not the intent of the team to dismiss a
stalled pull request entirely but to merely to clear up our queue, so a
message like the one below is warranted when closing a pull request that
went stale:

     Hi <contributor>,

     First of all, we would like to thank you for your time and effort
     on working on this, the pytest team deeply appreciates it.

     We noticed it has been awhile since you have updated this PR,
     however.  pytest is a high activity project, with many issues/PRs
     being opened daily, so it is hard for us maintainers to track which
     PRs are ready for merging, for review, or need more attention.

     So for those reasons we, think it is best to close the PR for now,
     but with the only intention to clean up our queue, it is by no
     means a rejection of your changes.  We still encourage you to
     re-open this PR (it is just a click of a button away) when you are
     ready to get back to it.

     Again we appreciate your time for working on this, and hope you
     might get back to this at a later time!

     <bye>


File: pytest.info,  Node: Closing Issues,  Prev: Handling stale issues/PRs,  Up: Contribution getting started

37.11 Closing Issues
====================

When a pull request is submitted to fix an issue, add text like ‘closes
#XYZW’ to the PR description and/or commits (where ‘XYZW’ is the issue
number).  See the GitHub docs(1) for more information.

When an issue is due to user error (e.g.  misunderstanding of a
functionality), please politely explain to the user why the issue raised
is really a non-issue and ask them to close the issue if they have no
further questions.  If the original requestor is unresponsive, the issue
will be handled as described in the section *note Handling stale
issues/PRs: 52f. above.

   ---------- Footnotes ----------

   (1) 
https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword


File: pytest.info,  Node: Development Guide,  Next: Sponsor,  Prev: Contribution getting started,  Up: Top

38 Development Guide
********************

The contributing guidelines are to be found *note here: 51a.  The
release procedure for pytest is documented on GitHub(1).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/blob/main/RELEASING.rst


File: pytest.info,  Node: Sponsor,  Next: pytest for enterprise,  Prev: Development Guide,  Up: Top

39 Sponsor
**********

pytest is maintained by a team of volunteers from all around the world
in their free time.  While we work on pytest because we love the project
and use it daily at our daily jobs, monetary compensation when possible
is welcome to justify time away from friends, family and personal time.

Money is also used to fund local sprints, merchandising (stickers to
distribute in conferences for example) and every few years a large
sprint involving all members.

* Menu:

* OpenCollective::


File: pytest.info,  Node: OpenCollective,  Up: Sponsor

39.1 OpenCollective
===================

Open Collective(1) is an online funding platform for open and
transparent communities.  It provide tools to raise money and share your
finances in full transparency.

It is the platform of choice for individuals and companies that want to
make one-time or monthly donations directly to the project.

See more details in the pytest collective(2).

   ---------- Footnotes ----------

   (1) https://opencollective.com

   (2) https://opencollective.com/pytest


File: pytest.info,  Node: pytest for enterprise,  Next: License,  Prev: Sponsor,  Up: Top

40 pytest for enterprise
************************

Tidelift(1) is working with the maintainers of pytest and thousands of
other open source projects to deliver commercial support and maintenance
for the open source dependencies you use to build your applications.
Save time, reduce risk, and improve code health, while paying the
maintainers of the exact dependencies you use.

Get more details(2)

The Tidelift Subscription is a managed open source subscription for
application dependencies covering millions of open source projects
across JavaScript, Python, Java, PHP, Ruby, .NET, and more.

Your subscription includes:

   * ‘Security updates’

        - Tidelift’s security response team coordinates patches for new
          breaking security vulnerabilities and alerts immediately
          through a private channel, so your software supply chain is
          always secure.

   * ‘Licensing verification and indemnification’

        - Tidelift verifies license information to enable easy policy
          enforcement and adds intellectual property indemnification to
          cover creators and users in case something goes wrong.  You
          always have a 100% up-to-date bill of materials for your
          dependencies to share with your legal team, customers, or
          partners.

   * ‘Maintenance and code improvement’

        - Tidelift ensures the software you rely on keeps working as
          long as you need it to work.  Your managed dependencies are
          actively maintained and we recruit additional maintainers
          where required.

   * ‘Package selection and version guidance’

        - Tidelift helps you choose the best open source packages from
          the start—and then guide you through updates to stay on the
          best releases as new issues arise.

   * ‘Roadmap input’

        - Take a seat at the table with the creators behind the software
          you use.  Tidelift’s participating maintainers earn more
          income as their software is used by more subscribers, so
          they’re interested in knowing what you need.

   * ‘Tooling and cloud integration’

        - Tidelift works with GitHub, GitLab, BitBucket, and every cloud
          platform (and other deployment targets, too).

The end result?  All of the capabilities you expect from
commercial-grade software, for the full breadth of open source you use.
That means less time grappling with esoteric open source trivia, and
more time building your own applications—and your business.

Request a demo(3)

   ---------- Footnotes ----------

   (1) https://tidelift.com

   (2) 
https://tidelift.com/subscription/pkg/pypi-pytest?utm_source=pypi-pytest&utm_medium=referral&utm_campaign=enterprise

   (3) 
https://tidelift.com/subscription/request-a-demo?utm_source=pypi-pytest&utm_medium=referral&utm_campaign=enterprise


File: pytest.info,  Node: License,  Next: Contact channels,  Prev: pytest for enterprise,  Up: Top

41 License
**********

Distributed under the terms of the MIT(1) license, pytest is free and
open source software.

     The MIT License (MIT)

     Copyright (c) 2004 Holger Krekel and others

     Permission is hereby granted, free of charge, to any person obtaining a copy of
     this software and associated documentation files (the "Software"), to deal in
     the Software without restriction, including without limitation the rights to
     use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
     of the Software, and to permit persons to whom the Software is furnished to do
     so, subject to the following conditions:

     The above copyright notice and this permission notice shall be included in all
     copies or substantial portions of the Software.

     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
     SOFTWARE.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/blob/main/LICENSE


File: pytest.info,  Node: Contact channels,  Next: History<2>,  Prev: License,  Up: Top

42 Contact channels
*******************

   - pytest issue tracker(1) to report bugs or suggest features (for
     version 2.0 and above).

   - pytest discussions(2) at github for general questions.

   - pytest discord server(3) for pytest development visibility and
     general assistance.

   - pytest on stackoverflow.com(4) to post precise questions with the
     tag ‘pytest’.  New Questions will usually be seen by pytest users
     or developers and answered quickly.

   - Testing In Python(5): a mailing list for Python testing tools and
     discussion.

   - pytest-dev at python.org (mailing list)(6) pytest specific
     announcements and discussions.

   - *note contribution guide: 519. for help on submitting pull requests
     to GitHub.

   - ‘#pytest’ on irc.libera.chat(7) IRC channel for random questions
     (using an IRC client, via webchat(8), or via Matrix(9)).

   - private mail to Holger.Krekel at gmail com if you want to
     communicate sensitive issues

   - merlinux.eu(10) offers pytest and tox-related professional teaching
     and consulting.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues

   (2) https://github.com/pytest-dev/pytest/discussions

   (3) https://discord.com/invite/pytest-dev

   (4) http://stackoverflow.com/search?q=pytest

   (5) http://lists.idyll.org/listinfo/testing-in-python

   (6) http://mail.python.org/mailman/listinfo/pytest-dev

   (7) ircs://irc.libera.chat:6697/#pytest

   (8) https://web.libera.chat/#pytest

   (9) https://matrix.to/#/%23pytest:libera.chat

   (10) https://merlinux.eu/


File: pytest.info,  Node: History<2>,  Next: Historical Notes,  Prev: Contact channels,  Up: Top

43 History
**********

pytest has a long and interesting history.  The first commit(1) in this
repository is from January 2007, and even that commit alone already
tells a lot: The repository originally was from the py(2) library (later
split off to pytest), and it originally was a SVN revision, migrated to
Mercurial, and finally migrated to git.

However, the commit says “create the new development trunk” and is
already quite big: ‘435 files changed, 58640 insertions(+)’.  This is
because pytest originally was born as part of PyPy(3), to make it easier
to write tests for it.  Here’s how it evolved from there to its own
project:

   - Late 2002 / early 2003, PyPy was born(4).

   - Like that blog post mentioned, from very early on, there was a big
     focus on testing.  There were various ‘testsupport’ files on top of
     unittest.py, and as early as June 2003, Holger Krekel (@hpk42(5))
     refactored(6) its test framework to clean things up
     (‘pypy.tool.test’, but still on top of ‘unittest.py’, with nothing
     pytest-like yet).

   - In December 2003, there was another iteration(7) at improving their
     testing situation, by Stefan Schwarzer, called ‘pypy.tool.newtest’.

   - However, it didn’t seem to be around for long, as around June/July
     2004, efforts started on a thing called ‘utest’, offering plain
     assertions.  This seems like the start of something pytest-like,
     but unfortunately, it’s unclear where the test runner’s code was at
     the time.  The closest thing still around is this file(8), but that
     doesn’t seem like a complete test runner at all.  What can be seen
     is that there were various efforts(9) by Laura Creighton and
     Samuele Pedroni (@pedronis(10)) at automatically converting
     existing tests to the new ‘utest’ framework.

   - Around the same time, for Europython 2004, @hpk42 started a
     project(11) originally called “std”, intended to be a
     “complementary standard library” - already laying out the
     principles behind what later became pytest:

             - current “batteries included” are very useful, but

                  - some of them are written in a pretty much java-like
                    style, especially the unittest-framework

                  - […]

                  - the best API is one that doesn’t exist

          […]

             - a testing package should require as few boilerplate code
               as possible and offer much flexibility

             - it should provide premium quality tracebacks and
               debugging aid

          […]

             - first of all … forget about limited “assertXYZ APIs” and
               use the real thing, e.g.:

                    assert x == y

             - this works with plain python but you get unhelpful
               “assertion failed” errors with no information

             - std.utest (magic!)  actually reinterprets the assertion
               expression and offers detailed information about
               underlying values

   - In September 2004, the ‘py-dev’ mailinglist gets born, which is
     now(12) ‘pytest-dev’, but thankfully with all the original archives
     still intact.

   - Around September/October 2004, the ‘std’ project was renamed(13) to
     ‘py’ and ‘std.utest’ became ‘py.test’.  This is also the first time
     the entire source code(14), seems to be available, with much of the
     API still being around today:

        - ‘py.path.local’, which is being phased out of pytest (in
          favour of pathlib) some 16-17 years later

        - The idea of the collection tree, including ‘Collector’,
          ‘FSCollector’, ‘Directory’, ‘PyCollector’, ‘Module’, ‘Class’

        - Arguments like ‘-x’ / ‘--exitfirst’, ‘-l’ / ‘--showlocals’,
          ‘--fulltrace’, ‘--pdb’, ‘-S’ / ‘--nocapture’ (‘-s’ /
          ‘--capture=off’ today), ‘--collectonly’ (‘--collect-only’
          today)

   - In the same month, the ‘py’ library gets split off(15) from ‘PyPy’

   - It seemed to get rather quiet for a while, and little seemed to
     happen between October 2004 (removing ‘py’ from PyPy) and January
     2007 (first commit in the now-pytest repository).  However, there
     were various discussions about features/ideas on the mailinglist,
     and a couple of releases(16) every couple of months:

        - March 2006: py 0.8.0-alpha2

        - May 2007: py 0.9.0

        - March 2008: py 0.9.1 (first release to be found in the pytest
          changelog(17)!)

        - August 2008: py 0.9.2

   - In August 2009, py 1.0.0 was released, introducing a lot of
     fundamental features(18):

        - funcargs/fixtures

        - A plugin architecture(19) which still looks very much the same
          today!

        - Various default plugins(20), including monkeypatch(21)

   - Even back there, the FAQ(22) said:

          Clearly, [a second standard library] was ambitious and the
          naming has maybe haunted the project rather than helping it.
          There may be a project name change and possibly a split up
          into different projects sometime.

     and that finally happened in November 2010, when pytest 2.0.0 was
     released(23) as a package separate from ‘py’ (but still called
     ‘py.test’).

   - In August 2016, pytest 3.0.0 *note was released: 549, which adds
     ‘pytest’ (rather than ‘py.test’) as the recommended command-line
     entry point

Due to this history, it’s difficult to answer the question when pytest
was started.  It depends what point should really be seen as the start
of it all.  One possible interpretation is to pick Europython 2004,
i.e. around June/July 2004.

   ---------- Footnotes ----------

   (1) 
https://github.com/pytest-dev/pytest/commit/5992a8ef21424d7571305a8d7e2a3431ee7e1e23

   (2) https://pypi.org/project/py/

   (3) https://www.pypy.org/

   (4) 
https://morepypy.blogspot.com/2018/09/the-first-15-years-of-pypy.html

   (5) https://github.com/hpk42

   (6) https://mail.python.org/pipermail/pypy-dev/2003-June/000787.html

   (7) 
https://foss.heptapod.net/pypy/pypy/-/commit/02752373e1b29d89c6bb0a97e5f940caa22bdd63

   (8) 
https://foss.heptapod.net/pypy/pypy/-/commit/0735f9ed287ec20950a7dd0a16fc10810d4f6847

   (9) 
https://foss.heptapod.net/pypy/pypy/-/commits/branch/default?utf8=%E2%9C%93&search=utest

   (10) https://github.com/pedronis

   (11) 
http://web.archive.org/web/20041020215353/http://codespeak.net/svn/user/hpk/talks/std-talk.txt

   (12) https://mail.python.org/pipermail/pytest-dev/

   (13) 
https://mail.python.org/pipermail/pypy-dev/2004-September/001565.html

   (14) 
https://foss.heptapod.net/pypy/pypy/-/commit/42cf50c412026028e20acd23d518bd92e623ac11

   (15) 
https://foss.heptapod.net/pypy/pypy/-/commit/6bdafe9203ad92eb259270b267189141c53bce33

   (16) https://pypi.org/project/py/0.8.0-alpha2/#history/

   (17) 
https://github.com/pytest-dev/pytest/blob/main/doc/en/changelog.rst#091

   (18) 
https://holgerkrekel.net/2009/08/04/pylib-1-0-0-released-the-testing-with-python-innovations-continue/

   (19) 
http://web.archive.org/web/20090629032718/https://codespeak.net/py/dist/test/extend.html

   (20) 
http://web.archive.org/web/20091005181132/https://codespeak.net/py/dist/test/plugin/index.html

   (21) 
http://web.archive.org/web/20091012022829/http://codespeak.net/py/dist/test/plugin/how-to/monkeypatch.html

   (22) 
http://web.archive.org/web/20091005222413/http://codespeak.net/py/dist/faq.html

   (23) 
https://mail.python.org/pipermail/pytest-dev/2010-November/001687.html


File: pytest.info,  Node: Historical Notes,  Next: Talks and Tutorials,  Prev: History<2>,  Up: Top

44 Historical Notes
*******************

This page lists features or behavior from previous versions of pytest
which have changed over the years.  They are kept here as a historical
note so users looking at old code can find documentation related to
them.

* Menu:

* Marker revamp and iteration::
* cache plugin integrated into the core::
* funcargs and pytest_funcarg__::
* @pytest.yield_fixture decorator: @pytest yield_fixture decorator.
* [pytest] header in setup.cfg: [pytest] header in setup cfg.
* Applying marks to @pytest.mark.parametrize parameters: Applying marks to @pytest mark parametrize parameters.
* @pytest.mark.parametrize argument names as a tuple: @pytest mark parametrize argument names as a tuple.
* setup; is now an “autouse fixture”: setup is now an “autouse fixture”.
* Conditions as strings instead of booleans::
* pytest.set_trace(): pytest set_trace.
* “compat” properties::


File: pytest.info,  Node: Marker revamp and iteration,  Next: cache plugin integrated into the core,  Up: Historical Notes

44.1 Marker revamp and iteration
================================

Changed in version 3.6.

pytest’s marker implementation traditionally worked by simply updating
the ‘__dict__’ attribute of functions to cumulatively add markers.  As a
result, markers would unintentionally be passed along class hierarchies
in surprising ways.  Further, the API for retrieving them was
inconsistent, as markers from parameterization would be stored
differently than markers applied using the ‘@pytest.mark’ decorator and
markers added via ‘node.add_marker’.

This state of things made it technically next to impossible to use data
from markers correctly without having a deep understanding of the
internals, leading to subtle and hard to understand bugs in more
advanced usages.

Depending on how a marker got declared/changed one would get either a
‘MarkerInfo’ which might contain markers from sibling classes,
‘MarkDecorators’ when marks came from parameterization or from a
‘node.add_marker’ call, discarding prior marks.  Also ‘MarkerInfo’ acts
like a single mark, when it in fact represents a merged view on multiple
marks with the same name.

On top of that markers were not accessible in the same way for modules,
classes, and functions/methods.  In fact, markers were only accessible
in functions, even if they were declared on classes/modules.

A new API to access markers has been introduced in pytest 3.6 in order
to solve the problems with the initial design, providing the *note
_pytest.nodes.Node.iter_markers(): 1fd. method to iterate over markers
in a consistent manner and reworking the internals, which solved a great
deal of problems with the initial design.

* Menu:

* Updating code::
* Related issues::


File: pytest.info,  Node: Updating code,  Next: Related issues,  Up: Marker revamp and iteration

44.1.1 Updating code
--------------------

The old ‘Node.get_marker(name)’ function is considered deprecated
because it returns an internal ‘MarkerInfo’ object which contains the
merged name, ‘*args’ and ‘**kwargs’ of all the markers which apply to
that node.

In general there are two scenarios on how markers should be handled:

1.  Marks overwrite each other.  Order matters but you only want to
think of your mark as a single item.  E.g.  ‘log_level('info')’ at a
module level can be overwritten by ‘log_level('debug')’ for a specific
test.

     In this case, use ‘Node.get_closest_marker(name)’:

          # replace this:
          marker = item.get_marker("log_level")
          if marker:
              level = marker.args[0]

          # by this:
          marker = item.get_closest_marker("log_level")
          if marker:
              level = marker.args[0]

2.  Marks compose in an additive manner.  E.g.  ‘skipif(condition)’
marks mean you just want to evaluate all of them, order doesn’t even
matter.  You probably want to think of your marks as a set here.

     In this case iterate over each mark and handle their ‘*args’ and
     ‘**kwargs’ individually.

          # replace this
          skipif = item.get_marker("skipif")
          if skipif:
              for condition in skipif.args:
                  # eval condition
                  ...

          # by this:
          for skipif in item.iter_markers("skipif"):
              condition = skipif.args[0]
              # eval condition

If you are unsure or have any questions, please consider opening an
issue(1).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/new


File: pytest.info,  Node: Related issues,  Prev: Updating code,  Up: Marker revamp and iteration

44.1.2 Related issues
---------------------

Here is a non-exhaustive list of issues fixed by the new implementation:

   * Marks don’t pick up nested classes (issue #199(1)).

   * Markers stain on all related classes (issue #568(2)).

   * Combining marks - args and kwargs calculation (issue #2897(3)).

   * ‘request.node.get_marker('name')’ returns ‘None’ for markers
     applied in classes (issue #902(4)).

   * Marks applied in parametrize are stored as markdecorator (issue
     #2400(5)).

   * Fix marker interaction in a backward incompatible way (issue
     #1670(6)).

   * Refactor marks to get rid of the current “marks transfer” mechanism
     (issue #2363(7)).

   * Introduce FunctionDefinition node, use it in generate_tests (issue
     #2522(8)).

   * Remove named marker attributes and collect markers in items (issue
     #891(9)).

   * skipif mark from parametrize hides module level skipif mark (issue
     #1540(10)).

   * skipif + parametrize not skipping tests (issue #1296(11)).

   * Marker transfer incompatible with inheritance (issue #535(12)).

More details can be found in the original PR(13).

     Note: in a future major release of pytest we will introduce class
     based markers, at which point markers will no longer be limited to
     instances of ‘Mark’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/199

   (2) https://github.com/pytest-dev/pytest/issues/568

   (3) https://github.com/pytest-dev/pytest/issues/2897

   (4) https://github.com/pytest-dev/pytest/issues/902

   (5) https://github.com/pytest-dev/pytest/issues/2400

   (6) https://github.com/pytest-dev/pytest/issues/1670

   (7) https://github.com/pytest-dev/pytest/issues/2363

   (8) https://github.com/pytest-dev/pytest/issues/2522

   (9) https://github.com/pytest-dev/pytest/issues/891

   (10) https://github.com/pytest-dev/pytest/issues/1540

   (11) https://github.com/pytest-dev/pytest/issues/1296

   (12) https://github.com/pytest-dev/pytest/issues/535

   (13) https://github.com/pytest-dev/pytest/pull/3317


File: pytest.info,  Node: cache plugin integrated into the core,  Next: funcargs and pytest_funcarg__,  Prev: Marker revamp and iteration,  Up: Historical Notes

44.2 cache plugin integrated into the core
==========================================

The functionality of the *note core cache: d1. plugin was previously
distributed as a third party plugin named ‘pytest-cache’.  The core
plugin is compatible regarding command line options and API usage except
that you can only store/receive data between test runs that is
json-serializable.


File: pytest.info,  Node: funcargs and pytest_funcarg__,  Next: @pytest yield_fixture decorator,  Prev: cache plugin integrated into the core,  Up: Historical Notes

44.3 funcargs and ‘pytest_funcarg__’
====================================

In versions prior to 2.3 there was no ‘@pytest.fixture’ marker and you
had to use a magic ‘pytest_funcarg__NAME’ prefix for the fixture
factory.  This remains and will remain supported but is not anymore
advertised as the primary means of declaring fixture functions.


File: pytest.info,  Node: @pytest yield_fixture decorator,  Next: [pytest] header in setup cfg,  Prev: funcargs and pytest_funcarg__,  Up: Historical Notes

44.4 ‘@pytest.yield_fixture’ decorator
======================================

Prior to version 2.10, in order to use a ‘yield’ statement to execute
teardown code one had to mark a fixture using the ‘yield_fixture’
marker.  From 2.10 onward, normal fixtures can use ‘yield’ directly so
the ‘yield_fixture’ decorator is no longer needed and considered
deprecated.


File: pytest.info,  Node: [pytest] header in setup cfg,  Next: Applying marks to @pytest mark parametrize parameters,  Prev: @pytest yield_fixture decorator,  Up: Historical Notes

44.5 ‘[pytest]’ header in ‘setup.cfg’
=====================================

Prior to 3.0, the supported section name was ‘[pytest]’.  Due to how
this may collide with some distutils commands, the recommended section
name for ‘setup.cfg’ files is now ‘[tool:pytest]’.

Note that for ‘pytest.ini’ and ‘tox.ini’ files the section name is
‘[pytest]’.


File: pytest.info,  Node: Applying marks to @pytest mark parametrize parameters,  Next: @pytest mark parametrize argument names as a tuple,  Prev: [pytest] header in setup cfg,  Up: Historical Notes

44.6 Applying marks to ‘@pytest.mark.parametrize’ parameters
============================================================

Prior to version 3.1 the supported mechanism for marking values used the
syntax:

     import pytest


     @pytest.mark.parametrize(
         "test_input,expected", [("3+5", 8), ("2+4", 6), pytest.mark.xfail(("6*9", 42))]
     )
     def test_eval(test_input, expected):
         assert eval(test_input) == expected

This was an initial hack to support the feature but soon was
demonstrated to be incomplete, broken for passing functions or applying
multiple marks with the same name but different parameters.

The old syntax is planned to be removed in pytest-4.0.


File: pytest.info,  Node: @pytest mark parametrize argument names as a tuple,  Next: setup is now an “autouse fixture”,  Prev: Applying marks to @pytest mark parametrize parameters,  Up: Historical Notes

44.7 ‘@pytest.mark.parametrize’ argument names as a tuple
=========================================================

In versions prior to 2.4 one needed to specify the argument names as a
tuple.  This remains valid but the simpler ‘"name1,name2,..."’
comma-separated-string syntax is now advertised first because it’s
easier to write and produces less line noise.


File: pytest.info,  Node: setup is now an “autouse fixture”,  Next: Conditions as strings instead of booleans,  Prev: @pytest mark parametrize argument names as a tuple,  Up: Historical Notes

44.8 setup: is now an “autouse fixture”
=======================================

During development prior to the pytest-2.3 release the name
‘pytest.setup’ was used but before the release it was renamed and moved
to become part of the general fixture mechanism, namely *note Autouse
fixtures (fixtures you don’t have to request): 4c.


File: pytest.info,  Node: Conditions as strings instead of booleans,  Next: pytest set_trace,  Prev: setup is now an “autouse fixture”,  Up: Historical Notes

44.9 Conditions as strings instead of booleans
==============================================

Prior to pytest-2.4 the only way to specify skipif/xfail conditions was
to use strings:

     import sys


     @pytest.mark.skipif("sys.version_info >= (3,3)")
     def test_function():
         ...

During test function setup the skipif condition is evaluated by calling
‘eval('sys.version_info >= (3,0)', namespace)’.  The namespace contains
all the module globals, and ‘os’ and ‘sys’ as a minimum.

Since pytest-2.4 *note boolean conditions: 121. are considered
preferable because markers can then be freely imported between test
modules.  With strings you need to import not only the marker but all
variables used by the marker, which violates encapsulation.

The reason for specifying the condition as a string was that ‘pytest’
can report a summary of skip conditions based purely on the condition
string.  With conditions as booleans you are required to specify a
‘reason’ string.

Note that string conditions will remain fully supported and you are free
to use them if you have no need for cross-importing markers.

The evaluation of a condition string in
‘pytest.mark.skipif(conditionstring)’ or
‘pytest.mark.xfail(conditionstring)’ takes place in a namespace
dictionary which is constructed as follows:

   * the namespace is initialized by putting the ‘sys’ and ‘os’ modules
     and the pytest ‘config’ object into it.

   * updated with the module globals of the test function for which the
     expression is applied.

The pytest ‘config’ object allows you to skip based on a test
configuration value which you might have added:

     @pytest.mark.skipif("not config.getvalue('db')")
     def test_function():
         ...

The equivalent with “boolean conditions” is:

     @pytest.mark.skipif(not pytest.config.getvalue("db"), reason="--db was not specified")
     def test_function():
         pass

     Note: You cannot use ‘pytest.config.getvalue()’ in code imported
     before pytest’s argument parsing takes place.  For example,
     ‘conftest.py’ files are imported before command line parsing and
     thus ‘config.getvalue()’ will not execute correctly.


File: pytest.info,  Node: pytest set_trace,  Next: “compat” properties,  Prev: Conditions as strings instead of booleans,  Up: Historical Notes

44.10 ‘pytest.set_trace()’
==========================

Previous to version 2.4 to set a break point in code one needed to use
‘pytest.set_trace()’:

     import pytest


     def test_function():
         ...
         pytest.set_trace()  # invoke PDB debugger and tracing

This is no longer needed and one can use the native ‘import
pdb;pdb.set_trace()’ call directly.

For more details see breakpoints.


File: pytest.info,  Node: “compat” properties,  Prev: pytest set_trace,  Up: Historical Notes

44.11 “compat” properties
=========================

Access of ‘Module’, ‘Function’, ‘Class’, ‘Instance’, ‘File’ and ‘Item’
through ‘Node’ instances have long been documented as deprecated, but
started to emit warnings from pytest ‘3.9’ and onward.

Users should just ‘import pytest’ and access those objects using the
‘pytest’ module.


File: pytest.info,  Node: Talks and Tutorials,  Next: Release announcements,  Prev: Historical Notes,  Up: Top

45 Talks and Tutorials
**********************

* Menu:

* Books::
* Talks and blog postings::


File: pytest.info,  Node: Books,  Next: Talks and blog postings,  Up: Talks and Tutorials

45.1 Books
==========

   - pytest Quick Start Guide, by Bruno Oliveira (2018)(1).

   - Python Testing with pytest, by Brian Okken (2017)(2).

   - Python Testing with pytest, Second Edition, by Brian Okken
     (2022)(3).

   ---------- Footnotes ----------

   (1) https://www.packtpub.com/web-development/pytest-quick-start-guide

   (2) https://pragprog.com/book/bopytest/python-testing-with-pytest

   (3) 
https://pragprog.com/titles/bopytest2/python-testing-with-pytest-second-edition


File: pytest.info,  Node: Talks and blog postings,  Prev: Books,  Up: Talks and Tutorials

45.2 Talks and blog postings
============================

   - Training: pytest - simple, rapid and fun testing with Python(1),
     Florian Bruhin, PyConDE 2022

   - pytest: Simple, rapid and fun testing with Python,(2) (@ 4:22:32),
     Florian Bruhin, WeAreDevelopers World Congress 2021

   - Webinar: pytest: Test Driven Development für Python (German)(3),
     Florian Bruhin, via mylearning.ch, 2020

   - Webinar: Simplify Your Tests with Fixtures(4), Oliver Bestwalter,
     via JetBrains, 2020

   - Training: Introduction to pytest - simple, rapid and fun testing
     with Python(5), Florian Bruhin, PyConDE 2019

   - Abridged metaprogramming classics - this episode: pytest, Oliver
     Bestwalter, PyConDE 2019 (repository(6), recording(7))

   - Testing PySide/PyQt code easily using the pytest framework, Florian
     Bruhin, Qt World Summit 2019 (slides(8), recording(9))

   - pytest: recommendations, basic packages for testing in Python and
     Django, Andreu Vallbona, PyBCN June 2019(10).

   - pytest: recommendations, basic packages for testing in Python and
     Django, Andreu Vallbona, PyconES 2017 (slides in english(11), video
     in spanish(12))

   - pytest advanced, Andrew Svetlov (Russian, PyCon Russia, 2016)(13).

   - Pythonic testing, Igor Starikov (Russian, PyNsk, November
     2016)(14).

   - pytest - Rapid Simple Testing, Florian Bruhin, Swiss Python Summit
     2016(15).

   - Improve your testing with Pytest and Mock, Gabe Hollombe, PyCon SG
     2015(16).

   - Introduction to pytest, Andreas Pelme, EuroPython 2014(17).

   - Advanced Uses of py.test Fixtures, Floris Bruynooghe, EuroPython
     2014(18).

   - Why i use py.test and maybe you should too, Andy Todd, Pycon AU
     2013(19)

   - 3-part blog series about pytest from @pydanny alias Daniel
     Greenfeld (January 2014)(20)

   - pytest: helps you write better Django apps, Andreas Pelme,
     DjangoCon Europe 2014(21).

   - Testing Django Applications with pytest, Andreas Pelme, EuroPython
     2013(22).

   - Testes pythonics com py.test, Vinicius Belchior Assef Neto, Plone
     Conf 2013, Brazil(23).

   - Introduction to py.test fixtures, FOSDEM 2013, Floris
     Bruynooghe(24).

   - pytest feature and release highlights, Holger Krekel (GERMAN,
     October 2013)(25)

   - pytest introduction from Brian Okken (January 2013)(26)

   - pycon australia 2012 pytest talk from Brianna Laugher (video(27),
     slides(28), code(29))

   - pycon 2012 US talk video from Holger Krekel(30)

   - monkey patching done right(31) (blog post, consult monkeypatch
     plugin(32) for up-to-date API)

Test parametrization:

   - generating parametrized tests with fixtures(33).

   - test generators and cached setup(34)

   - parametrizing tests, generalized(35) (blog post)

   - putting test-hooks into local or global plugins(36) (blog post)

Assertion introspection:

   - (07/2011) Behind the scenes of pytest’s new assertion rewriting(37)

Distributed testing:

   - simultaneously test your code on all platforms(38) (blog entry)

Plugin specific examples:

   - skipping slow tests by default in pytest(39) (blog entry)

   - many examples in the docs for plugins(40)

   ---------- Footnotes ----------

   (1) https://www.youtube.com/watch?v=ofPHJrAOaTE

   (2) https://youtu.be/cSJ-X3TbQ1c?t=15752

   (3) https://bruhin.software/ins-pytest/

   (4) 
https://blog.jetbrains.com/pycharm/2020/08/webinar-recording-simplify-your-tests-with-fixtures-with-oliver-bestwalter/

   (5) https://www.youtube.com/watch?v=CMuSn9cofbI

   (6) https://github.com/obestwalter/abridged-meta-programming-classics

   (7) https://www.youtube.com/watch?v=zHpeMTJsBRk&feature=youtu.be

   (8) https://bruhin.software/talks/qtws19.pdf

   (9) https://www.youtube.com/watch?v=zdsBS5BXGqQ

   (10) 
https://www.slideshare.net/AndreuVallbonaPlazas/pybcn-pytest-recomendaciones-paquetes-bsicos-para-testing-en-python-y-django

   (11) http://talks.apsl.io/testing-pycones-2017/

   (12) https://www.youtube.com/watch?v=K20GeR-lXDk

   (13) https://www.youtube.com/watch?v=7KgihdKTWY4

   (14) https://www.youtube.com/watch?v=_92nfdd5nK8

   (15) https://www.youtube.com/watch?v=rCBHkQ_LVIs

   (16) https://www.youtube.com/watch?v=RcN26hznmk4

   (17) https://www.youtube.com/watch?v=LdVJj65ikRY

   (18) https://www.youtube.com/watch?v=IBC_dxr-4ps

   (19) https://www.youtube.com/watch?v=P-AhpukDIik

   (20) 
https://daniel.roygreenfeld.com/pytest-no-boilerplate-testing.html

   (21) https://www.youtube.com/watch?v=aaArYVh6XSM

   (22) https://www.youtube.com/watch?v=aUf8Fkb7TaY

   (23) https://www.youtube.com/watch?v=QUKoq2K7bis

   (24) https://www.youtube.com/watch?v=bJhRW4eZMco

   (25) 
http://pyvideo.org/video/2429/pytest-feature-and-new-release-highlights

   (26) http://pythontesting.net/framework/pytest-introduction/

   (27) https://www.youtube.com/watch?v=DTNejE9EraI

   (28) 
https://www.slideshare.net/pfctdayelise/funcargs-other-fun-with-pytest

   (29) https://gist.github.com/3386951

   (30) https://www.youtube.com/watch?v=9LVqBQcFmyw

   (31) 
https://tetamap.wordpress.com//2009/03/03/monkeypatching-in-unit-tests-done-right/

   (32) monkeypatch.html

   (33) parametrize.html#test-generators

   (34) 
http://bruynooghe.blogspot.com/2010/06/pytest-test-generators-and-cached-setup.html

   (35) 
https://tetamap.wordpress.com/2009/05/13/parametrizing-python-tests-generalized/

   (36) 
https://tetamap.wordpress.com/2009/05/14/putting-test-hooks-into-local-and-global-plugins/

   (37) 
http://pybites.blogspot.com/2011/07/behind-scenes-of-pytests-new-assertion.html

   (38) 
https://tetamap.wordpress.com//2009/03/23/new-simultanously-test-your-code-on-all-platforms/

   (39) 
http://bruynooghe.blogspot.com/2009/12/skipping-slow-test-by-default-in-pytest.html

   (40) plugins.html


File: pytest.info,  Node: Release announcements,  Next: Changelog,  Prev: Talks and Tutorials,  Up: Top

46 Release announcements
************************

* Menu:

* pytest-7.1.3: pytest-7 1 3.
* pytest-7.1.2: pytest-7 1 2.
* pytest-7.1.1: pytest-7 1 1.
* pytest-7.1.0: pytest-7 1 0.
* pytest-7.0.1: pytest-7 0 1.
* pytest-7.0.0: pytest-7 0 0.
* pytest-7.0.0rc1: pytest-7 0 0rc1.
* pytest-6.2.5: pytest-6 2 5.
* pytest-6.2.4: pytest-6 2 4.
* pytest-6.2.3: pytest-6 2 3.
* pytest-6.2.2: pytest-6 2 2.
* pytest-6.2.1: pytest-6 2 1.
* pytest-6.2.0: pytest-6 2 0.
* pytest-6.1.2: pytest-6 1 2.
* pytest-6.1.1: pytest-6 1 1.
* pytest-6.1.0: pytest-6 1 0.
* pytest-6.0.2: pytest-6 0 2.
* pytest-6.0.1: pytest-6 0 1.
* pytest-6.0.0: pytest-6 0 0.
* pytest-6.0.0rc1: pytest-6 0 0rc1.
* pytest-5.4.3: pytest-5 4 3.
* pytest-5.4.2: pytest-5 4 2.
* pytest-5.4.1: pytest-5 4 1.
* pytest-5.4.0: pytest-5 4 0.
* pytest-5.3.5: pytest-5 3 5.
* pytest-5.3.4: pytest-5 3 4.
* pytest-5.3.3: pytest-5 3 3.
* pytest-5.3.2: pytest-5 3 2.
* pytest-5.3.1: pytest-5 3 1.
* pytest-5.3.0: pytest-5 3 0.
* pytest-5.2.4: pytest-5 2 4.
* pytest-5.2.3: pytest-5 2 3.
* pytest-5.2.2: pytest-5 2 2.
* pytest-5.2.1: pytest-5 2 1.
* pytest-5.2.0: pytest-5 2 0.
* pytest-5.1.3: pytest-5 1 3.
* pytest-5.1.2: pytest-5 1 2.
* pytest-5.1.1: pytest-5 1 1.
* pytest-5.1.0: pytest-5 1 0.
* pytest-5.0.1: pytest-5 0 1.
* pytest-5.0.0: pytest-5 0 0.
* pytest-4.6.9: pytest-4 6 9.
* pytest-4.6.8: pytest-4 6 8.
* pytest-4.6.7: pytest-4 6 7.
* pytest-4.6.6: pytest-4 6 6.
* pytest-4.6.5: pytest-4 6 5.
* pytest-4.6.4: pytest-4 6 4.
* pytest-4.6.3: pytest-4 6 3.
* pytest-4.6.2: pytest-4 6 2.
* pytest-4.6.1: pytest-4 6 1.
* pytest-4.6.0: pytest-4 6 0.
* pytest-4.5.0: pytest-4 5 0.
* pytest-4.4.2: pytest-4 4 2.
* pytest-4.4.1: pytest-4 4 1.
* pytest-4.4.0: pytest-4 4 0.
* pytest-4.3.1: pytest-4 3 1.
* pytest-4.3.0: pytest-4 3 0.
* pytest-4.2.1: pytest-4 2 1.
* pytest-4.2.0: pytest-4 2 0.
* pytest-4.1.1: pytest-4 1 1.
* pytest-4.1.0: pytest-4 1 0.
* pytest-4.0.2: pytest-4 0 2.
* pytest-4.0.1: pytest-4 0 1.
* pytest-4.0.0: pytest-4 0 0.
* pytest-3.10.1: pytest-3 10 1.
* pytest-3.10.0: pytest-3 10 0.
* pytest-3.9.3: pytest-3 9 3.
* pytest-3.9.2: pytest-3 9 2.
* pytest-3.9.1: pytest-3 9 1.
* pytest-3.9.0: pytest-3 9 0.
* pytest-3.8.2: pytest-3 8 2.
* pytest-3.8.1: pytest-3 8 1.
* pytest-3.8.0: pytest-3 8 0.
* pytest-3.7.4: pytest-3 7 4.
* pytest-3.7.3: pytest-3 7 3.
* pytest-3.7.2: pytest-3 7 2.
* pytest-3.7.1: pytest-3 7 1.
* pytest-3.7.0: pytest-3 7 0.
* pytest-3.6.4: pytest-3 6 4.
* pytest-3.6.3: pytest-3 6 3.
* pytest-3.6.2: pytest-3 6 2.
* pytest-3.6.1: pytest-3 6 1.
* pytest-3.6.0: pytest-3 6 0.
* pytest-3.5.1: pytest-3 5 1.
* pytest-3.5.0: pytest-3 5 0.
* pytest-3.4.2: pytest-3 4 2.
* pytest-3.4.1: pytest-3 4 1.
* pytest-3.4.0: pytest-3 4 0.
* pytest-3.3.2: pytest-3 3 2.
* pytest-3.3.1: pytest-3 3 1.
* pytest-3.3.0: pytest-3 3 0.
* pytest-3.2.5: pytest-3 2 5.
* pytest-3.2.4: pytest-3 2 4.
* pytest-3.2.3: pytest-3 2 3.
* pytest-3.2.2: pytest-3 2 2.
* pytest-3.2.1: pytest-3 2 1.
* pytest-3.2.0: pytest-3 2 0.
* pytest-3.1.3: pytest-3 1 3.
* pytest-3.1.2: pytest-3 1 2.
* pytest-3.1.1: pytest-3 1 1.
* pytest-3.1.0: pytest-3 1 0.
* pytest-3.0.7: pytest-3 0 7.
* pytest-3.0.6: pytest-3 0 6.
* pytest-3.0.5: pytest-3 0 5.
* pytest-3.0.4: pytest-3 0 4.
* pytest-3.0.3: pytest-3 0 3.
* pytest-3.0.2: pytest-3 0 2.
* pytest-3.0.1: pytest-3 0 1.
* pytest-3.0.0: pytest-3 0 0.
* python testing sprint June 20th-26th 2016::
* pytest-2.9.2: pytest-2 9 2.
* pytest-2.9.1: pytest-2 9 1.
* pytest-2.9.0: pytest-2 9 0.
* pytest-2.8.7: pytest-2 8 7.
* pytest-2.8.6: pytest-2 8 6.
* pytest-2.8.5: pytest-2 8 5.
* pytest-2.8.4: pytest-2 8 4.
* pytest-2.8.3; bug fixes: pytest-2 8 3 bug fixes.
* pytest-2.8.2; bug fixes: pytest-2 8 2 bug fixes.
* pytest-2.7.2; bug fixes: pytest-2 7 2 bug fixes.
* pytest-2.7.1; bug fixes: pytest-2 7 1 bug fixes.
* pytest-2.7.0; fixes, features, speed improvements: pytest-2 7 0 fixes features speed improvements.
* pytest-2.6.3; fixes and little improvements: pytest-2 6 3 fixes and little improvements.
* Changes 2.6.3: Changes 2 6 3.
* pytest-2.6.2; few fixes and cx_freeze support: pytest-2 6 2 few fixes and cx_freeze support.
* pytest-2.6.1; fixes and new xfail feature: pytest-2 6 1 fixes and new xfail feature.
* Changes 2.6.1: Changes 2 6 1.
* pytest-2.6.0; shorter tracebacks, new warning system, test runner compat: pytest-2 6 0 shorter tracebacks new warning system test runner compat.
* pytest-2.5.2; fixes: pytest-2 5 2 fixes.
* pytest-2.5.1; fixes and new home page styling: pytest-2 5 1 fixes and new home page styling.
* pytest-2.5.0; now down to ZERO reported bugs!: pytest-2 5 0 now down to ZERO reported bugs!.
* pytest-2.4.2; colorama on windows, plugin/tmpdir fixes: pytest-2 4 2 colorama on windows plugin/tmpdir fixes.
* pytest-2.4.1; fixing three regressions compared to 2.3.5: pytest-2 4 1 fixing three regressions compared to 2 3 5.
* pytest-2.4.0; new fixture features/hooks and bug fixes: pytest-2 4 0 new fixture features/hooks and bug fixes.
* pytest-2.3.5; bug fixes and little improvements: pytest-2 3 5 bug fixes and little improvements.
* pytest-2.3.4; stabilization, more flexible selection via “-k expr”: pytest-2 3 4 stabilization more flexible selection via “-k expr”.
* pytest-2.3.3; integration fixes, py24 support, */** shown in traceback: pytest-2 3 3 integration fixes py24 support */** shown in traceback.
* pytest-2.3.2; some fixes and more traceback-printing speed: pytest-2 3 2 some fixes and more traceback-printing speed.
* pytest-2.3.1; fix regression with factory functions: pytest-2 3 1 fix regression with factory functions.
* pytest-2.3; improved fixtures / better unittest integration: pytest-2 3 improved fixtures / better unittest integration.
* pytest-2.2.4; bug fixes, better junitxml/unittest/python3 compat: pytest-2 2 4 bug fixes better junitxml/unittest/python3 compat.
* pytest-2.2.2; bug fixes: pytest-2 2 2 bug fixes.
* pytest-2.2.1; bug fixes, perfect teardowns: pytest-2 2 1 bug fixes perfect teardowns.
* py.test 2.2.0; test marking++, parametrization++ and duration profiling: py test 2 2 0 test marking++ parametrization++ and duration profiling.
* py.test 2.1.3; just some more fixes: py test 2 1 3 just some more fixes.
* py.test 2.1.2; bug fixes and fixes for jython: py test 2 1 2 bug fixes and fixes for jython.
* py.test 2.1.1; assertion fixes and improved junitxml output: py test 2 1 1 assertion fixes and improved junitxml output.
* py.test 2.1.0; perfected assertions and bug fixes: py test 2 1 0 perfected assertions and bug fixes.
* py.test 2.0.3; bug fixes and speed ups: py test 2 0 3 bug fixes and speed ups.
* py.test 2.0.2; bug fixes, improved xfail/skip expressions, speed ups: py test 2 0 2 bug fixes improved xfail/skip expressions speed ups.
* py.test 2.0.1; bug fixes: py test 2 0 1 bug fixes.
* py.test 2.0.0; asserts++, unittest++, reporting++, config++, docs++: py test 2 0 0 asserts++ unittest++ reporting++ config++ docs++.


File: pytest.info,  Node: pytest-7 1 3,  Next: pytest-7 1 2,  Up: Release announcements

46.1 pytest-7.1.3
=================

pytest 7.1.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Anthony Sottile

   * Bruno Oliveira

   * Gergely Kalmár

   * Nipunn Koorapati

   * Pax

   * Sviatoslav Sydorenko

   * Tim Hoffmann

   * Tony Narlock

   * Wolfremium

   * Zach OBrien

   * aizpurua23a

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-7 1 2,  Next: pytest-7 1 1,  Prev: pytest-7 1 3,  Up: Release announcements

46.2 pytest-7.1.2
=================

pytest 7.1.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Anthony Sottile

   * Bruno Oliveira

   * Hugo van Kemenade

   * Kian Eliasi

   * Ran Benita

   * Zac Hatfield-Dodds

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-7 1 1,  Next: pytest-7 1 0,  Prev: pytest-7 1 2,  Up: Release announcements

46.3 pytest-7.1.1
=================

pytest 7.1.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-7 1 0,  Next: pytest-7 0 1,  Prev: pytest-7 1 1,  Up: Release announcements

46.4 pytest-7.1.0
=================

The pytest team is proud to announce the 7.1.0 release!

This release contains new features, improvements, and bug fixes, the
full list of changes is available in the changelog:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from PyPI via:

     pip install -U pytest

Thanks to all of the contributors to this release:

   * Akuli

   * Andrew Svetlov

   * Anthony Sottile

   * Brett Holman

   * Bruno Oliveira

   * Chris NeJame

   * Dan Alvizu

   * Elijah DeLee

   * Emmanuel Arias

   * Fabian Egli

   * Florian Bruhin

   * Gabor Szabo

   * Hasan Ramezani

   * Hugo van Kemenade

   * Kian Meng, Ang

   * Kojo Idrissa

   * Masaru Tsuchiyama

   * Olga Matoula

   * 
       16. 
            12. Lim

   * Ran Benita

   * Tobias Deiminger

   * Yuval Shimon

   * eduardo naufel schettino

   * Éric

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-7 0 1,  Next: pytest-7 0 0,  Prev: pytest-7 1 0,  Up: Release announcements

46.5 pytest-7.0.1
=================

pytest 7.0.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Anthony Sottile

   * Bruno Oliveira

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-7 0 0,  Next: pytest-7 0 0rc1,  Prev: pytest-7 0 1,  Up: Release announcements

46.6 pytest-7.0.0
=================

The pytest team is proud to announce the 7.0.0 release!

This release contains new features, improvements, bug fixes, and
breaking changes, so users are encouraged to take a look at the
CHANGELOG carefully:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from PyPI via:

     pip install -U pytest

Thanks to all of the contributors to this release:

   * Adam J. Stewart

   * Alexander King

   * Amin Alaee

   * Andrew Neitsch

   * Anthony Sottile

   * Ben Davies

   * Bernát Gábor

   * Brian Okken

   * Bruno Oliveira

   * Cristian Vera

   * Dan Alvizu

   * David Szotten

   * Eddie

   * Emmanuel Arias

   * Emmanuel Meric de Bellefon

   * Eric Liu

   * Florian Bruhin

   * GergelyKalmar

   * Graeme Smecher

   * Harshna

   * Hugo van Kemenade

   * Jakub Kulík

   * James Myatt

   * Jeff Rasley

   * Kale Kundert

   * Kian Meng, Ang

   * Miro Hrončok

   * Naveen-Pratap

   * Oleg Höfling

   * Olga Matoula

   * Ran Benita

   * Ronny Pfannschmidt

   * Simon K

   * Srip

   * Sören Wegener

   * Taneli Hukkinen

   * Terje Runde

   * Thomas Grainger

   * Thomas Hisch

   * William Jamir Silva

   * Yuval Shimon

   * Zac Hatfield-Dodds

   * andrewdotn

   * denivyruck

   * ericluoliu

   * oleg.hoefling

   * symonk

   * ziebam

   * Éloi Rivard

   * Éric

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-7 0 0rc1,  Next: pytest-6 2 5,  Prev: pytest-7 0 0,  Up: Release announcements

46.7 pytest-7.0.0rc1
====================

The pytest team is proud to announce the 7.0.0rc1 prerelease!

This is a prerelease, not intended for production use, but to test the
upcoming features and improvements in order to catch any major problems
before the final version is released to the major public.

We appreciate your help testing this out before the final release,
making sure to report any regressions to our issue tracker:

‘https://github.com/pytest-dev/pytest/issues’

When doing so, please include the string ‘[prerelease]’ in the title.

You can upgrade from PyPI via:

     pip install pytest==7.0.0rc1

Users are encouraged to take a look at the CHANGELOG carefully:

     ‘https://docs.pytest.org/en/7.0.x/changelog.html’

Thanks to all the contributors to this release:

   * Adam J. Stewart

   * Alexander King

   * Amin Alaee

   * Andrew Neitsch

   * Anthony Sottile

   * Ben Davies

   * Bernát Gábor

   * Brian Okken

   * Bruno Oliveira

   * Cristian Vera

   * David Szotten

   * Eddie

   * Emmanuel Arias

   * Emmanuel Meric de Bellefon

   * Eric Liu

   * Florian Bruhin

   * GergelyKalmar

   * Graeme Smecher

   * Harshna

   * Hugo van Kemenade

   * Jakub Kulík

   * James Myatt

   * Jeff Rasley

   * Kale Kundert

   * Miro Hrončok

   * Naveen-Pratap

   * Oleg Höfling

   * Ran Benita

   * Ronny Pfannschmidt

   * Simon K

   * Srip

   * Sören Wegener

   * Taneli Hukkinen

   * Terje Runde

   * Thomas Grainger

   * Thomas Hisch

   * William Jamir Silva

   * Zac Hatfield-Dodds

   * andrewdotn

   * denivyruck

   * ericluoliu

   * oleg.hoefling

   * symonk

   * ziebam

   * Éloi Rivard

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 2 5,  Next: pytest-6 2 4,  Prev: pytest-7 0 0rc1,  Up: Release announcements

46.8 pytest-6.2.5
=================

pytest 6.2.5 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Anthony Sottile

   * Bruno Oliveira

   * Brylie Christopher Oxley

   * Daniel Asztalos

   * Florian Bruhin

   * Jason Haugen

   * MapleCCC

   * Michał Górny

   * Miro Hrončok

   * Ran Benita

   * Ronny Pfannschmidt

   * Sylvain Bellemare

   * Thomas Güttler

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 2 4,  Next: pytest-6 2 3,  Prev: pytest-6 2 5,  Up: Release announcements

46.9 pytest-6.2.4
=================

pytest 6.2.4 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Anthony Sottile

   * Bruno Oliveira

   * Christian Maurer

   * Florian Bruhin

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 2 3,  Next: pytest-6 2 2,  Prev: pytest-6 2 4,  Up: Release announcements

46.10 pytest-6.2.3
==================

pytest 6.2.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Bruno Oliveira

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 2 2,  Next: pytest-6 2 1,  Prev: pytest-6 2 3,  Up: Release announcements

46.11 pytest-6.2.2
==================

pytest 6.2.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Adam Johnson

   * Bruno Oliveira

   * Chris NeJame

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 2 1,  Next: pytest-6 2 0,  Prev: pytest-6 2 2,  Up: Release announcements

46.12 pytest-6.2.1
==================

pytest 6.2.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Bruno Oliveira

   * Jakob van Santen

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 2 0,  Next: pytest-6 1 2,  Prev: pytest-6 2 1,  Up: Release announcements

46.13 pytest-6.2.0
==================

The pytest team is proud to announce the 6.2.0 release!

This release contains new features, improvements, bug fixes, and
breaking changes, so users are encouraged to take a look at the
CHANGELOG carefully:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from PyPI via:

     pip install -U pytest

Thanks to all of the contributors to this release:

   * Adam Johnson

   * Albert Villanova del Moral

   * Anthony Sottile

   * Anton

   * Ariel Pillemer

   * Bruno Oliveira

   * Charles Aracil

   * Christine M

   * Christine Mecklenborg

   * Cserna Zsolt

   * Dominic Mortlock

   * Emiel van de Laar

   * Florian Bruhin

   * Garvit Shubham

   * Gustavo Camargo

   * Hugo Martins

   * Hugo van Kemenade

   * Jakob van Santen

   * Josias Aurel

   * Jürgen Gmach

   * Karthikeyan Singaravelan

   * Katarzyna

   * Kyle Altendorf

   * Manuel Mariñez

   * Matthew Hughes

   * Matthias Gabriel

   * Max Voitko

   * Maximilian Cosmo Sitter

   * Mikhail Fesenko

   * Nimesh Vashistha

   * Pedro Algarvio

   * Petter Strandmark

   * Prakhar Gurunani

   * Prashant Sharma

   * Ran Benita

   * Ronny Pfannschmidt

   * Sanket Duthade

   * Shubham Adep

   * Simon K

   * Tanvi Mehta

   * Thomas Grainger

   * Tim Hoffmann

   * Vasilis Gerakaris

   * William Jamir Silva

   * Zac Hatfield-Dodds

   * crricks

   * dependabot[bot]

   * duthades

   * frankgerhardt

   * kwgchi

   * mickeypash

   * symonk

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 1 2,  Next: pytest-6 1 1,  Prev: pytest-6 2 0,  Up: Release announcements

46.14 pytest-6.1.2
==================

pytest 6.1.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Bruno Oliveira

   * Manuel Mariñez

   * Ran Benita

   * Vasilis Gerakaris

   * William Jamir Silva

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 1 1,  Next: pytest-6 1 0,  Prev: pytest-6 1 2,  Up: Release announcements

46.15 pytest-6.1.1
==================

pytest 6.1.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 1 0,  Next: pytest-6 0 2,  Prev: pytest-6 1 1,  Up: Release announcements

46.16 pytest-6.1.0
==================

The pytest team is proud to announce the 6.1.0 release!

This release contains new features, improvements, bug fixes, and
breaking changes, so users are encouraged to take a look at the
CHANGELOG carefully:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from PyPI via:

     pip install -U pytest

Thanks to all of the contributors to this release:

   * Anthony Sottile

   * Bruno Oliveira

   * 
       3. Titus Brown

   * Drew Devereux

   * Faris A Chugthai

   * Florian Bruhin

   * Hugo van Kemenade

   * Hynek Schlawack

   * Joseph Lucas

   * Kamran Ahmad

   * Mattreex

   * Maximilian Cosmo Sitter

   * Ran Benita

   * Rüdiger Busche

   * Sam Estep

   * Sorin Sbarnea

   * Thomas Grainger

   * Vipul Kumar

   * Yutaro Ikeda

   * hp310780

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 0 2,  Next: pytest-6 0 1,  Prev: pytest-6 1 0,  Up: Release announcements

46.17 pytest-6.0.2
==================

pytest 6.0.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all of the contributors to this release:

   * Bruno Oliveira

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 0 1,  Next: pytest-6 0 0,  Prev: pytest-6 0 2,  Up: Release announcements

46.18 pytest-6.0.1
==================

pytest 6.0.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/latest/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Mattreex

   * Ran Benita

   * hp310780

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 0 0,  Next: pytest-6 0 0rc1,  Prev: pytest-6 0 1,  Up: Release announcements

46.19 pytest-6.0.0
==================

The pytest team is proud to announce the 6.0.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bug fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/latest/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/latest/’

As usual, you can upgrade from PyPI via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Arvin Firouzi

   * Bruno Oliveira

   * Debi Mishra

   * Garrett Thomas

   * Hugo van Kemenade

   * Kelton Bassingthwaite

   * Kostis Anagnostopoulos

   * Lewis Cowles

   * Miro Hrončok

   * Ran Benita

   * Simon K

   * Zac Hatfield-Dodds

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-6 0 0rc1,  Next: pytest-5 4 3,  Prev: pytest-6 0 0,  Up: Release announcements

46.20 pytest-6.0.0rc1
=====================

pytest 6.0.0rc1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/latest/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Alfredo Deza

   * Andreas Maier

   * Andrew

   * Anthony Sottile

   * ArtyomKaltovich

   * Bruno Oliveira

   * Claire Cecil

   * Curt J. Sampson

   * Daniel

   * Daniel Hahler

   * Danny Sepler

   * David Diaz Barquero

   * Fabio Zadrozny

   * Felix Nieuwenhuizen

   * Florian Bruhin

   * Florian Dahlitz

   * Gleb Nikonorov

   * Hugo van Kemenade

   * Hunter Richards

   * Katarzyna Król

   * Katrin Leinweber

   * Keri Volans

   * Lewis Belcher

   * Lukas Geiger

   * Martin Michlmayr

   * Mattwmaster58

   * Maximilian Cosmo Sitter

   * Nikolay Kondratyev

   * Pavel Karateev

   * Paweł Wilczyński

   * Prashant Anand

   * Ram Rachum

   * Ran Benita

   * Ronny Pfannschmidt

   * Ruaridh Williamson

   * Simon K

   * Tim Hoffmann

   * Tor Colvin

   * Vlad-Radz

   * Xinbin Huang

   * Zac Hatfield-Dodds

   * earonesty

   * gaurav dhameeja

   * gdhameeja

   * ibriquem

   * mcsitter

   * piotrhm

   * smarie

   * symonk

   * xuiqzy

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 4 3,  Next: pytest-5 4 2,  Prev: pytest-6 0 0rc1,  Up: Release announcements

46.21 pytest-5.4.3
==================

pytest 5.4.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Ran Benita

   * Tor Colvin

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 4 2,  Next: pytest-5 4 1,  Prev: pytest-5 4 3,  Up: Release announcements

46.22 pytest-5.4.2
==================

pytest 5.4.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Ran Benita

   * Ronny Pfannschmidt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 4 1,  Next: pytest-5 4 0,  Prev: pytest-5 4 2,  Up: Release announcements

46.23 pytest-5.4.1
==================

pytest 5.4.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 4 0,  Next: pytest-5 3 5,  Prev: pytest-5 4 1,  Up: Release announcements

46.24 pytest-5.4.0
==================

The pytest team is proud to announce the 5.4.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bug fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from PyPI via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Christoph Buelter

   * Christoph Bülter

   * Daniel Arndt

   * Daniel Hahler

   * Holger Kohr

   * Hugo

   * Hugo van Kemenade

   * Jakub Mitoraj

   * Kyle Altendorf

   * Minuddin Ahmed Rana

   * Nathaniel Compton

   * ParetoLife

   * Pauli Virtanen

   * Philipp Loose

   * Ran Benita

   * Ronny Pfannschmidt

   * Stefan Scherfke

   * Stefano Mazzucco

   * TWood67

   * Tobias Schmidt

   * Tomáš Gavenčiak

   * Vinay Calastry

   * Vladyslav Rachek

   * Zac Hatfield-Dodds

   * captainCapitalism

   * cmachalo

   * gftea

   * kpinc

   * rebecca-palmer

   * sdementen

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 3 5,  Next: pytest-5 3 4,  Prev: pytest-5 4 0,  Up: Release announcements

46.25 pytest-5.3.5
==================

pytest 5.3.5 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Daniel Hahler

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 3 4,  Next: pytest-5 3 3,  Prev: pytest-5 3 5,  Up: Release announcements

46.26 pytest-5.3.4
==================

pytest 5.3.4 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Daniel Hahler

   * Ran Benita

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 3 3,  Next: pytest-5 3 2,  Prev: pytest-5 3 4,  Up: Release announcements

46.27 pytest-5.3.3
==================

pytest 5.3.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Adam Johnson

   * Alexandre Mulatinho

   * Anthony Sottile

   * Bruno Oliveira

   * Chris NeJame

   * Daniel Hahler

   * Hugo van Kemenade

   * Marcelo Duarte Trevisani

   * PaulC

   * Ran Benita

   * Ryan Barner

   * Seth Junot

   * marc

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 3 2,  Next: pytest-5 3 1,  Prev: pytest-5 3 3,  Up: Release announcements

46.28 pytest-5.3.2
==================

pytest 5.3.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Claudio Madotto

   * Daniel Hahler

   * Jared Vasquez

   * Michael Rose

   * Ran Benita

   * Ronny Pfannschmidt

   * Zac Hatfield-Dodds

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 3 1,  Next: pytest-5 3 0,  Prev: pytest-5 3 2,  Up: Release announcements

46.29 pytest-5.3.1
==================

pytest 5.3.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Felix Yan

   * Florian Bruhin

   * Mark Dickinson

   * Nikolay Kondratyev

   * Steffen Schroeder

   * Zac Hatfield-Dodds

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 3 0,  Next: pytest-5 2 4,  Prev: pytest-5 3 1,  Up: Release announcements

46.30 pytest-5.3.0
==================

The pytest team is proud to announce the 5.3.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * AnjoMan

   * Anthony Sottile

   * Anton Lodder

   * Bruno Oliveira

   * Daniel Hahler

   * Gregory Lee

   * Josh Karpel

   * JoshKarpel

   * Joshua Storck

   * Kale Kundert

   * MarcoGorelli

   * Michael Krebs

   * NNRepos

   * Ran Benita

   * TH3CHARLie

   * Tibor Arpas

   * Zac Hatfield-Dodds

   * 林玮

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-5 2 4,  Next: pytest-5 2 3,  Prev: pytest-5 3 0,  Up: Release announcements

46.31 pytest-5.2.4
==================

pytest 5.2.4 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Hugo

   * Michael Shields

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 2 3,  Next: pytest-5 2 2,  Prev: pytest-5 2 4,  Up: Release announcements

46.32 pytest-5.2.3
==================

pytest 5.2.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Brett Cannon

   * Bruno Oliveira

   * Daniel Hahler

   * Daniil Galiev

   * David Szotten

   * Florian Bruhin

   * Patrick Harmon

   * Ran Benita

   * Zac Hatfield-Dodds

   * Zak Hassan

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 2 2,  Next: pytest-5 2 1,  Prev: pytest-5 2 3,  Up: Release announcements

46.33 pytest-5.2.2
==================

pytest 5.2.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Albert Tugushev

   * Andrzej Klajnert

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Florian Bruhin

   * Nattaphoom Chaipreecha

   * Oliver Bestwalter

   * Philipp Loose

   * Ran Benita

   * Victor Maryama

   * Yoav Caspi

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 2 1,  Next: pytest-5 2 0,  Prev: pytest-5 2 2,  Up: Release announcements

46.34 pytest-5.2.1
==================

pytest 5.2.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Florian Bruhin

   * Hynek Schlawack

   * Kevin J. Foley

   * tadashigaki

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 2 0,  Next: pytest-5 1 3,  Prev: pytest-5 2 1,  Up: Release announcements

46.35 pytest-5.2.0
==================

The pytest team is proud to announce the 5.2.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Andrzej Klajnert

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * James Cooke

   * Michael Goerz

   * Ran Benita

   * Tomáš Chvátal

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-5 1 3,  Next: pytest-5 1 2,  Prev: pytest-5 2 0,  Up: Release announcements

46.36 pytest-5.1.3
==================

pytest 5.1.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Christian Neumüller

   * Daniel Hahler

   * Gene Wood

   * Hugo

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 1 2,  Next: pytest-5 1 1,  Prev: pytest-5 1 3,  Up: Release announcements

46.37 pytest-5.1.2
==================

pytest 5.1.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Andrzej Klajnert

   * Anthony Sottile

   * Bruno Oliveira

   * Christian Neumüller

   * Robert Holt

   * linchiwei123

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 1 1,  Next: pytest-5 1 0,  Prev: pytest-5 1 2,  Up: Release announcements

46.38 pytest-5.1.1
==================

pytest 5.1.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Florian Bruhin

   * Hugo van Kemenade

   * Ran Benita

   * Ronny Pfannschmidt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 1 0,  Next: pytest-5 0 1,  Prev: pytest-5 1 1,  Up: Release announcements

46.39 pytest-5.1.0
==================

The pytest team is proud to announce the 5.1.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Albert Tugushev

   * Alexey Zankevich

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * David Röthlisberger

   * Florian Bruhin

   * Ilya Stepin

   * Jon Dufresne

   * Kaiqi

   * Max R

   * Miro Hrončok

   * Oliver Bestwalter

   * Ran Benita

   * Ronny Pfannschmidt

   * Samuel Searles-Bryant

   * Semen Zhydenko

   * Steffen Schroeder

   * Thomas Grainger

   * Tim Hoffmann

   * William Woodall

   * Wojtek Erbetowski

   * Xixi Zhao

   * Yash Todi

   * boris

   * dmitry.dygalo

   * helloocc

   * martbln

   * mei-li

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-5 0 1,  Next: pytest-5 0 0,  Prev: pytest-5 1 0,  Up: Release announcements

46.40 pytest-5.0.1
==================

pytest 5.0.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * AmirElkess

   * Andreu Vallbona Plazas

   * Anthony Sottile

   * Bruno Oliveira

   * Florian Bruhin

   * Michael Moore

   * Niklas Meinzer

   * Thomas Grainger

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-5 0 0,  Next: pytest-4 6 9,  Prev: pytest-5 0 1,  Up: Release announcements

46.41 pytest-5.0.0
==================

The pytest team is proud to announce the 5.0.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Dirk Thomas

   * Evan Kepner

   * Florian Bruhin

   * Hugo

   * Kevin J. Foley

   * Pulkit Goyal

   * Ralph Giles

   * Ronny Pfannschmidt

   * Thomas Grainger

   * Thomas Hisch

   * Tim Gates

   * Victor Maryama

   * Yuri Apollov

   * Zac Hatfield-Dodds

   * curiousjazz77

   * patriksevallius

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-4 6 9,  Next: pytest-4 6 8,  Prev: pytest-5 0 0,  Up: Release announcements

46.42 pytest-4.6.9
==================

pytest 4.6.9 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Felix Yan

   * Hugo

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 6 8,  Next: pytest-4 6 7,  Prev: pytest-4 6 9,  Up: Release announcements

46.43 pytest-4.6.8
==================

pytest 4.6.8 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Ryan Mast

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 6 7,  Next: pytest-4 6 6,  Prev: pytest-4 6 8,  Up: Release announcements

46.44 pytest-4.6.7
==================

pytest 4.6.7 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Daniel Hahler

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 6 6,  Next: pytest-4 6 5,  Prev: pytest-4 6 7,  Up: Release announcements

46.45 pytest-4.6.6
==================

pytest 4.6.6 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Michael Goerz

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 6 5,  Next: pytest-4 6 4,  Prev: pytest-4 6 6,  Up: Release announcements

46.46 pytest-4.6.5
==================

pytest 4.6.5 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Thomas Grainger

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 6 4,  Next: pytest-4 6 3,  Prev: pytest-4 6 5,  Up: Release announcements

46.47 pytest-4.6.4
==================

pytest 4.6.4 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Thomas Grainger

   * Zac Hatfield-Dodds

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 6 3,  Next: pytest-4 6 2,  Prev: pytest-4 6 4,  Up: Release announcements

46.48 pytest-4.6.3
==================

pytest 4.6.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Dirk Thomas

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 6 2,  Next: pytest-4 6 1,  Prev: pytest-4 6 3,  Up: Release announcements

46.49 pytest-4.6.2
==================

pytest 4.6.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 6 1,  Next: pytest-4 6 0,  Prev: pytest-4 6 2,  Up: Release announcements

46.50 pytest-4.6.1
==================

pytest 4.6.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 6 0,  Next: pytest-4 5 0,  Prev: pytest-4 6 1,  Up: Release announcements

46.51 pytest-4.6.0
==================

The pytest team is proud to announce the 4.6.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Akiomi Kamakura

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * David Röthlisberger

   * Evan Kepner

   * Jeffrey Rackauckas

   * MyComputer

   * Nikita Krokosh

   * Raul Tambre

   * Thomas Hisch

   * Tim Hoffmann

   * Tomer Keren

   * Victor Maryama

   * danielx123

   * oleg-yegorov

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-4 5 0,  Next: pytest-4 4 2,  Prev: pytest-4 6 0,  Up: Release announcements

46.52 pytest-4.5.0
==================

The pytest team is proud to announce the 4.5.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Floris Bruynooghe

   * Pulkit Goyal

   * Samuel Searles-Bryant

   * Zac Hatfield-Dodds

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-4 4 2,  Next: pytest-4 4 1,  Prev: pytest-4 5 0,  Up: Release announcements

46.53 pytest-4.4.2
==================

pytest 4.4.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Allan Lewis

   * Anthony Sottile

   * Bruno Oliveira

   * DamianSkrzypczak

   * Daniel Hahler

   * Don Kirkby

   * Douglas Thor

   * Hugo

   * Ilya Konstantinov

   * Jon Dufresne

   * Matt Cooper

   * Nikolay Kondratyev

   * Ondřej Súkup

   * Peter Schutt

   * Romain Chossart

   * Sitaktif

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 4 1,  Next: pytest-4 4 0,  Prev: pytest-4 4 2,  Up: Release announcements

46.54 pytest-4.4.1
==================

pytest 4.4.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 4 0,  Next: pytest-4 3 1,  Prev: pytest-4 4 1,  Up: Release announcements

46.55 pytest-4.4.0
==================

The pytest team is proud to announce the 4.4.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * ApaDoctor

   * Bernhard M. Wiedemann

   * Brian Skinn

   * Bruno Oliveira

   * Daniel Hahler

   * Gary Tyler

   * Jeong YunWon

   * Miro Hrončok

   * Takafumi Arakaki

   * henrykironde

   * smheidrich

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-4 3 1,  Next: pytest-4 3 0,  Prev: pytest-4 4 0,  Up: Release announcements

46.56 pytest-4.3.1
==================

pytest 4.3.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Andras Mitzki

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Danilo Horta

   * Grygorii Iermolenko

   * Jeff Hale

   * Kyle Altendorf

   * Stephan Hoyer

   * Zac Hatfield-Dodds

   * songbowen

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 3 0,  Next: pytest-4 2 1,  Prev: pytest-4 3 1,  Up: Release announcements

46.57 pytest-4.3.0
==================

The pytest team is proud to announce the 4.3.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Andras Mitzki

   * Anthony Sottile

   * Bruno Oliveira

   * Christian Fetzer

   * Daniel Hahler

   * Grygorii Iermolenko

   * 
       18. Alex Matevish

   * Ronny Pfannschmidt

   * cclauss

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-4 2 1,  Next: pytest-4 2 0,  Prev: pytest-4 3 0,  Up: Release announcements

46.58 pytest-4.2.1
==================

pytest 4.2.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Arel Cordero

   * Bruno Oliveira

   * Daniel Hahler

   * Holger Kohr

   * Kevin J. Foley

   * Nick Murphy

   * Paweł Stradomski

   * Raphael Pierzina

   * Ronny Pfannschmidt

   * Sam Brightman

   * Thomas Hisch

   * Zac Hatfield-Dodds

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 2 0,  Next: pytest-4 1 1,  Prev: pytest-4 2 1,  Up: Release announcements

46.59 pytest-4.2.0
==================

The pytest team is proud to announce the 4.2.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Adam Uhlir

   * Anthony Sottile

   * Bruno Oliveira

   * Christopher Dignam

   * Daniel Hahler

   * Joseph Hunkeler

   * Kristoffer Nordstroem

   * Ronny Pfannschmidt

   * Thomas Hisch

   * wim glenn

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-4 1 1,  Next: pytest-4 1 0,  Prev: pytest-4 2 0,  Up: Release announcements

46.60 pytest-4.1.1
==================

pytest 4.1.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Anton Lodder

   * Bruno Oliveira

   * Daniel Hahler

   * David Vo

   * Oscar Benjamin

   * Ronny Pfannschmidt

   * Victor Maryama

   * Yoav Caspi

   * dmitry.dygalo

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 1 0,  Next: pytest-4 0 2,  Prev: pytest-4 1 1,  Up: Release announcements

46.61 pytest-4.1.0
==================

The pytest team is proud to announce the 4.1.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Adam Johnson

   * Aly Sivji

   * Andrey Paramonov

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * David Vo

   * Hyunchel Kim

   * Jeffrey Rackauckas

   * Kanguros

   * Nicholas Devenish

   * Pedro Algarvio

   * Randy Barlow

   * Ronny Pfannschmidt

   * Tomer Keren

   * feuillemorte

   * wim glenn

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-4 0 2,  Next: pytest-4 0 1,  Prev: pytest-4 1 0,  Up: Release announcements

46.62 pytest-4.0.2
==================

pytest 4.0.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Pedro Algarvio

   * Ronny Pfannschmidt

   * Tomer Keren

   * Yash Todi

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 0 1,  Next: pytest-4 0 0,  Prev: pytest-4 0 2,  Up: Release announcements

46.63 pytest-4.0.1
==================

pytest 4.0.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Michael D. Hoyle

   * Ronny Pfannschmidt

   * Slam

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-4 0 0,  Next: pytest-3 10 1,  Prev: pytest-4 0 1,  Up: Release announcements

46.64 pytest-4.0.0
==================

The pytest team is proud to announce the 4.0.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Daniel Hahler

   * Ronny Pfannschmidt

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 10 1,  Next: pytest-3 10 0,  Prev: pytest-4 0 0,  Up: Release announcements

46.65 pytest-3.10.1
===================

pytest 3.10.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Boris Feld

   * Bruno Oliveira

   * Daniel Hahler

   * Fabien ZARIFIAN

   * Jon Dufresne

   * Ronny Pfannschmidt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 10 0,  Next: pytest-3 9 3,  Prev: pytest-3 10 1,  Up: Release announcements

46.66 pytest-3.10.0
===================

The pytest team is proud to announce the 3.10.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anders Hovmöller

   * Andreu Vallbona Plazas

   * Ankit Goel

   * Anthony Sottile

   * Bernardo Gomes

   * Brianna Laugher

   * Bruno Oliveira

   * Daniel Hahler

   * David Szotten

   * Mick Koch

   * Niclas Olofsson

   * Palash Chatterjee

   * Ronny Pfannschmidt

   * Sven-Hendrik Haase

   * Ville Skyttä

   * William Jamir Silva

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 9 3,  Next: pytest-3 9 2,  Prev: pytest-3 10 0,  Up: Release announcements

46.67 pytest-3.9.3
==================

pytest 3.9.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Andreas Profous

   * Ankit Goel

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Jon Dufresne

   * Ronny Pfannschmidt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 9 2,  Next: pytest-3 9 1,  Prev: pytest-3 9 3,  Up: Release announcements

46.68 pytest-3.9.2
==================

pytest 3.9.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Ankit Goel

   * Anthony Sottile

   * Bruno Oliveira

   * Ronny Pfannschmidt

   * Vincent Barbaresi

   * ykantor

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 9 1,  Next: pytest-3 9 0,  Prev: pytest-3 9 2,  Up: Release announcements

46.69 pytest-3.9.1
==================

pytest 3.9.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Ronny Pfannschmidt

   * Thomas Hisch

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 9 0,  Next: pytest-3 8 2,  Prev: pytest-3 9 1,  Up: Release announcements

46.70 pytest-3.9.0
==================

The pytest team is proud to announce the 3.9.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Andrea Cimatoribus

   * Ankit Goel

   * Anthony Sottile

   * Ben Eyal

   * Bruno Oliveira

   * Daniel Hahler

   * Jeffrey Rackauckas

   * Jose Carlos Menezes

   * Kyle Altendorf

   * Niklas JQ

   * Palash Chatterjee

   * Ronny Pfannschmidt

   * Thomas Hess

   * Thomas Hisch

   * Tomer Keren

   * Victor Maryama

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 8 2,  Next: pytest-3 8 1,  Prev: pytest-3 9 0,  Up: Release announcements

46.71 pytest-3.8.2
==================

pytest 3.8.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Ankit Goel

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Denis Otkidach

   * Harry Percival

   * Jeffrey Rackauckas

   * Jose Carlos Menezes

   * Ronny Pfannschmidt

   * Zac Hatfield-Dodds

   * iwanb

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 8 1,  Next: pytest-3 8 0,  Prev: pytest-3 8 2,  Up: Release announcements

46.72 pytest-3.8.1
==================

pytest 3.8.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Ankit Goel

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Maximilian Albert

   * Ronny Pfannschmidt

   * William Jamir Silva

   * wim glenn

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 8 0,  Next: pytest-3 7 4,  Prev: pytest-3 8 1,  Up: Release announcements

46.73 pytest-3.8.0
==================

The pytest team is proud to announce the 3.8.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘https://docs.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘https://docs.pytest.org/en/stable/’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * CrazyMerlyn

   * Daniel Hahler

   * Fabio Zadrozny

   * Jeffrey Rackauckas

   * Ronny Pfannschmidt

   * Virgil Dupras

   * dhirensr

   * hoefling

   * wim glenn

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 7 4,  Next: pytest-3 7 3,  Prev: pytest-3 8 0,  Up: Release announcements

46.74 pytest-3.7.4
==================

pytest 3.7.4 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘https://docs.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Jiri Kuncar

   * Steve Piercy

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 7 3,  Next: pytest-3 7 2,  Prev: pytest-3 7 4,  Up: Release announcements

46.75 pytest-3.7.3
==================

pytest 3.7.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Andrew Champion

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Gandalf Saxe

   * Jennifer Rinker

   * Natan Lao

   * Ondřej Súkup

   * Ronny Pfannschmidt

   * Sankt Petersbug

   * Tyler Richard

   * Victor Maryama

   * Vlad Shcherbina

   * turturica

   * wim glenn

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 7 2,  Next: pytest-3 7 1,  Prev: pytest-3 7 3,  Up: Release announcements

46.76 pytest-3.7.2
==================

pytest 3.7.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Daniel Hahler

   * Josh Holland

   * Ronny Pfannschmidt

   * Sankt Petersbug

   * Wes Thomas

   * turturica

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 7 1,  Next: pytest-3 7 0,  Prev: pytest-3 7 2,  Up: Release announcements

46.77 pytest-3.7.1
==================

pytest 3.7.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Kale Kundert

   * Ronny Pfannschmidt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 7 0,  Next: pytest-3 6 4,  Prev: pytest-3 7 1,  Up: Release announcements

46.78 pytest-3.7.0
==================

The pytest team is proud to announce the 3.7.0 release!

pytest is a mature Python testing tool with more than 2000 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘http://doc.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘http://docs.pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Alan

   * Alan Brammer

   * Ammar Najjar

   * Anthony Sottile

   * Bruno Oliveira

   * Jeffrey Rackauckas

   * Kale Kundert

   * Ronny Pfannschmidt

   * Serhii Mozghovyi

   * Tadek Teleżyński

   * Wil Cooley

   * abrammer

   * avirlrma

   * turturica

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 6 4,  Next: pytest-3 6 3,  Prev: pytest-3 7 0,  Up: Release announcements

46.79 pytest-3.6.4
==================

pytest 3.6.4 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bernhard M. Wiedemann

   * Bruno Oliveira

   * Drew

   * E Hershey

   * Hugo Martins

   * Vlad Shcherbina

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 6 3,  Next: pytest-3 6 2,  Prev: pytest-3 6 4,  Up: Release announcements

46.80 pytest-3.6.3
==================

pytest 3.6.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * AdamEr8

   * Anthony Sottile

   * Bruno Oliveira

   * Jean-Paul Calderone

   * Jon Dufresne

   * Marcelo Duarte Trevisani

   * Ondřej Súkup

   * Ronny Pfannschmidt

   * T.E.A de Souza

   * Victor Maryama

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 6 2,  Next: pytest-3 6 1,  Prev: pytest-3 6 3,  Up: Release announcements

46.81 pytest-3.6.2
==================

pytest 3.6.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Alan Velasco

   * Alex Barbato

   * Anthony Sottile

   * Bartosz Cierocki

   * Bruno Oliveira

   * Daniel Hahler

   * Guoqiang Zhang

   * Hynek Schlawack

   * John T. Wodder II

   * Michael Käufl

   * Ronny Pfannschmidt

   * Samuel Dion-Girardeau

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 6 1,  Next: pytest-3 6 0,  Prev: pytest-3 6 2,  Up: Release announcements

46.82 pytest-3.6.1
==================

pytest 3.6.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Jeffrey Rackauckas

   * Miro Hrončok

   * Niklas Meinzer

   * Oliver Bestwalter

   * Ronny Pfannschmidt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 6 0,  Next: pytest-3 5 1,  Prev: pytest-3 6 1,  Up: Release announcements

46.83 pytest-3.6.0
==================

The pytest team is proud to announce the 3.6.0 release!

pytest is a mature Python testing tool with more than 1600 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘http://doc.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘http://docs.pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anthony Shaw

   * ApaDoctor

   * Brian Maissy

   * Bruno Oliveira

   * Jon Dufresne

   * Katerina Koukiou

   * Miro Hrončok

   * Rachel Kogan

   * Ronny Pfannschmidt

   * Tim Hughes

   * Tyler Goodlet

   * Ville Skyttä

   * aviral1701

   * feuillemorte

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 5 1,  Next: pytest-3 5 0,  Prev: pytest-3 6 0,  Up: Release announcements

46.84 pytest-3.5.1
==================

pytest 3.5.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Brian Maissy

   * Bruno Oliveira

   * Darren Burns

   * David Chudzicki

   * Floris Bruynooghe

   * Holger Kohr

   * Irmen de Jong

   * Jeffrey Rackauckas

   * Rachel Kogan

   * Ronny Pfannschmidt

   * Stefan Scherfke

   * Tim Strazny

   * Семён Марьясин

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 5 0,  Next: pytest-3 4 2,  Prev: pytest-3 5 1,  Up: Release announcements

46.85 pytest-3.5.0
==================

The pytest team is proud to announce the 3.5.0 release!

pytest is a mature Python testing tool with more than 1600 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘http://doc.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘http://docs.pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Allan Feldman

   * Brian Maissy

   * Bruno Oliveira

   * Carlos Jenkins

   * Daniel Hahler

   * Florian Bruhin

   * Jason R. Coombs

   * Jeffrey Rackauckas

   * Jordan Speicher

   * Julien Palard

   * Kale Kundert

   * Kostis Anagnostopoulos

   * Kyle Altendorf

   * Maik Figura

   * Pedro Algarvio

   * Ronny Pfannschmidt

   * Tadeu Manoel

   * Tareq Alayan

   * Thomas Hisch

   * William Lee

   * codetriage-readme-bot

   * feuillemorte

   * joshm91

   * mike

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 4 2,  Next: pytest-3 4 1,  Prev: pytest-3 5 0,  Up: Release announcements

46.86 pytest-3.4.2
==================

pytest 3.4.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Allan Feldman

   * Bruno Oliveira

   * Florian Bruhin

   * Jason R. Coombs

   * Kyle Altendorf

   * Maik Figura

   * Ronny Pfannschmidt

   * codetriage-readme-bot

   * feuillemorte

   * joshm91

   * mike

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 4 1,  Next: pytest-3 4 0,  Prev: pytest-3 4 2,  Up: Release announcements

46.87 pytest-3.4.1
==================

pytest 3.4.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Aaron

   * Alan Velasco

   * Andy Freeland

   * Brian Maissy

   * Bruno Oliveira

   * Florian Bruhin

   * Jason R. Coombs

   * Marcin Bachry

   * Pedro Algarvio

   * Ronny Pfannschmidt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 4 0,  Next: pytest-3 3 2,  Prev: pytest-3 4 1,  Up: Release announcements

46.88 pytest-3.4.0
==================

The pytest team is proud to announce the 3.4.0 release!

pytest is a mature Python testing tool with more than 1600 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘http://doc.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘http://docs.pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Aaron

   * Alan Velasco

   * Anders Hovmöller

   * Andrew Toolan

   * Anthony Sottile

   * Aron Coyle

   * Brian Maissy

   * Bruno Oliveira

   * Cyrus Maden

   * Florian Bruhin

   * Henk-Jaap Wagenaar

   * Ian Lesperance

   * Jon Dufresne

   * Jurko Gospodnetić

   * Kate

   * Kimberly

   * Per A. Brodtkorb

   * Pierre-Alexandre Fonta

   * Raphael Castaneda

   * Ronny Pfannschmidt

   * ST John

   * Segev Finer

   * Thomas Hisch

   * Tzu-ping Chung

   * feuillemorte

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 3 2,  Next: pytest-3 3 1,  Prev: pytest-3 4 0,  Up: Release announcements

46.89 pytest-3.3.2
==================

pytest 3.3.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Antony Lee

   * Austin

   * Bruno Oliveira

   * Florian Bruhin

   * Floris Bruynooghe

   * Henk-Jaap Wagenaar

   * Jurko Gospodnetić

   * Ronny Pfannschmidt

   * Srinivas Reddy Thatiparthy

   * Thomas Hisch

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 3 1,  Next: pytest-3 3 0,  Prev: pytest-3 3 2,  Up: Release announcements

46.90 pytest-3.3.1
==================

pytest 3.3.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Daniel Hahler

   * Eugene Prikazchikov

   * Florian Bruhin

   * Roland Puntaier

   * Ronny Pfannschmidt

   * Sebastian Rahlf

   * Tom Viner

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 3 0,  Next: pytest-3 2 5,  Prev: pytest-3 3 1,  Up: Release announcements

46.91 pytest-3.3.0
==================

The pytest team is proud to announce the 3.3.0 release!

pytest is a mature Python testing tool with more than 1600 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘http://doc.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘http://docs.pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Bruno Oliveira

   * Ceridwen

   * Daniel Hahler

   * Dirk Thomas

   * Dmitry Malinovsky

   * Florian Bruhin

   * George Y. Kussumoto

   * Hugo

   * Jesús Espino

   * Joan Massich

   * Ofir

   * OfirOshir

   * Ronny Pfannschmidt

   * Samuel Dion-Girardeau

   * Srinivas Reddy Thatiparthy

   * Sviatoslav Abakumov

   * Tarcisio Fischer

   * Thomas Hisch

   * Tyler Goodlet

   * hugovk

   * je

   * prokaktus

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 2 5,  Next: pytest-3 2 4,  Prev: pytest-3 3 0,  Up: Release announcements

46.92 pytest-3.2.5
==================

pytest 3.2.5 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 2 4,  Next: pytest-3 2 3,  Prev: pytest-3 2 5,  Up: Release announcements

46.93 pytest-3.2.4
==================

pytest 3.2.4 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Christian Boelsen

   * Christoph Buchner

   * Daw-Ran Liou

   * Florian Bruhin

   * Franck Michea

   * Leonard Lausen

   * Matty G

   * Owen Tuz

   * Pavel Karateev

   * Pierre GIRAUD

   * Ronny Pfannschmidt

   * Stephen Finucane

   * Sviatoslav Abakumov

   * Thomas Hisch

   * Tom Dalton

   * Xuan Luong

   * Yorgos Pagles

   * Семён Марьясин

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 2 3,  Next: pytest-3 2 2,  Prev: pytest-3 2 4,  Up: Release announcements

46.94 pytest-3.2.3
==================

pytest 3.2.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Evan

   * Joe Hamman

   * Oliver Bestwalter

   * Ronny Pfannschmidt

   * Xuan Luong

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 2 2,  Next: pytest-3 2 1,  Prev: pytest-3 2 3,  Up: Release announcements

46.95 pytest-3.2.2
==================

pytest 3.2.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Andreas Pelme

   * Antonio Hidalgo

   * Bruno Oliveira

   * Felipe Dau

   * Fernando Macedo

   * Jesús Espino

   * Joan Massich

   * Joe Talbott

   * Kirill Pinchuk

   * Ronny Pfannschmidt

   * Xuan Luong

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 2 1,  Next: pytest-3 2 0,  Prev: pytest-3 2 2,  Up: Release announcements

46.96 pytest-3.2.1
==================

pytest 3.2.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Alex Gaynor

   * Bruno Oliveira

   * Florian Bruhin

   * Ronny Pfannschmidt

   * Srinivas Reddy Thatiparthy

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 2 0,  Next: pytest-3 1 3,  Prev: pytest-3 2 1,  Up: Release announcements

46.97 pytest-3.2.0
==================

The pytest team is proud to announce the 3.2.0 release!

pytest is a mature Python testing tool with more than 1600 tests against
itself, passing on many different interpreters and platforms.

This release contains a number of bugs fixes and improvements, so users
are encouraged to take a look at the CHANGELOG:

     ‘http://doc.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘http://docs.pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Alex Hartoto

   * Andras Tim

   * Bruno Oliveira

   * Daniel Hahler

   * Florian Bruhin

   * Floris Bruynooghe

   * John Still

   * Jordan Moldow

   * Kale Kundert

   * Lawrence Mitchell

   * Llandy Riveron Del Risco

   * Maik Figura

   * Martin Altmayer

   * Mihai Capotă

   * Nathaniel Waisbrot

   * Nguyễn Hồng Quân

   * Pauli Virtanen

   * Raphael Pierzina

   * Ronny Pfannschmidt

   * Segev Finer

   * V.Kuznetsov

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 1 3,  Next: pytest-3 1 2,  Prev: pytest-3 2 0,  Up: Release announcements

46.98 pytest-3.1.3
==================

pytest 3.1.3 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Antoine Legrand

   * Bruno Oliveira

   * Max Moroz

   * Raphael Pierzina

   * Ronny Pfannschmidt

   * Ryan Fitzpatrick

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 1 2,  Next: pytest-3 1 1,  Prev: pytest-3 1 3,  Up: Release announcements

46.99 pytest-3.1.2
==================

pytest 3.1.2 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Andreas Pelme

   * ApaDoctor

   * Bruno Oliveira

   * Florian Bruhin

   * Ronny Pfannschmidt

   * Segev Finer

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 1 1,  Next: pytest-3 1 0,  Prev: pytest-3 1 2,  Up: Release announcements

46.100 pytest-3.1.1
===================

pytest 3.1.1 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Florian Bruhin

   * Floris Bruynooghe

   * Jason R. Coombs

   * Ronny Pfannschmidt

   * wanghui

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 1 0,  Next: pytest-3 0 7,  Prev: pytest-3 1 1,  Up: Release announcements

46.101 pytest-3.1.0
===================

The pytest team is proud to announce the 3.1.0 release!

pytest is a mature Python testing tool with more than 1600 tests against
itself, passing on many different interpreters and platforms.

This release contains a bugs fixes and improvements, so users are
encouraged to take a look at the CHANGELOG:

‘http://doc.pytest.org/en/stable/changelog.html’

For complete documentation, please visit:

     ‘http://docs.pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Ben Lloyd

   * Bruno Oliveira

   * David Giese

   * David Szotten

   * Dmitri Pribysh

   * Florian Bruhin

   * Florian Schulze

   * Floris Bruynooghe

   * John Towler

   * Jonas Obrist

   * Katerina Koukiou

   * Kodi Arfer

   * Krzysztof Szularz

   * Lev Maximov

   * Loïc Estève

   * Luke Murphy

   * Manuel Krebber

   * Matthew Duck

   * Matthias Bussonnier

   * Michael Howitz

   * Michal Wajszczuk

   * Paweł Adamczak

   * Rafael Bertoldi

   * Ravi Chandra

   * Ronny Pfannschmidt

   * Skylar Downes

   * Thomas Kriechbaumer

   * Vitaly Lashmanov

   * Vlad Dragos

   * Wheerd

   * Xander Johnson

   * mandeep

   * reut

Happy testing, The Pytest Development Team


File: pytest.info,  Node: pytest-3 0 7,  Next: pytest-3 0 6,  Prev: pytest-3 1 0,  Up: Release announcements

46.102 pytest-3.0.7
===================

pytest 3.0.7 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Anthony Sottile

   * Barney Gale

   * Bruno Oliveira

   * Florian Bruhin

   * Floris Bruynooghe

   * Ionel Cristian Mărieș

   * Katerina Koukiou

   * NODA, Kai

   * Omer Hadari

   * Patrick Hayes

   * Ran Benita

   * Ronny Pfannschmidt

   * Victor Uriarte

   * Vidar Tonaas Fauske

   * Ville Skyttä

   * fbjorn

   * mbyt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 0 6,  Next: pytest-3 0 5,  Prev: pytest-3 0 7,  Up: Release announcements

46.103 pytest-3.0.6
===================

pytest 3.0.6 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The full changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Andreas Pelme

   * Bruno Oliveira

   * Dmitry Malinovsky

   * Eli Boyarski

   * Jakub Wilk

   * Jeff Widman

   * Loïc Estève

   * Luke Murphy

   * Miro Hrončok

   * Oscar Hellström

   * Peter Heatwole

   * Philippe Ombredanne

   * Ronny Pfannschmidt

   * Rutger Prins

   * Stefan Scherfke

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 0 5,  Next: pytest-3 0 4,  Prev: pytest-3 0 6,  Up: Release announcements

46.104 pytest-3.0.5
===================

pytest 3.0.5 has just been released to PyPI.

This is a bug-fix release, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Ana Vojnovic

   * Bruno Oliveira

   * Daniel Hahler

   * Duncan Betts

   * Igor Starikov

   * Ismail

   * Luke Murphy

   * Ned Batchelder

   * Ronny Pfannschmidt

   * Sebastian Ramacher

   * nmundar

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 0 4,  Next: pytest-3 0 3,  Prev: pytest-3 0 5,  Up: Release announcements

46.105 pytest-3.0.4
===================

pytest 3.0.4 has just been released to PyPI.

This release fixes some regressions and bugs reported in the last
version, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Dan Wandschneider

   * Florian Bruhin

   * Georgy Dyuldin

   * Grigorii Eremeev

   * Jason R. Coombs

   * Manuel Jacob

   * Mathieu Clabaut

   * Michael Seifert

   * Nikolaus Rath

   * Ronny Pfannschmidt

   * Tom V

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 0 3,  Next: pytest-3 0 2,  Prev: pytest-3 0 4,  Up: Release announcements

46.106 pytest-3.0.3
===================

pytest 3.0.3 has just been released to PyPI.

This release fixes some regressions and bugs reported in the last
version, being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Bruno Oliveira

   * Florian Bruhin

   * Floris Bruynooghe

   * Huayi Zhang

   * Lev Maximov

   * Raquel Alegre

   * Ronny Pfannschmidt

   * Roy Williams

   * Tyler Goodlet

   * mbyt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 0 2,  Next: pytest-3 0 1,  Prev: pytest-3 0 3,  Up: Release announcements

46.107 pytest-3.0.2
===================

pytest 3.0.2 has just been released to PyPI.

This release fixes some regressions and bugs reported in version 3.0.1,
being a drop-in replacement.  To upgrade:

     pip install --upgrade pytest

The changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

   * Ahn Ki-Wook

   * Bruno Oliveira

   * Florian Bruhin

   * Jordan Guymon

   * Raphael Pierzina

   * Ronny Pfannschmidt

   * mbyt

Happy testing, The pytest Development Team


File: pytest.info,  Node: pytest-3 0 1,  Next: pytest-3 0 0,  Prev: pytest-3 0 2,  Up: Release announcements

46.108 pytest-3.0.1
===================

pytest 3.0.1 has just been released to PyPI.

This release fixes some regressions reported in version 3.0.0, being a
drop-in replacement.  To upgrade:

     pip install –upgrade pytest

The changelog is available at
‘http://doc.pytest.org/en/stable/changelog.html’.

Thanks to all who contributed to this release, among them:

     Adam Chainz Andrew Svetlov Bruno Oliveira Daniel Hahler Dmitry
     Dygalo Florian Bruhin Marcin Bachry Ronny Pfannschmidt matthiasha

Happy testing, The py.test Development Team


File: pytest.info,  Node: pytest-3 0 0,  Next: python testing sprint June 20th-26th 2016,  Prev: pytest-3 0 1,  Up: Release announcements

46.109 pytest-3.0.0
===================

The pytest team is proud to announce the 3.0.0 release!

pytest is a mature Python testing tool with more than 1600 tests against
itself, passing on many different interpreters and platforms.

This release contains a lot of bugs fixes and improvements, and much of
the work done on it was possible because of the 2016 Sprint[1], which
was funded by an indiegogo campaign which raised over US$12,000 with
nearly 100 backers.

There’s a “What’s new in pytest 3.0” [2] blog post highlighting the
major features in this release.

To see the complete changelog and documentation, please visit:

     ‘http://docs.pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     AbdealiJK Ana Ribeiro Antony Lee Brandon W Maister Brianna Laugher
     Bruno Oliveira Ceridwen Christian Boelsen Daniel Hahler Danielle
     Jenkins Dave Hunt Diego Russo Dmitry Dygalo Edoardo Batini Eli
     Boyarski Florian Bruhin Floris Bruynooghe Greg Price Guyzmo HEAD
     KANGAROO JJ Javi Romero Javier Domingo Cansino Kale Kundert Kalle
     Bronsen Marius Gedminas Matt Williams Mike Lundy Oliver Bestwalter
     Omar Kohl Raphael Pierzina RedBeardCode Roberto Polli Romain
     Dorgueil Roman Bolshakov Ronny Pfannschmidt Stefan Zimmermann
     Steffen Allner Tareq Alayan Ted Xiao Thomas Grainger Tom Viner TomV
     Vasily Kuznetsov aostr marscher palaviv satoru taschini

Happy testing, The Pytest Development Team

[1] ‘http://blog.pytest.org/2016/pytest-development-sprint/’ [2]
‘http://blog.pytest.org/2016/whats-new-in-pytest-30/’


File: pytest.info,  Node: python testing sprint June 20th-26th 2016,  Next: pytest-2 9 2,  Prev: pytest-3 0 0,  Up: Release announcements

46.110 python testing sprint June 20th-26th 2016
================================================

 [image src="pytest-figures/freiburg2.jpg" ]

The pytest core group held the biggest sprint in its history in June
2016, taking place in the black forest town Freiburg in Germany.  In
February 2016 we started a funding campaign on Indiegogo to cover
expenses(1) The page also mentions some preliminary topics:

   - improving pytest-xdist test scheduling to take into account fixture
     setups and explicit user hints.

   - provide info on fixture dependencies during –collect-only

   - tying pytest-xdist to tox so that you can do “py.test -e py34” to
     run tests in a particular tox-managed virtualenv.  Also look into
     making pytest-xdist use tox environments on remote ssh-sides so
     that remote dependency management becomes easier.

   - refactoring the fixture system so more people understand it :)

   - integrating PyUnit setup methods as autouse fixtures.  possibly
     adding ways to influence ordering of same-scoped fixtures (so you
     can make a choice of which fixtures come before others)

   - fixing bugs and issues from the tracker, really an endless source
     :)

* Menu:

* Participants::
* Sprint organisation, schedule: Sprint organisation schedule.
* Money / funding::

   ---------- Footnotes ----------

   (1) http://igg.me/at/pytest-sprint/x/4034848


File: pytest.info,  Node: Participants,  Next: Sprint organisation schedule,  Up: python testing sprint June 20th-26th 2016

46.110.1 Participants
---------------------

Over 20 participants took part from 4 continents, including employees
from Splunk, Personalkollen, Cobe.io, FanDuel and Dolby.  Some newcomers
mixed with developers who have worked on pytest since its beginning, and
of course everyone in between.


File: pytest.info,  Node: Sprint organisation schedule,  Next: Money / funding,  Prev: Participants,  Up: python testing sprint June 20th-26th 2016

46.110.2 Sprint organisation, schedule
--------------------------------------

People arrived in Freiburg on the 19th, with sprint development taking
place on 20th, 21st, 22nd, 24th and 25th.  On the 23rd we took a break
day for some hot hiking in the Black Forest.

Sprint activity was organised heavily around pairing, with plenty of
group discusssions to take advantage of the high bandwidth, and
lightning talks as well.


File: pytest.info,  Node: Money / funding,  Prev: Sprint organisation schedule,  Up: python testing sprint June 20th-26th 2016

46.110.3 Money / funding
------------------------

The Indiegogo campaign aimed for 11000 USD and in the end raised over
12000, to reimburse travel costs, pay for a sprint venue and catering.

Excess money is reserved for further sprint/travel funding for
pytest/tox contributors.


File: pytest.info,  Node: pytest-2 9 2,  Next: pytest-2 9 1,  Prev: python testing sprint June 20th-26th 2016,  Up: Release announcements

46.111 pytest-2.9.2
===================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Adam Chainz Benjamin Dopplinger Bruno Oliveira Florian Bruhin John
     Towler Martin Prusse Meng Jue MengJueM Omar Kohl Quentin Pradet
     Ronny Pfannschmidt Thomas Güttler TomV Tyler Goodlet

Happy testing, The py.test Development Team

* Menu:

* 2.9.2 (compared to 2.9.1): 2 9 2 compared to 2 9 1.


File: pytest.info,  Node: 2 9 2 compared to 2 9 1,  Up: pytest-2 9 2

46.111.1 2.9.2 (compared to 2.9.1)
----------------------------------

‘Bug Fixes’

   * fix issue #510(1): skip tests where one parameterize dimension was
     empty thanks Alex Stapleton for the Report and
     @RonnyPfannschmidt(2) for the PR

   * Fix Xfail does not work with condition keyword argument.  Thanks
     @astraw38(3) for reporting the issue (issue #1496(4)) and
     @tomviner(5) for PR the (pull request #1524(6)).

   * Fix win32 path issue when putting custom config file with absolute
     path in ‘pytest.main("-c your_absolute_path")’.

   * Fix maximum recursion depth detection when raised error class is
     not aware of unicode/encoded bytes.  Thanks @prusse-martin(7) for
     the PR (pull request #1506(8)).

   * Fix ‘pytest.mark.skip’ mark when used in strict mode.  Thanks
     @pquentin(9) for the PR and @RonnyPfannschmidt(10) for showing how
     to fix the bug.

   * Minor improvements and fixes to the documentation.  Thanks
     @omarkohl(11) for the PR.

   * Fix ‘--fixtures’ to show all fixture definitions as opposed to just
     one per fixture name.  Thanks to @hackebrot(12) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/510

   (2) https://github.com/RonnyPfannschmidt

   (3) https://github.com/astraw38

   (4) https://github.com/pytest-dev/pytest/issues/1496

   (5) https://github.com/tomviner

   (6) https://github.com/pytest-dev/pytest/pull/1524

   (7) https://github.com/prusse-martin

   (8) https://github.com/pytest-dev/pytest/pull/1506

   (9) https://github.com/pquentin

   (10) https://github.com/RonnyPfannschmidt

   (11) https://github.com/omarkohl

   (12) https://github.com/hackebrot


File: pytest.info,  Node: pytest-2 9 1,  Next: pytest-2 9 0,  Prev: pytest-2 9 2,  Up: Release announcements

46.112 pytest-2.9.1
===================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Bruno Oliveira Daniel Hahler Dmitry Malinovsky Florian Bruhin
     Floris Bruynooghe Matt Bachmann Ronny Pfannschmidt TomV Vladimir
     Bolshakov Zearin palaviv

Happy testing, The py.test Development Team

* Menu:

* 2.9.1 (compared to 2.9.0): 2 9 1 compared to 2 9 0.


File: pytest.info,  Node: 2 9 1 compared to 2 9 0,  Up: pytest-2 9 1

46.112.1 2.9.1 (compared to 2.9.0)
----------------------------------

‘Bug Fixes’

   * Improve error message when a plugin fails to load.  Thanks
     @nicoddemus(1) for the PR.

   * Fix (issue #1178(2)): ‘pytest.fail’ with non-ascii characters
     raises an internal pytest error.  Thanks @nicoddemus(3) for the PR.

   * Fix (issue #469(4)): junit parses report.nodeid incorrectly, when
     params IDs contain ‘::’.  Thanks @tomviner(5) for the PR (pull
     request #1431(6)).

   * Fix (issue #578(7)): SyntaxErrors containing non-ascii lines at the
     point of failure generated an internal py.test error.  Thanks
     @asottile(8) for the report and @nicoddemus(9) for the PR.

   * Fix (issue #1437(10)): When passing in a bytestring regex pattern
     to parameterize attempt to decode it as utf-8 ignoring errors.

   * Fix (issue #649(11)): parametrized test nodes cannot be specified
     to run on the command line.

   ---------- Footnotes ----------

   (1) https://github.com/nicoddemus

   (2) https://github.com/pytest-dev/pytest/issues/1178

   (3) https://github.com/nicoddemus

   (4) https://github.com/pytest-dev/pytest/issues/469

   (5) https://github.com/tomviner

   (6) https://github.com/pytest-dev/pytest/pull/1431

   (7) https://github.com/pytest-dev/pytest/issues/578

   (8) https://github.com/asottile

   (9) https://github.com/nicoddemus

   (10) https://github.com/pytest-dev/pytest/issues/1437

   (11) https://github.com/pytest-dev/pytest/issues/649


File: pytest.info,  Node: pytest-2 9 0,  Next: pytest-2 8 7,  Prev: pytest-2 9 1,  Up: Release announcements

46.113 pytest-2.9.0
===================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Anatoly Bubenkov Bruno Oliveira Buck Golemon David Vierra Florian
     Bruhin Galaczi Endre Georgy Dyuldin Lukas Bednar Luke Murphy Marcin
     Biernat Matt Williams Michael Aquilina Raphael Pierzina Ronny
     Pfannschmidt Ryan Wooden Tiemo Kieft TomV holger krekel jab

Happy testing, The py.test Development Team

* Menu:

* 2.9.0 (compared to 2.8.7): 2 9 0 compared to 2 8 7.


File: pytest.info,  Node: 2 9 0 compared to 2 8 7,  Up: pytest-2 9 0

46.113.1 2.9.0 (compared to 2.8.7)
----------------------------------

‘New Features’

   * New ‘pytest.mark.skip’ mark, which unconditionally skips marked
     tests.  Thanks @MichaelAquilina(1) for the complete PR (pull
     request #1040(2)).

   * ‘--doctest-glob’ may now be passed multiple times in the
     command-line.  Thanks @jab(3) and @nicoddemus(4) for the PR.

   * New ‘-rp’ and ‘-rP’ reporting options give the summary and full
     output of passing tests, respectively.  Thanks to @codewarrior0(5)
     for the PR.

   * ‘pytest.mark.xfail’ now has a ‘strict’ option which makes ‘XPASS’
     tests to fail the test suite, defaulting to ‘False’.  There’s also
     a ‘xfail_strict’ ini option that can be used to configure it
     project-wise.  Thanks @rabbbit(6) for the request and
     @nicoddemus(7) for the PR (issue #1355(8)).

   * ‘Parser.addini’ now supports options of type ‘bool’.  Thanks
     @nicoddemus(9) for the PR.

   * New ‘ALLOW_BYTES’ doctest option strips ‘b’ prefixes from byte
     strings in doctest output (similar to ‘ALLOW_UNICODE’).  Thanks
     @jaraco(10) for the request and @nicoddemus(11) for the PR (issue
     #1287(12)).

   * give a hint on KeyboardInterrupt to use the –fulltrace option to
     show the errors, this fixes issue #1366(13).  Thanks to @hpk42(14)
     for the report and @RonnyPfannschmidt(15) for the PR.

   * catch IndexError exceptions when getting exception source location.
     This fixes pytest internal error for dynamically generated code
     (fixtures and tests) where source lines are fake by intention

‘Changes’

   * ‘Important’: py.code(16) has been merged into the ‘pytest’
     repository as ‘pytest._code’.  This decision was made because
     ‘py.code’ had very few uses outside ‘pytest’ and the fact that it
     was in a different repository made it difficult to fix bugs on its
     code in a timely manner.  The team hopes with this to be able to
     better refactor out and improve that code.  This change shouldn’t
     affect users, but it is useful to let users aware if they encounter
     any strange behavior.

     Keep in mind that the code for ‘pytest._code’ is ‘private’ and
     ‘experimental’, so you definitely should not import it explicitly!

     Please note that the original ‘py.code’ is still available in
     pylib(17).

   * ‘pytest_enter_pdb’ now optionally receives the pytest config
     object.  Thanks @nicoddemus(18) for the PR.

   * Removed code and documentation for Python 2.5 or lower versions,
     including removal of the obsolete ‘_pytest.assertion.oldinterpret’
     module.  Thanks @nicoddemus(19) for the PR (issue #1226(20)).

   * Comparisons now always show up in full when ‘CI’ or ‘BUILD_NUMBER’
     is found in the environment, even when -vv isn’t used.  Thanks
     @The-Compiler(21) for the PR.

   * ‘--lf’ and ‘--ff’ now support long names: ‘--last-failed’ and
     ‘--failed-first’ respectively.  Thanks @MichaelAquilina(22) for the
     PR.

   * Added expected exceptions to pytest.raises fail message

   * Collection only displays progress (“collecting X items”) when in a
     terminal.  This avoids cluttering the output when using
     ‘--color=yes’ to obtain colors in CI integrations systems (issue
     #1397(23)).

‘Bug Fixes’

   * The ‘-s’ and ‘-c’ options should now work under ‘xdist’;
     ‘Config.fromdictargs’ now represents its input much more
     faithfully.  Thanks to @bukzor(24) for the complete PR (issue
     #680(25)).

   * Fix (issue #1290(26)): support Python 3.5’s ‘@’ operator in
     assertion rewriting.  Thanks @Shinkenjoe(27) for report with test
     case and @tomviner(28) for the PR.

   * Fix formatting utf-8 explanation messages (issue #1379(29)).
     Thanks @biern(30) for the PR.

   * Fix traceback style docs(31) to describe all of the available
     options (auto/long/short/line/native/no), with ‘auto’ being the
     default since v2.6.  Thanks @hackebrot(32) for the PR.

   * Fix (issue #1422(33)): junit record_xml_property doesn’t allow
     multiple records with same name.

   ---------- Footnotes ----------

   (1) https://github.com/MichaelAquilina

   (2) https://github.com/pytest-dev/pytest/pull/1040

   (3) https://github.com/jab

   (4) https://github.com/nicoddemus

   (5) https://github.com/codewarrior0

   (6) https://github.com/rabbbit

   (7) https://github.com/nicoddemus

   (8) https://github.com/pytest-dev/pytest/issues/1355

   (9) https://github.com/nicoddemus

   (10) https://github.com/jaraco

   (11) https://github.com/nicoddemus

   (12) https://github.com/pytest-dev/pytest/issues/1287

   (13) https://github.com/pytest-dev/pytest/issues/1366

   (14) https://github.com/hpk42

   (15) https://github.com/RonnyPfannschmidt

   (16) https://pylib.readthedocs.io/en/stable/code.html

   (17) https://pylib.readthedocs.io/en/stable/

   (18) https://github.com/nicoddemus

   (19) https://github.com/nicoddemus

   (20) https://github.com/pytest-dev/pytest/issues/1226

   (21) https://github.com/The-Compiler

   (22) https://github.com/MichaelAquilina

   (23) https://github.com/pytest-dev/pytest/issues/1397

   (24) https://github.com/bukzor

   (25) https://github.com/pytest-dev/pytest/issues/680

   (26) https://github.com/pytest-dev/pytest/issues/1290

   (27) https://github.com/Shinkenjoe

   (28) https://github.com/tomviner

   (29) https://github.com/pytest-dev/pytest/issues/1379

   (30) https://github.com/biern

   (31) 
https://pytest.org/en/stable/how-to/output.html#modifying-python-traceback-printing

   (32) https://github.com/hackebrot

   (33) https://github.com/pytest-dev/pytest/issues/1422


File: pytest.info,  Node: pytest-2 8 7,  Next: pytest-2 8 6,  Prev: pytest-2 9 0,  Up: Release announcements

46.114 pytest-2.8.7
===================

This is a hotfix release to solve a regression in the builtin
monkeypatch plugin that got introduced in 2.8.6.

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is supposed to be drop-in compatible to 2.8.5.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Ronny Pfannschmidt

Happy testing, The py.test Development Team

* Menu:

* 2.8.7 (compared to 2.8.6): 2 8 7 compared to 2 8 6.


File: pytest.info,  Node: 2 8 7 compared to 2 8 6,  Up: pytest-2 8 7

46.114.1 2.8.7 (compared to 2.8.6)
----------------------------------

   - fix #1338: use predictable object resolution for monkeypatch


File: pytest.info,  Node: pytest-2 8 6,  Next: pytest-2 8 5,  Prev: pytest-2 8 7,  Up: Release announcements

46.115 pytest-2.8.6
===================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is supposed to be drop-in compatible to 2.8.5.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     AMiT Kumar Bruno Oliveira Erik M. Bray Florian Bruhin Georgy
     Dyuldin Jeff Widman Kartik Singhal Loïc Estève Manu Phatak Peter
     Demin Rick van Hattem Ronny Pfannschmidt Ulrich Petri foxx

Happy testing, The py.test Development Team

* Menu:

* 2.8.6 (compared to 2.8.5): 2 8 6 compared to 2 8 5.


File: pytest.info,  Node: 2 8 6 compared to 2 8 5,  Up: pytest-2 8 6

46.115.1 2.8.6 (compared to 2.8.5)
----------------------------------

   - fix #1259: allow for double nodeids in junitxml, this was a
     regression failing plugins combinations like pytest-pep8 +
     pytest-flakes

   - Workaround for exception that occurs in pyreadline when using
     ‘--pdb’ with standard I/O capture enabled.  Thanks Erik M. Bray for
     the PR.

   - fix #900: Better error message in case the target of a
     ‘monkeypatch’ call raises an ‘ImportError’.

   - fix #1292: monkeypatch calls (setattr, setenv, etc.)  are now O(1).
     Thanks David R. MacIver for the report and Bruno Oliveira for the
     PR.

   - fix #1223: captured stdout and stderr are now properly displayed
     before entering pdb when ‘--pdb’ is used instead of being thrown
     away.  Thanks Cal Leeming for the PR.

   - fix #1305: pytest warnings emitted during ‘pytest_terminal_summary’
     are now properly displayed.  Thanks Ionel Maries Cristian for the
     report and Bruno Oliveira for the PR.

   - fix #628: fixed internal UnicodeDecodeError when doctests contain
     unicode.  Thanks Jason R. Coombs for the report and Bruno Oliveira
     for the PR.

   - fix #1334: Add captured stdout to jUnit XML report on setup error.
     Thanks Georgy Dyuldin for the PR.


File: pytest.info,  Node: pytest-2 8 5,  Next: pytest-2 8 4,  Prev: pytest-2 8 6,  Up: Release announcements

46.116 pytest-2.8.5
===================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is supposed to be drop-in compatible to 2.8.4.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Alex Gaynor aselus-hub Bruno Oliveira Ronny Pfannschmidt

Happy testing, The py.test Development Team

* Menu:

* 2.8.5 (compared to 2.8.4): 2 8 5 compared to 2 8 4.


File: pytest.info,  Node: 2 8 5 compared to 2 8 4,  Up: pytest-2 8 5

46.116.1 2.8.5 (compared to 2.8.4)
----------------------------------

   - fix #1243: fixed issue where class attributes injected during
     collection could break pytest.  PR by Alexei Kozlenok, thanks Ronny
     Pfannschmidt and Bruno Oliveira for the review and help.

   - fix #1074: precompute junitxml chunks instead of storing the whole
     tree in objects Thanks Bruno Oliveira for the report and Ronny
     Pfannschmidt for the PR

   - fix #1238: fix ‘pytest.deprecated_call()’ receiving multiple
     arguments (Regression introduced in 2.8.4).  Thanks Alex Gaynor for
     the report and Bruno Oliveira for the PR.


File: pytest.info,  Node: pytest-2 8 4,  Next: pytest-2 8 3 bug fixes,  Prev: pytest-2 8 5,  Up: Release announcements

46.117 pytest-2.8.4
===================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is supposed to be drop-in compatible to 2.8.2.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Bruno Oliveira Florian Bruhin Jeff Widman Mehdy Khoshnoody Nicholas
     Chammas Ronny Pfannschmidt Tim Chan

Happy testing, The py.test Development Team

* Menu:

* 2.8.4 (compared to 2.8.3): 2 8 4 compared to 2 8 3.


File: pytest.info,  Node: 2 8 4 compared to 2 8 3,  Up: pytest-2 8 4

46.117.1 2.8.4 (compared to 2.8.3)
----------------------------------

   - fix #1190: ‘deprecated_call()’ now works when the deprecated
     function has been already called by another test in the same
     module.  Thanks Mikhail Chernykh for the report and Bruno Oliveira
     for the PR.

   - fix #1198: ‘--pastebin’ option now works on Python 3.  Thanks Mehdy
     Khoshnoody for the PR.

   - fix #1219: ‘--pastebin’ now works correctly when captured output
     contains non-ascii characters.  Thanks Bruno Oliveira for the PR.

   - fix #1204: another error when collecting with a nasty
     __getattr__().  Thanks Florian Bruhin for the PR.

   - fix the summary printed when no tests did run.  Thanks Florian
     Bruhin for the PR.

   - a number of documentation modernizations wrt good practices.
     Thanks Bruno Oliveira for the PR.


File: pytest.info,  Node: pytest-2 8 3 bug fixes,  Next: pytest-2 8 2 bug fixes,  Prev: pytest-2 8 4,  Up: Release announcements

46.118 pytest-2.8.3: bug fixes
==============================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is supposed to be drop-in compatible to 2.8.2.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Bruno Oliveira Florian Bruhin Gabe Hollombe Gabriel Reis Hartmut
     Goebel John Vandenberg Lee Kamentsky Michael Birtwell Raphael
     Pierzina Ronny Pfannschmidt William Martin Stewart

Happy testing, The py.test Development Team

* Menu:

* 2.8.3 (compared to 2.8.2): 2 8 3 compared to 2 8 2.


File: pytest.info,  Node: 2 8 3 compared to 2 8 2,  Up: pytest-2 8 3 bug fixes

46.118.1 2.8.3 (compared to 2.8.2)
----------------------------------

   - fix #1169: add __name__ attribute to testcases in TestCaseFunction
     to support the @unittest.skip decorator on functions and methods.
     Thanks Lee Kamentsky for the PR.

   - fix #1035: collecting tests if test module level obj has
     __getattr__().  Thanks Suor for the report and Bruno Oliveira / Tom
     Viner for the PR.

   - fix #331: don’t collect tests if their failure cannot be reported
     correctly e.g.  they are a callable instance of a class.

   - fix #1133: fixed internal error when filtering tracebacks where one
     entry belongs to a file which is no longer available.  Thanks Bruno
     Oliveira for the PR.

   - enhancement made to highlight in red the name of the failing tests
     so they stand out in the output.  Thanks Gabriel Reis for the PR.

   - add more talks to the documentation

   - extend documentation on the –ignore cli option

   - use pytest-runner for setuptools integration

   - minor fixes for interaction with OS X El Capitan system integrity
     protection (thanks Florian)


File: pytest.info,  Node: pytest-2 8 2 bug fixes,  Next: pytest-2 7 2 bug fixes,  Prev: pytest-2 8 3 bug fixes,  Up: Release announcements

46.119 pytest-2.8.2: bug fixes
==============================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is supposed to be drop-in compatible to 2.8.1.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Bruno Oliveira Demian Brecht Florian Bruhin Ionel Cristian Mărieș
     Raphael Pierzina Ronny Pfannschmidt holger krekel

Happy testing, The py.test Development Team

* Menu:

* 2.8.2 (compared to 2.7.2): 2 8 2 compared to 2 7 2.


File: pytest.info,  Node: 2 8 2 compared to 2 7 2,  Up: pytest-2 8 2 bug fixes

46.119.1 2.8.2 (compared to 2.7.2)
----------------------------------

   - fix #1085: proper handling of encoding errors when passing encoded
     byte strings to pytest.parametrize in Python 2.  Thanks
     Themanwithoutaplan for the report and Bruno Oliveira for the PR.

   - fix #1087: handling SystemError when passing empty byte strings to
     pytest.parametrize in Python 3.  Thanks Paul Kehrer for the report
     and Bruno Oliveira for the PR.

   - fix #995: fixed internal error when filtering tracebacks where one
     entry was generated by an exec() statement.  Thanks Daniel Hahler,
     Ashley C Straw, Philippe Gauthier and Pavel Savchenko for
     contributing and Bruno Oliveira for the PR.


File: pytest.info,  Node: pytest-2 7 2 bug fixes,  Next: pytest-2 7 1 bug fixes,  Prev: pytest-2 8 2 bug fixes,  Up: Release announcements

46.120 pytest-2.7.2: bug fixes
==============================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is supposed to be drop-in compatible to 2.7.1.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Bruno Oliveira Floris Bruynooghe Punyashloka Biswal Aron Curzon
     Benjamin Peterson Thomas De Schampheleire Edison Gustavo Muenz
     Holger Krekel

Happy testing, The py.test Development Team

* Menu:

* 2.7.2 (compared to 2.7.1): 2 7 2 compared to 2 7 1.


File: pytest.info,  Node: 2 7 2 compared to 2 7 1,  Up: pytest-2 7 2 bug fixes

46.120.1 2.7.2 (compared to 2.7.1)
----------------------------------

   - fix issue767: pytest.raises value attribute does not contain the
     exception instance on Python 2.6.  Thanks Eric Siegerman for
     providing the test case and Bruno Oliveira for PR.

   - Automatically create directory for junitxml and results log.
     Thanks Aron Curzon.

   - fix issue713: JUnit XML reports for doctest failures.  Thanks
     Punyashloka Biswal.

   - fix issue735: assertion failures on debug versions of Python 3.4+
     Thanks Benjamin Peterson.

   - fix issue114: skipif marker reports to internal skipping plugin;
     Thanks Floris Bruynooghe for reporting and Bruno Oliveira for the
     PR.

   - fix issue748: unittest.SkipTest reports to internal pytest unittest
     plugin.  Thanks Thomas De Schampheleire for reporting and Bruno
     Oliveira for the PR.

   - fix issue718: failed to create representation of sets containing
     unsortable elements in python 2.  Thanks Edison Gustavo Muenz

   - fix issue756, fix issue752 (and similar issues): depend on
     py-1.4.29 which has a refined algorithm for traceback generation.


File: pytest.info,  Node: pytest-2 7 1 bug fixes,  Next: pytest-2 7 0 fixes features speed improvements,  Prev: pytest-2 7 2 bug fixes,  Up: Release announcements

46.121 pytest-2.7.1: bug fixes
==============================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is supposed to be drop-in compatible to 2.7.0.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed to this release, among them:

     Bruno Oliveira Holger Krekel Ionel Maries Cristian Floris
     Bruynooghe

Happy testing, The py.test Development Team

* Menu:

* 2.7.1 (compared to 2.7.0): 2 7 1 compared to 2 7 0.


File: pytest.info,  Node: 2 7 1 compared to 2 7 0,  Up: pytest-2 7 1 bug fixes

46.121.1 2.7.1 (compared to 2.7.0)
----------------------------------

   - fix issue731: do not get confused by the braces which may be
     present and unbalanced in an object’s repr while collapsing False
     explanations.  Thanks Carl Meyer for the report and test case.

   - fix issue553: properly handling inspect.getsourcelines failures in
     FixtureLookupError which would lead to an internal error,
     obfuscating the original problem.  Thanks talljosh for initial
     diagnose/patch and Bruno Oliveira for final patch.

   - fix issue660: properly report scope-mismatch-access errors
     independently from ordering of fixture arguments.  Also avoid the
     pytest internal traceback which does not provide information to the
     user.  Thanks Holger Krekel.

   - streamlined and documented release process.  Also all versions (in
     setup.py and documentation generation) are now read from
     _pytest/__init__.py.  Thanks Holger Krekel.

   - fixed docs to remove the notion that yield-fixtures are
     experimental.  They are here to stay :) Thanks Bruno Oliveira.

   - Support building wheels by using environment markers for the
     requirements.  Thanks Ionel Maries Cristian.

   - fixed regression to 2.6.4 which surfaced e.g.  in lost stdout
     capture printing when tests raised SystemExit.  Thanks Holger
     Krekel.

   - reintroduced _pytest fixture of the pytester plugin which is used
     at least by pytest-xdist.


File: pytest.info,  Node: pytest-2 7 0 fixes features speed improvements,  Next: pytest-2 6 3 fixes and little improvements,  Prev: pytest-2 7 1 bug fixes,  Up: Release announcements

46.122 pytest-2.7.0: fixes, features, speed improvements
========================================================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is supposed to be drop-in compatible to 2.6.X.

See below for the changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed, among them:

     Anatoly Bubenkoff Floris Bruynooghe Brianna Laugher Eric Siegerman
     Daniel Hahler Charles Cloud Tom Viner Holger Peters Ldiary
     Translations almarklein

have fun, holger krekel

* Menu:

* 2.7.0 (compared to 2.6.4): 2 7 0 compared to 2 6 4.


File: pytest.info,  Node: 2 7 0 compared to 2 6 4,  Up: pytest-2 7 0 fixes features speed improvements

46.122.1 2.7.0 (compared to 2.6.4)
----------------------------------

   - fix issue435: make reload() work when assert rewriting is active.
     Thanks Daniel Hahler.

   - fix issue616: conftest.py files and their contained fixtures are
     now properly considered for visibility, independently from the
     exact current working directory and test arguments that are used.
     Many thanks to Eric Siegerman and his PR235 which contains
     systematic tests for conftest visibility and now passes.  This
     change also introduces the concept of a ‘rootdir’ which is printed
     as a new pytest header and documented in the pytest customize web
     page.

   - change reporting of “diverted” tests, i.e.  tests that are
     collected in one file but actually come from another (e.g.  when
     tests in a test class come from a base class in a different file).
     We now show the nodeid and indicate via a postfix the other file.

   - add ability to set command line options by environment variable
     PYTEST_ADDOPTS.

   - added documentation on the new pytest-dev teams on bitbucket and
     github.  See ‘https://pytest.org/en/stable/contributing.html’ .
     Thanks to Anatoly for pushing and initial work on this.

   - fix issue650: new option ‘--docttest-ignore-import-errors’ which
     will turn import errors in doctests into skips.  Thanks Charles
     Cloud for the complete PR.

   - fix issue655: work around different ways that cause python2/3 to
     leak sys.exc_info into fixtures/tests causing failures in 3rd party
     code

   - fix issue615: assertion rewriting did not correctly escape % signs
     when formatting boolean operations, which tripped over mixing
     booleans with modulo operators.  Thanks to Tom Viner for the
     report, triaging and fix.

   - implement issue351: add ability to specify parametrize ids as a
     callable to generate custom test ids.  Thanks Brianna Laugher for
     the idea and implementation.

   - introduce and document new hookwrapper mechanism useful for plugins
     which want to wrap the execution of certain hooks for their
     purposes.  This supersedes the undocumented ‘__multicall__’
     protocol which pytest itself and some external plugins use.  Note
     that pytest-2.8 is scheduled to drop supporting the old
     ‘__multicall__’ and only support the hookwrapper protocol.

   - majorly speed up invocation of plugin hooks

   - use hookwrapper mechanism in builtin pytest plugins.

   - add a doctest ini option for doctest flags, thanks Holger Peters.

   - add note to docs that if you want to mark a parameter and the
     parameter is a callable, you also need to pass in a reason to
     disambiguate it from the “decorator” case.  Thanks Tom Viner.

   - “python_classes” and “python_functions” options now support
     glob-patterns for test discovery, as discussed in issue600.  Thanks
     Ldiary Translations.

   - allow to override parametrized fixtures with non-parametrized ones
     and vice versa (bubenkoff).

   - fix issue463: raise specific error for ‘parameterize’ misspelling
     (pfctdayelise).

   - On failure, the ‘sys.last_value’, ‘sys.last_type’ and
     ‘sys.last_traceback’ are set, so that a user can inspect the error
     via postmortem debugging (almarklein).


File: pytest.info,  Node: pytest-2 6 3 fixes and little improvements,  Next: Changes 2 6 3,  Prev: pytest-2 7 0 fixes features speed improvements,  Up: Release announcements

46.123 pytest-2.6.3: fixes and little improvements
==================================================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is drop-in compatible to 2.5.2 and 2.6.X. See below for the
changes and see docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed, among them:

     Floris Bruynooghe Oleg Sinyavskiy Uwe Schmitt Charles Cloud
     Wolfgang Schnerring

have fun, holger krekel


File: pytest.info,  Node: Changes 2 6 3,  Next: pytest-2 6 2 few fixes and cx_freeze support,  Prev: pytest-2 6 3 fixes and little improvements,  Up: Release announcements

46.124 Changes 2.6.3
====================

   - fix issue575: xunit-xml was reporting collection errors as failures
     instead of errors, thanks Oleg Sinyavskiy.

   - fix issue582: fix setuptools example, thanks Laszlo Papp and Ronny
     Pfannschmidt.

   - Fix infinite recursion bug when pickling capture.EncodedFile,
     thanks Uwe Schmitt.

   - fix issue589: fix bad interaction with numpy and others when
     showing exceptions.  Check for precise “maximum recursion depth
     exceed” exception instead of presuming any RuntimeError is that one
     (implemented in py dep).  Thanks Charles Cloud for analysing the
     issue.

   - fix conftest related fixture visibility issue: when running with a
     CWD outside of a test package pytest would get fixture discovery
     wrong.  Thanks to Wolfgang Schnerring for figuring out a
     reproducible example.

   - Introduce pytest_enter_pdb hook (needed e.g.  by pytest_timeout to
     cancel the timeout when interactively entering pdb).  Thanks
     Wolfgang Schnerring.

   - check xfail/skip also with non-python function test items.  Thanks
     Floris Bruynooghe.


File: pytest.info,  Node: pytest-2 6 2 few fixes and cx_freeze support,  Next: pytest-2 6 1 fixes and new xfail feature,  Prev: Changes 2 6 3,  Up: Release announcements

46.125 pytest-2.6.2: few fixes and cx_freeze support
====================================================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  This
release is drop-in compatible to 2.5.2 and 2.6.X. It also brings support
for including pytest with cx_freeze or similar freezing tools into your
single-file app distribution.  For details see the CHANGELOG below.

See docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed, among them:

     Floris Bruynooghe Benjamin Peterson Bruno Oliveira

have fun, holger krekel

* Menu:

* 2.6.2: 2 6 2.


File: pytest.info,  Node: 2 6 2,  Up: pytest-2 6 2 few fixes and cx_freeze support

46.125.1 2.6.2
--------------

   - Added function pytest.freeze_includes(), which makes it easy to
     embed pytest into executables using tools like cx_freeze.  See docs
     for examples and rationale.  Thanks Bruno Oliveira.

   - Improve assertion rewriting cache invalidation precision.

   - fixed issue561: adapt autouse fixture example for python3.

   - fixed issue453: assertion rewriting issue with __repr__ containing
     “n{”, “n}” and “n~”.

   - fix issue560: correctly display code if an “else:” or “finally:” is
     followed by statements on the same line.

   - Fix example in monkeypatch documentation, thanks t-8ch.

   - fix issue572: correct tmpdir doc example for python3.

   - Do not mark as universal wheel because Python 2.6 is different from
     other builds due to the extra argparse dependency.  Fixes issue566.
     Thanks sontek.


File: pytest.info,  Node: pytest-2 6 1 fixes and new xfail feature,  Next: Changes 2 6 1,  Prev: pytest-2 6 2 few fixes and cx_freeze support,  Up: Release announcements

46.126 pytest-2.6.1: fixes and new xfail feature
================================================

pytest is a mature Python testing tool with more than 1100 tests against
itself, passing on many different interpreters and platforms.  The 2.6.1
release is drop-in compatible to 2.5.2 and actually fixes some
regressions introduced with 2.6.0.  It also brings a little feature to
the xfail marker which now recognizes expected exceptions, see the
CHANGELOG below.

See docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed, among them:

     Floris Bruynooghe Bruno Oliveira Nicolas Delaby

have fun, holger krekel


File: pytest.info,  Node: Changes 2 6 1,  Next: pytest-2 6 0 shorter tracebacks new warning system test runner compat,  Prev: pytest-2 6 1 fixes and new xfail feature,  Up: Release announcements

46.127 Changes 2.6.1
====================

   - No longer show line numbers in the –verbose output, the output is
     now purely the nodeid.  The line number is still shown in failure
     reports.  Thanks Floris Bruynooghe.

   - fix issue437 where assertion rewriting could cause pytest-xdist
     worker nodes to collect different tests.  Thanks Bruno Oliveira.

   - fix issue555: add “errors” attribute to capture-streams to satisfy
     some distutils and possibly other code accessing sys.stdout.errors.

   - fix issue547 capsys/capfd also work when output capturing (“-s”) is
     disabled.

   - address issue170: allow pytest.mark.xfail(…) to specify expected
     exceptions via an optional “raises=EXC” argument where EXC can be a
     single exception or a tuple of exception classes.  Thanks David
     Mohr for the complete PR.

   - fix integration of pytest with unittest.mock.patch decorator when
     it uses the “new” argument.  Thanks Nicolas Delaby for test and PR.

   - fix issue with detecting conftest files if the arguments contain
     “::” node id specifications (copy pasted from “-v” output)

   - fix issue544 by only removing “@NUM” at the end of “::” separated
     parts and if the part has a “.py” extension

   - don’t use py.std import helper, rather import things directly.
     Thanks Bruno Oliveira.


File: pytest.info,  Node: pytest-2 6 0 shorter tracebacks new warning system test runner compat,  Next: pytest-2 5 2 fixes,  Prev: Changes 2 6 1,  Up: Release announcements

46.128 pytest-2.6.0: shorter tracebacks, new warning system, test runner compat
===============================================================================

pytest is a mature Python testing tool with more than 1000 tests against
itself, passing on many different interpreters and platforms.

The 2.6.0 release should be drop-in backward compatible to 2.5.2 and
fixes a number of bugs and brings some new features, mainly:

   - shorter tracebacks by default: only the first (test function) entry
     and the last (failure location) entry are shown, the ones between
     only in “short” format.  Use ‘--tb=long’ to get back the old
     behaviour of showing “long” entries everywhere.

   - a new warning system which reports oddities during collection and
     execution.  For example, ignoring collecting Test* classes with an
     ‘__init__’ now produces a warning.

   - various improvements to nose/mock/unittest integration

Note also that 2.6.0 departs with the “zero reported bugs” policy
because it has been too hard to keep up with it, unfortunately.  Instead
we are for now rather bound to work on “upvoted” issues in the
‘https://bitbucket.org/pytest-dev/pytest/issues?status=new&status=open&sort=-votes’
issue tracker.

See docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to all who contributed, among them:

     Benjamin Peterson Jurko Gospodnetić Floris Bruynooghe Marc
     Abramowitz Marc Schlaich Trevor Bekolay Bruno Oliveira Alex
     Groenholm

have fun, holger krekel

* Menu:

* 2.6.0: 2 6 0.


File: pytest.info,  Node: 2 6 0,  Up: pytest-2 6 0 shorter tracebacks new warning system test runner compat

46.128.1 2.6.0
--------------

   - fix issue537: Avoid importing old assertion reinterpretation code
     by default.  Thanks Benjamin Peterson.

   - fix issue364: shorten and enhance tracebacks representation by
     default.  The new “–tb=auto” option (default) will only display
     long tracebacks for the first and last entry.  You can get the old
     behaviour of printing all entries as long entries with “–tb=long”.
     Also short entries by default are now printed very similarly to
     “–tb=native” ones.

   - fix issue514: teach assertion reinterpretation about private class
     attributes Thanks Benjamin Peterson.

   - change -v output to include full node IDs of tests.  Users can copy
     a node ID from a test run, including line number, and use it as a
     positional argument in order to run only a single test.

   - fix issue 475: fail early and comprehensible if calling
     pytest.raises with wrong exception type.

   - fix issue516: tell in getting-started about current dependencies.

   - cleanup setup.py a bit and specify supported versions.  Thanks
     Jurko Gospodnetic for the PR.

   - change XPASS colour to yellow rather then red when tests are run
     with -v.

   - fix issue473: work around mock putting an unbound method into a
     class dict when double-patching.

   - fix issue498: if a fixture finalizer fails, make sure that the
     fixture is still invalidated.

   - fix issue453: the result of the pytest_assertrepr_compare hook now
     gets it’s newlines escaped so that format_exception does not blow
     up.

   - internal new warning system: pytest will now produce warnings when
     it detects oddities in your test collection or execution.  Warnings
     are ultimately sent to a new pytest_logwarning hook which is
     currently only implemented by the terminal plugin which displays
     warnings in the summary line and shows more details when -rw
     (report on warnings) is specified.

   - change skips into warnings for test classes with an __init__ and
     callables in test modules which look like a test but are not
     functions.

   - fix issue436: improved finding of initial conftest files from
     command line arguments by using the result of parse_known_args
     rather than the previous flaky heuristics.  Thanks Marc Abramowitz
     for tests and initial fixing approaches in this area.

   - fix issue #479: properly handle nose/unittest(2) SkipTest
     exceptions during collection/loading of test modules.  Thanks to
     Marc Schlaich for the complete PR.

   - fix issue490: include pytest_load_initial_conftests in
     documentation and improve docstring.

   - fix issue472: clarify that ‘pytest.config.getvalue()’ cannot work
     if it’s triggered ahead of command line parsing.

   - merge PR123: improved integration with mock.patch decorator on
     tests.

   - fix issue412: messing with stdout/stderr FD-level streams is now
     captured without crashes.

   - fix issue483: trial/py33 works now properly.  Thanks Daniel Grana
     for PR.

   - improve example for pytest integration with “python setup.py test”
     which now has a generic “-a” or “–pytest-args” option where you can
     pass additional options as a quoted string.  Thanks Trevor Bekolay.

   - simplified internal capturing mechanism and made it more robust
     against tests or setups changing FD1/FD2, also better integrated
     now with pytest.pdb() in single tests.

   - improvements to pytest’s own test-suite leakage detection, courtesy
     of PRs from Marc Abramowitz

   - fix issue492: avoid leak in test_writeorg.  Thanks Marc Abramowitz.

   - fix issue493: don’t run tests in doc directory with ‘python
     setup.py test’ (use tox -e doctesting for that)

   - fix issue486: better reporting and handling of early conftest
     loading failures

   - some cleanup and simplification of internal conftest handling.

   - work a bit harder to break reference cycles when catching
     exceptions.  Thanks Jurko Gospodnetic.

   - fix issue443: fix skip examples to use proper comparison.  Thanks
     Alex Groenholm.

   - support nose-style ‘__test__’ attribute on modules, classes and
     functions, including unittest-style Classes.  If set to False, the
     test will not be collected.

   - fix issue512: show “<notset>” for arguments which might not be set
     in monkeypatch plugin.  Improves output in documentation.

   - avoid importing “py.test” (an old alias module for “pytest”)


File: pytest.info,  Node: pytest-2 5 2 fixes,  Next: pytest-2 5 1 fixes and new home page styling,  Prev: pytest-2 6 0 shorter tracebacks new warning system test runner compat,  Up: Release announcements

46.129 pytest-2.5.2: fixes
==========================

pytest is a mature Python testing tool with more than 1000 tests against
itself, passing on many different interpreters and platforms.

The 2.5.2 release fixes a few bugs with two maybe-bugs remaining and
actively being worked on (and waiting for the bug reporter’s input).  We
also have a new contribution guide thanks to Piotr Banaszkiewicz and
others.

See docs at:

     ‘http://pytest.org’

As usual, you can upgrade from pypi via:

     pip install -U pytest

Thanks to the following people who contributed to this release:

     Anatoly Bubenkov Ronny Pfannschmidt Floris Bruynooghe Bruno
     Oliveira Andreas Pelme Jurko Gospodnetić Piotr Banaszkiewicz Simon
     Liedtke lakka Lukasz Balcerzak Philippe Muller Daniel Hahler

have fun, holger krekel

* Menu:

* 2.5.2: 2 5 2.


File: pytest.info,  Node: 2 5 2,  Up: pytest-2 5 2 fixes

46.129.1 2.5.2
--------------

   - fix issue409 – better interoperate with cx_freeze by not trying to
     import from collections.abc which causes problems for
     py27/cx_freeze.  Thanks Wolfgang L. for reporting and tracking it
     down.

   - fixed docs and code to use “pytest” instead of “py.test” almost
     everywhere.  Thanks Jurko Gospodnetic for the complete PR.

   - fix issue425: mention at end of “py.test -h” that –markers and
     –fixtures work according to specified test path (or current dir)

   - fix issue413: exceptions with unicode attributes are now printed
     correctly also on python2 and with pytest-xdist runs.  (the fix
     requires py-1.4.20)

   - copy, cleanup and integrate py.io capture from pylib 1.4.20.dev2
     (rev 13d9af95547e)

   - address issue416: clarify docs as to conftest.py loading semantics

   - fix issue429: comparing byte strings with non-ascii chars in assert
     expressions now work better.  Thanks Floris Bruynooghe.

   - make capfd/capsys.capture private, its unused and shouldn’t be
     exposed


File: pytest.info,  Node: pytest-2 5 1 fixes and new home page styling,  Next: pytest-2 5 0 now down to ZERO reported bugs!,  Prev: pytest-2 5 2 fixes,  Up: Release announcements

46.130 pytest-2.5.1: fixes and new home page styling
====================================================

pytest is a mature Python testing tool with more than 1000 tests against
itself, passing on many different interpreters and platforms.

The 2.5.1 release maintains the “zero-reported-bugs” promise by fixing
the three bugs reported since the last release a few days ago.  It also
features a new home page styling implemented by Tobias Bieniek, based on
the flask theme from Armin Ronacher:

     ‘http://pytest.org’

If you have anything more to improve styling and docs, we’d be very
happy to merge further pull requests.

On the coding side, the release also contains a little enhancement to
fixture decorators allowing to directly influence generation of test
ids, thanks to Floris Bruynooghe.  Other thanks for helping with this
release go to Anatoly Bubenkoff and Ronny Pfannschmidt.

As usual, you can upgrade from pypi via:

     pip install -U pytest

have fun and a nice remaining “bug-free” time of the year :) holger
krekel

* Menu:

* 2.5.1: 2 5 1.


File: pytest.info,  Node: 2 5 1,  Up: pytest-2 5 1 fixes and new home page styling

46.130.1 2.5.1
--------------

   - merge new documentation styling PR from Tobias Bieniek.

   - fix issue403: allow parametrize of multiple same-name functions
     within a collection node.  Thanks Andreas Kloeckner and Alex Gaynor
     for reporting and analysis.

   - Allow parameterized fixtures to specify the ID of the parameters by
     adding an ids argument to pytest.fixture() and
     pytest.yield_fixture().  Thanks Floris Bruynooghe.

   - fix issue404 by always using the binary xml escape in the junitxml
     plugin.  Thanks Ronny Pfannschmidt.

   - fix issue407: fix addoption docstring to point to argparse instead
     of optparse.  Thanks Daniel D. Wright.


File: pytest.info,  Node: pytest-2 5 0 now down to ZERO reported bugs!,  Next: pytest-2 4 2 colorama on windows plugin/tmpdir fixes,  Prev: pytest-2 5 1 fixes and new home page styling,  Up: Release announcements

46.131 pytest-2.5.0: now down to ZERO reported bugs!
====================================================

pytest-2.5.0 is a big fixing release, the result of two community bug
fixing days plus numerous additional works from many people and
reporters.  The release should be fully compatible to 2.4.2, existing
plugins and test suites.  We aim at maintaining this level of ZERO
reported bugs because it’s no fun if your testing tool has bugs, is it?
Under a condition, though: when submitting a bug report please provide
clear information about the circumstances and a simple example which
reproduces the problem.

The issue tracker is of course not empty now.  We have many remaining
“enhancement” issues which we’ll hopefully can tackle in 2014 with your
help.

For those who use older Python versions, please note that pytest is not
automatically tested on python2.5 due to virtualenv, setuptools and tox
not supporting it anymore.  Manual verification shows that it mostly
works fine but it’s not going to be part of the automated release
process and thus likely to break in the future.

As usual, current docs are at

     ‘http://pytest.org’

and you can upgrade from pypi via:

     pip install -U pytest

Particular thanks for helping with this release go to Anatoly Bubenkoff,
Floris Bruynooghe, Marc Abramowitz, Ralph Schmitt, Ronny Pfannschmidt,
Donald Stufft, James Lan, Rob Dennis, Jason R. Coombs, Mathieu Agopian,
Virgil Dupras, Bruno Oliveira, Alex Gaynor and others.

have fun, holger krekel

* Menu:

* 2.5.0: 2 5 0.


File: pytest.info,  Node: 2 5 0,  Up: pytest-2 5 0 now down to ZERO reported bugs!

46.131.1 2.5.0
--------------

   - dropped python2.5 from automated release testing of pytest itself
     which means it’s probably going to break soon (but still works with
     this release we believe).

   - simplified and fixed implementation for calling finalizers when
     parametrized fixtures or function arguments are involved.
     finalization is now performed lazily at setup time instead of in
     the “teardown phase”.  While this might sound odd at first, it
     helps to ensure that we are correctly handling setup/teardown even
     in complex code.  User-level code should not be affected unless
     it’s implementing the pytest_runtest_teardown hook and expecting
     certain fixture instances are torn down within (very unlikely and
     would have been unreliable anyway).

   - PR90: add –color=yes|no|auto option to force terminal coloring mode
     (“auto” is default).  Thanks Marc Abramowitz.

   - fix issue319 - correctly show unicode in assertion errors.  Many
     thanks to Floris Bruynooghe for the complete PR. Also means we
     depend on py>=1.4.19 now.

   - fix issue396 - correctly sort and finalize class-scoped
     parametrized tests independently from number of methods on the
     class.

   - refix issue323 in a better way – parametrization should now never
     cause Runtime Recursion errors because the underlying algorithm for
     re-ordering tests per-scope/per-fixture is not recursive anymore
     (it was tail-call recursive before which could lead to problems for
     more than >966 non-function scoped parameters).

   - fix issue290 - there is preliminary support now for parametrizing
     with repeated same values (sometimes useful to test if calling a
     second time works as with the first time).

   - close issue240 - document precisely how pytest module importing
     works, discuss the two common test directory layouts, and how it
     interacts with PEP420-namespace packages.

   - fix issue246 fix finalizer order to be LIFO on independent fixtures
     depending on a parametrized higher-than-function scoped fixture.
     (was quite some effort so please bear with the complexity of this
     sentence :) Thanks Ralph Schmitt for the precise failure example.

   - fix issue244 by implementing special index for parameters to only
     use indices for paramentrized test ids

   - fix issue287 by running all finalizers but saving the exception
     from the first failing finalizer and re-raising it so teardown will
     still have failed.  We reraise the first failing exception because
     it might be the cause for other finalizers to fail.

   - fix ordering when mock.patch or other standard decorator-wrappings
     are used with test methods.  This fixes issue346 and should help
     with random “xdist” collection failures.  Thanks to Ronny
     Pfannschmidt and Donald Stufft for helping to isolate it.

   - fix issue357 - special case “-k” expressions to allow for filtering
     with simple strings that are not valid python expressions.
     Examples: “-k 1.3” matches all tests parametrized with 1.3.  “-k
     None” filters all tests that have “None” in their name and
     conversely “-k ‘not None’”.  Previously these examples would raise
     syntax errors.

   - fix issue384 by removing the trial support code since the unittest
     compat enhancements allow trial to handle it on its own

   - don’t hide an ImportError when importing a plugin produces one.
     fixes issue375.

   - fix issue275 - allow usefixtures and autouse fixtures for running
     doctest text files.

   - fix issue380 by making –resultlog only rely on longrepr instead of
     the “reprcrash” attribute which only exists sometimes.

   - address issue122: allow @pytest.fixture(params=iterator) by
     exploding into a list early on.

   - fix pexpect-3.0 compatibility for pytest’s own tests.  (fixes
     issue386)

   - allow nested parametrize-value markers, thanks James Lan for the
     PR.

   - fix unicode handling with new monkeypatch.setattr(import_path,
     value) API. Thanks Rob Dennis.  Fixes issue371.

   - fix unicode handling with junitxml, fixes issue368.

   - In assertion rewriting mode on Python 2, fix the detection of
     coding cookies.  See issue #330.

   - make “–runxfail” turn imperative pytest.xfail calls into no ops (it
     already did neutralize pytest.mark.xfail markers)

   - refine pytest / pkg_resources interactions: The
     AssertionRewritingHook PEP302 compliant loader now registers itself
     with setuptools/pkg_resources properly so that the
     pkg_resources.resource_stream method works properly.  Fixes
     issue366.  Thanks for the investigations and full PR to Jason R.
     Coombs.

   - pytestconfig fixture is now session-scoped as it is the same object
     during the whole test run.  Fixes issue370.

   - avoid one surprising case of marker malfunction/confusion:

          @pytest.mark.some(lambda arg: ...)
          def test_function():

     would not work correctly because pytest assumes @pytest.mark.some
     gets a function to be decorated already.  We now at least detect if
     this arg is a lambda and thus the example will work.  Thanks Alex
     Gaynor for bringing it up.

   - xfail a test on pypy that checks wrong encoding/ascii (pypy does
     not error out).  fixes issue385.

   - internally make varnames() deal with classes’s __init__, although
     it’s not needed by pytest itself atm.  Also fix caching.  Fixes
     issue376.

   - fix issue221 - handle importing of namespace-package with no
     __init__.py properly.

   - refactor internal FixtureRequest handling to avoid monkeypatching.
     One of the positive user-facing effects is that the “request”
     object can now be used in closures.

   - fixed version comparison in pytest.importskip(modname,
     minverstring)

   - fix issue377 by clarifying in the nose-compat docs that pytest does
     not duplicate the unittest-API into the “plain” namespace.

   - fix verbose reporting for @mock’d test functions


File: pytest.info,  Node: pytest-2 4 2 colorama on windows plugin/tmpdir fixes,  Next: pytest-2 4 1 fixing three regressions compared to 2 3 5,  Prev: pytest-2 5 0 now down to ZERO reported bugs!,  Up: Release announcements

46.132 pytest-2.4.2: colorama on windows, plugin/tmpdir fixes
=============================================================

pytest-2.4.2 is another bug-fixing release:

   - on Windows require colorama and a newer py lib so that
     py.io.TerminalWriter() now uses colorama instead of its own ctypes
     hacks.  (fixes issue365) thanks Paul Moore for bringing it up.

   - fix “-k” matching of tests where “repr” and “attr” and other names
     would cause wrong matches because of an internal implementation
     quirk (don’t ask) which is now properly implemented.  fixes
     issue345.

   - avoid tmpdir fixture to create too long filenames especially when
     parametrization is used (issue354)

   - fix pytest-pep8 and pytest-flakes / pytest interactions (collection
     names in mark plugin was assuming an item always has a function
     which is not true for those plugins etc.)  Thanks Andi Zeidler.

   - introduce node.get_marker/node.add_marker API for plugins like
     pytest-pep8 and pytest-flakes to avoid the messy details of the
     node.keywords pseudo-dicts.  Adapted docs.

   - remove attempt to “dup” stdout at startup as it’s icky.  the normal
     capturing should catch enough possibilities of tests messing up
     standard FDs.

   - add pluginmanager.do_configure(config) as a link to
     config.do_configure() for plugin-compatibility

as usual, docs at ‘http://pytest.org’ and upgrades via:

     pip install -U pytest

have fun, holger krekel


File: pytest.info,  Node: pytest-2 4 1 fixing three regressions compared to 2 3 5,  Next: pytest-2 4 0 new fixture features/hooks and bug fixes,  Prev: pytest-2 4 2 colorama on windows plugin/tmpdir fixes,  Up: Release announcements

46.133 pytest-2.4.1: fixing three regressions compared to 2.3.5
===============================================================

pytest-2.4.1 is a quick follow up release to fix three regressions
compared to 2.3.5 before they hit more people:

   - When using parser.addoption() unicode arguments to the “type”
     keyword should also be converted to the respective types.  thanks
     Floris Bruynooghe, @dnozay.  (fixes issue360 and issue362)

   - fix dotted filename completion when using argcomplete thanks Anthon
     van der Neuth.  (fixes issue361)

   - fix regression when a 1-tuple (“arg”,) is used for specifying
     parametrization (the values of the parametrization were passed
     nested in a tuple).  Thanks Donald Stufft.

   - also merge doc typo fixes, thanks Andy Dirnberger

as usual, docs at ‘http://pytest.org’ and upgrades via:

     pip install -U pytest

have fun, holger krekel


File: pytest.info,  Node: pytest-2 4 0 new fixture features/hooks and bug fixes,  Next: pytest-2 3 5 bug fixes and little improvements,  Prev: pytest-2 4 1 fixing three regressions compared to 2 3 5,  Up: Release announcements

46.134 pytest-2.4.0: new fixture features/hooks and bug fixes
=============================================================

The just released pytest-2.4.0 brings many improvements and numerous bug
fixes while remaining plugin- and test-suite compatible apart from a few
supposedly very minor incompatibilities.  See below for a full list of
details.  A few feature highlights:

   - new yield-style fixtures pytest.yield_fixture(1), allowing to use
     existing with-style context managers in fixture functions.

   - improved pdb support: ‘import pdb ; pdb.set_trace()’ now works
     without requiring prior disabling of stdout/stderr capturing.  Also
     the ‘--pdb’ options works now on collection and internal errors and
     we introduced a new experimental hook for IDEs/plugins to intercept
     debugging: ‘pytest_exception_interact(node, call, report)’.

   - shorter monkeypatch variant to allow specifying an import path as a
     target, for example: ‘monkeypatch.setattr("requests.get", myfunc)’

   - better unittest/nose compatibility: all teardown methods are now
     only called if the corresponding setup method succeeded.

   - integrate tab-completion on command line options if you have
     argcomplete(2) configured.

   - allow boolean expression directly with skipif/xfail if a “reason”
     is also specified.

   - a new hook ‘pytest_load_initial_conftests’ allows plugins like
     pytest-django(3) to influence the environment before conftest files
     import ‘django’.

   - reporting: color the last line red or green depending if
     failures/errors occurred or everything passed.

The documentation has been updated to accommodate the changes, see
‘http://pytest.org’

To install or upgrade pytest:

     pip install -U pytest # or
     easy_install -U pytest

‘Many thanks to all who helped, including Floris Bruynooghe, Brianna
Laugher, Andreas Pelme, Anthon van der Neut, Anatoly Bubenkoff, Vladimir
Keleshev, Mathieu Agopian, Ronny Pfannschmidt, Christian Theunert and
many others.’

may passing tests be with you,

holger krekel

* Menu:

* Changes between 2.3.5 and 2.4: Changes between 2 3 5 and 2 4.

   ---------- Footnotes ----------

   (1) http://pytest.org/en/stable/yieldfixture.html

   (2) https://pypi.org/project/argcomplete/

   (3) https://pypi.org/project/pytest-django/


File: pytest.info,  Node: Changes between 2 3 5 and 2 4,  Up: pytest-2 4 0 new fixture features/hooks and bug fixes

46.134.1 Changes between 2.3.5 and 2.4
--------------------------------------

known incompatibilities:

   - if calling –genscript from python2.7 or above, you only get a
     standalone script which works on python2.7 or above.  Use Python2.6
     to also get a python2.5 compatible version.

   - all xunit-style teardown methods (nose-style, pytest-style,
     unittest-style) will not be called if the corresponding setup
     method failed, see issue322 below.

   - the pytest_plugin_unregister hook wasn’t ever properly called and
     there is no known implementation of the hook - so it got removed.

   - pytest.fixture-decorated functions cannot be generators (i.e.  use
     yield) anymore.  This change might be reversed in 2.4.1 if it
     causes unforeseen real-life issues.  However, you can always write
     and return an inner function/generator and change the fixture
     consumer to iterate over the returned generator.  This change was
     done in lieu of the new ‘pytest.yield_fixture’ decorator, see
     below.

new features:

   - experimentally introduce a new ‘pytest.yield_fixture’ decorator
     which accepts exactly the same parameters as pytest.fixture but
     mandates a ‘yield’ statement instead of a ‘return statement’ from
     fixture functions.  This allows direct integration with
     “with-style” context managers in fixture functions and generally
     avoids registering of finalization callbacks in favour of treating
     the “after-yield” as teardown code.  Thanks Andreas Pelme, Vladimir
     Keleshev, Floris Bruynooghe, Ronny Pfannschmidt and many others for
     discussions.

   - allow boolean expression directly with skipif/xfail if a “reason”
     is also specified.  Rework skipping documentation to recommend
     “condition as booleans” because it prevents surprises when
     importing markers between modules.  Specifying conditions as
     strings will remain fully supported.

   - reporting: color the last line red or green depending if
     failures/errors occurred or everything passed.  thanks Christian
     Theunert.

   - make “import pdb ; pdb.set_trace()” work natively wrt capturing (no
     “-s” needed anymore), making ‘pytest.set_trace()’ a mere shortcut.

   - fix issue181: –pdb now also works on collect errors (and on
     internal errors) .  This was implemented by a slight internal
     refactoring and the introduction of a new hook
     ‘pytest_exception_interact’ hook (see next item).

   - fix issue341: introduce new experimental hook for IDEs/terminals to
     intercept debugging: ‘pytest_exception_interact(node, call,
     report)’.

   - new monkeypatch.setattr() variant to provide a shorter invocation
     for patching out classes/functions from modules:

          monkeypatch.setattr(“requests.get”, myfunc)

     will replace the “get” function of the “requests” module with
     ‘myfunc’.

   - fix issue322: tearDownClass is not run if setUpClass failed.
     Thanks Mathieu Agopian for the initial fix.  Also make all of
     pytest/nose finalizer mimic the same generic behaviour: if a setupX
     exists and fails, don’t run teardownX. This internally introduces a
     new method “node.addfinalizer()” helper which can only be called
     during the setup phase of a node.

   - simplify pytest.mark.parametrize() signature: allow to pass a
     CSV-separated string to specify argnames.  For example:
     ‘pytest.mark.parametrize("input,expected", [(1,2), (2,3)])’ works
     as well as the previous: ‘pytest.mark.parametrize(("input",
     "expected"), ...)’.

   - add support for setUpModule/tearDownModule detection, thanks Brian
     Okken.

   - integrate tab-completion on options through use of “argcomplete”.
     Thanks Anthon van der Neut for the PR.

   - change option names to be hyphen-separated long options but keep
     the old spelling backward compatible.  py.test -h will only show
     the hyphenated version, for example “–collect-only” but
     “–collectonly” will remain valid as well (for backward-compat
     reasons).  Many thanks to Anthon van der Neut for the
     implementation and to Hynek Schlawack for pushing us.

   - fix issue 308 - allow to mark/xfail/skip individual parameter sets
     when parametrizing.  Thanks Brianna Laugher.

   - call new experimental pytest_load_initial_conftests hook to allow
     3rd party plugins to do something before a conftest is loaded.

Bug fixes:

   - fix issue358 - capturing options are now parsed more properly by
     using a new parser.parse_known_args method.

   - pytest now uses argparse instead of optparse (thanks Anthon) which
     means that “argparse” is added as a dependency if installing into
     python2.6 environments or below.

   - fix issue333: fix a case of bad unittest/pytest hook interaction.

   - PR27: correctly handle nose.SkipTest during collection.  Thanks
     Antonio Cuni, Ronny Pfannschmidt.

   - fix issue355: junitxml puts name=”pytest” attribute to testsuite
     tag.

   - fix issue336: autouse fixture in plugins should work again.

   - fix issue279: improve object comparisons on assertion failure for
     standard datatypes and recognise collections.abc.  Thanks to
     Brianna Laugher and Mathieu Agopian.

   - fix issue317: assertion rewriter support for the is_package method

   - fix issue335: document py.code.ExceptionInfo() object returned from
     pytest.raises(), thanks Mathieu Agopian.

   - remove implicit distribute_setup support from setup.py.

   - fix issue305: ignore any problems when writing pyc files.

   - SO-17664702: call fixture finalizers even if the fixture function
     partially failed (finalizers would not always be called before)

   - fix issue320 - fix class scope for fixtures when mixed with
     module-level functions.  Thanks Anatloy Bubenkoff.

   - you can specify “-q” or “-qq” to get different levels of “quieter”
     reporting (thanks Katarzyna Jachim)

   - fix issue300 - Fix order of conftest loading when starting py.test
     in a subdirectory.

   - fix issue323 - sorting of many module-scoped arg parametrizations

   - make sessionfinish hooks execute with the same cwd-context as at
     session start (helps fix plugin behaviour which write output files
     with relative path such as pytest-cov)

   - fix issue316 - properly reference collection hooks in docs

   - fix issue 306 - cleanup of -k/-m options to only match markers/test
     names/keywords respectively.  Thanks Wouter van Ackooy.

   - improved doctest counting for doctests in python modules – files
     without any doctest items will not show up anymore and doctest
     examples are counted as separate test items.  thanks Danilo
     Bellini.

   - fix issue245 by depending on the released py-1.4.14 which fixes
     py.io.dupfile to work with files with no mode.  Thanks Jason R.
     Coombs.

   - fix junitxml generation when test output contains control
     characters, addressing issue267, thanks Jaap Broekhuizen

   - fix issue338: honor –tb style for setup/teardown errors as well.
     Thanks Maho.

   - fix issue307 - use yaml.safe_load in example, thanks Mark Eichin.

   - better parametrize error messages, thanks Brianna Laugher

   - pytest_terminal_summary(terminalreporter) hooks can now use
     “.section(title)” and “.line(msg)” methods to print extra
     information at the end of a test run.


File: pytest.info,  Node: pytest-2 3 5 bug fixes and little improvements,  Next: pytest-2 3 4 stabilization more flexible selection via “-k expr”,  Prev: pytest-2 4 0 new fixture features/hooks and bug fixes,  Up: Release announcements

46.135 pytest-2.3.5: bug fixes and little improvements
======================================================

pytest-2.3.5 is a maintenance release with many bug fixes and little
improvements.  See the changelog below for details.  No backward
compatibility issues are foreseen and all plugins which worked with the
prior version are expected to work unmodified.  Speaking of which, a few
interesting new plugins saw the light last month:

   - pytest-instafail: show failure information while tests are running

   - pytest-qt: testing of GUI applications written with QT/Pyside

   - pytest-xprocess: managing external processes across test runs

   - pytest-random: randomize test ordering

And several others like pytest-django saw maintenance releases.  For a
more complete list, check out ‘https://pypi.org/search/?q=pytest’

For general information see:

     ‘http://pytest.org/’

To install or upgrade pytest:

     pip install -U pytest # or easy_install -U pytest

Particular thanks to Floris, Ronny, Benjamin and the many bug reporters
and fix providers.

may the fixtures be with you, holger krekel

* Menu:

* Changes between 2.3.4 and 2.3.5: Changes between 2 3 4 and 2 3 5.


File: pytest.info,  Node: Changes between 2 3 4 and 2 3 5,  Up: pytest-2 3 5 bug fixes and little improvements

46.135.1 Changes between 2.3.4 and 2.3.5
----------------------------------------

   - never consider a fixture function for test function collection

   - allow re-running of test items / helps to fix pytest-reruntests
     plugin and also help to keep less fixture/resource references alive

   - put captured stdout/stderr into junitxml output even for passing
     tests (thanks Adam Goucher)

   - Issue 265 - integrate nose setup/teardown with setupstate so it
     doesn’t try to teardown if it did not setup

   - issue 271 - don’t write junitxml on worker nodes

   - Issue 274 - don’t try to show full doctest example when doctest
     does not know the example location

   - issue 280 - disable assertion rewriting on buggy CPython 2.6.0

   - inject “getfixture()” helper to retrieve fixtures from doctests,
     thanks Andreas Zeidler

   - issue 259 - when assertion rewriting, be consistent with the
     default source encoding of ASCII on Python 2

   - issue 251 - report a skip instead of ignoring classes with init

   - issue250 unicode/str mixes in parametrization names and values now
     works

   - issue257, assertion-triggered compilation of source ending in a
     comment line doesn’t blow up in python2.5 (fixed through
     py>=1.4.13.dev6)

   - fix –genscript option to generate standalone scripts that also work
     with python3.3 (importer ordering)

   - issue171 - in assertion rewriting, show the repr of some global
     variables

   - fix option help for “-k”

   - move long description of distribution into README.rst

   - improve docstring for metafunc.parametrize()

   - fix bug where using capsys with pytest.set_trace() in a test
     function would break when looking at capsys.readouterr()

   - allow to specify prefixes starting with “_” when customizing
     python_functions test discovery.  (thanks Graham Horler)

   - improve PYTEST_DEBUG tracing output by putting extra data on a new
     lines with additional indent

   - ensure OutcomeExceptions like skip/fail have initialized exception
     attributes

   - issue 260 - don’t use nose special setup on plain unittest cases

   - fix issue134 - print the collect errors that prevent running
     specified test items

   - fix issue266 - accept unicode in MarkEvaluator expressions


File: pytest.info,  Node: pytest-2 3 4 stabilization more flexible selection via “-k expr”,  Next: pytest-2 3 3 integration fixes py24 support */** shown in traceback,  Prev: pytest-2 3 5 bug fixes and little improvements,  Up: Release announcements

46.136 pytest-2.3.4: stabilization, more flexible selection via “-k expr”
=========================================================================

pytest-2.3.4 is a small stabilization release of the py.test tool which
offers uebersimple assertions, scalable fixture mechanisms and deep
customization for testing with Python.  This release comes with the
following fixes and features:

   - make “-k” option accept an expressions the same as with “-m” so
     that one can write: -k “name1 or name2” etc.  This is a slight
     usage incompatibility if you used special syntax like
     “TestClass.test_method” which you now need to write as -k
     “TestClass and test_method” to match a certain method in a certain
     test class.

   - allow to dynamically define markers via item.keywords[…]=assignment
     integrating with “-m” option

   - yielded test functions will now have autouse-fixtures active but
     cannot accept fixtures as funcargs - it’s anyway recommended to
     rather use the post-2.0 parametrize features instead of yield, see:
     ‘http://pytest.org/en/stable/example/how-to/parametrize.html’

   - fix autouse-issue where autouse-fixtures would not be discovered if
     defined in an a/conftest.py file and tests in a/tests/test_some.py

   - fix issue226 - LIFO ordering for fixture teardowns

   - fix issue224 - invocations with >256 char arguments now work

   - fix issue91 - add/discuss package/directory level setups in example

   - fixes related to autouse discovery and calling

Thanks in particular to Thomas Waldmann for spotting and reporting
issues.

See

     ‘http://pytest.org/’

for general information.  To install or upgrade pytest:

     pip install -U pytest # or easy_install -U pytest

best, holger krekel


File: pytest.info,  Node: pytest-2 3 3 integration fixes py24 support */** shown in traceback,  Next: pytest-2 3 2 some fixes and more traceback-printing speed,  Prev: pytest-2 3 4 stabilization more flexible selection via “-k expr”,  Up: Release announcements

46.137 pytest-2.3.3: integration fixes, py24 support, ‘*/**’ shown in traceback
===============================================================================

pytest-2.3.3 is another stabilization release of the py.test tool which
offers uebersimple assertions, scalable fixture mechanisms and deep
customization for testing with Python.  Particularly, this release
provides:

   - integration fixes and improvements related to flask, numpy, nose,
     unittest, mock

   - makes pytest work on py24 again (yes, people sometimes still need
     to use it)

   - show ‘*,**’ args in pytest tracebacks

Thanks to Manuel Jacob, Thomas Waldmann, Ronny Pfannschmidt, Pavel Repin
and Andreas Taumoefolau for providing patches and all for the issues.

See

     ‘http://pytest.org/’

for general information.  To install or upgrade pytest:

     pip install -U pytest # or easy_install -U pytest

best, holger krekel

* Menu:

* Changes between 2.3.2 and 2.3.3: Changes between 2 3 2 and 2 3 3.


File: pytest.info,  Node: Changes between 2 3 2 and 2 3 3,  Up: pytest-2 3 3 integration fixes py24 support */** shown in traceback

46.137.1 Changes between 2.3.2 and 2.3.3
----------------------------------------

   - fix issue214 - parse modules that contain special objects like e.
     g.  flask’s request object which blows up on getattr access if no
     request is active.  thanks Thomas Waldmann.

   - fix issue213 - allow to parametrize with values like numpy arrays
     that do not support an __eq__ operator

   - fix issue215 - split test_python.org into multiple files

   - fix issue148 - @unittest.skip on classes is now recognized and
     avoids calling setUpClass/tearDownClass, thanks Pavel Repin

   - fix issue209 - reintroduce python2.4 support by depending on newer
     pylib which re-introduced statement-finding for pre-AST
     interpreters

   - nose support: only call setup if it’s a callable, thanks Andrew
     Taumoefolau

   - fix issue219 - add py2.4-3.3 classifiers to TROVE list

   - in tracebacks ‘,*’ arg values are now shown next to normal
     arguments (thanks Manuel Jacob)

   - fix issue217 - support mock.patch with pytest’s fixtures - note
     that you need either mock-1.0.1 or the python3.3 builtin
     unittest.mock.

   - fix issue127 - improve documentation for pytest_addoption() and add
     a ‘config.getoption(name)’ helper function for consistency.


File: pytest.info,  Node: pytest-2 3 2 some fixes and more traceback-printing speed,  Next: pytest-2 3 1 fix regression with factory functions,  Prev: pytest-2 3 3 integration fixes py24 support */** shown in traceback,  Up: Release announcements

46.138 pytest-2.3.2: some fixes and more traceback-printing speed
=================================================================

pytest-2.3.2 is another stabilization release:

   - issue 205: fixes a regression with conftest detection

   - issue 208/29: fixes traceback-printing speed in some bad cases

   - fix teardown-ordering for parametrized setups

   - fix unittest and trial compat behaviour with respect to runTest()
     methods

   - issue 206 and others: some improvements to packaging

   - fix issue127 and others: improve some docs

See

     ‘http://pytest.org/’

for general information.  To install or upgrade pytest:

     pip install -U pytest # or easy_install -U pytest

best, holger krekel

* Menu:

* Changes between 2.3.1 and 2.3.2: Changes between 2 3 1 and 2 3 2.


File: pytest.info,  Node: Changes between 2 3 1 and 2 3 2,  Up: pytest-2 3 2 some fixes and more traceback-printing speed

46.138.1 Changes between 2.3.1 and 2.3.2
----------------------------------------

   - fix issue208 and fix issue29 use new py version to avoid long
     pauses when printing tracebacks in long modules

   - fix issue205 - conftests in subdirs customizing
     pytest_pycollect_makemodule and pytest_pycollect_makeitem now work
     properly

   - fix teardown-ordering for parametrized setups

   - fix issue127 - better documentation for pytest_addoption and
     related objects.

   - fix unittest behaviour: TestCase.runtest only called if there are
     test methods defined

   - improve trial support: don’t collect its empty
     unittest.TestCase.runTest() method

   - “python setup.py test” now works with pytest itself

   - fix/improve internal/packaging related bits:

        - exception message check of test_nose.py now passes on python33
          as well

        - issue206 - fix test_assertrewrite.py to work when a global
          PYTHONDONTWRITEBYTECODE=1 is present

        - add tox.ini to pytest distribution so that ignore-dirs and
          others config bits are properly distributed for maintainers
          who run pytest-own tests


File: pytest.info,  Node: pytest-2 3 1 fix regression with factory functions,  Next: pytest-2 3 improved fixtures / better unittest integration,  Prev: pytest-2 3 2 some fixes and more traceback-printing speed,  Up: Release announcements

46.139 pytest-2.3.1: fix regression with factory functions
==========================================================

pytest-2.3.1 is a quick follow-up release:

   - fix issue202 - regression with fixture functions/funcarg factories:
     using “self” is now safe again and works as in 2.2.4.  Thanks to
     Eduard Schettino for the quick bug report.

   - disable pexpect pytest self tests on Freebsd - thanks Koob for the
     quick reporting

   - fix/improve interactive docs with –markers

See

     ‘http://pytest.org/’

for general information.  To install or upgrade pytest:

     pip install -U pytest # or easy_install -U pytest

best, holger krekel

* Menu:

* Changes between 2.3.0 and 2.3.1: Changes between 2 3 0 and 2 3 1.


File: pytest.info,  Node: Changes between 2 3 0 and 2 3 1,  Up: pytest-2 3 1 fix regression with factory functions

46.139.1 Changes between 2.3.0 and 2.3.1
----------------------------------------

   - fix issue202 - fix regression: using “self” from fixture functions
     now works as expected (it’s the same “self” instance that a test
     method which uses the fixture sees)

   - skip pexpect using tests (test_pdb.py mostly) on freebsd* systems
     due to pexpect not supporting it properly (hanging)

   - link to web pages from –markers output which provides help for
     pytest.mark.* usage.


File: pytest.info,  Node: pytest-2 3 improved fixtures / better unittest integration,  Next: pytest-2 2 4 bug fixes better junitxml/unittest/python3 compat,  Prev: pytest-2 3 1 fix regression with factory functions,  Up: Release announcements

46.140 pytest-2.3: improved fixtures / better unittest integration
==================================================================

pytest-2.3 comes with many major improvements for fixture/funcarg
management and parametrized testing in Python.  It is now easier, more
efficient and more predictable to re-run the same tests with different
fixture instances.  Also, you can directly declare the caching “scope”
of fixtures so that dependent tests throughout your whole test suite can
re-use database or other expensive fixture objects with ease.  Lastly,
it’s possible for fixture functions (formerly known as funcarg
factories) to use other fixtures, allowing for a completely modular and
re-usable fixture design.

For detailed info and tutorial-style examples, see:

     ‘http://pytest.org/en/stable/explanation/fixtures.html’

Moreover, there is now support for using pytest fixtures/funcargs with
unittest-style suites, see here for examples:

     ‘http://pytest.org/en/stable/how-to/unittest.html’

Besides, more unittest-test suites are now expected to “simply work”
with pytest.

All changes are backward compatible and you should be able to continue
to run your test suites and 3rd party plugins that worked with
pytest-2.2.4.

If you are interested in the precise reasoning (including examples) of
the pytest-2.3 fixture evolution, please consult
‘http://pytest.org/en/stable/funcarg_compare.html’

For general info on installation and getting started:

     ‘http://pytest.org/en/stable/getting-started.html’

Docs and PDF access as usual at:

     ‘http://pytest.org’

and more details for those already in the knowing of pytest can be found
in the CHANGELOG below.

Particular thanks for this release go to Floris Bruynooghe, Alex
Okrushko Carl Meyer, Ronny Pfannschmidt, Benjamin Peterson and Alex
Gaynor for helping to get the new features right and well integrated.
Ronny and Floris also helped to fix a number of bugs and yet more people
helped by providing bug reports.

have fun, holger krekel

* Menu:

* Changes between 2.2.4 and 2.3.0: Changes between 2 2 4 and 2 3 0.


File: pytest.info,  Node: Changes between 2 2 4 and 2 3 0,  Up: pytest-2 3 improved fixtures / better unittest integration

46.140.1 Changes between 2.2.4 and 2.3.0
----------------------------------------

   - fix issue202 - better automatic names for parametrized test
     functions

   - fix issue139 - introduce @pytest.fixture which allows direct
     scoping and parametrization of funcarg factories.  Introduce new
     @pytest.setup marker to allow the writing of setup functions which
     accept funcargs.

   - fix issue198 - conftest fixtures were not found on windows32 in
     some circumstances with nested directory structures due to path
     manipulation issues

   - fix issue193 skip test functions with were parametrized with empty
     parameter sets

   - fix python3.3 compat, mostly reporting bits that previously
     depended on dict ordering

   - introduce re-ordering of tests by resource and parametrization
     setup which takes precedence to the usual file-ordering

   - fix issue185 monkeypatching time.time does not cause pytest to fail

   - fix issue172 duplicate call of pytest.setup-decoratored
     setup_module functions

   - fix junitxml=path construction so that if tests change the current
     working directory and the path is a relative path it is constructed
     correctly from the original current working dir.

   - fix “python setup.py test” example to cause a proper “errno” return

   - fix issue165 - fix broken doc links and mention stackoverflow for
     FAQ

   - catch unicode-issues when writing failure representations to
     terminal to prevent the whole session from crashing

   - fix xfail/skip confusion: a skip-mark or an imperative pytest.skip
     will now take precedence before xfail-markers because we can’t
     determine xfail/xpass status in case of a skip.  see also:
     ‘http://stackoverflow.com/questions/11105828/in-py-test-when-i-explicitly-skip-a-test-that-is-marked-as-xfail-how-can-i-get’

   - always report installed 3rd party plugins in the header of a test
     run

   - fix issue160: a failing setup of an xfail-marked tests should be
     reported as xfail (not xpass)

   - fix issue128: show captured output when capsys/capfd are used

   - fix issue179: properly show the dependency chain of factories

   - pluginmanager.register(…) now raises ValueError if the plugin has
     been already registered or the name is taken

   - fix issue159: improve ‘https://docs.pytest.org/en/6.0.1/faq.html’
     especially with respect to the “magic” history, also mention
     pytest-django, trial and unittest integration.

   - make request.keywords and node.keywords writable.  All descendant
     collection nodes will see keyword values.  Keywords are
     dictionaries containing markers and other info.

   - fix issue 178: xml binary escapes are now wrapped in py.xml.raw

   - fix issue 176: correctly catch the builtin AssertionError even when
     we replaced AssertionError with a subclass on the python level

   - factory discovery no longer fails with magic global callables that
     provide no sane __code__ object (mock.call for example)

   - fix issue 182: testdir.inprocess_run now considers passed plugins

   - 
     fix issue 188: ensure sys.exc_info is clear on python2

          before calling into a test

   - fix issue 191: add unittest TestCase runTest method support

   - fix issue 156: monkeypatch correctly handles class level
     descriptors

   - reporting refinements:

        - pytest_report_header now receives a “startdir” so that you can
          use startdir.bestrelpath(yourpath) to show nice relative path

        - allow plugins to implement both pytest_report_header and
          pytest_sessionstart (sessionstart is invoked first).

        - don’t show deselected reason line if there is none

        - py.test -vv will show all of assert comparisons instead of
          truncating


File: pytest.info,  Node: pytest-2 2 4 bug fixes better junitxml/unittest/python3 compat,  Next: pytest-2 2 2 bug fixes,  Prev: pytest-2 3 improved fixtures / better unittest integration,  Up: Release announcements

46.141 pytest-2.2.4: bug fixes, better junitxml/unittest/python3 compat
=======================================================================

pytest-2.2.4 is a minor backward-compatible release of the versatile
py.test testing tool.  It contains bug fixes and a few refinements to
junitxml reporting, better unittest- and python3 compatibility.

For general information see here:

     ‘http://pytest.org/’

To install or upgrade pytest:

     pip install -U pytest # or easy_install -U pytest

Special thanks for helping on this release to Ronny Pfannschmidt and
Benjamin Peterson and the contributors of issues.

best, holger krekel

* Menu:

* Changes between 2.2.3 and 2.2.4: Changes between 2 2 3 and 2 2 4.


File: pytest.info,  Node: Changes between 2 2 3 and 2 2 4,  Up: pytest-2 2 4 bug fixes better junitxml/unittest/python3 compat

46.141.1 Changes between 2.2.3 and 2.2.4
----------------------------------------

   - fix error message for rewritten assertions involving the % operator

   - fix issue 126: correctly match all invalid xml characters for
     junitxml binary escape

   - fix issue with unittest: now @unittest.expectedFailure markers
     should be processed correctly (you can also use @pytest.mark
     markers)

   - document integration with the extended distribute/setuptools test
     commands

   - fix issue 140: properly get the real functions of bound
     classmethods for setup/teardown_class

   - fix issue #141: switch from the deceased paste.pocoo.org to
     bpaste.net

   - fix issue #143: call unconfigure/sessionfinish always when
     configure/sessionstart where called

   - fix issue #144: better mangle test ids to junitxml classnames

   - upgrade distribute_setup.py to 0.6.27


File: pytest.info,  Node: pytest-2 2 2 bug fixes,  Next: pytest-2 2 1 bug fixes perfect teardowns,  Prev: pytest-2 2 4 bug fixes better junitxml/unittest/python3 compat,  Up: Release announcements

46.142 pytest-2.2.2: bug fixes
==============================

pytest-2.2.2 (updated to 2.2.3 to fix packaging issues) is a minor
backward-compatible release of the versatile py.test testing tool.  It
contains bug fixes and a few refinements particularly to reporting with
“–collectonly”, see below for betails.

For general information see here:

     ‘http://pytest.org/’

To install or upgrade pytest:

     pip install -U pytest # or easy_install -U pytest

Special thanks for helping on this release to Ronny Pfannschmidt and
Ralf Schmitt and the contributors of issues.

best, holger krekel

* Menu:

* Changes between 2.2.1 and 2.2.2: Changes between 2 2 1 and 2 2 2.


File: pytest.info,  Node: Changes between 2 2 1 and 2 2 2,  Up: pytest-2 2 2 bug fixes

46.142.1 Changes between 2.2.1 and 2.2.2
----------------------------------------

   - fix issue101: wrong args to unittest.TestCase test function now
     produce better output

   - fix issue102: report more useful errors and hints for when a test
     directory was renamed and some pyc/__pycache__ remain

   - fix issue106: allow parametrize to be applied multiple times e.g.
     from module, class and at function level.

   - fix issue107: actually perform session scope finalization

   - don’t check in parametrize if indirect parameters are funcarg names

   - add chdir method to monkeypatch funcarg

   - fix crash resulting from calling monkeypatch undo a second time

   - fix issue115: make –collectonly robust against early failure
     (missing files/directories)

   - “-qq –collectonly” now shows only files and the number of tests in
     them

   - “-q –collectonly” now shows test ids

   - allow adding of attributes to test reports such that it also works
     with distributed testing (no upgrade of pytest-xdist needed)


File: pytest.info,  Node: pytest-2 2 1 bug fixes perfect teardowns,  Next: py test 2 2 0 test marking++ parametrization++ and duration profiling,  Prev: pytest-2 2 2 bug fixes,  Up: Release announcements

46.143 pytest-2.2.1: bug fixes, perfect teardowns
=================================================

pytest-2.2.1 is a minor backward-compatible release of the py.test
testing tool.  It contains bug fixes and little improvements, including
documentation fixes.  If you are using the distributed testing
pluginmake sure to upgrade it to pytest-xdist-1.8.

For general information see here:

     ‘http://pytest.org/’

To install or upgrade pytest:

     pip install -U pytest # or easy_install -U pytest

Special thanks for helping on this release to Ronny Pfannschmidt, Jurko
Gospodnetic and Ralf Schmitt.

best, holger krekel

* Menu:

* Changes between 2.2.0 and 2.2.1: Changes between 2 2 0 and 2 2 1.


File: pytest.info,  Node: Changes between 2 2 0 and 2 2 1,  Up: pytest-2 2 1 bug fixes perfect teardowns

46.143.1 Changes between 2.2.0 and 2.2.1
----------------------------------------

   - fix issue99 (in pytest and py) internallerrors with resultlog now
     produce better output - fixed by normalizing pytest_internalerror
     input arguments.

   - fix issue97 / traceback issues (in pytest and py) improve traceback
     output in conjunction with jinja2 and cython which hack tracebacks

   - fix issue93 (in pytest and pytest-xdist) avoid “delayed teardowns”:
     the final test in a test node will now run its teardown directly
     instead of waiting for the end of the session.  Thanks Dave Hunt
     for the good reporting and feedback.  The pytest_runtest_protocol
     as well as the pytest_runtest_teardown hooks now have “nextitem”
     available which will be None indicating the end of the test run.

   - fix collection crash due to unknown-source collected items, thanks
     to Ralf Schmitt (fixed by depending on a more recent pylib)


File: pytest.info,  Node: py test 2 2 0 test marking++ parametrization++ and duration profiling,  Next: py test 2 1 3 just some more fixes,  Prev: pytest-2 2 1 bug fixes perfect teardowns,  Up: Release announcements

46.144 py.test 2.2.0: test marking++, parametrization++ and duration profiling
==============================================================================

pytest-2.2.0 is a test-suite compatible release of the popular py.test
testing tool.  Plugins might need upgrades.  It comes with these
improvements:

   * easier and more powerful parametrization of tests:

        - new @pytest.mark.parametrize decorator to run tests with
          different arguments

        - new metafunc.parametrize() API for parametrizing arguments
          independently

        - see examples at
          ‘http://pytest.org/en/stable/example/how-to/parametrize.html’

        - NOTE that parametrize() related APIs are still a bit
          experimental and might change in future releases.

   * improved handling of test markers and refined marking mechanism:

        - “-m markexpr” option for selecting tests according to their
          mark

        - a new “markers” ini-variable for registering test markers for
          your project

        - the new “–strict” bails out with an error if using
          unregistered markers.

        - see examples at
          ‘http://pytest.org/en/stable/example/markers.html’

   * duration profiling: new “–duration=N” option showing the N slowest
     test execution or setup/teardown calls.  This is most useful if you
     want to find out where your slowest test code is.

   * also 2.2.0 performs more eager calling of teardown/finalizers
     functions resulting in better and more accurate reporting when they
     fail

Besides there is the usual set of bug fixes along with a cleanup of
pytest’s own test suite allowing it to run on a wider range of
environments.

For general information, see extensive docs with examples here:

     ‘http://pytest.org/’

If you want to install or upgrade pytest you might just type:

     pip install -U pytest # or
     easy_install -U pytest

Thanks to Ronny Pfannschmidt, David Burns, Jeff Donner, Daniel Nouri,
Alfredo Deza and all who gave feedback or sent bug reports.

best, holger krekel

* Menu:

* notes on incompatibility::
* Changes between 2.1.3 and 2.2.0: Changes between 2 1 3 and 2 2 0.


File: pytest.info,  Node: notes on incompatibility,  Next: Changes between 2 1 3 and 2 2 0,  Up: py test 2 2 0 test marking++ parametrization++ and duration profiling

46.144.1 notes on incompatibility
---------------------------------

While test suites should work unchanged you might need to upgrade
plugins:

   * You need a new version of the pytest-xdist plugin (1.7) for
     distributing test runs.

   * Other plugins might need an upgrade if they implement the
     ‘pytest_runtest_logreport’ hook which now is called unconditionally
     for the setup/teardown fixture phases of a test.  You may choose to
     ignore setup/teardown failures by inserting “if rep.when != ‘call’:
     return” or something similar.  Note that most code probably “just”
     works because the hook was already called for failing
     setup/teardown phases of a test so a plugin should have been ready
     to grok such reports already.


File: pytest.info,  Node: Changes between 2 1 3 and 2 2 0,  Prev: notes on incompatibility,  Up: py test 2 2 0 test marking++ parametrization++ and duration profiling

46.144.2 Changes between 2.1.3 and 2.2.0
----------------------------------------

   - fix issue90: introduce eager tearing down of test items so that
     teardown function are called earlier.

   - add an all-powerful metafunc.parametrize function which allows to
     parametrize test function arguments in multiple steps and therefore
     from independent plugins and places.

   - add a @pytest.mark.parametrize helper which allows to easily call a
     test function with different argument values.

   - Add examples to the “parametrize” example page, including a quick
     port of Test scenarios and the new parametrize function and
     decorator.

   - introduce registration for “pytest.mark.*” helpers via ini-files or
     through plugin hooks.  Also introduce a “–strict” option which will
     treat unregistered markers as errors allowing to avoid typos and
     maintain a well described set of markers for your test suite.  See
     examples at ‘http://pytest.org/en/stable/how-to/mark.html’ and its
     links.

   - issue50: introduce “-m marker” option to select tests based on
     markers (this is a stricter and more predictable version of “-k” in
     that “-m” only matches complete markers and has more obvious rules
     for and/or semantics.

   - new feature to help optimizing the speed of your tests:
     –durations=N option for displaying N slowest test calls and
     setup/teardown methods.

   - fix issue87: –pastebin now works with python3

   - fix issue89: –pdb with unexpected exceptions in doctest work more
     sensibly

   - fix and cleanup pytest’s own test suite to not leak FDs

   - fix issue83: link to generated funcarg list

   - fix issue74: pyarg module names are now checked against
     imp.find_module false positives

   - fix compatibility with twisted/trial-11.1.0 use cases


File: pytest.info,  Node: py test 2 1 3 just some more fixes,  Next: py test 2 1 2 bug fixes and fixes for jython,  Prev: py test 2 2 0 test marking++ parametrization++ and duration profiling,  Up: Release announcements

46.145 py.test 2.1.3: just some more fixes
==========================================

pytest-2.1.3 is a minor backward compatible maintenance release of the
popular py.test testing tool.  It is commonly used for unit, functional-
and integration testing.  See extensive docs with examples here:

     ‘http://pytest.org/’

The release contains another fix to the perfected assertions introduced
with the 2.1 series as well as the new possibility to customize
reporting for assertion expressions on a per-directory level.

If you want to install or upgrade pytest, just type one of:

     pip install -U pytest # or
     easy_install -U pytest

Thanks to the bug reporters and to Ronny Pfannschmidt, Benjamin Peterson
and Floris Bruynooghe who implemented the fixes.

best, holger krekel

* Menu:

* Changes between 2.1.2 and 2.1.3: Changes between 2 1 2 and 2 1 3.


File: pytest.info,  Node: Changes between 2 1 2 and 2 1 3,  Up: py test 2 1 3 just some more fixes

46.145.1 Changes between 2.1.2 and 2.1.3
----------------------------------------

   - fix issue79: assertion rewriting failed on some comparisons in
     boolops,

   - correctly handle zero length arguments (a la pytest ‘’)

   - fix issue67 / junitxml now contains correct test durations

   - fix issue75 / skipping test failure on jython

   - fix issue77 / Allow assertrepr_compare hook to apply to a subset of
     tests


File: pytest.info,  Node: py test 2 1 2 bug fixes and fixes for jython,  Next: py test 2 1 1 assertion fixes and improved junitxml output,  Prev: py test 2 1 3 just some more fixes,  Up: Release announcements

46.146 py.test 2.1.2: bug fixes and fixes for jython
====================================================

pytest-2.1.2 is a minor backward compatible maintenance release of the
popular py.test testing tool.  pytest is commonly used for unit,
functional- and integration testing.  See extensive docs with examples
here:

     ‘http://pytest.org/’

Most bug fixes address remaining issues with the perfected assertions
introduced in the 2.1 series - many thanks to the bug reporters and to
Benjamin Peterson for helping to fix them.  pytest should also work
better with Jython-2.5.1 (and Jython trunk).

If you want to install or upgrade pytest, just type one of:

     pip install -U pytest # or
     easy_install -U pytest

best, holger krekel / ‘https://merlinux.eu/’

* Menu:

* Changes between 2.1.1 and 2.1.2: Changes between 2 1 1 and 2 1 2.


File: pytest.info,  Node: Changes between 2 1 1 and 2 1 2,  Up: py test 2 1 2 bug fixes and fixes for jython

46.146.1 Changes between 2.1.1 and 2.1.2
----------------------------------------

   - fix assertion rewriting on files with windows newlines on some
     Python versions

   - refine test discovery by package/module name (–pyargs), thanks
     Florian Mayer

   - fix issue69 / assertion rewriting fixed on some boolean operations

   - fix issue68 / packages now work with assertion rewriting

   - fix issue66: use different assertion rewriting caches when the -O
     option is passed

   - don’t try assertion rewriting on Jython, use reinterp


File: pytest.info,  Node: py test 2 1 1 assertion fixes and improved junitxml output,  Next: py test 2 1 0 perfected assertions and bug fixes,  Prev: py test 2 1 2 bug fixes and fixes for jython,  Up: Release announcements

46.147 py.test 2.1.1: assertion fixes and improved junitxml output
==================================================================

pytest-2.1.1 is a backward compatible maintenance release of the popular
py.test testing tool.  See extensive docs with examples here:

     ‘http://pytest.org/’

Most bug fixes address remaining issues with the perfected assertions
introduced with 2.1.0 - many thanks to the bug reporters and to Benjamin
Peterson for helping to fix them.  Also, junitxml output now produces
system-out/err tags which lead to better displays of tracebacks with
Jenkins.

Also a quick note to package maintainers and others interested: there
now is a “pytest” man page which can be generated with “make man” in
doc/.

If you want to install or upgrade pytest, just type one of:

     pip install -U pytest # or
     easy_install -U pytest

best, holger krekel / ‘https://merlinux.eu/’

* Menu:

* Changes between 2.1.0 and 2.1.1: Changes between 2 1 0 and 2 1 1.


File: pytest.info,  Node: Changes between 2 1 0 and 2 1 1,  Up: py test 2 1 1 assertion fixes and improved junitxml output

46.147.1 Changes between 2.1.0 and 2.1.1
----------------------------------------

   - fix issue64 / pytest.set_trace now works within
     pytest_generate_tests hooks

   - fix issue60 / fix error conditions involving the creation of
     __pycache__

   - fix issue63 / assertion rewriting on inserts involving strings
     containing ‘%’

   - fix assertion rewriting on calls with a ** arg

   - don’t cache rewritten modules if bytecode generation is disabled

   - fix assertion rewriting in read-only directories

   - fix issue59: provide system-out/err tags for junitxml output

   - fix issue61: assertion rewriting on boolean operations with 3 or
     more operands

   - you can now build a man page with “cd doc ; make man”


File: pytest.info,  Node: py test 2 1 0 perfected assertions and bug fixes,  Next: py test 2 0 3 bug fixes and speed ups,  Prev: py test 2 1 1 assertion fixes and improved junitxml output,  Up: Release announcements

46.148 py.test 2.1.0: perfected assertions and bug fixes
========================================================

Welcome to the release of pytest-2.1, a mature testing tool for Python,
supporting CPython 2.4-3.2, Jython and latest PyPy interpreters.  See
the improved extensive docs (now also as PDF!) with tested examples
here:

     ‘http://pytest.org/’

The single biggest news about this release are ‘perfected assertions’
courtesy of Benjamin Peterson.  You can now safely use ‘assert’
statements in test modules without having to worry about side effects or
python optimization (“-OO”) options.  This is achieved by rewriting
assert statements in test modules upon import, using a PEP302 hook.  See
‘https://docs.pytest.org/en/stable/how-to/assert.html’ for detailed
information.  The work has been partly sponsored by my company, merlinux
GmbH.

For further details on bug fixes and smaller enhancements see below.

If you want to install or upgrade pytest, just type one of:

     pip install -U pytest # or
     easy_install -U pytest

best, holger krekel / ‘https://merlinux.eu/’

* Menu:

* Changes between 2.0.3 and 2.1.0: Changes between 2 0 3 and 2 1 0.


File: pytest.info,  Node: Changes between 2 0 3 and 2 1 0,  Up: py test 2 1 0 perfected assertions and bug fixes

46.148.1 Changes between 2.0.3 and 2.1.0
----------------------------------------

   - fix issue53 call nosestyle setup functions with correct ordering

   - fix issue58 and issue59: new assertion code fixes

   - merge Benjamin’s assertionrewrite branch: now assertions for test
     modules on python 2.6 and above are done by rewriting the AST and
     saving the pyc file before the test module is imported.  see
     doc/assert.txt for more info.

   - fix issue43: improve doctests with better traceback reporting on
     unexpected exceptions

   - fix issue47: timing output in junitxml for test cases is now
     correct

   - fix issue48: typo in MarkInfo repr leading to exception

   - fix issue49: avoid confusing error when initialization partially
     fails

   - fix issue44: env/username expansion for junitxml file path

   - show releaselevel information in test runs for pypy

   - reworked doc pages for better navigation and PDF generation

   - report KeyboardInterrupt even if interrupted during session startup

   - fix issue 35 - provide PDF doc version and download link from index
     page


File: pytest.info,  Node: py test 2 0 3 bug fixes and speed ups,  Next: py test 2 0 2 bug fixes improved xfail/skip expressions speed ups,  Prev: py test 2 1 0 perfected assertions and bug fixes,  Up: Release announcements

46.149 py.test 2.0.3: bug fixes and speed ups
=============================================

Welcome to pytest-2.0.3, a maintenance and bug fix release of pytest, a
mature testing tool for Python, supporting CPython 2.4-3.2, Jython and
latest PyPy interpreters.  See the extensive docs with tested examples
here:

     ‘http://pytest.org/’

If you want to install or upgrade pytest, just type one of:

     pip install -U pytest # or
     easy_install -U pytest

There also is a bugfix release 1.6 of pytest-xdist, the plugin that
enables seamless distributed and “looponfail” testing for Python.

best, holger krekel

* Menu:

* Changes between 2.0.2 and 2.0.3: Changes between 2 0 2 and 2 0 3.


File: pytest.info,  Node: Changes between 2 0 2 and 2 0 3,  Up: py test 2 0 3 bug fixes and speed ups

46.149.1 Changes between 2.0.2 and 2.0.3
----------------------------------------

   - fix issue38: nicer tracebacks on calls to hooks, particularly early
     configure/sessionstart ones

   - fix missing skip reason/meta information in junitxml files,
     reported via
     ‘http://lists.idyll.org/pipermail/testing-in-python/2011-March/003928.html’

   - fix issue34: avoid collection failure with “test” prefixed classes
     deriving from object.

   - don’t require zlib (and other libs) for genscript plugin without
     –genscript actually being used.

   - speed up skips (by not doing a full traceback representation
     internally)

   - fix issue37: avoid invalid characters in junitxml’s output


File: pytest.info,  Node: py test 2 0 2 bug fixes improved xfail/skip expressions speed ups,  Next: py test 2 0 1 bug fixes,  Prev: py test 2 0 3 bug fixes and speed ups,  Up: Release announcements

46.150 py.test 2.0.2: bug fixes, improved xfail/skip expressions, speed ups
===========================================================================

Welcome to pytest-2.0.2, a maintenance and bug fix release of pytest, a
mature testing tool for Python, supporting CPython 2.4-3.2, Jython and
latest PyPy interpreters.  See the extensive docs with tested examples
here:

     ‘http://pytest.org/’

If you want to install or upgrade pytest, just type one of:

     pip install -U pytest # or
     easy_install -U pytest

Many thanks to all issue reporters and people asking questions or
complaining, particularly Jurko for his insistence, Laura, Victor and
Brianna for helping with improving and Ronny for his general advise.

best, holger krekel

* Menu:

* Changes between 2.0.1 and 2.0.2: Changes between 2 0 1 and 2 0 2.


File: pytest.info,  Node: Changes between 2 0 1 and 2 0 2,  Up: py test 2 0 2 bug fixes improved xfail/skip expressions speed ups

46.150.1 Changes between 2.0.1 and 2.0.2
----------------------------------------

   - tackle issue32 - speed up test runs of very quick test functions by
     reducing the relative overhead

   - fix issue30 - extended xfail/skipif handling and improved
     reporting.  If you have a syntax error in your skip/xfail
     expressions you now get nice error reports.

     Also you can now access module globals from xfail/skipif
     expressions so that this for example works now:

          import pytest
          import mymodule
          @pytest.mark.skipif("mymodule.__version__[0] == "1")
          def test_function():
              pass

     This will not run the test function if the module’s version string
     does not start with a “1”.  Note that specifying a string instead
     of a boolean expressions allows py.test to report meaningful
     information when summarizing a test run as to what conditions lead
     to skipping (or xfail-ing) tests.

   - fix issue28 - setup_method and pytest_generate_tests work together
     The setup_method fixture method now gets called also for test
     function invocations generated from the pytest_generate_tests hook.

   - fix issue27 - collectonly and keyword-selection (-k) now work
     together Also, if you do “py.test –collectonly -q” you now get a
     flat list of test ids that you can use to paste to the py.test
     commandline in order to execute a particular test.

   - fix issue25 avoid reported problems with –pdb and
     python3.2/encodings output

   - fix issue23 - tmpdir argument now works on Python3.2 and WindowsXP
     Starting with Python3.2 os.symlink may be supported.  By requiring
     a newer py lib version the py.path.local() implementation
     acknowledges this.

   - fixed typos in the docs (thanks Victor Garcia, Brianna Laugher) and
     particular thanks to Laura Creighton who also reviewed parts of the
     documentation.

   - fix slightly wrong output of verbose progress reporting for classes
     (thanks Amaury)

   - more precise (avoiding of) deprecation warnings for
     node.Class|Function accesses

   - avoid std unittest assertion helper code in tracebacks (thanks
     Ronny)


File: pytest.info,  Node: py test 2 0 1 bug fixes,  Next: py test 2 0 0 asserts++ unittest++ reporting++ config++ docs++,  Prev: py test 2 0 2 bug fixes improved xfail/skip expressions speed ups,  Up: Release announcements

46.151 py.test 2.0.1: bug fixes
===============================

Welcome to pytest-2.0.1, a maintenance and bug fix release of pytest, a
mature testing tool for Python, supporting CPython 2.4-3.2, Jython and
latest PyPy interpreters.  See extensive docs with tested examples here:

     ‘http://pytest.org/’

If you want to install or upgrade pytest, just type one of:

     pip install -U pytest # or
     easy_install -U pytest

Many thanks to all issue reporters and people asking questions or
complaining.  Particular thanks to Floris Bruynooghe and Ronny
Pfannschmidt for their great coding contributions and many others for
feedback and help.

best, holger krekel

* Menu:

* Changes between 2.0.0 and 2.0.1: Changes between 2 0 0 and 2 0 1.


File: pytest.info,  Node: Changes between 2 0 0 and 2 0 1,  Up: py test 2 0 1 bug fixes

46.151.1 Changes between 2.0.0 and 2.0.1
----------------------------------------

   - refine and unify initial capturing so that it works nicely even if
     the logging module is used on an early-loaded conftest.py file or
     plugin.

   - fix issue12 - show plugin versions with “–version” and
     “–traceconfig” and also document how to add extra information to
     reporting test header

   - fix issue17 (import-* reporting issue on python3) by requiring
     py>1.4.0 (1.4.1 is going to include it)

   - fix issue10 (numpy arrays truth checking) by refining assertion
     interpretation in py lib

   - fix issue15: make nose compatibility tests compatible with python3
     (now that nose-1.0 supports python3)

   - remove somewhat surprising “same-conftest” detection because it
     ignores conftest.py when they appear in several subdirs.

   - improve assertions (“not in”), thanks Floris Bruynooghe

   - improve behaviour/warnings when running on top of “python -OO”
     (assertions and docstrings are turned off, leading to potential
     false positives)

   - introduce a pytest_cmdline_processargs(args) hook to allow dynamic
     computation of command line arguments.  This fixes a regression
     because py.test prior to 2.0 allowed to set command line options
     from conftest.py files which so far pytest-2.0 only allowed from
     ini-files now.

   - fix issue7: assert failures in doctest modules.  unexpected
     failures in doctests will not generally show nicer, i.e.  within
     the doctest failing context.

   - fix issue9: setup/teardown functions for an xfail-marked test will
     report as xfail if they fail but report as normally passing (not
     xpassing) if they succeed.  This only is true for “direct”
     setup/teardown invocations because teardown_class/ teardown_module
     cannot closely relate to a single test.

   - fix issue14: no logging errors at process exit

   - refinements to “collecting” output on non-ttys

   - refine internal plugin registration and –traceconfig output

   - introduce a mechanism to prevent/unregister plugins from the
     command line, see
     ‘http://pytest.org/en/stable/how-to/plugins.html#cmdunregister’

   - activate resultlog plugin by default

   - fix regression wrt yielded tests which due to the
     collection-before-running semantics were not setup as with pytest
     1.3.4.  Note, however, that the recommended and much cleaner way to
     do test parametrization remains the “pytest_generate_tests”
     mechanism, see the docs.


File: pytest.info,  Node: py test 2 0 0 asserts++ unittest++ reporting++ config++ docs++,  Prev: py test 2 0 1 bug fixes,  Up: Release announcements

46.152 py.test 2.0.0: asserts++, unittest++, reporting++, config++, docs++
==========================================================================

Welcome to pytest-2.0.0, a major new release of “py.test”, the rapid
easy Python testing tool.  There are many new features and enhancements,
see below for summary and detailed lists.  A lot of long-deprecated code
has been removed, resulting in a much smaller and cleaner
implementation.  See the new docs with examples here:

     ‘http://pytest.org/en/stable/index.html’

A note on packaging: pytest used to part of the “py” distribution up
until version py-1.3.4 but this has changed now: pytest-2.0.0 only
contains py.test related code and is expected to be backward-compatible
to existing test code.  If you want to install pytest, just type one of:

     pip install -U pytest
     easy_install -U pytest

Many thanks to all issue reporters and people asking questions or
complaining.  Particular thanks to Floris Bruynooghe and Ronny
Pfannschmidt for their great coding contributions and many others for
feedback and help.

best, holger krekel

* Menu:

* New Features::
* Fixes::
* Important Notes::
* (Incompatible) Removals: Incompatible Removals.


File: pytest.info,  Node: New Features,  Next: Fixes,  Up: py test 2 0 0 asserts++ unittest++ reporting++ config++ docs++

46.152.1 New Features
---------------------

   - new invocations through Python interpreter and from Python:

          python -m pytest      # on all pythons >= 2.5

     or from a python program:

          import pytest ; pytest.main(arglist, pluginlist)

     see ‘http://pytest.org/en/stable/how-to/usage.html’ for details.

   - new and better reporting information in assert expressions if
     comparing lists, sequences or strings.

     see ‘http://pytest.org/en/stable/how-to/assert.html#newreport’

   - new configuration through ini-files (setup.cfg or tox.ini
     recognized), for example:

          [pytest]
          norecursedirs = .hg data*  # don't ever recurse in such dirs
          addopts = -x --pyargs      # add these command line options by default

     see ‘http://pytest.org/en/stable/reference/customize.html’

   - improved standard unittest support.  In general py.test should now
     better be able to run custom unittest.TestCases like twisted trial
     or Django based TestCases.  Also you can now run the tests of an
     installed ‘unittest’ package with py.test:

          py.test --pyargs unittest

   - new “-q” option which decreases verbosity and prints a more
     nose/unittest-style “dot” output.

   - many many more detailed improvements details


File: pytest.info,  Node: Fixes,  Next: Important Notes,  Prev: New Features,  Up: py test 2 0 0 asserts++ unittest++ reporting++ config++ docs++

46.152.2 Fixes
--------------

   - fix issue126 - introduce py.test.set_trace() to trace execution via
     PDB during the running of tests even if capturing is ongoing.

   - fix issue124 - make reporting more resilient against tests opening
     files on filedescriptor 1 (stdout).

   - fix issue109 - sibling conftest.py files will not be loaded.  (and
     Directory collectors cannot be customized anymore from a
     Directory’s conftest.py - this needs to happen at least one level
     up).

   - fix issue88 (finding custom test nodes from command line arg)

   - fix issue93 stdout/stderr is captured while importing conftest.py

   - fix bug: unittest collected functions now also can have
     “pytestmark” applied at class/module level


File: pytest.info,  Node: Important Notes,  Next: Incompatible Removals,  Prev: Fixes,  Up: py test 2 0 0 asserts++ unittest++ reporting++ config++ docs++

46.152.3 Important Notes
------------------------

   * The usual way in pre-2.0 times to use py.test in python code was to
     import “py” and then e.g.  use “py.test.raises” for the helper.
     This remains valid and is not planned to be deprecated.  However,
     in most examples and internal code you’ll find “import pytest” and
     “pytest.raises” used as the recommended default way.

   * pytest now first performs collection of the complete test suite
     before running any test.  This changes for example the semantics of
     when pytest_collectstart/pytest_collectreport are called.  Some
     plugins may need upgrading.

   * The pytest package consists of a 400 LOC core.py and about 20
     builtin plugins, summing up to roughly 5000 LOCs, including
     docstrings.  To be fair, it also uses generic code from the
     “pylib”, and the new “py” package to help with filesystem and
     introspection/code manipulation.


File: pytest.info,  Node: Incompatible Removals,  Prev: Important Notes,  Up: py test 2 0 0 asserts++ unittest++ reporting++ config++ docs++

46.152.4 (Incompatible) Removals
--------------------------------

   - py.test.config is now only available if you are in a test run.

   - the following (mostly already deprecated) functionality was
     removed:

        - removed support for Module/Class/… collection node definitions
          in conftest.py files.  They will cause nothing special.

        - removed support for calling the pre-1.0 collection API of
          “run()” and “join”

        - removed reading option values from conftest.py files or env
          variables.  This can now be done much much better and easier
          through the ini-file mechanism and the “addopts” entry in
          particular.

        - removed the “disabled” attribute in test classes.  Use the
          skipping and pytestmark mechanism to skip or xfail a test
          class.

   - py.test.collect.Directory does not exist anymore and it is not
     possible to provide an own “Directory” object.  If you have used
     this and don’t know what to do, get in contact.  We’ll figure
     something out.

     Note that pytest_collect_directory() is still called but any return
     value will be ignored.  This allows to keep old code working that
     performed for example “py.test.skip()” in collect() to prevent
     recursion into directory trees if a certain dependency or command
     line option is missing.

see *note Changelog: 6ba. for more detailed changes.


File: pytest.info,  Node: Changelog,  Next: Index,  Prev: Release announcements,  Up: Top

47 Changelog
************

Versions follow Semantic Versioning(1) (‘<major>.<minor>.<patch>’).

Backward incompatible (breaking) changes will only be introduced in
major versions with advance notice in the ‘Deprecations’ section of
releases.

* Menu:

* pytest 7.1.3 (2022-08-31): pytest 7 1 3 2022-08-31.
* pytest 7.1.2 (2022-04-23): pytest 7 1 2 2022-04-23.
* pytest 7.1.1 (2022-03-17): pytest 7 1 1 2022-03-17.
* pytest 7.1.0 (2022-03-13): pytest 7 1 0 2022-03-13.
* pytest 7.0.1 (2022-02-11): pytest 7 0 1 2022-02-11.
* pytest 7.0.0 (2022-02-03): pytest 7 0 0 2022-02-03.
* pytest 7.0.0rc1 (2021-12-06): pytest 7 0 0rc1 2021-12-06.
* pytest 6.2.5 (2021-08-29): pytest 6 2 5 2021-08-29.
* pytest 6.2.4 (2021-05-04): pytest 6 2 4 2021-05-04.
* pytest 6.2.3 (2021-04-03): pytest 6 2 3 2021-04-03.
* pytest 6.2.2 (2021-01-25): pytest 6 2 2 2021-01-25.
* pytest 6.2.1 (2020-12-15): pytest 6 2 1 2020-12-15.
* pytest 6.2.0 (2020-12-12): pytest 6 2 0 2020-12-12.
* pytest 6.1.2 (2020-10-28): pytest 6 1 2 2020-10-28.
* pytest 6.1.1 (2020-10-03): pytest 6 1 1 2020-10-03.
* pytest 6.1.0 (2020-09-26): pytest 6 1 0 2020-09-26.
* pytest 6.0.2 (2020-09-04): pytest 6 0 2 2020-09-04.
* pytest 6.0.1 (2020-07-30): pytest 6 0 1 2020-07-30.
* pytest 6.0.0 (2020-07-28): pytest 6 0 0 2020-07-28.
* pytest 6.0.0rc1 (2020-07-08): pytest 6 0 0rc1 2020-07-08.
* pytest 5.4.3 (2020-06-02): pytest 5 4 3 2020-06-02.
* pytest 5.4.2 (2020-05-08): pytest 5 4 2 2020-05-08.
* pytest 5.4.1 (2020-03-13): pytest 5 4 1 2020-03-13.
* pytest 5.4.0 (2020-03-12): pytest 5 4 0 2020-03-12.
* pytest 5.3.5 (2020-01-29): pytest 5 3 5 2020-01-29.
* pytest 5.3.4 (2020-01-20): pytest 5 3 4 2020-01-20.
* pytest 5.3.3 (2020-01-16): pytest 5 3 3 2020-01-16.
* pytest 5.3.2 (2019-12-13): pytest 5 3 2 2019-12-13.
* pytest 5.3.1 (2019-11-25): pytest 5 3 1 2019-11-25.
* pytest 5.3.0 (2019-11-19): pytest 5 3 0 2019-11-19.
* pytest 5.2.4 (2019-11-15): pytest 5 2 4 2019-11-15.
* pytest 5.2.3 (2019-11-14): pytest 5 2 3 2019-11-14.
* pytest 5.2.2 (2019-10-24): pytest 5 2 2 2019-10-24.
* pytest 5.2.1 (2019-10-06): pytest 5 2 1 2019-10-06.
* pytest 5.2.0 (2019-09-28): pytest 5 2 0 2019-09-28.
* pytest 5.1.3 (2019-09-18): pytest 5 1 3 2019-09-18.
* pytest 5.1.2 (2019-08-30): pytest 5 1 2 2019-08-30.
* pytest 5.1.1 (2019-08-20): pytest 5 1 1 2019-08-20.
* pytest 5.1.0 (2019-08-15): pytest 5 1 0 2019-08-15.
* pytest 5.0.1 (2019-07-04): pytest 5 0 1 2019-07-04.
* pytest 5.0.0 (2019-06-28): pytest 5 0 0 2019-06-28.
* pytest 4.6.11 (2020-06-04): pytest 4 6 11 2020-06-04.
* pytest 4.6.10 (2020-05-08): pytest 4 6 10 2020-05-08.
* pytest 4.6.9 (2020-01-04): pytest 4 6 9 2020-01-04.
* pytest 4.6.8 (2019-12-19): pytest 4 6 8 2019-12-19.
* pytest 4.6.7 (2019-12-05): pytest 4 6 7 2019-12-05.
* pytest 4.6.6 (2019-10-11): pytest 4 6 6 2019-10-11.
* pytest 4.6.5 (2019-08-05): pytest 4 6 5 2019-08-05.
* pytest 4.6.4 (2019-06-28): pytest 4 6 4 2019-06-28.
* pytest 4.6.3 (2019-06-11): pytest 4 6 3 2019-06-11.
* pytest 4.6.2 (2019-06-03): pytest 4 6 2 2019-06-03.
* pytest 4.6.1 (2019-06-02): pytest 4 6 1 2019-06-02.
* pytest 4.6.0 (2019-05-31): pytest 4 6 0 2019-05-31.
* pytest 4.5.0 (2019-05-11): pytest 4 5 0 2019-05-11.
* pytest 4.4.2 (2019-05-08): pytest 4 4 2 2019-05-08.
* pytest 4.4.1 (2019-04-15): pytest 4 4 1 2019-04-15.
* pytest 4.4.0 (2019-03-29): pytest 4 4 0 2019-03-29.
* pytest 4.3.1 (2019-03-11): pytest 4 3 1 2019-03-11.
* pytest 4.3.0 (2019-02-16): pytest 4 3 0 2019-02-16.
* pytest 4.2.1 (2019-02-12): pytest 4 2 1 2019-02-12.
* pytest 4.2.0 (2019-01-30): pytest 4 2 0 2019-01-30.
* pytest 4.1.1 (2019-01-12): pytest 4 1 1 2019-01-12.
* pytest 4.1.0 (2019-01-05): pytest 4 1 0 2019-01-05.
* pytest 4.0.2 (2018-12-13): pytest 4 0 2 2018-12-13.
* pytest 4.0.1 (2018-11-23): pytest 4 0 1 2018-11-23.
* pytest 4.0.0 (2018-11-13): pytest 4 0 0 2018-11-13.
* pytest 3.10.1 (2018-11-11): pytest 3 10 1 2018-11-11.
* pytest 3.10.0 (2018-11-03): pytest 3 10 0 2018-11-03.
* pytest 3.9.3 (2018-10-27): pytest 3 9 3 2018-10-27.
* pytest 3.9.2 (2018-10-22): pytest 3 9 2 2018-10-22.
* pytest 3.9.1 (2018-10-16): pytest 3 9 1 2018-10-16.
* pytest 3.9.0 (2018-10-15 - not published due to a release automation bug): pytest 3 9 0 2018-10-15 - not published due to a release automation bug.
* pytest 3.8.2 (2018-10-02): pytest 3 8 2 2018-10-02.
* pytest 3.8.1 (2018-09-22): pytest 3 8 1 2018-09-22.
* pytest 3.8.0 (2018-09-05): pytest 3 8 0 2018-09-05.
* pytest 3.7.4 (2018-08-29): pytest 3 7 4 2018-08-29.
* pytest 3.7.3 (2018-08-26): pytest 3 7 3 2018-08-26.
* pytest 3.7.2 (2018-08-16): pytest 3 7 2 2018-08-16.
* pytest 3.7.1 (2018-08-02): pytest 3 7 1 2018-08-02.
* pytest 3.7.0 (2018-07-30): pytest 3 7 0 2018-07-30.
* pytest 3.6.4 (2018-07-28): pytest 3 6 4 2018-07-28.
* pytest 3.6.3 (2018-07-04): pytest 3 6 3 2018-07-04.
* pytest 3.6.2 (2018-06-20): pytest 3 6 2 2018-06-20.
* pytest 3.6.1 (2018-06-05): pytest 3 6 1 2018-06-05.
* pytest 3.6.0 (2018-05-23): pytest 3 6 0 2018-05-23.
* pytest 3.5.1 (2018-04-23): pytest 3 5 1 2018-04-23.
* pytest 3.5.0 (2018-03-21): pytest 3 5 0 2018-03-21.
* pytest 3.4.2 (2018-03-04): pytest 3 4 2 2018-03-04.
* pytest 3.4.1 (2018-02-20): pytest 3 4 1 2018-02-20.
* pytest 3.4.0 (2018-01-30): pytest 3 4 0 2018-01-30.
* pytest 3.3.2 (2017-12-25): pytest 3 3 2 2017-12-25.
* pytest 3.3.1 (2017-12-05): pytest 3 3 1 2017-12-05.
* pytest 3.3.0 (2017-11-23): pytest 3 3 0 2017-11-23.
* pytest 3.2.5 (2017-11-15): pytest 3 2 5 2017-11-15.
* pytest 3.2.4 (2017-11-13): pytest 3 2 4 2017-11-13.
* pytest 3.2.3 (2017-10-03): pytest 3 2 3 2017-10-03.
* pytest 3.2.2 (2017-09-06): pytest 3 2 2 2017-09-06.
* pytest 3.2.1 (2017-08-08): pytest 3 2 1 2017-08-08.
* pytest 3.2.0 (2017-07-30): pytest 3 2 0 2017-07-30.
* pytest 3.1.3 (2017-07-03): pytest 3 1 3 2017-07-03.
* pytest 3.1.2 (2017-06-08): pytest 3 1 2 2017-06-08.
* pytest 3.1.1 (2017-05-30): pytest 3 1 1 2017-05-30.
* 3.1.0 (2017-05-22): 3 1 0 2017-05-22.
* 3.0.7 (2017-03-14): 3 0 7 2017-03-14.
* 3.0.6 (2017-01-22): 3 0 6 2017-01-22.
* 3.0.5 (2016-12-05): 3 0 5 2016-12-05.
* 3.0.4 (2016-11-09): 3 0 4 2016-11-09.
* 3.0.3 (2016-09-28): 3 0 3 2016-09-28.
* 3.0.2 (2016-09-01): 3 0 2 2016-09-01.
* 3.0.1 (2016-08-23): 3 0 1 2016-08-23.
* 3.0.0 (2016-08-18): 3 0 0 2016-08-18.
* 2.9.2 (2016-05-31): 2 9 2 2016-05-31.
* 2.9.1 (2016-03-17): 2 9 1 2016-03-17.
* 2.9.0 (2016-02-29): 2 9 0 2016-02-29.
* 2.8.7 (2016-01-24): 2 8 7 2016-01-24.
* 2.8.6 (2016-01-21): 2 8 6 2016-01-21.
* 2.8.5 (2015-12-11): 2 8 5 2015-12-11.
* 2.8.4 (2015-12-06): 2 8 4 2015-12-06.
* 2.8.3 (2015-11-18): 2 8 3 2015-11-18.
* 2.8.2 (2015-10-07): 2 8 2 2015-10-07.
* 2.8.1 (2015-09-29): 2 8 1 2015-09-29.
* 2.8.0 (2015-09-18): 2 8 0 2015-09-18.
* 2.7.3 (2015-09-15): 2 7 3 2015-09-15.
* 2.7.2 (2015-06-23): 2 7 2 2015-06-23.
* 2.7.1 (2015-05-19): 2 7 1 2015-05-19.
* 2.7.0 (2015-03-26): 2 7 0 2015-03-26.
* 2.6.4 (2014-10-24): 2 6 4 2014-10-24.
* 2.6.3 (2014-09-24): 2 6 3 2014-09-24.
* 2.6.2 (2014-09-05): 2 6 2 2014-09-05.
* 2.6.1 (2014-08-07): 2 6 1 2014-08-07.
* 2.6: 2 6.
* 2.5.2 (2014-01-29): 2 5 2 2014-01-29.
* 2.5.1 (2013-12-17): 2 5 1 2013-12-17.
* 2.5.0 (2013-12-12): 2 5 0 2013-12-12.
* 2.4.2 (2013-10-04): 2 4 2 2013-10-04.
* 2.4.1 (2013-10-02): 2 4 1 2013-10-02.
* 2.4: 2 4.
* 2.3.5 (2013-04-30): 2 3 5 2013-04-30.
* 2.3.4 (2012-11-20): 2 3 4 2012-11-20.
* 2.3.3 (2012-11-06): 2 3 3 2012-11-06.
* 2.3.2 (2012-10-25): 2 3 2 2012-10-25.
* 2.3.1 (2012-10-20): 2 3 1 2012-10-20.
* 2.3.0 (2012-10-19): 2 3 0 2012-10-19.
* 2.2.4 (2012-05-22): 2 2 4 2012-05-22.
* 2.2.3 (2012-02-05): 2 2 3 2012-02-05.
* 2.2.2 (2012-02-05): 2 2 2 2012-02-05.
* 2.2.1 (2011-12-16): 2 2 1 2011-12-16.
* 2.2.0 (2011-11-18): 2 2 0 2011-11-18.
* 2.1.3 (2011-10-18): 2 1 3 2011-10-18.
* 2.1.2 (2011-09-24): 2 1 2 2011-09-24.
* 2.1.1: 2 1 1.
* 2.1.0 (2011-07-09): 2 1 0 2011-07-09.
* 2.0.3 (2011-05-11): 2 0 3 2011-05-11.
* 2.0.2 (2011-03-09): 2 0 2 2011-03-09.
* 2.0.1 (2011-02-07): 2 0 1 2011-02-07.
* 2.0.0 (2010-11-25): 2 0 0 2010-11-25.
* 1.3.4 (2010-09-14): 1 3 4 2010-09-14.
* 1.3.3 (2010-07-30): 1 3 3 2010-07-30.
* 1.3.2 (2010-07-08): 1 3 2 2010-07-08.
* 1.3.1 (2010-05-25): 1 3 1 2010-05-25.
* 1.3.0 (2010-05-05): 1 3 0 2010-05-05.
* 1.2.0 (2010-01-18): 1 2 0 2010-01-18.
* 1.1.1 (2009-11-24): 1 1 1 2009-11-24.
* 1.1.0 (2009-11-05): 1 1 0 2009-11-05.
* 1.0.3: 1 0 3.
* 1.0.2 (2009-08-27): 1 0 2 2009-08-27.
* 1.0.1 (2009-08-19): 1 0 1 2009-08-19.
* 1.0.0 (2009-08-04): 1 0 0 2009-08-04.
* 1.0.0b9 (2009-07-31): 1 0 0b9 2009-07-31.
* 1.0.0b8 (2009-07-22): 1 0 0b8 2009-07-22.
* 1.0.0b7: 1 0 0b7.
* 1.0.0b3 (2009-06-19): 1 0 0b3 2009-06-19.
* 1.0.0b1: 1 0 0b1.
* 0.9.2: 0 9 2.
* 0.9.1: 0 9 1.

   ---------- Footnotes ----------

   (1) https://semver.org/


File: pytest.info,  Node: pytest 7 1 3 2022-08-31,  Next: pytest 7 1 2 2022-04-23,  Up: Changelog

47.1 pytest 7.1.3 (2022-08-31)
==============================

* Menu:

* Bug Fixes::
* Improved Documentation::
* Trivial/Internal Changes::


File: pytest.info,  Node: Bug Fixes,  Next: Improved Documentation,  Up: pytest 7 1 3 2022-08-31

47.1.1 Bug Fixes
----------------

   - #10060(1): When running with ‘--pdb’, ‘TestCase.tearDown’ is no
     longer called for tests when the ‘class’ has been skipped via
     ‘unittest.skip’ or ‘pytest.mark.skip’.

   - #10190(2): Invalid XML characters in setup or teardown error
     messages are now properly escaped for JUnit XML reports.

   - #10230(3): Ignore ‘.py’ files created by ‘pyproject.toml’-based
     editable builds introduced in pip 21.3(4).

   - #3396(5): Doctests now respect the ‘--import-mode’ flag.

   - #9514(6): Type-annotate ‘FixtureRequest.param’ as ‘Any’ as a stop
     gap measure until issue #8073(7) is fixed.

   - #9791(8): Fixed a path handling code in ‘rewrite.py’ that seems to
     work fine, but was incorrect and fails in some systems.

   - #9917(9): Fixed string representation for *note pytest.approx():
     c3. when used to compare tuples.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/10060

   (2) https://github.com/pytest-dev/pytest/issues/10190

   (3) https://github.com/pytest-dev/pytest/issues/10230

   (4) https://pip.pypa.io/en/stable/news/#v21-3

   (5) https://github.com/pytest-dev/pytest/issues/3396

   (6) https://github.com/pytest-dev/pytest/issues/9514

   (7) https://github.com/pytest-dev/pytest/issues/8073

   (8) https://github.com/pytest-dev/pytest/issues/9791

   (9) https://github.com/pytest-dev/pytest/issues/9917


File: pytest.info,  Node: Improved Documentation,  Next: Trivial/Internal Changes,  Prev: Bug Fixes,  Up: pytest 7 1 3 2022-08-31

47.1.2 Improved Documentation
-----------------------------

   - #9937(1): Explicit note that *note tmpdir: a5. fixture is
     discouraged in favour of *note tmp_path: 185.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/9937


File: pytest.info,  Node: Trivial/Internal Changes,  Prev: Improved Documentation,  Up: pytest 7 1 3 2022-08-31

47.1.3 Trivial/Internal Changes
-------------------------------

   - #10114(1): Replace atomicwrites(2) dependency on windows with
     ‘os.replace’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/10114

   (2) https://github.com/untitaker/python-atomicwrites


File: pytest.info,  Node: pytest 7 1 2 2022-04-23,  Next: pytest 7 1 1 2022-03-17,  Prev: pytest 7 1 3 2022-08-31,  Up: Changelog

47.2 pytest 7.1.2 (2022-04-23)
==============================

* Menu:

* Bug Fixes: Bug Fixes<2>.


File: pytest.info,  Node: Bug Fixes<2>,  Up: pytest 7 1 2 2022-04-23

47.2.1 Bug Fixes
----------------

   - #9726(1): An unnecessary ‘numpy’ import inside *note
     pytest.approx(): c3. was removed.

   - #9820(2): Fix comparison of ‘dataclasses’ with ‘InitVar’.

   - #9869(3): Increase ‘stacklevel’ for the ‘NODE_CTOR_FSPATH_ARG’
     deprecation to point to the user’s code, not pytest.

   - #9871(4): Fix a bizarre (and fortunately rare) bug where the
     ‘temp_path’ fixture could raise an internal error while attempting
     to get the current user’s username.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/9726

   (2) https://github.com/pytest-dev/pytest/issues/9820

   (3) https://github.com/pytest-dev/pytest/issues/9869

   (4) https://github.com/pytest-dev/pytest/issues/9871


File: pytest.info,  Node: pytest 7 1 1 2022-03-17,  Next: pytest 7 1 0 2022-03-13,  Prev: pytest 7 1 2 2022-04-23,  Up: Changelog

47.3 pytest 7.1.1 (2022-03-17)
==============================

* Menu:

* Bug Fixes: Bug Fixes<3>.


File: pytest.info,  Node: Bug Fixes<3>,  Up: pytest 7 1 1 2022-03-17

47.3.1 Bug Fixes
----------------

   - #9767(1): Fixed a regression in pytest 7.1.0 where some conftest.py
     files outside of the source tree (e.g.  in the ‘site-packages’
     directory) were not picked up.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/9767


File: pytest.info,  Node: pytest 7 1 0 2022-03-13,  Next: pytest 7 0 1 2022-02-11,  Prev: pytest 7 1 1 2022-03-17,  Up: Changelog

47.4 pytest 7.1.0 (2022-03-13)
==============================

* Menu:

* Breaking Changes::
* Improvements::
* Bug Fixes: Bug Fixes<4>.


File: pytest.info,  Node: Breaking Changes,  Next: Improvements,  Up: pytest 7 1 0 2022-03-13

47.4.1 Breaking Changes
-----------------------

   - #8838(1): As per our policy, the following features have been
     deprecated in the 6.X series and are now removed:

        * ‘pytest._fillfuncargs’ function.

        * ‘pytest_warning_captured’ hook - use ‘pytest_warning_recorded’
          instead.

        * ‘-k -foobar’ syntax - use ‘-k 'not foobar'’ instead.

        * ‘-k foobar:’ syntax.

        * ‘pytest.collect’ module - import from ‘pytest’ directly.

     For more information consult Deprecations and Removals(2) in the
     docs.

   - #9437(3): Dropped support for Python 3.6, which reached
     end-of-life(4) at 2021-12-23.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/8838

   (2) https://docs.pytest.org/en/latest/deprecations.html

   (3) https://github.com/pytest-dev/pytest/issues/9437

   (4) https://devguide.python.org/#status-of-python-branches


File: pytest.info,  Node: Improvements,  Next: Bug Fixes<4>,  Prev: Breaking Changes,  Up: pytest 7 1 0 2022-03-13

47.4.2 Improvements
-------------------

   - #5192(1): Fixed test output for some data types where ‘-v’ would
     show less information.

     Also, when showing diffs for sequences, ‘-q’ would produce full
     diffs instead of the expected diff.

   - #9362(2): pytest now avoids specialized assert formatting when it
     is detected that the default ‘__eq__’ is overridden in ‘attrs’ or
     ‘dataclasses’.

   - #9536(3): When ‘-vv’ is given on command line, show skipping and
     xfail reasons in full instead of truncating them to fit the
     terminal width.

   - #9644(4): More information about the location of resources that led
     Python to raise ResourceWarning(5) can now be obtained by enabling
     tracemalloc(6).

     See *note Resource Warnings: 11b. for more information.

   - #9678(7): More types are now accepted in the ‘ids’ argument to
     ‘@pytest.mark.parametrize’.  Previously only ‘str’, ‘float’, ‘int’
     and ‘bool’ were accepted; now ‘bytes’, ‘complex’, ‘re.Pattern’,
     ‘Enum’ and anything with a ‘__name__’ are also accepted.

   - #9692(8): *note pytest.approx(): c3. now raises a TypeError(9) when
     given an unordered sequence (such as set(10)).

     Note that this implies that custom classes which only implement
     ‘__iter__’ and ‘__len__’ are no longer supported as they don’t
     guarantee order.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5192

   (2) https://github.com/pytest-dev/pytest/issues/9362

   (3) https://github.com/pytest-dev/pytest/issues/9536

   (4) https://github.com/pytest-dev/pytest/issues/9644

   (5) https://docs.python.org/3/library/exceptions.html#ResourceWarning

   (6) 
https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc

   (7) https://github.com/pytest-dev/pytest/issues/9678

   (8) https://github.com/pytest-dev/pytest/issues/9692

   (9) https://docs.python.org/3/library/exceptions.html#TypeError

   (10) https://docs.python.org/3/library/stdtypes.html#set


File: pytest.info,  Node: Bug Fixes<4>,  Prev: Improvements,  Up: pytest 7 1 0 2022-03-13

47.4.3 Bug Fixes
----------------

   - #8242(1): The deprecation of raising unittest.SkipTest(2) to skip
     collection of tests during the pytest collection phase is reverted
     - this is now a supported feature again.

   - #9493(3): Symbolic link components are no longer resolved in
     conftest paths.  This means that if a conftest appears twice in
     collection tree, using symlinks, it will be executed twice.  For
     example, given

          tests/real/conftest.py tests/real/test_it.py tests/link ->
          tests/real

     running ‘pytest tests’ now imports the conftest twice, once as
     ‘tests/real/conftest.py’ and once as ‘tests/link/conftest.py’.
     This is a fix to match a similar change made to test collection
     itself in pytest 6.0 (see pull request #6523(4) for details).

   - #9626(5): Fixed count of selected tests on terminal collection
     summary when there were errors or skipped modules.

     If there were errors or skipped modules on collection, pytest would
     mistakenly subtract those from the selected count.

   - #9645(6): Fixed regression where ‘--import-mode=importlib’ used
     together with PYTHONPATH(7) or *note pythonpath: 449. would cause
     import errors in test suites.

   - #9708(8): *note pytester: 224. now requests a *note monkeypatch:
     1a6. fixture instead of creating one internally.  This solves some
     issues with tests that involve pytest environment variables.

   - #9730(9): Malformed ‘pyproject.toml’ files now produce a clearer
     error message.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/8242

   (2) https://docs.python.org/3/library/unittest.html#unittest.SkipTest

   (3) https://github.com/pytest-dev/pytest/issues/9493

   (4) https://github.com/pytest-dev/pytest/pull/6523

   (5) https://github.com/pytest-dev/pytest/issues/9626

   (6) https://github.com/pytest-dev/pytest/issues/9645

   (7) https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH

   (8) https://github.com/pytest-dev/pytest/issues/9708

   (9) https://github.com/pytest-dev/pytest/issues/9730


File: pytest.info,  Node: pytest 7 0 1 2022-02-11,  Next: pytest 7 0 0 2022-02-03,  Prev: pytest 7 1 0 2022-03-13,  Up: Changelog

47.5 pytest 7.0.1 (2022-02-11)
==============================

* Menu:

* Bug Fixes: Bug Fixes<5>.


File: pytest.info,  Node: Bug Fixes<5>,  Up: pytest 7 0 1 2022-02-11

47.5.1 Bug Fixes
----------------

   - #9608(1): Fix invalid importing of ‘importlib.readers’ in Python
     3.9.

   - #9610(2): Restore ‘UnitTestFunction.obj’ to return unbound rather
     than bound method.  Fixes a crash during a failed teardown in
     unittest TestCases with non-default ‘__init__’.  Regressed in
     pytest 7.0.0.

   - #9636(3): The ‘pythonpath’ plugin was renamed to ‘python_path’.
     This avoids a conflict with the ‘pytest-pythonpath’ plugin.

   - #9642(4): Fix running tests by id with ‘::’ in the parametrize
     portion.

   - #9643(5): Delay issuing a *note PytestWarning: 3c1. about diamond
     inheritance involving *note Item: 172. and *note Collector: 244. so
     it can be filtered using *note standard warning filters: fa.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/9608

   (2) https://github.com/pytest-dev/pytest/issues/9610

   (3) https://github.com/pytest-dev/pytest/issues/9636

   (4) https://github.com/pytest-dev/pytest/issues/9642

   (5) https://github.com/pytest-dev/pytest/issues/9643


File: pytest.info,  Node: pytest 7 0 0 2022-02-03,  Next: pytest 7 0 0rc1 2021-12-06,  Prev: pytest 7 0 1 2022-02-11,  Up: Changelog

47.6 pytest 7.0.0 (2022-02-03)
==============================

(‘Please see the full set of changes for this release also in the
7.0.0rc1 notes below’)

* Menu:

* Deprecations::
* Bug Fixes: Bug Fixes<6>.
* Improved Documentation: Improved Documentation<2>.
* Trivial/Internal Changes: Trivial/Internal Changes<2>.


File: pytest.info,  Node: Deprecations,  Next: Bug Fixes<6>,  Up: pytest 7 0 0 2022-02-03

47.6.1 Deprecations
-------------------

   - #9488(1): If custom subclasses of nodes like *note pytest.Item:
     172. override the ‘__init__’ method, they should take ‘**kwargs’.
     See *note Constructors of custom pytest.Node subclasses should take
     **kwargs: 4d8. for details.

     Note that a deprection warning is only emitted when there is a
     conflict in the arguments pytest expected to pass.  This
     deprecation was already part of pytest 7.0.0rc1 but wasn’t
     documented.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/9488


File: pytest.info,  Node: Bug Fixes<6>,  Next: Improved Documentation<2>,  Prev: Deprecations,  Up: pytest 7 0 0 2022-02-03

47.6.2 Bug Fixes
----------------

   - #9355(1): Fixed error message prints function decorators when using
     assert in Python 3.8 and above.

   - #9396(2): Ensure ‘pytest.Config.inifile’ is available during the
     *note pytest_cmdline_main: 295. hook (regression during
     ‘7.0.0rc1’).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/9355

   (2) https://github.com/pytest-dev/pytest/issues/9396


File: pytest.info,  Node: Improved Documentation<2>,  Next: Trivial/Internal Changes<2>,  Prev: Bug Fixes<6>,  Up: pytest 7 0 0 2022-02-03

47.6.3 Improved Documentation
-----------------------------

   - #9404(1): Added extra documentation on alternatives to common
     misuses of ‘pytest.warns(None)’ ahead of its deprecation.

   - #9505(2): Clarify where the configuration files are located.  To
     avoid confusions documentation mentions that configuration file is
     located in the root of the repository.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/9404

   (2) https://github.com/pytest-dev/pytest/issues/9505


File: pytest.info,  Node: Trivial/Internal Changes<2>,  Prev: Improved Documentation<2>,  Up: pytest 7 0 0 2022-02-03

47.6.4 Trivial/Internal Changes
-------------------------------

   - #9521(1): Add test coverage to assertion rewrite path.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/9521


File: pytest.info,  Node: pytest 7 0 0rc1 2021-12-06,  Next: pytest 6 2 5 2021-08-29,  Prev: pytest 7 0 0 2022-02-03,  Up: Changelog

47.7 pytest 7.0.0rc1 (2021-12-06)
=================================

* Menu:

* Breaking Changes: Breaking Changes<2>.
* Deprecations: Deprecations<2>.
* Features::
* Improvements: Improvements<2>.
* Bug Fixes: Bug Fixes<7>.
* Improved Documentation: Improved Documentation<3>.
* Trivial/Internal Changes: Trivial/Internal Changes<3>.


File: pytest.info,  Node: Breaking Changes<2>,  Next: Deprecations<2>,  Up: pytest 7 0 0rc1 2021-12-06

47.7.1 Breaking Changes
-----------------------

   - #7259(1): The *note Node.reportinfo(): 357. function first return
     value type has been expanded from ‘py.path.local | str’ to
     ‘os.PathLike[str] | str’.

     Most plugins which refer to ‘reportinfo()’ only define it as part
     of a custom *note pytest.Item: 172. implementation.  Since
     ‘py.path.local’ is a ‘os.PathLike[str]’, these plugins are
     unaffacted.

     Plugins and users which call ‘reportinfo()’, use the first return
     value and interact with it as a ‘py.path.local’, would need to
     adjust by calling ‘py.path.local(fspath)’.  Although preferably,
     avoid the legacy ‘py.path.local’ and use ‘pathlib.Path’, or use
     ‘item.location’ or ‘item.path’, instead.

     Note: pytest was not able to provide a deprecation period for this
     change.

   - #8246(2): ‘--version’ now writes version information to ‘stdout’
     rather than ‘stderr’.

   - #8733(3): Drop a workaround for pyreadline(4) that made it work
     with ‘--pdb’.

     The workaround was introduced in #1281(5) in 2015, however since
     then pyreadline seems to have gone unmaintained(6), is generating
     warnings(7), and will stop working on Python 3.10.

   - #9061(8): Using *note pytest.approx(): c3. in a boolean context now
     raises an error hinting at the proper usage.

     It is apparently common for users to mistakenly use ‘pytest.approx’
     like this:

          assert pytest.approx(actual, expected)

     While the correct usage is:

          assert actual == pytest.approx(expected)

     The new error message helps catch those mistakes.

   - #9277(9): The ‘pytest.Instance’ collector type has been removed.
     Importing ‘pytest.Instance’ or ‘_pytest.python.Instance’ returns a
     dummy type and emits a deprecation warning.  See *note The
     pytest.Instance collector: 4d4. for details.

   - #9308(10): ‘PytestRemovedIn7Warning deprecation warnings are now
     errors by default.’

     Following our plan to remove deprecated features with as little
     disruption as possible, all warnings of type
     ‘PytestRemovedIn7Warning’ now generate errors instead of warning
     messages by default.

     ‘The affected features will be effectively removed in pytest 7.1’,
     so please consult the *note Deprecations and Removals: 4cf. section
     in the docs for directions on how to update existing code.

     In the pytest ‘7.0.X’ series, it is possible to change the errors
     back into warnings as a stopgap measure by adding this to your
     ‘pytest.ini’ file:

          [pytest]
          filterwarnings =
              ignore::pytest.PytestRemovedIn7Warning

     But this will stop working when pytest ‘7.1’ is released.

     ‘If you have concerns’ about the removal of a specific feature,
     please add a comment to issue #9308(11).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7259

   (2) https://github.com/pytest-dev/pytest/issues/8246

   (3) https://github.com/pytest-dev/pytest/issues/8733

   (4) https://github.com/pyreadline/pyreadline

   (5) https://github.com/pytest-dev/pytest/pull/1281

   (6) https://github.com/pyreadline/pyreadline/issues/58

   (7) https://github.com/pytest-dev/pytest/issues/8847

   (8) https://github.com/pytest-dev/pytest/issues/9061

   (9) https://github.com/pytest-dev/pytest/issues/9277

   (10) https://github.com/pytest-dev/pytest/issues/9308

   (11) https://github.com/pytest-dev/pytest/issues/9308


File: pytest.info,  Node: Deprecations<2>,  Next: Features,  Prev: Breaking Changes<2>,  Up: pytest 7 0 0rc1 2021-12-06

47.7.2 Deprecations
-------------------

   - #7259(1): ‘py.path.local’ arguments for hooks have been deprecated.
     See *note the deprecation note: 4d9. for full details.

     ‘py.path.local’ arguments to Node constructors have been
     deprecated.  See *note the deprecation note: 4d7. for full details.

          Note: The name of the *note Node: 316. arguments and
          attributes (the new attribute being ‘path’) is ‘the opposite’
          of the situation for hooks (the old argument being ‘path’).

          This is an unfortunate artifact due to historical reasons,
          which should be resolved in future versions as we slowly get
          rid of the py(2) dependency (see issue #9283(3) for a longer
          discussion).

   - #7469(4): Directly constructing the following classes is now
     deprecated:

        - ‘_pytest.mark.structures.Mark’

        - ‘_pytest.mark.structures.MarkDecorator’

        - ‘_pytest.mark.structures.MarkGenerator’

        - ‘_pytest.python.Metafunc’

        - ‘_pytest.runner.CallInfo’

        - ‘_pytest._code.ExceptionInfo’

        - ‘_pytest.config.argparsing.Parser’

        - ‘_pytest.config.argparsing.OptionGroup’

        - ‘_pytest.pytester.HookRecorder’

     These constructors have always been considered private, but now
     issue a deprecation warning, which may become a hard error in
     pytest 8.

   - #8242(5): Raising unittest.SkipTest(6) to skip collection of tests
     during the pytest collection phase is deprecated.  Use *note
     pytest.skip(): cc. instead.

     Note: This deprecation only relates to using unittest.SkipTest(7)
     during test collection.  You are probably not doing that.  Ordinary
     usage of unittest.SkipTest(8) / unittest.TestCase.skipTest()(9) /
     unittest.skip()(10) in unittest test cases is fully supported.

          Note: This deprecation has been reverted in pytest 7.1.0.

   - #8315(11): Several behaviors of *note Parser.addoption: 299. are
     now scheduled for removal in pytest 8 (deprecated since pytest
     2.4.0):

        - ‘parser.addoption(..., help=".. %default ..")’ - use
          ‘%(default)s’ instead.

        - ‘parser.addoption(..., type="int/string/float/complex")’ - use
          ‘type=int’ etc.  instead.

   - #8447(12): Defining a custom pytest node type which is both an
     ‘pytest.Item’ and a ‘pytest.Collector’ (e.g.  ‘pytest.File’) now
     issues a warning.  It was never sanely supported and triggers hard
     to debug errors.

     See *note the deprecation note: 4e0. for full details.

   - #8592(13): *note pytest_cmdline_preparse: 290. has been officially
     deprecated.  It will be removed in a future release.  Use *note
     pytest_load_initial_conftests: 28d. instead.

     See *note the deprecation note: 4dc. for full details.

   - #8645(14): *note pytest.warns(None): 103. is now deprecated because
     many people used it to mean “this code does not emit warnings”, but
     it actually had the effect of checking that the code emits at least
     one warning of any type - like ‘pytest.warns()’ or
     ‘pytest.warns(Warning)’.

   - #8948(15): *note pytest.skip(msg=...): cc, *note
     pytest.fail(msg=...): 114. and *note pytest.exit(msg=...): 1df.
     signatures now accept a ‘reason’ argument instead of ‘msg’.  Using
     ‘msg’ still works, but is deprecated and will be removed in a
     future release.

     This was changed for consistency with *note pytest.mark.skip: 1f3.
     and *note pytest.mark.xfail: 1fa. which both accept ‘reason’ as an
     argument.

   - #8174(16): The following changes have been made to types reachable
     through *note pytest.ExceptionInfo.traceback: 348.:

        - The ‘path’ property of ‘_pytest.code.Code’ returns ‘Path’
          instead of ‘py.path.local’.

        - The ‘path’ property of ‘_pytest.code.TracebackEntry’ returns
          ‘Path’ instead of ‘py.path.local’.

     There was no deprecation period for this change (sorry!).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7259

   (2) https://pypi.org/project/py/

   (3) https://github.com/pytest-dev/pytest/issues/9283

   (4) https://github.com/pytest-dev/pytest/issues/7469

   (5) https://github.com/pytest-dev/pytest/issues/8242

   (6) https://docs.python.org/3/library/unittest.html#unittest.SkipTest

   (7) https://docs.python.org/3/library/unittest.html#unittest.SkipTest

   (8) https://docs.python.org/3/library/unittest.html#unittest.SkipTest

   (9) 
https://docs.python.org/3/library/unittest.html#unittest.TestCase.skipTest

   (10) https://docs.python.org/3/library/unittest.html#unittest.skip

   (11) https://github.com/pytest-dev/pytest/issues/8315

   (12) https://github.com/pytest-dev/pytest/issues/8447

   (13) https://github.com/pytest-dev/pytest/issues/8592

   (14) https://github.com/pytest-dev/pytest/issues/8645

   (15) https://github.com/pytest-dev/pytest/issues/8948

   (16) https://github.com/pytest-dev/pytest/issues/8174


File: pytest.info,  Node: Features,  Next: Improvements<2>,  Prev: Deprecations<2>,  Up: pytest 7 0 0rc1 2021-12-06

47.7.3 Features
---------------

   - #5196(1): Tests are now ordered by definition order in more cases.

     In a class hierarchy, tests from base classes are now consistently
     ordered before tests defined on their subclasses (reverse MRO
     order).

   - #7132(2): Added two environment variables *note PYTEST_THEME: 1ce.
     and *note PYTEST_THEME_MODE: 1cf. to let the users customize the
     pygments theme used.

   - #7259(3): Added *note cache.mkdir(): 219, which is similar to the
     existing ‘cache.makedir()’, but returns a pathlib.Path(4) instead
     of a legacy ‘py.path.local’.

     Added a ‘paths’ type to *note parser.addini(): 29a, as in
     ‘parser.addini("mypaths", "my paths", type="paths")’, which is
     similar to the existing ‘pathlist’, but returns a list of
     pathlib.Path(5) instead of legacy ‘py.path.local’.

   - #7469(6): The types of objects used in pytest’s API are now
     exported so they may be used in type annotations.

     The newly-exported types are:

        - ‘pytest.Config’ for *note Config: 39.

        - ‘pytest.Mark’ for *note marks: 1fc.

        - ‘pytest.MarkDecorator’ for *note mark decorators: 27b.

        - ‘pytest.MarkGenerator’ for the *note pytest.mark: 39a.
          singleton.

        - ‘pytest.Metafunc’ for the *note metafunc: 39a. argument to the
          *note pytest_generate_tests: 2b4. hook.

        - ‘pytest.CallInfo’ for the *note CallInfo: 2cf. type passed to
          various hooks.

        - ‘pytest.PytestPluginManager’ for *note PytestPluginManager:
          16c.

        - ‘pytest.ExceptionInfo’ for the *note ExceptionInfo: 32. type
          returned from *note pytest.raises(): 31. and passed to various
          hooks.

        - ‘pytest.Parser’ for the *note Parser: 28f. type passed to the
          *note pytest_addoption: 297. hook.

        - ‘pytest.OptionGroup’ for the *note OptionGroup: 3cf. type
          returned from the *note parser.addgroup: 3cb. method.

        - ‘pytest.HookRecorder’ for the *note HookRecorder: 22a. type
          returned from *note Pytester: 15f.

        - ‘pytest.RecordedHookCall’ for the *note RecordedHookCall: 22a.
          type returned from *note HookRecorder: 22a.

        - ‘pytest.RunResult’ for the *note RunResult: 160. type returned
          from *note Pytester: 15f.

        - ‘pytest.LineMatcher’ for the *note LineMatcher: 160. type used
          in *note RunResult: 160. and others.

        - ‘pytest.TestReport’ for the *note TestReport: 2ce. type used
          in various hooks.

        - ‘pytest.CollectReport’ for the *note CollectReport: 2d8. type
          used in various hooks.

     Constructing most of them directly is not supported; they are only
     meant for use in type annotations.  Doing so will emit a
     deprecation warning, and may become a hard-error in pytest 8.0.

     Subclassing them is also not supported.  This is not currently
     enforced at runtime, but is detected by type-checkers such as mypy.

   - #7856(7): *note –import-mode=importlib: 464. now works with
     features that depend on modules being on sys.modules(8), such as
     pickle(9) and dataclasses(10).

   - #8144(11): The following hooks now receive an additional
     ‘pathlib.Path’ argument, equivalent to an existing ‘py.path.local’
     argument:

        - *note pytest_ignore_collect: 2ac. - The ‘collection_path’
          parameter (equivalent to existing ‘path’ parameter).

        - *note pytest_collect_file: 2ae. - The ‘file_path’ parameter
          (equivalent to existing ‘path’ parameter).

        - *note pytest_pycollect_makemodule: 2b0. - The ‘module_path’
          parameter (equivalent to existing ‘path’ parameter).

        - *note pytest_report_header: 2df. - The ‘start_path’ parameter
          (equivalent to existing ‘startdir’ parameter).

        - *note pytest_report_collectionfinish: 2e1. - The ‘start_path’
          parameter (equivalent to existing ‘startdir’ parameter).

          Note: The name of the *note Node: 316. arguments and
          attributes (the new attribute being ‘path’) is ‘the opposite’
          of the situation for hooks (the old argument being ‘path’).

          This is an unfortunate artifact due to historical reasons,
          which should be resolved in future versions as we slowly get
          rid of the py(12) dependency (see issue #9283(13) for a longer
          discussion).

   - #8251(14): Implement ‘Node.path’ as a ‘pathlib.Path’.  Both the old
     ‘fspath’ and this new attribute gets set no matter whether ‘path’
     or ‘fspath’ (deprecated) is passed to the constructor.  It is a
     replacement for the ‘fspath’ attribute (which represents the same
     path as ‘py.path.local’).  While ‘fspath’ is not deprecated yet due
     to the ongoing migration of methods like ‘reportinfo()’, we expect
     to deprecate it in a future release.

          Note: The name of the *note Node: 316. arguments and
          attributes (the new attribute being ‘path’) is ‘the opposite’
          of the situation for hooks (the old argument being ‘path’).

          This is an unfortunate artifact due to historical reasons,
          which should be resolved in future versions as we slowly get
          rid of the py(15) dependency (see issue #9283(16) for a longer
          discussion).

   - #8421(17): *note pytest.approx(): c3. now works on Decimal(18)
     within mappings/dicts and sequences/lists.

   - #8606(19): pytest invocations with ‘--fixtures-per-test’ and
     ‘--fixtures’ have been enriched with:

        - Fixture location path printed with the fixture name.

        - First section of the fixture’s docstring printed under the
          fixture name.

        - Whole of fixture’s docstring printed under the fixture name
          using ‘--verbose’ option.

   - #8761(20): New *note pytest.version_tuple: 1d6. attribute, which
     makes it simpler for users to do something depending on the pytest
     version (such as declaring hooks which are introduced in later
     versions).

   - #8789(21): Switch TOML parser from ‘toml’ to ‘tomli’ for TOML
     v1.0.0 support in ‘pyproject.toml’.

   - #8920(22): Added *note pytest.Stash: 338, a facility for plugins to
     store their data on *note Config: 39. and *note Node: 316.s in a
     type-safe and conflict-free manner.  See *note Storing data on
     items across hook functions: 170. for details.

   - #8953(23): *note RunResult: 160. method ‘assert_outcomes’ now
     accepts a ‘warnings’ argument to assert the total number of
     warnings captured.

   - #8954(24): ‘--debug’ flag now accepts a str(25) file to route debug
     logs into, remains defaulted to ‘pytestdebug.log’.

   - #9023(26): Full diffs are now always shown for equality assertions
     of iterables when ‘CI’ or ‘BUILD_NUMBER’ is found in the
     environment, even when ‘-v’ isn’t used.

   - #9113(27): *note RunResult: 160. method ‘assert_outcomes’ now
     accepts a ‘deselected’ argument to assert the total number of
     deselected tests.

   - #9114(28): Added *note pythonpath: 449. setting that adds listed
     paths to sys.path(29) for the duration of the test session.  If you
     currently use the pytest-pythonpath or pytest-srcpaths plugins, you
     should be able to replace them with built-in ‘pythonpath’ setting.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5196

   (2) https://github.com/pytest-dev/pytest/issues/7132

   (3) https://github.com/pytest-dev/pytest/issues/7259

   (4) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (5) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (6) https://github.com/pytest-dev/pytest/issues/7469

   (7) https://github.com/pytest-dev/pytest/issues/7856

   (8) https://docs.python.org/3/library/sys.html#sys.modules

   (9) https://docs.python.org/3/library/pickle.html#module-pickle

   (10) 
https://docs.python.org/3/library/dataclasses.html#module-dataclasses

   (11) https://github.com/pytest-dev/pytest/issues/8144

   (12) https://pypi.org/project/py/

   (13) https://github.com/pytest-dev/pytest/issues/9283

   (14) https://github.com/pytest-dev/pytest/issues/8251

   (15) https://pypi.org/project/py/

   (16) https://github.com/pytest-dev/pytest/issues/9283

   (17) https://github.com/pytest-dev/pytest/issues/8421

   (18) https://docs.python.org/3/library/decimal.html#decimal.Decimal

   (19) https://github.com/pytest-dev/pytest/issues/8606

   (20) https://github.com/pytest-dev/pytest/issues/8761

   (21) https://github.com/pytest-dev/pytest/issues/8789

   (22) https://github.com/pytest-dev/pytest/issues/8920

   (23) https://github.com/pytest-dev/pytest/issues/8953

   (24) https://github.com/pytest-dev/pytest/issues/8954

   (25) https://docs.python.org/3/library/stdtypes.html#str

   (26) https://github.com/pytest-dev/pytest/issues/9023

   (27) https://github.com/pytest-dev/pytest/issues/9113

   (28) https://github.com/pytest-dev/pytest/issues/9114

   (29) https://docs.python.org/3/library/sys.html#sys.path


File: pytest.info,  Node: Improvements<2>,  Next: Bug Fixes<7>,  Prev: Features,  Up: pytest 7 0 0rc1 2021-12-06

47.7.4 Improvements
-------------------

   - #7480(1): A deprecation scheduled to be removed in a major version
     X (e.g.  pytest 7, 8, 9, …) now uses warning category
     ‘PytestRemovedInXWarning’, a subclass of *note
     PytestDeprecationWarning: 428, instead of
     ‘PytestDeprecationWarning’ directly.

     See *note Backwards Compatibility Policy: 118. for more details.

   - #7864(2): Improved error messages when parsing warning filters.

     Previously pytest would show an internal traceback, which besides
     being ugly sometimes would hide the cause of the problem (for
     example an ‘ImportError’ while importing a specific warning type).

   - #8335(3): Improved *note pytest.approx(): c3. assertion messages
     for sequences of numbers.

     The assertion messages now dumps a table with the index and the
     error of each diff.  Example:

          >       assert [1, 2, 3, 4] == pytest.approx([1, 3, 3, 5])
          E       assert comparison failed for 2 values:
          E         Index | Obtained | Expected
          E         1     | 2        | 3 +- 3.0e-06
          E         3     | 4        | 5 +- 5.0e-06

   - #8403(4): By default, pytest will truncate long strings in assert
     errors so they don’t clutter the output too much, currently at
     ‘240’ characters by default.

     However, in some cases the longer output helps, or is even crucial,
     to diagnose a failure.  Using ‘-v’ will now increase the truncation
     threshold to ‘2400’ characters, and ‘-vv’ or higher will disable
     truncation entirely.

   - #8509(5): Fixed issue where unittest.TestCase.setUpClass()(6) is
     not called when a test has ‘/’ in its name since pytest 6.2.0.

     This refers to the path part in pytest node IDs, e.g.
     ‘TestClass::test_it’ in the node ID
     ‘tests/test_file.py::TestClass::test_it’.

     Now, instead of assuming that the test name does not contain ‘/’,
     it is assumed that test path does not contain ‘::’.  We plan to
     hopefully make both of these work in the future.

   - #8803(7): It is now possible to add colors to custom log levels on
     cli log.

     By using ‘add_color_level’ from a ‘pytest_configure’ hook, colors
     can be added:

          logging_plugin = config.pluginmanager.get_plugin('logging-plugin')
          logging_plugin.log_cli_handler.formatter.add_color_level(logging.INFO, 'cyan')
          logging_plugin.log_cli_handler.formatter.add_color_level(logging.SPAM, 'blue')

     See *note Customizing Colors: e8. for more information.

   - #8822(8): When showing fixture paths in ‘--fixtures’ or
     ‘--fixtures-by-test’, fixtures coming from pytest itself now
     display an elided path, rather than the full path to the file in
     the ‘site-packages’ directory.

   - #8898(9): Complex numbers are now treated like floats and integers
     when generating parameterization IDs.

   - #9062(10): ‘--stepwise-skip’ now implicitly enables ‘--stepwise’
     and can be used on its own.

   - #9205(11): *note pytest.Cache.set(): 21b. now preserves key order
     when saving dicts.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7480

   (2) https://github.com/pytest-dev/pytest/issues/7864

   (3) https://github.com/pytest-dev/pytest/issues/8335

   (4) https://github.com/pytest-dev/pytest/issues/8403

   (5) https://github.com/pytest-dev/pytest/issues/8509

   (6) 
https://docs.python.org/3/library/unittest.html#unittest.TestCase.setUpClass

   (7) https://github.com/pytest-dev/pytest/issues/8803

   (8) https://github.com/pytest-dev/pytest/issues/8822

   (9) https://github.com/pytest-dev/pytest/issues/8898

   (10) https://github.com/pytest-dev/pytest/issues/9062

   (11) https://github.com/pytest-dev/pytest/issues/9205


File: pytest.info,  Node: Bug Fixes<7>,  Next: Improved Documentation<3>,  Prev: Improvements<2>,  Up: pytest 7 0 0rc1 2021-12-06

47.7.5 Bug Fixes
----------------

   - #7124(1): Fixed an issue where ‘__main__.py’ would raise an
     ‘ImportError’ when ‘--doctest-modules’ was provided.

   - #8061(2): Fixed failing ‘staticmethod’ test cases if they are
     inherited from a parent test class.

   - #8192(3): ‘testdir.makefile’ now silently accepts values which
     don’t start with ‘.’ to maintain backward compatibility with older
     pytest versions.

     ‘pytester.makefile’ now issues a clearer error if the ‘.’ is
     missing in the ‘ext’ argument.

   - #8258(4): Fixed issue where pytest’s ‘faulthandler’ support would
     not dump traceback on crashes if the faulthandler(5) module was
     already enabled during pytest startup (using ‘python -X dev -m
     pytest’ for example).

   - #8317(6): Fixed an issue where illegal directory characters derived
     from ‘getpass.getuser()’ raised an ‘OSError’.

   - #8367(7): Fix ‘Class.from_parent’ so it forwards extra keyword
     arguments to the constructor.

   - #8377(8): The test selection options ‘pytest -k’ and ‘pytest -m’
     now support matching names containing forward slash (‘/’)
     characters.

   - #8384(9): The ‘@pytest.mark.skip’ decorator now correctly handles
     its arguments.  When the ‘reason’ argument is accidentally given
     both positional and as a keyword (e.g.  because it was confused
     with ‘skipif’), a ‘TypeError’ now occurs.  Before, such tests were
     silently skipped, and the positional argument ignored.
     Additionally, ‘reason’ is now documented correctly as positional or
     keyword (rather than keyword-only).

   - #8394(10): Use private names for internal fixtures that handle
     classic setup/teardown so that they don’t show up with the default
     ‘--fixtures’ invocation (but they still show up with ‘--fixtures
     -v’).

   - #8456(11): The *note required_plugins: 44a. config option now works
     correctly when pre-releases of plugins are installed, rather than
     falsely claiming that those plugins aren’t installed at all.

   - #8464(12): ‘-c <config file>’ now also properly defines ‘rootdir’
     as the directory that contains ‘<config file>’.

   - #8503(13): *note pytest.MonkeyPatch.syspath_prepend(): b2. no
     longer fails when ‘setuptools’ is not installed.  It now only calls
     ‘pkg_resources.fixup_namespace_packages()’ if ‘pkg_resources’ was
     previously imported, because it is not needed otherwise.

   - #8548(14): Introduce fix to handle precision width in
     ‘log-cli-format’ in turn to fix output coloring for certain
     formats.

   - #8796(15): Fixed internal error when skipping doctests.

   - #8983(16): The test selection options ‘pytest -k’ and ‘pytest -m’
     now support matching names containing backslash (‘\’) characters.
     Backslashes are treated literally, not as escape characters (the
     values being matched against are already escaped).

   - #8990(17): Fix ‘pytest -vv’ crashing with an internal exception
     ‘AttributeError: 'str' object has no attribute 'relative_to'’ in
     some cases.

   - #9077(18): Fixed confusing error message when ‘request.fspath’ /
     ‘request.path’ was accessed from a session-scoped fixture.

   - #9131(19): Fixed the URL used by ‘--pastebin’ to use bpa.st(20).

   - #9163(21): The end line number and end column offset are now
     properly set for rewritten assert statements.

   - #9169(22): Support for the ‘files’ API from ‘importlib.resources’
     within rewritten files.

   - #9272(23): The nose compatibility module-level fixtures ‘setup()’
     and ‘teardown()’ are now only called once per module, instead of
     for each test function.  They are now called even if object-level
     ‘setup’/‘teardown’ is defined.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7124

   (2) https://github.com/pytest-dev/pytest/issues/8061

   (3) https://github.com/pytest-dev/pytest/issues/8192

   (4) https://github.com/pytest-dev/pytest/issues/8258

   (5) 
https://docs.python.org/3/library/faulthandler.html#module-faulthandler

   (6) https://github.com/pytest-dev/pytest/issues/8317

   (7) https://github.com/pytest-dev/pytest/issues/8367

   (8) https://github.com/pytest-dev/pytest/issues/8377

   (9) https://github.com/pytest-dev/pytest/issues/8384

   (10) https://github.com/pytest-dev/pytest/issues/8394

   (11) https://github.com/pytest-dev/pytest/issues/8456

   (12) https://github.com/pytest-dev/pytest/issues/8464

   (13) https://github.com/pytest-dev/pytest/issues/8503

   (14) https://github.com/pytest-dev/pytest/issues/8548

   (15) https://github.com/pytest-dev/pytest/issues/8796

   (16) https://github.com/pytest-dev/pytest/issues/8983

   (17) https://github.com/pytest-dev/pytest/issues/8990

   (18) https://github.com/pytest-dev/pytest/issues/9077

   (19) https://github.com/pytest-dev/pytest/issues/9131

   (20) http://bpa.st

   (21) https://github.com/pytest-dev/pytest/issues/9163

   (22) https://github.com/pytest-dev/pytest/issues/9169

   (23) https://github.com/pytest-dev/pytest/issues/9272


File: pytest.info,  Node: Improved Documentation<3>,  Next: Trivial/Internal Changes<3>,  Prev: Bug Fixes<7>,  Up: pytest 7 0 0rc1 2021-12-06

47.7.6 Improved Documentation
-----------------------------

   - #4320(1): Improved docs for ‘pytester.copy_example’.

   - #5105(2): Add automatically generated *note Plugin List: 140.  The
     list is updated on a periodic schedule.

   - #8337(3): Recommend numpy.testing(4) module on *note
     pytest.approx(): c3. documentation.

   - #8655(5): Help text for ‘--pdbcls’ more accurately reflects the
     option’s behavior.

   - #9210(6): Remove incorrect docs about ‘confcutdir’ being a
     configuration option: it can only be set through the ‘--confcutdir’
     command-line option.

   - #9242(7): Upgrade readthedocs configuration to use a ‘newer Ubuntu
     version <https://blog.readthedocs.com/new-build-specification/>`__’
     with better unicode support for PDF docs.

   - #9341(8): Various methods commonly used for *note Working with
     non-python tests: 357. are now correctly documented in the
     reference docs.  They were undocumented previously.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4320

   (2) https://github.com/pytest-dev/pytest/issues/5105

   (3) https://github.com/pytest-dev/pytest/issues/8337

   (4) https://numpy.org/doc/stable/reference/routines.testing.html

   (5) https://github.com/pytest-dev/pytest/issues/8655

   (6) https://github.com/pytest-dev/pytest/issues/9210

   (7) https://github.com/pytest-dev/pytest/issues/9242

   (8) https://github.com/pytest-dev/pytest/issues/9341


File: pytest.info,  Node: Trivial/Internal Changes<3>,  Prev: Improved Documentation<3>,  Up: pytest 7 0 0rc1 2021-12-06

47.7.7 Trivial/Internal Changes
-------------------------------

   - #8133(1): Migrate to ‘setuptools_scm’ 6.x to use
     ‘SETUPTOOLS_SCM_PRETEND_VERSION_FOR_PYTEST’ for more robust release
     tooling.

   - #8174(2): The following changes have been made to internal pytest
     types/functions:

        - The ‘_pytest.code.getfslineno()’ function returns ‘Path’
          instead of ‘py.path.local’.

        - The ‘_pytest.python.path_matches_patterns()’ function takes
          ‘Path’ instead of ‘py.path.local’.

        - The ‘_pytest._code.Traceback.cut()’ function accepts any
          ‘os.PathLike[str]’, not just ‘py.path.local’.

   - #8248(3): Internal Restructure: let ‘python.PyObjMixin’ inherit
     from ‘nodes.Node’ to carry over typing information.

   - #8432(4): Improve error message when *note pytest.skip(): cc. is
     used at module level without passing ‘allow_module_level=True’.

   - #8818(5): Ensure ‘regendoc’ opts out of ‘TOX_ENV’ cachedir
     selection to ensure independent example test runs.

   - #8913(6): The private ‘CallSpec2._arg2scopenum’ attribute has been
     removed after an internal refactoring.

   - #8967(7): *note pytest_assertion_pass: 2f5. is no longer considered
     experimental and future changes to it will be considered more
     carefully.

   - #9202(8): Add github action to upload coverage report to codecov
     instead of bash uploader.

   - #9225(9): Changed the command used to create sdist and wheel
     artifacts: using the build package instead of setup.py.

   - #9351(10): Correct minor typos in doc/en/example/special.rst.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/8133

   (2) https://github.com/pytest-dev/pytest/issues/8174

   (3) https://github.com/pytest-dev/pytest/issues/8248

   (4) https://github.com/pytest-dev/pytest/issues/8432

   (5) https://github.com/pytest-dev/pytest/issues/8818

   (6) https://github.com/pytest-dev/pytest/issues/8913

   (7) https://github.com/pytest-dev/pytest/issues/8967

   (8) https://github.com/pytest-dev/pytest/issues/9202

   (9) https://github.com/pytest-dev/pytest/issues/9225

   (10) https://github.com/pytest-dev/pytest/issues/9351


File: pytest.info,  Node: pytest 6 2 5 2021-08-29,  Next: pytest 6 2 4 2021-05-04,  Prev: pytest 7 0 0rc1 2021-12-06,  Up: Changelog

47.8 pytest 6.2.5 (2021-08-29)
==============================

* Menu:

* Trivial/Internal Changes: Trivial/Internal Changes<4>.


File: pytest.info,  Node: Trivial/Internal Changes<4>,  Up: pytest 6 2 5 2021-08-29

47.8.1 Trivial/Internal Changes
-------------------------------

   - issue #8494(1): Python 3.10 is now supported.

   - issue #9040(2): Enable compatibility with ‘pluggy 1.0’ or later.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/8494

   (2) https://github.com/pytest-dev/pytest/issues/9040


File: pytest.info,  Node: pytest 6 2 4 2021-05-04,  Next: pytest 6 2 3 2021-04-03,  Prev: pytest 6 2 5 2021-08-29,  Up: Changelog

47.9 pytest 6.2.4 (2021-05-04)
==============================

* Menu:

* Bug Fixes: Bug Fixes<8>.


File: pytest.info,  Node: Bug Fixes<8>,  Up: pytest 6 2 4 2021-05-04

47.9.1 Bug Fixes
----------------

   - issue #8539(1): Fixed assertion rewriting on Python 3.10.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/8539


File: pytest.info,  Node: pytest 6 2 3 2021-04-03,  Next: pytest 6 2 2 2021-01-25,  Prev: pytest 6 2 4 2021-05-04,  Up: Changelog

47.10 pytest 6.2.3 (2021-04-03)
===============================

* Menu:

* Bug Fixes: Bug Fixes<9>.


File: pytest.info,  Node: Bug Fixes<9>,  Up: pytest 6 2 3 2021-04-03

47.10.1 Bug Fixes
-----------------

   - issue #8414(1): pytest used to create directories under ‘/tmp’ with
     world-readable permissions.  This means that any user in the system
     was able to read information written by tests in temporary
     directories (such as those created by the ‘tmp_path’/‘tmpdir’
     fixture).  Now the directories are created with private
     permissions.

     pytest used to silently use a pre-existing
     ‘/tmp/pytest-of-<username>’ directory, even if owned by another
     user.  This means another user could pre-create such a directory
     and gain control of another user’s temporary directory.  Now such a
     condition results in an error.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/8414


File: pytest.info,  Node: pytest 6 2 2 2021-01-25,  Next: pytest 6 2 1 2020-12-15,  Prev: pytest 6 2 3 2021-04-03,  Up: Changelog

47.11 pytest 6.2.2 (2021-01-25)
===============================

* Menu:

* Bug Fixes: Bug Fixes<10>.


File: pytest.info,  Node: Bug Fixes<10>,  Up: pytest 6 2 2 2021-01-25

47.11.1 Bug Fixes
-----------------

   - issue #8152(1): Fixed “(<Skipped instance>)” being shown as a skip
     reason in the verbose test summary line when the reason is empty.

   - issue #8249(2): Fix the ‘faulthandler’ plugin for occasions when
     running with ‘twisted.logger’ and using ‘pytest --capture=no’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/8152

   (2) https://github.com/pytest-dev/pytest/issues/8249


File: pytest.info,  Node: pytest 6 2 1 2020-12-15,  Next: pytest 6 2 0 2020-12-12,  Prev: pytest 6 2 2 2021-01-25,  Up: Changelog

47.12 pytest 6.2.1 (2020-12-15)
===============================

* Menu:

* Bug Fixes: Bug Fixes<11>.


File: pytest.info,  Node: Bug Fixes<11>,  Up: pytest 6 2 1 2020-12-15

47.12.1 Bug Fixes
-----------------

   - issue #7678(1): Fixed bug where ‘ImportPathMismatchError’ would be
     raised for files compiled in the host and loaded later from an UNC
     mounted path (Windows).

   - issue #8132(2): Fixed regression in ‘approx’: in 6.2.0 ‘approx’ no
     longer raises ‘TypeError’ when dealing with non-numeric types,
     falling back to normal comparison.  Before 6.2.0, array types like
     tf.DeviceArray fell through to the scalar case, and happened to
     compare correctly to a scalar if they had only one element.  After
     6.2.0, these types began failing, because they inherited neither
     from standard Python number hierarchy nor from ‘numpy.ndarray’.

     ‘approx’ now converts arguments to ‘numpy.ndarray’ if they expose
     the array protocol and are not scalars.  This treats array-like
     objects like numpy arrays, regardless of size.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7678

   (2) https://github.com/pytest-dev/pytest/issues/8132


File: pytest.info,  Node: pytest 6 2 0 2020-12-12,  Next: pytest 6 1 2 2020-10-28,  Prev: pytest 6 2 1 2020-12-15,  Up: Changelog

47.13 pytest 6.2.0 (2020-12-12)
===============================

* Menu:

* Breaking Changes: Breaking Changes<3>.
* Deprecations: Deprecations<3>.
* Features: Features<2>.
* Improvements: Improvements<3>.
* Bug Fixes: Bug Fixes<12>.
* Improved Documentation: Improved Documentation<4>.
* Trivial/Internal Changes: Trivial/Internal Changes<5>.


File: pytest.info,  Node: Breaking Changes<3>,  Next: Deprecations<3>,  Up: pytest 6 2 0 2020-12-12

47.13.1 Breaking Changes
------------------------

   - issue #7808(1): pytest now supports python3.6+ only.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7808


File: pytest.info,  Node: Deprecations<3>,  Next: Features<2>,  Prev: Breaking Changes<3>,  Up: pytest 6 2 0 2020-12-12

47.13.2 Deprecations
--------------------

   - issue #7469(1): Directly constructing/calling the following
     classes/functions is now deprecated:

        - ‘_pytest.cacheprovider.Cache’

        - ‘_pytest.cacheprovider.Cache.for_config()’

        - ‘_pytest.cacheprovider.Cache.clear_cache()’

        - ‘_pytest.cacheprovider.Cache.cache_dir_from_config()’

        - ‘_pytest.capture.CaptureFixture’

        - ‘_pytest.fixtures.FixtureRequest’

        - ‘_pytest.fixtures.SubRequest’

        - ‘_pytest.logging.LogCaptureFixture’

        - ‘_pytest.pytester.Pytester’

        - ‘_pytest.pytester.Testdir’

        - ‘_pytest.recwarn.WarningsRecorder’

        - ‘_pytest.recwarn.WarningsChecker’

        - ‘_pytest.tmpdir.TempPathFactory’

        - ‘_pytest.tmpdir.TempdirFactory’

     These have always been considered private, but now issue a
     deprecation warning, which may become a hard error in pytest 8.0.0.

   - issue #7530(2): The ‘--strict’ command-line option has been
     deprecated, use ‘--strict-markers’ instead.

     We have plans to maybe in the future to reintroduce ‘--strict’ and
     make it an encompassing flag for all strictness related options
     (‘--strict-markers’ and ‘--strict-config’ at the moment, more might
     be introduced in the future).

   - issue #7988(3): The ‘@pytest.yield_fixture’ decorator/function is
     now deprecated.  Use *note pytest.fixture(): 50. instead.

     ‘yield_fixture’ has been an alias for ‘fixture’ for a very long
     time, so can be search/replaced safely.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7469

   (2) https://github.com/pytest-dev/pytest/issues/7530

   (3) https://github.com/pytest-dev/pytest/issues/7988


File: pytest.info,  Node: Features<2>,  Next: Improvements<3>,  Prev: Deprecations<3>,  Up: pytest 6 2 0 2020-12-12

47.13.3 Features
----------------

   - issue #5299(1): pytest now warns about unraisable exceptions and
     unhandled thread exceptions that occur in tests on Python>=3.8.
     See unraisable for more information.

   - issue #7425(2): New *note pytester: 224. fixture, which is
     identical to *note testdir: 1ac. but its methods return
     pathlib.Path(3) when appropriate instead of ‘py.path.local’.

     This is part of the movement to use pathlib.Path(4) objects
     internally, in order to remove the dependency to ‘py’ in the
     future.

     Internally, the old ‘Testdir’ is now a thin wrapper around *note
     Pytester: 15f, preserving the old interface.

   - issue #7695(5): A new hook was added, ‘pytest_markeval_namespace’
     which should return a dictionary.  This dictionary will be used to
     augment the “global” variables available to evaluate
     skipif/xfail/xpass markers.

     Pseudo example

     ‘conftest.py’:

          def pytest_markeval_namespace():
              return {"color": "red"}

     ‘test_func.py’:

          @pytest.mark.skipif("color == 'blue'", reason="Color is not red")
          def test_func():
              assert False

   - issue #8006(6): It is now possible to construct a *note
     MonkeyPatch: bc. object directly as ‘pytest.MonkeyPatch()’, in
     cases when the *note monkeypatch: 1a6. fixture cannot be used.
     Previously some users imported it from the private
     ‘_pytest.monkeypatch.MonkeyPatch’ namespace.

     Additionally, *note MonkeyPatch.context: b4. is now a classmethod,
     and can be used as ‘with MonkeyPatch.context() as mp: ...’.  This
     is the recommended way to use ‘MonkeyPatch’ directly, since unlike
     the ‘monkeypatch’ fixture, an instance created directly is not
     ‘undo()’-ed automatically.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5299

   (2) https://github.com/pytest-dev/pytest/issues/7425

   (3) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (4) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (5) https://github.com/pytest-dev/pytest/issues/7695

   (6) https://github.com/pytest-dev/pytest/issues/8006


File: pytest.info,  Node: Improvements<3>,  Next: Bug Fixes<12>,  Prev: Features<2>,  Up: pytest 6 2 0 2020-12-12

47.13.4 Improvements
--------------------

   - issue #1265(1): Added an ‘__str__’ implementation to the
     ‘LineMatcher’ class which is returned from
     ‘pytester.run_pytest().stdout’ and similar.  It returns the entire
     output, like the existing ‘str()’ method.

   - issue #2044(2): Verbose mode now shows the reason that a test was
     skipped in the test’s terminal line after the “SKIPPED”, “XFAIL” or
     “XPASS”.

   - issue #7469(3) The types of builtin pytest fixtures are now
     exported so they may be used in type annotations of test functions.
     The newly-exported types are:

        - ‘pytest.FixtureRequest’ for the *note request: 1ab. fixture.

        - ‘pytest.Cache’ for the *note cache: da. fixture.

        - ‘pytest.CaptureFixture[str]’ for the *note capfd: 1a0. and
          *note capsys: 1a3. fixtures.

        - ‘pytest.CaptureFixture[bytes]’ for the *note capfdbinary: 1a1.
          and *note capsysbinary: 1a4. fixtures.

        - ‘pytest.LogCaptureFixture’ for the *note caplog: 1a2. fixture.

        - ‘pytest.Pytester’ for the *note pytester: 224. fixture.

        - ‘pytest.Testdir’ for the *note testdir: 1ac. fixture.

        - ‘pytest.TempdirFactory’ for the *note tmpdir_factory: a6.
          fixture.

        - ‘pytest.TempPathFactory’ for the *note tmp_path_factory: 1ad.
          fixture.

        - ‘pytest.MonkeyPatch’ for the *note monkeypatch: 1a6. fixture.

        - ‘pytest.WarningsRecorder’ for the *note recwarn: 1aa. fixture.

     Constructing them is not supported (except for ‘MonkeyPatch’); they
     are only meant for use in type annotations.  Doing so will emit a
     deprecation warning, and may become a hard-error in pytest 8.0.

     Subclassing them is also not supported.  This is not currently
     enforced at runtime, but is detected by type-checkers such as mypy.

   - issue #7527(4): When a comparison between namedtuple(5) instances
     of the same type fails, pytest now shows the differing field names
     (possibly nested) instead of their indexes.

   - issue #7615(6): *note Node.warn: 3c0. now permits any subclass of
     Warning(7), not just *note PytestWarning: 3c1.

   - issue #7701(8): Improved reporting when using ‘--collected-only’.
     It will now show the number of collected tests in the summary
     stats.

   - issue #7710(9): Use strict equality comparison for non-numeric
     types in *note pytest.approx(): c3. instead of raising
     TypeError(10).

     This was the undocumented behavior before 3.7, but is now
     officially a supported feature.

   - issue #7938(11): New ‘--sw-skip’ argument which is a shorthand for
     ‘--stepwise-skip’.

   - issue #8023(12): Added ‘'node_modules'’ to default value for *note
     norecursedirs: 446.

   - issue #8032(13): doClassCleanups(14) (introduced in unittest(15) in
     Python and 3.8) is now called appropriately.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1265

   (2) https://github.com/pytest-dev/pytest/issues/2044

   (3) https://github.com/pytest-dev/pytest/issues/7469

   (4) https://github.com/pytest-dev/pytest/issues/7527

   (5) 
https://docs.python.org/3/library/collections.html#collections.namedtuple

   (6) https://github.com/pytest-dev/pytest/issues/7615

   (7) https://docs.python.org/3/library/exceptions.html#Warning

   (8) https://github.com/pytest-dev/pytest/issues/7701

   (9) https://github.com/pytest-dev/pytest/issues/7710

   (10) https://docs.python.org/3/library/exceptions.html#TypeError

   (11) https://github.com/pytest-dev/pytest/issues/7938

   (12) https://github.com/pytest-dev/pytest/issues/8023

   (13) https://github.com/pytest-dev/pytest/issues/8032

   (14) 
https://docs.python.org/3/library/unittest.html#unittest.TestCase.doClassCleanups

   (15) https://docs.python.org/3/library/unittest.html#module-unittest


File: pytest.info,  Node: Bug Fixes<12>,  Next: Improved Documentation<4>,  Prev: Improvements<3>,  Up: pytest 6 2 0 2020-12-12

47.13.5 Bug Fixes
-----------------

   - issue #4824(1): Fixed quadratic behavior and improved performance
     of collection of items using autouse fixtures and xunit fixtures.

   - issue #7758(2): Fixed an issue where some files in packages are
     getting lost from ‘--lf’ even though they contain tests that
     failed.  Regressed in pytest 5.4.0.

   - issue #7911(3): Directories created by by *note tmp_path: 185. and
     *note tmpdir: a5. are now considered stale after 3 days without
     modification (previous value was 3 hours) to avoid deleting
     directories still in use in long running test suites.

   - issue #7913(4): Fixed a crash or hang in ‘pytester.spawn’ when the
     readline(5) module is involved.

   - issue #7951(6): Fixed handling of recursive symlinks when
     collecting tests.

   - issue #7981(7): Fixed symlinked directories not being followed
     during collection.  Regressed in pytest 6.1.0.

   - issue #8016(8): Fixed only one doctest being collected when using
     ‘pytest --doctest-modules path/to/an/__init__.py’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4824

   (2) https://github.com/pytest-dev/pytest/issues/7758

   (3) https://github.com/pytest-dev/pytest/issues/7911

   (4) https://github.com/pytest-dev/pytest/issues/7913

   (5) https://docs.python.org/3/library/readline.html#module-readline

   (6) https://github.com/pytest-dev/pytest/issues/7951

   (7) https://github.com/pytest-dev/pytest/issues/7981

   (8) https://github.com/pytest-dev/pytest/issues/8016


File: pytest.info,  Node: Improved Documentation<4>,  Next: Trivial/Internal Changes<5>,  Prev: Bug Fixes<12>,  Up: pytest 6 2 0 2020-12-12

47.13.6 Improved Documentation
------------------------------

   - issue #7429(1): Add more information and use cases about skipping
     doctests.

   - issue #7780(2): Classes which should not be inherited from are now
     marked ‘final class’ in the API reference.

   - issue #7872(3): ‘_pytest.config.argparsing.Parser.addini()’ accepts
     explicit ‘None’ and ‘"string"’.

   - issue #7878(4): In pull request section, ask to commit after
     editing changelog and authors file.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7429

   (2) https://github.com/pytest-dev/pytest/issues/7780

   (3) https://github.com/pytest-dev/pytest/issues/7872

   (4) https://github.com/pytest-dev/pytest/issues/7878


File: pytest.info,  Node: Trivial/Internal Changes<5>,  Prev: Improved Documentation<4>,  Up: pytest 6 2 0 2020-12-12

47.13.7 Trivial/Internal Changes
--------------------------------

   - issue #7802(1): The ‘attrs’ dependency requirement is now >=19.2.0
     instead of >=17.4.0.

   - issue #8014(2): ‘.pyc’ files created by pytest’s assertion
     rewriting now conform to the newer PEP 552(3) format on
     Python>=3.7.  (These files are internal and only interpreted by
     pytest itself.)

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7802

   (2) https://github.com/pytest-dev/pytest/issues/8014

   (3) https://peps.python.org/pep-0552/


File: pytest.info,  Node: pytest 6 1 2 2020-10-28,  Next: pytest 6 1 1 2020-10-03,  Prev: pytest 6 2 0 2020-12-12,  Up: Changelog

47.14 pytest 6.1.2 (2020-10-28)
===============================

* Menu:

* Bug Fixes: Bug Fixes<13>.
* Improved Documentation: Improved Documentation<5>.


File: pytest.info,  Node: Bug Fixes<13>,  Next: Improved Documentation<5>,  Up: pytest 6 1 2 2020-10-28

47.14.1 Bug Fixes
-----------------

   - issue #7758(1): Fixed an issue where some files in packages are
     getting lost from ‘--lf’ even though they contain tests that
     failed.  Regressed in pytest 5.4.0.

   - issue #7911(2): Directories created by ‘tmpdir’ are now considered
     stale after 3 days without modification (previous value was 3
     hours) to avoid deleting directories still in use in long running
     test suites.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7758

   (2) https://github.com/pytest-dev/pytest/issues/7911


File: pytest.info,  Node: Improved Documentation<5>,  Prev: Bug Fixes<13>,  Up: pytest 6 1 2 2020-10-28

47.14.2 Improved Documentation
------------------------------

   - issue #7815(1): Improve deprecation warning message for
     ‘pytest._fillfuncargs()’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7815


File: pytest.info,  Node: pytest 6 1 1 2020-10-03,  Next: pytest 6 1 0 2020-09-26,  Prev: pytest 6 1 2 2020-10-28,  Up: Changelog

47.15 pytest 6.1.1 (2020-10-03)
===============================

* Menu:

* Bug Fixes: Bug Fixes<14>.


File: pytest.info,  Node: Bug Fixes<14>,  Up: pytest 6 1 1 2020-10-03

47.15.1 Bug Fixes
-----------------

   - issue #7807(1): Fixed regression in pytest 6.1.0 causing incorrect
     rootdir to be determined in some non-trivial cases where parent
     directories have config files as well.

   - issue #7814(2): Fixed crash in header reporting when *note
     testpaths: 44b. is used and contains absolute paths (regression in
     6.1.0).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7807

   (2) https://github.com/pytest-dev/pytest/issues/7814


File: pytest.info,  Node: pytest 6 1 0 2020-09-26,  Next: pytest 6 0 2 2020-09-04,  Prev: pytest 6 1 1 2020-10-03,  Up: Changelog

47.16 pytest 6.1.0 (2020-09-26)
===============================

* Menu:

* Breaking Changes: Breaking Changes<4>.
* Deprecations: Deprecations<4>.
* Features: Features<3>.
* Improvements: Improvements<4>.
* Bug Fixes: Bug Fixes<15>.
* Improved Documentation: Improved Documentation<6>.
* Trivial/Internal Changes: Trivial/Internal Changes<6>.


File: pytest.info,  Node: Breaking Changes<4>,  Next: Deprecations<4>,  Up: pytest 6 1 0 2020-09-26

47.16.1 Breaking Changes
------------------------

   - issue #5585(1): As per our policy, the following features which
     have been deprecated in the 5.X series are now removed:

        * The ‘funcargnames’ read-only property of ‘FixtureRequest’,
          ‘Metafunc’, and ‘Function’ classes.  Use ‘fixturenames’
          attribute.

        * ‘@pytest.fixture’ no longer supports positional arguments,
          pass all arguments by keyword instead.

        * Direct construction of ‘Node’ subclasses now raise an error,
          use ‘from_parent’ instead.

        * The default value for ‘junit_family’ has changed to ‘xunit2’.
          If you require the old format, add ‘junit_family=xunit1’ to
          your configuration file.

        * The ‘TerminalReporter’ no longer has a ‘writer’ attribute.
          Plugin authors may use the public functions of the
          ‘TerminalReporter’ instead of accessing the ‘TerminalWriter’
          object directly.

        * The ‘--result-log’ option has been removed.  Users are
          recommended to use the pytest-reportlog(2) plugin instead.

     For more information consult *note Deprecations and Removals: 4d1.
     in the docs.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5585

   (2) https://github.com/pytest-dev/pytest-reportlog


File: pytest.info,  Node: Deprecations<4>,  Next: Features<3>,  Prev: Breaking Changes<4>,  Up: pytest 6 1 0 2020-09-26

47.16.2 Deprecations
--------------------

   - issue #6981(1): The ‘pytest.collect’ module is deprecated: all its
     names can be imported from ‘pytest’ directly.

   - issue #7097(2): The ‘pytest._fillfuncargs’ function is deprecated.
     This function was kept for backward compatibility with an older
     plugin.

     It’s functionality is not meant to be used directly, but if you
     must replace it, use ‘function._request._fillfixtures()’ instead,
     though note this is not a public API and may break in the future.

   - issue #7210(3): The special ‘-k '-expr'’ syntax to ‘-k’ is
     deprecated.  Use ‘-k 'not expr'’ instead.

     The special ‘-k 'expr:'’ syntax to ‘-k’ is deprecated.  Please open
     an issue if you use this and want a replacement.

   - issue #7255(4): The ‘pytest_warning_captured’ hook is deprecated in
     favor of *note pytest_warning_recorded: 2ef, and will be removed in
     a future version.

   - issue #7648(5): The ‘gethookproxy()’ and ‘isinitpath()’ methods of
     ‘FSCollector’ and ‘Package’ are deprecated; use
     ‘self.session.gethookproxy()’ and ‘self.session.isinitpath()’
     instead.  This should work on all pytest versions.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6981

   (2) https://github.com/pytest-dev/pytest/issues/7097

   (3) https://github.com/pytest-dev/pytest/issues/7210

   (4) https://github.com/pytest-dev/pytest/issues/7255

   (5) https://github.com/pytest-dev/pytest/issues/7648


File: pytest.info,  Node: Features<3>,  Next: Improvements<4>,  Prev: Deprecations<4>,  Up: pytest 6 1 0 2020-09-26

47.16.3 Features
----------------

   - issue #7667(1): New ‘--durations-min’ command-line flag controls
     the minimal duration for inclusion in the slowest list of tests
     shown by ‘--durations’.  Previously this was hard-coded to
     ‘0.005s’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7667


File: pytest.info,  Node: Improvements<4>,  Next: Bug Fixes<15>,  Prev: Features<3>,  Up: pytest 6 1 0 2020-09-26

47.16.4 Improvements
--------------------

   - issue #6681(1): Internal pytest warnings issued during the early
     stages of initialization are now properly handled and can filtered
     through *note filterwarnings: 434. or ‘--pythonwarnings/-W’.

     This also fixes a number of long standing issues: issue #2891(2),
     issue #7620(3), issue #7426(4).

   - issue #7572(5): When a plugin listed in ‘required_plugins’ is
     missing or an unknown config key is used with ‘--strict-config’, a
     simple error message is now shown instead of a stacktrace.

   - issue #7685(6): Added two new attributes ‘rootpath’ and ‘inipath’
     to *note Config: 39.  These attributes are pathlib.Path(7) versions
     of the existing ‘rootdir’ and ‘inifile’ attributes, and should be
     preferred over them when possible.

   - issue #7780(8): Public classes which are not designed to be
     inherited from are now marked @final(9).  Code which inherits from
     these classes will trigger a type-checking (e.g.  mypy) error, but
     will still work in runtime.  Currently the ‘final’ designation does
     not appear in the API Reference but hopefully will in the future.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6681

   (2) https://github.com/pytest-dev/pytest/issues/2891

   (3) https://github.com/pytest-dev/pytest/issues/7620

   (4) https://github.com/pytest-dev/pytest/issues/7426

   (5) https://github.com/pytest-dev/pytest/issues/7572

   (6) https://github.com/pytest-dev/pytest/issues/7685

   (7) https://docs.python.org/3/library/pathlib.html#pathlib.Path

   (8) https://github.com/pytest-dev/pytest/issues/7780

   (9) https://docs.python.org/3/library/typing.html#typing.final


File: pytest.info,  Node: Bug Fixes<15>,  Next: Improved Documentation<6>,  Prev: Improvements<4>,  Up: pytest 6 1 0 2020-09-26

47.16.5 Bug Fixes
-----------------

   - issue #1953(1): Fixed error when overwriting a parametrized
     fixture, while also reusing the super fixture value.

          # conftest.py
          import pytest


          @pytest.fixture(params=[1, 2])
          def foo(request):
              return request.param


          # test_foo.py
          import pytest


          @pytest.fixture
          def foo(foo):
              return foo * 2

   - issue #4984(2): Fixed an internal error crash with ‘IndexError:
     list index out of range’ when collecting a module which starts with
     a decorated function, the decorator raises, and assertion rewriting
     is enabled.

   - issue #7591(3): pylint shouldn’t complain anymore about
     unimplemented abstract methods when inheriting from *note File:
     357.

   - issue #7628(4): Fixed test collection when a full path without a
     drive letter was passed to pytest on Windows (for example
     ‘\projects\tests\test.py’ instead of
     ‘c:\projects\tests\pytest.py’).

   - issue #7638(5): Fix handling of command-line options that appear as
     paths but trigger an OS-level syntax error on Windows, such as the
     options used internally by ‘pytest-xdist’.

   - issue #7742(6): Fixed INTERNALERROR when accessing locals / globals
     with faulty ‘exec’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1953

   (2) https://github.com/pytest-dev/pytest/issues/4984

   (3) https://github.com/pytest-dev/pytest/issues/7591

   (4) https://github.com/pytest-dev/pytest/issues/7628

   (5) https://github.com/pytest-dev/pytest/issues/7638

   (6) https://github.com/pytest-dev/pytest/issues/7742


File: pytest.info,  Node: Improved Documentation<6>,  Next: Trivial/Internal Changes<6>,  Prev: Bug Fixes<15>,  Up: pytest 6 1 0 2020-09-26

47.16.6 Improved Documentation
------------------------------

   - issue #1477(1): Removed faq.rst and its reference in contents.rst.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1477


File: pytest.info,  Node: Trivial/Internal Changes<6>,  Prev: Improved Documentation<6>,  Up: pytest 6 1 0 2020-09-26

47.16.7 Trivial/Internal Changes
--------------------------------

   - issue #7536(1): The internal ‘junitxml’ plugin has rewritten to use
     ‘xml.etree.ElementTree’.  The order of attributes in XML elements
     might differ.  Some unneeded escaping is no longer performed.

   - issue #7587(2): The dependency on the ‘more-itertools’ package has
     been removed.

   - issue #7631(3): The result type of ‘capfd.readouterr()’ (and
     similar) is no longer a namedtuple, but should behave like one in
     all respects.  This was done for technical reasons.

   - issue #7671(4): When collecting tests, pytest finds test classes
     and functions by examining the attributes of python objects
     (modules, classes and instances).  To speed up this process, pytest
     now ignores builtin attributes (like ‘__class__’, ‘__delattr__’ and
     ‘__new__’) without consulting the *note python_classes: 117. and
     *note python_functions: 447. configuration options and without
     passing them to plugins using the *note pytest_pycollect_makeitem:
     2b2. hook.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7536

   (2) https://github.com/pytest-dev/pytest/issues/7587

   (3) https://github.com/pytest-dev/pytest/issues/7631

   (4) https://github.com/pytest-dev/pytest/issues/7671


File: pytest.info,  Node: pytest 6 0 2 2020-09-04,  Next: pytest 6 0 1 2020-07-30,  Prev: pytest 6 1 0 2020-09-26,  Up: Changelog

47.17 pytest 6.0.2 (2020-09-04)
===============================

* Menu:

* Bug Fixes: Bug Fixes<16>.


File: pytest.info,  Node: Bug Fixes<16>,  Up: pytest 6 0 2 2020-09-04

47.17.1 Bug Fixes
-----------------

   - issue #7148(1): Fixed ‘--log-cli’ potentially causing unrelated
     ‘print’ output to be swallowed.

   - issue #7672(2): Fixed log-capturing level restored incorrectly if
     ‘caplog.set_level’ is called more than once.

   - issue #7686(3): Fixed ‘NotSetType.token’ being used as the
     parameter ID when the parametrization list is empty.  Regressed in
     pytest 6.0.0.

   - issue #7707(4): Fix internal error when handling some exceptions
     that contain multiple lines or the style uses multiple lines
     (‘--tb=line’ for example).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7148

   (2) https://github.com/pytest-dev/pytest/issues/7672

   (3) https://github.com/pytest-dev/pytest/issues/7686

   (4) https://github.com/pytest-dev/pytest/issues/7707


File: pytest.info,  Node: pytest 6 0 1 2020-07-30,  Next: pytest 6 0 0 2020-07-28,  Prev: pytest 6 0 2 2020-09-04,  Up: Changelog

47.18 pytest 6.0.1 (2020-07-30)
===============================

* Menu:

* Bug Fixes: Bug Fixes<17>.


File: pytest.info,  Node: Bug Fixes<17>,  Up: pytest 6 0 1 2020-07-30

47.18.1 Bug Fixes
-----------------

   - issue #7394(1): Passing an empty ‘help’ value to
     ‘Parser.add_option’ is now accepted instead of crashing when
     running ‘pytest --help’.  Passing ‘None’ raises a more informative
     ‘TypeError’.

   - issue #7558(2): Fix pylint ‘not-callable’ lint on
     ‘pytest.mark.parametrize()’ and the other builtin marks: ‘skip’,
     ‘skipif’, ‘xfail’, ‘usefixtures’, ‘filterwarnings’.

   - issue #7559(3): Fix regression in plugins using
     ‘TestReport.longreprtext’ (such as ‘pytest-html’) when
     ‘TestReport.longrepr’ is not a string.

   - issue #7569(4): Fix logging capture handler’s level not reset on
     teardown after a call to ‘caplog.set_level()’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7394

   (2) https://github.com/pytest-dev/pytest/issues/7558

   (3) https://github.com/pytest-dev/pytest/issues/7559

   (4) https://github.com/pytest-dev/pytest/issues/7569


File: pytest.info,  Node: pytest 6 0 0 2020-07-28,  Next: pytest 6 0 0rc1 2020-07-08,  Prev: pytest 6 0 1 2020-07-30,  Up: Changelog

47.19 pytest 6.0.0 (2020-07-28)
===============================

(‘Please see the full set of changes for this release also in the
6.0.0rc1 notes below’)

* Menu:

* Breaking Changes: Breaking Changes<5>.
* Features: Features<4>.
* Improvements: Improvements<5>.
* Bug Fixes: Bug Fixes<18>.
* Improved Documentation: Improved Documentation<7>.
* Trivial/Internal Changes: Trivial/Internal Changes<7>.


File: pytest.info,  Node: Breaking Changes<5>,  Next: Features<4>,  Up: pytest 6 0 0 2020-07-28

47.19.1 Breaking Changes
------------------------

   - issue #5584(1): ‘PytestDeprecationWarning are now errors by
     default.’

     Following our plan to remove deprecated features with as little
     disruption as possible, all warnings of type
     ‘PytestDeprecationWarning’ now generate errors instead of warning
     messages.

     ‘The affected features will be effectively removed in pytest 6.1’,
     so please consult the *note Deprecations and Removals: 4d1. section
     in the docs for directions on how to update existing code.

     In the pytest ‘6.0.X’ series, it is possible to change the errors
     back into warnings as a stopgap measure by adding this to your
     ‘pytest.ini’ file:

          [pytest]
          filterwarnings =
              ignore::pytest.PytestDeprecationWarning

     But this will stop working when pytest ‘6.1’ is released.

     ‘If you have concerns’ about the removal of a specific feature,
     please add a comment to issue #5584(2).

   - issue #7472(3): The ‘exec_()’ and ‘is_true()’ methods of
     ‘_pytest._code.Frame’ have been removed.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5584

   (2) https://github.com/pytest-dev/pytest/issues/5584

   (3) https://github.com/pytest-dev/pytest/issues/7472


File: pytest.info,  Node: Features<4>,  Next: Improvements<5>,  Prev: Breaking Changes<5>,  Up: pytest 6 0 0 2020-07-28

47.19.2 Features
----------------

   - issue #7464(1): Added support for *note NO_COLOR: 41f. and *note
     FORCE_COLOR: 420. environment variables to control colored output.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7464


File: pytest.info,  Node: Improvements<5>,  Next: Bug Fixes<18>,  Prev: Features<4>,  Up: pytest 6 0 0 2020-07-28

47.19.3 Improvements
--------------------

   - issue #7467(1): ‘--log-file’ CLI option and ‘log_file’ ini marker
     now create subdirectories if needed.

   - issue #7489(2): The *note pytest.raises(): 31. function has a
     clearer error message when ‘match’ equals the obtained string but
     is not a regex match.  In this case it is suggested to escape the
     regex.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7467

   (2) https://github.com/pytest-dev/pytest/issues/7489


File: pytest.info,  Node: Bug Fixes<18>,  Next: Improved Documentation<7>,  Prev: Improvements<5>,  Up: pytest 6 0 0 2020-07-28

47.19.4 Bug Fixes
-----------------

   - issue #7392(1): Fix the reported location of tests skipped with
     ‘@pytest.mark.skip’ when ‘--runxfail’ is used.

   - issue #7491(2): *note tmpdir: a5. and *note tmp_path: 185. no
     longer raise an error if the lock to check for stale temporary
     directories is not accessible.

   - issue #7517(3): Preserve line endings when captured via ‘capfd’.

   - issue #7534(4): Restored the previous formatting of
     ‘TracebackEntry.__str__’ which was changed by accident.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7392

   (2) https://github.com/pytest-dev/pytest/issues/7491

   (3) https://github.com/pytest-dev/pytest/issues/7517

   (4) https://github.com/pytest-dev/pytest/issues/7534


File: pytest.info,  Node: Improved Documentation<7>,  Next: Trivial/Internal Changes<7>,  Prev: Bug Fixes<18>,  Up: pytest 6 0 0 2020-07-28

47.19.5 Improved Documentation
------------------------------

   - issue #7422(1): Clarified when the ‘usefixtures’ mark can apply
     fixtures to test.

   - issue #7441(2): Add a note about ‘-q’ option used in getting
     started guide.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7422

   (2) https://github.com/pytest-dev/pytest/issues/7441


File: pytest.info,  Node: Trivial/Internal Changes<7>,  Prev: Improved Documentation<7>,  Up: pytest 6 0 0 2020-07-28

47.19.6 Trivial/Internal Changes
--------------------------------

   - issue #7389(1): Fixture scope ‘package’ is no longer considered
     experimental.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7389


File: pytest.info,  Node: pytest 6 0 0rc1 2020-07-08,  Next: pytest 5 4 3 2020-06-02,  Prev: pytest 6 0 0 2020-07-28,  Up: Changelog

47.20 pytest 6.0.0rc1 (2020-07-08)
==================================

* Menu:

* Breaking Changes: Breaking Changes<6>.
* Deprecations: Deprecations<5>.
* Features: Features<5>.
* Improvements: Improvements<6>.
* Bug Fixes: Bug Fixes<19>.
* Improved Documentation: Improved Documentation<8>.
* Trivial/Internal Changes: Trivial/Internal Changes<8>.


File: pytest.info,  Node: Breaking Changes<6>,  Next: Deprecations<5>,  Up: pytest 6 0 0rc1 2020-07-08

47.20.1 Breaking Changes
------------------------

   - issue #1316(1): ‘TestReport.longrepr’ is now always an instance of
     ‘ReprExceptionInfo’.  Previously it was a ‘str’ when a test failed
     with ‘pytest.fail(..., pytrace=False)’.

   - issue #5965(2): symlinks are no longer resolved during collection
     and matching ‘conftest.py’ files with test file paths.

     Resolving symlinks for the current directory and during collection
     was introduced as a bugfix in 3.9.0, but it actually is a new
     feature which had unfortunate consequences in Windows and
     surprising results in other platforms.

     The team decided to step back on resolving symlinks at all,
     planning to review this in the future with a more solid solution
     (see discussion in pull request #6523(3) for details).

     This might break test suites which made use of this feature; the
     fix is to create a symlink for the entire test tree, and not only
     to partial files/tress as it was possible previously.

   - issue #6505(4): ‘Testdir.run().parseoutcomes()’ now always returns
     the parsed nouns in plural form.

     Originally ‘parseoutcomes()’ would always returns the nouns in
     plural form, but a change meant to improve the terminal summary by
     using singular form single items (‘1 warning’ or ‘1 error’) caused
     an unintended regression by changing the keys returned by
     ‘parseoutcomes()’.

     Now the API guarantees to always return the plural form, so calls
     like this:

          result = testdir.runpytest()
          result.assert_outcomes(error=1)

     Need to be changed to:

          result = testdir.runpytest()
          result.assert_outcomes(errors=1)

   - issue #6903(5): The ‘os.dup()’ function is now assumed to exist.
     We are not aware of any supported Python 3 implementations which do
     not provide it.

   - issue #7040(6): ‘-k’ no longer matches against the names of the
     directories outside the test session root.

     Also, ‘pytest.Package.name’ is now just the name of the directory
     containing the package’s ‘__init__.py’ file, instead of the full
     path.  This is consistent with how the other nodes are named, and
     also one of the reasons why ‘-k’ would match against any directory
     containing the test suite.

   - issue #7122(7): Expressions given to the ‘-m’ and ‘-k’ options are
     no longer evaluated using Python’s eval()(8).  The format supports
     ‘or’, ‘and’, ‘not’, parenthesis and general identifiers to match
     against.  Python constants, keywords or other operators are no
     longer evaluated differently.

   - issue #7135(9): Pytest now uses its own ‘TerminalWriter’ class
     instead of using the one from the ‘py’ library.  Plugins generally
     access this class through ‘TerminalReporter.writer’,
     ‘TerminalReporter.write()’ (and similar methods), or
     ‘_pytest.config.create_terminal_writer()’.

     The following breaking changes were made:

        - Output (‘write()’ method and others) no longer flush
          implicitly; the flushing behavior of the underlying file is
          respected.  To flush explicitly (for example, if you want
          output to be shown before an end-of-line is printed), use
          ‘write(flush=True)’ or ‘terminal_writer.flush()’.

        - Explicit Windows console support was removed, delegated to the
          colorama library.

        - Support for writing ‘bytes’ was removed.

        - The ‘reline’ method and ‘chars_on_current_line’ property were
          removed.

        - The ‘stringio’ and ‘encoding’ arguments was removed.

        - Support for passing a callable instead of a file was removed.

   - issue #7224(10): The ‘item.catch_log_handler’ and
     ‘item.catch_log_handlers’ attributes, set by the logging plugin and
     never meant to be public, are no longer available.

     The deprecated ‘--no-print-logs’ option and ‘log_print’ ini option
     are removed.  Use ‘--show-capture’ instead.

   - issue #7226(11): Removed the unused ‘args’ parameter from
     ‘pytest.Function.__init__’.

   - issue #7418(12): Removed the ‘pytest_doctest_prepare_content’ hook
     specification.  This hook hasn’t been triggered by pytest for at
     least 10 years.

   - issue #7438(13): Some changes were made to the internal
     ‘_pytest._code.source’, listed here for the benefit of plugin
     authors who may be using it:

        - The ‘deindent’ argument to ‘Source()’ has been removed, now it
          is always true.

        - Support for zero or multiple arguments to ‘Source()’ has been
          removed.

        - Support for comparing ‘Source’ with an ‘str’ has been removed.

        - The methods ‘Source.isparseable()’ and ‘Source.putaround()’
          have been removed.

        - The method ‘Source.compile()’ and function
          ‘_pytest._code.compile()’ have been removed; use plain
          ‘compile()’ instead.

        - The function ‘_pytest._code.source.getsource()’ has been
          removed; use ‘Source()’ directly instead.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1316

   (2) https://github.com/pytest-dev/pytest/issues/5965

   (3) https://github.com/pytest-dev/pytest/pull/6523

   (4) https://github.com/pytest-dev/pytest/issues/6505

   (5) https://github.com/pytest-dev/pytest/issues/6903

   (6) https://github.com/pytest-dev/pytest/issues/7040

   (7) https://github.com/pytest-dev/pytest/issues/7122

   (8) https://docs.python.org/3/library/functions.html#eval

   (9) https://github.com/pytest-dev/pytest/issues/7135

   (10) https://github.com/pytest-dev/pytest/issues/7224

   (11) https://github.com/pytest-dev/pytest/issues/7226

   (12) https://github.com/pytest-dev/pytest/issues/7418

   (13) https://github.com/pytest-dev/pytest/issues/7438


File: pytest.info,  Node: Deprecations<5>,  Next: Features<5>,  Prev: Breaking Changes<6>,  Up: pytest 6 0 0rc1 2020-07-08

47.20.2 Deprecations
--------------------

   - issue #7210(1): The special ‘-k '-expr'’ syntax to ‘-k’ is
     deprecated.  Use ‘-k 'not expr'’ instead.

     The special ‘-k 'expr:'’ syntax to ‘-k’ is deprecated.  Please open
     an issue if you use this and want a replacement.

   - issue #4049(2): ‘pytest_warning_captured’ is deprecated in favor of
     the ‘pytest_warning_recorded’ hook.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7210

   (2) https://github.com/pytest-dev/pytest/issues/4049


File: pytest.info,  Node: Features<5>,  Next: Improvements<6>,  Prev: Deprecations<5>,  Up: pytest 6 0 0rc1 2020-07-08

47.20.3 Features
----------------

   - issue #1556(1): pytest now supports ‘pyproject.toml’ files for
     configuration.

     The configuration options is similar to the one available in other
     formats, but must be defined in a ‘[tool.pytest.ini_options]’ table
     to be picked up by pytest:

          # pyproject.toml
          [tool.pytest.ini_options]
          minversion = "6.0"
          addopts = "-ra -q"
          testpaths = [
              "tests",
              "integration",
          ]

     More information can be found *note in the docs: 1bd.

   - issue #3342(2): pytest now includes inline type annotations and
     exposes them to user programs.  Most of the user-facing API is
     covered, as well as internal code.

     If you are running a type checker such as mypy on your tests, you
     may start noticing type errors indicating incorrect usage.  If you
     run into an error that you believe to be incorrect, please let us
     know in an issue.

     The types were developed against mypy version 0.780.  Versions
     before 0.750 are known not to work.  We recommend using the latest
     version.  Other type checkers may work as well, but they are not
     officially verified to work by pytest yet.

   - issue #4049(3): Introduced a new hook named
     ‘pytest_warning_recorded’ to convey information about warnings
     captured by the internal ‘pytest’ warnings plugin.

     This hook is meant to replace ‘pytest_warning_captured’, which is
     deprecated and will be removed in a future release.

   - issue #6471(4): New command-line flags:

        * ‘--no-header’: disables the initial header, including
          platform, version, and plugins.

        * ‘--no-summary’: disables the final test summary, including
          warnings.

   - issue #6856(5): A warning is now shown when an unknown key is read
     from a config INI file.

     The ‘--strict-config’ flag has been added to treat these warnings
     as errors.

   - issue #6906(6): Added ‘--code-highlight’ command line option to
     enable/disable code highlighting in terminal output.

   - issue #7245(7): New ‘--import-mode=importlib’ option that uses
     importlib(8) to import test modules.

     Traditionally pytest used ‘__import__’ while changing ‘sys.path’ to
     import test modules (which also changes ‘sys.modules’ as a
     side-effect), which works but has a number of drawbacks, like
     requiring test modules that don’t live in packages to have unique
     names (as they need to reside under a unique name in
     ‘sys.modules’).

     ‘--import-mode=importlib’ uses more fine grained import mechanisms
     from ‘importlib’ which don’t require pytest to change ‘sys.path’ or
     ‘sys.modules’ at all, eliminating much of the drawbacks of the
     previous mode.

     We intend to make ‘--import-mode=importlib’ the default in future
     versions, so users are encouraged to try the new mode and provide
     feedback (both positive or negative) in issue issue #7245(9).

     You can read more about this option in *note the documentation:
     464.

   - issue #7305(10): New ‘required_plugins’ configuration option allows
     the user to specify a list of plugins, including version
     information, that are required for pytest to run.  An error is
     raised if any required plugins are not found when running pytest.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1556

   (2) https://github.com/pytest-dev/pytest/issues/3342

   (3) https://github.com/pytest-dev/pytest/issues/4049

   (4) https://github.com/pytest-dev/pytest/issues/6471

   (5) https://github.com/pytest-dev/pytest/issues/6856

   (6) https://github.com/pytest-dev/pytest/issues/6906

   (7) https://github.com/pytest-dev/pytest/issues/7245

   (8) https://docs.python.org/3/library/importlib.html#module-importlib

   (9) https://github.com/pytest-dev/pytest/issues/7245

   (10) https://github.com/pytest-dev/pytest/issues/7305


File: pytest.info,  Node: Improvements<6>,  Next: Bug Fixes<19>,  Prev: Features<5>,  Up: pytest 6 0 0rc1 2020-07-08

47.20.4 Improvements
--------------------

   - issue #4375(1): The ‘pytest’ command now suppresses the
     ‘BrokenPipeError’ error message that is printed to stderr when the
     output of ‘pytest’ is piped and and the pipe is closed by the
     piped-to program (common examples are ‘less’ and ‘head’).

   - issue #4391(2): Improved precision of test durations measurement.
     ‘CallInfo’ items now have a new ‘<CallInfo>.duration’ attribute,
     created using ‘time.perf_counter()’.  This attribute is used to
     fill the ‘<TestReport>.duration’ attribute, which is more accurate
     than the previous ‘<CallInfo>.stop - <CallInfo>.start’ (as these
     are based on ‘time.time()’).

   - issue #4675(3): Rich comparison for dataclasses and ‘attrs’-classes
     is now recursive.

   - issue #6285(4): Exposed the ‘pytest.FixtureLookupError’ exception
     which is raised by ‘request.getfixturevalue()’ (where ‘request’ is
     a ‘FixtureRequest’ fixture) when a fixture with the given name
     cannot be returned.

   - issue #6433(5): If an error is encountered while formatting the
     message in a logging call, for example ‘logging.warning("oh no!:
     %s: %s", "first")’ (a second argument is missing), pytest now
     propagates the error, likely causing the test to fail.

     Previously, such a mistake would cause an error to be printed to
     stderr, which is not displayed by default for passing tests.  This
     change makes the mistake visible during testing.

     You may suppress this behavior temporarily or permanently by
     setting ‘logging.raiseExceptions = False’.

   - issue #6817(6): Explicit new-lines in help texts of command-line
     options are preserved, allowing plugins better control of the help
     displayed to users.

   - issue #6940(7): When using the ‘--duration’ option, the terminal
     message output is now more precise about the number and duration of
     hidden items.

   - issue #6991(8): Collected files are displayed after any reports
     from hooks, e.g.  the status from ‘--lf’.

   - issue #7091(9): When ‘fd’ capturing is used, through ‘--capture=fd’
     or the ‘capfd’ and ‘capfdbinary’ fixtures, and the file descriptor
     (0, 1, 2) cannot be duplicated, FD capturing is still performed.
     Previously, direct writes to the file descriptors would fail or be
     lost in this case.

   - issue #7119(10): Exit with an error if the ‘--basetemp’ argument is
     empty, is the current working directory or is one of the parent
     directories.  This is done to protect against accidental data loss,
     as any directory passed to this argument is cleared.

   - issue #7128(11): ‘pytest --version’ now displays just the pytest
     version, while ‘pytest --version --version’ displays more verbose
     information including plugins.  This is more consistent with how
     other tools show ‘--version’.

   - issue #7133(12): ‘caplog.set_level()’ will now override any *note
     log_level: ed. set via the CLI or configuration file.

   - issue #7159(13): ‘caplog.set_level()’ and ‘caplog.at_level()’ no
     longer affect the level of logs that are shown in the ‘Captured log
     report’ report section.

   - issue #7348(14): Improve recursive diff report for comparison
     asserts on dataclasses / attrs.

   - issue #7385(15): ‘--junitxml’ now includes the exception cause in
     the ‘message’ XML attribute for failures during setup and teardown.

     Previously:

          <error message="test setup failure">

     Now:

          <error message="failed on setup with &quot;ValueError: Some error during setup&quot;">

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4375

   (2) https://github.com/pytest-dev/pytest/issues/4391

   (3) https://github.com/pytest-dev/pytest/issues/4675

   (4) https://github.com/pytest-dev/pytest/issues/6285

   (5) https://github.com/pytest-dev/pytest/issues/6433

   (6) https://github.com/pytest-dev/pytest/issues/6817

   (7) https://github.com/pytest-dev/pytest/issues/6940

   (8) https://github.com/pytest-dev/pytest/issues/6991

   (9) https://github.com/pytest-dev/pytest/issues/7091

   (10) https://github.com/pytest-dev/pytest/issues/7119

   (11) https://github.com/pytest-dev/pytest/issues/7128

   (12) https://github.com/pytest-dev/pytest/issues/7133

   (13) https://github.com/pytest-dev/pytest/issues/7159

   (14) https://github.com/pytest-dev/pytest/issues/7348

   (15) https://github.com/pytest-dev/pytest/issues/7385


File: pytest.info,  Node: Bug Fixes<19>,  Next: Improved Documentation<8>,  Prev: Improvements<6>,  Up: pytest 6 0 0rc1 2020-07-08

47.20.5 Bug Fixes
-----------------

   - issue #1120(1): Fix issue where directories from *note tmpdir: a5.
     are not removed properly when multiple instances of pytest are
     running in parallel.

   - issue #4583(2): Prevent crashing and provide a user-friendly error
     when a marker expression (‘-m’) invoking of eval()(3) raises any
     exception.

   - issue #4677(4): The path shown in the summary report for SKIPPED
     tests is now always relative.  Previously it was sometimes
     absolute.

   - issue #5456(5): Fix a possible race condition when trying to remove
     lock files used to control access to folders created by *note
     tmp_path: 185. and *note tmpdir: a5.

   - issue #6240(6): Fixes an issue where logging during collection step
     caused duplication of log messages to stderr.

   - issue #6428(7): Paths appearing in error messages are now correct
     in case the current working directory has changed since the start
     of the session.

   - issue #6755(8): Support deleting paths longer than 260 characters
     on windows created inside *note tmpdir: a5.

   - issue #6871(9): Fix crash with captured output when using *note
     capsysbinary: 1a4.

   - issue #6909(10): Revert the change introduced by pull request
     #6330(11), which required all arguments to
     ‘@pytest.mark.parametrize’ to be explicitly defined in the function
     signature.

     The intention of the original change was to remove what was
     expected to be an unintended/surprising behavior, but it turns out
     many people relied on it, so the restriction has been reverted.

   - issue #6910(12): Fix crash when plugins return an unknown stats
     while using the ‘--reportlog’ option.

   - issue #6924(13): Ensure a ‘unittest.IsolatedAsyncioTestCase’ is
     actually awaited.

   - issue #6925(14): Fix ‘TerminalRepr’ instances to be hashable again.

   - issue #6947(15): Fix regression where functions registered with
     unittest.TestCase.addCleanup()(16) were not being called on test
     failures.

   - issue #6951(17): Allow users to still set the deprecated
     ‘TerminalReporter.writer’ attribute.

   - issue #6956(18): Prevent pytest from printing
     ‘ConftestImportFailure’ traceback to stdout.

   - issue #6991(19): Fix regressions with ‘--lf’ filtering too much
     since pytest 5.4.

   - issue #6992(20): Revert “tmpdir: clean up indirection via config
     for factories” issue #6767(21) as it breaks pytest-xdist.

   - issue #7061(22): When a yielding fixture fails to yield a value,
     report a test setup error instead of crashing.

   - issue #7076(23): The path of file skipped by ‘@pytest.mark.skip’ in
     the SKIPPED report is now relative to invocation directory.
     Previously it was relative to root directory.

   - issue #7110(24): Fixed regression: ‘asyncbase.TestCase’ tests are
     executed correctly again.

   - issue #7126(25): ‘--setup-show’ now doesn’t raise an error when a
     bytes value is used as a ‘parametrize’ parameter when Python is
     called with the ‘-bb’ flag.

   - issue #7143(26): Fix ‘pytest.File.from_parent()’ so it forwards
     extra keyword arguments to the constructor.

   - issue #7145(27): Classes with broken ‘__getattribute__’ methods are
     displayed correctly during failures.

   - issue #7150(28): Prevent hiding the underlying exception when
     ‘ConfTestImportFailure’ is raised.

   - issue #7180(29): Fix ‘_is_setup_py’ for files encoded differently
     than locale.

   - issue #7215(30): Fix regression where running with ‘--pdb’ would
     call unittest.TestCase.tearDown()(31) for skipped tests.

   - issue #7253(32): When using ‘pytest.fixture’ on a function
     directly, as in ‘pytest.fixture(func)’, if the ‘autouse’ or
     ‘params’ arguments are also passed, the function is no longer
     ignored, but is marked as a fixture.

   - issue #7360(33): Fix possibly incorrect evaluation of string
     expressions passed to ‘pytest.mark.skipif’ and ‘pytest.mark.xfail’,
     in rare circumstances where the exact same string is used but
     refers to different global values.

   - issue #7383(34): Fixed exception causes all over the codebase, i.e.
     use ‘raise new_exception from old_exception’ when wrapping an
     exception.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1120

   (2) https://github.com/pytest-dev/pytest/issues/4583

   (3) https://docs.python.org/3/library/functions.html#eval

   (4) https://github.com/pytest-dev/pytest/issues/4677

   (5) https://github.com/pytest-dev/pytest/issues/5456

   (6) https://github.com/pytest-dev/pytest/issues/6240

   (7) https://github.com/pytest-dev/pytest/issues/6428

   (8) https://github.com/pytest-dev/pytest/issues/6755

   (9) https://github.com/pytest-dev/pytest/issues/6871

   (10) https://github.com/pytest-dev/pytest/issues/6909

   (11) https://github.com/pytest-dev/pytest/pull/6330

   (12) https://github.com/pytest-dev/pytest/issues/6910

   (13) https://github.com/pytest-dev/pytest/issues/6924

   (14) https://github.com/pytest-dev/pytest/issues/6925

   (15) https://github.com/pytest-dev/pytest/issues/6947

   (16) 
https://docs.python.org/3/library/unittest.html#unittest.TestCase.addCleanup

   (17) https://github.com/pytest-dev/pytest/issues/6951

   (18) https://github.com/pytest-dev/pytest/issues/6956

   (19) https://github.com/pytest-dev/pytest/issues/6991

   (20) https://github.com/pytest-dev/pytest/issues/6992

   (21) https://github.com/pytest-dev/pytest/issues/6767

   (22) https://github.com/pytest-dev/pytest/issues/7061

   (23) https://github.com/pytest-dev/pytest/issues/7076

   (24) https://github.com/pytest-dev/pytest/issues/7110

   (25) https://github.com/pytest-dev/pytest/issues/7126

   (26) https://github.com/pytest-dev/pytest/issues/7143

   (27) https://github.com/pytest-dev/pytest/issues/7145

   (28) https://github.com/pytest-dev/pytest/issues/7150

   (29) https://github.com/pytest-dev/pytest/issues/7180

   (30) https://github.com/pytest-dev/pytest/issues/7215

   (31) 
https://docs.python.org/3/library/unittest.html#unittest.TestCase.tearDown

   (32) https://github.com/pytest-dev/pytest/issues/7253

   (33) https://github.com/pytest-dev/pytest/issues/7360

   (34) https://github.com/pytest-dev/pytest/issues/7383


File: pytest.info,  Node: Improved Documentation<8>,  Next: Trivial/Internal Changes<8>,  Prev: Bug Fixes<19>,  Up: pytest 6 0 0rc1 2020-07-08

47.20.6 Improved Documentation
------------------------------

   - issue #7202(1): The development guide now links to the contributing
     section of the docs and ‘RELEASING.rst’ on GitHub.

   - issue #7233(2): Add a note about ‘--strict’ and ‘--strict-markers’
     and the preference for the latter one.

   - issue #7345(3): Explain indirect parametrization and markers for
     fixtures.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7202

   (2) https://github.com/pytest-dev/pytest/issues/7233

   (3) https://github.com/pytest-dev/pytest/issues/7345


File: pytest.info,  Node: Trivial/Internal Changes<8>,  Prev: Improved Documentation<8>,  Up: pytest 6 0 0rc1 2020-07-08

47.20.7 Trivial/Internal Changes
--------------------------------

   - issue #7035(1): The ‘originalname’ attribute of
     ‘_pytest.python.Function’ now defaults to ‘name’ if not provided
     explicitly, and is always set.

   - issue #7264(2): The dependency on the ‘wcwidth’ package has been
     removed.

   - issue #7291(3): Replaced ‘py.iniconfig’ with iniconfig(4).

   - issue #7295(5): ‘src/_pytest/config/__init__.py’ now uses the
     ‘warnings’ module to report warnings instead of ‘sys.stderr.write’.

   - issue #7356(6): Remove last internal uses of deprecated ‘slave’
     term from old ‘pytest-xdist’.

   - issue #7357(7): ‘py’>=1.8.2 is now required.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/7035

   (2) https://github.com/pytest-dev/pytest/issues/7264

   (3) https://github.com/pytest-dev/pytest/issues/7291

   (4) https://pypi.org/project/iniconfig/

   (5) https://github.com/pytest-dev/pytest/issues/7295

   (6) https://github.com/pytest-dev/pytest/issues/7356

   (7) https://github.com/pytest-dev/pytest/issues/7357


File: pytest.info,  Node: pytest 5 4 3 2020-06-02,  Next: pytest 5 4 2 2020-05-08,  Prev: pytest 6 0 0rc1 2020-07-08,  Up: Changelog

47.21 pytest 5.4.3 (2020-06-02)
===============================

* Menu:

* Bug Fixes: Bug Fixes<20>.


File: pytest.info,  Node: Bug Fixes<20>,  Up: pytest 5 4 3 2020-06-02

47.21.1 Bug Fixes
-----------------

   - issue #6428(1): Paths appearing in error messages are now correct
     in case the current working directory has changed since the start
     of the session.

   - issue #6755(2): Support deleting paths longer than 260 characters
     on windows created inside tmpdir.

   - issue #6956(3): Prevent pytest from printing ConftestImportFailure
     traceback to stdout.

   - issue #7150(4): Prevent hiding the underlying exception when
     ‘ConfTestImportFailure’ is raised.

   - issue #7215(5): Fix regression where running with ‘--pdb’ would
     call the ‘tearDown’ methods of ‘unittest.TestCase’ subclasses for
     skipped tests.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6428

   (2) https://github.com/pytest-dev/pytest/issues/6755

   (3) https://github.com/pytest-dev/pytest/issues/6956

   (4) https://github.com/pytest-dev/pytest/issues/7150

   (5) https://github.com/pytest-dev/pytest/issues/7215


File: pytest.info,  Node: pytest 5 4 2 2020-05-08,  Next: pytest 5 4 1 2020-03-13,  Prev: pytest 5 4 3 2020-06-02,  Up: Changelog

47.22 pytest 5.4.2 (2020-05-08)
===============================

* Menu:

* Bug Fixes: Bug Fixes<21>.


File: pytest.info,  Node: Bug Fixes<21>,  Up: pytest 5 4 2 2020-05-08

47.22.1 Bug Fixes
-----------------

   - issue #6871(1): Fix crash with captured output when using the *note
     capsysbinary fixture: 1a4.

   - issue #6924(2): Ensure a ‘unittest.IsolatedAsyncioTestCase’ is
     actually awaited.

   - issue #6925(3): Fix TerminalRepr instances to be hashable again.

   - issue #6947(4): Fix regression where functions registered with
     ‘TestCase.addCleanup’ were not being called on test failures.

   - issue #6951(5): Allow users to still set the deprecated
     ‘TerminalReporter.writer’ attribute.

   - issue #6992(6): Revert “tmpdir: clean up indirection via config for
     factories” #6767 as it breaks pytest-xdist.

   - issue #7110(7): Fixed regression: ‘asyncbase.TestCase’ tests are
     executed correctly again.

   - issue #7143(8): Fix ‘File.from_parent’ so it forwards extra keyword
     arguments to the constructor.

   - issue #7145(9): Classes with broken ‘__getattribute__’ methods are
     displayed correctly during failures.

   - issue #7180(10): Fix ‘_is_setup_py’ for files encoded differently
     than locale.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6871

   (2) https://github.com/pytest-dev/pytest/issues/6924

   (3) https://github.com/pytest-dev/pytest/issues/6925

   (4) https://github.com/pytest-dev/pytest/issues/6947

   (5) https://github.com/pytest-dev/pytest/issues/6951

   (6) https://github.com/pytest-dev/pytest/issues/6992

   (7) https://github.com/pytest-dev/pytest/issues/7110

   (8) https://github.com/pytest-dev/pytest/issues/7143

   (9) https://github.com/pytest-dev/pytest/issues/7145

   (10) https://github.com/pytest-dev/pytest/issues/7180


File: pytest.info,  Node: pytest 5 4 1 2020-03-13,  Next: pytest 5 4 0 2020-03-12,  Prev: pytest 5 4 2 2020-05-08,  Up: Changelog

47.23 pytest 5.4.1 (2020-03-13)
===============================

* Menu:

* Bug Fixes: Bug Fixes<22>.


File: pytest.info,  Node: Bug Fixes<22>,  Up: pytest 5 4 1 2020-03-13

47.23.1 Bug Fixes
-----------------

   - issue #6909(1): Revert the change introduced by pull request
     #6330(2), which required all arguments to
     ‘@pytest.mark.parametrize’ to be explicitly defined in the function
     signature.

     The intention of the original change was to remove what was
     expected to be an unintended/surprising behavior, but it turns out
     many people relied on it, so the restriction has been reverted.

   - issue #6910(3): Fix crash when plugins return an unknown stats
     while using the ‘--reportlog’ option.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6909

   (2) https://github.com/pytest-dev/pytest/pull/6330

   (3) https://github.com/pytest-dev/pytest/issues/6910


File: pytest.info,  Node: pytest 5 4 0 2020-03-12,  Next: pytest 5 3 5 2020-01-29,  Prev: pytest 5 4 1 2020-03-13,  Up: Changelog

47.24 pytest 5.4.0 (2020-03-12)
===============================

* Menu:

* Breaking Changes: Breaking Changes<7>.
* Deprecations: Deprecations<6>.
* Features: Features<6>.
* Improvements: Improvements<7>.
* Bug Fixes: Bug Fixes<23>.
* Improved Documentation: Improved Documentation<9>.
* Trivial/Internal Changes: Trivial/Internal Changes<9>.


File: pytest.info,  Node: Breaking Changes<7>,  Next: Deprecations<6>,  Up: pytest 5 4 0 2020-03-12

47.24.1 Breaking Changes
------------------------

   - issue #6316(1): Matching of ‘-k EXPRESSION’ to test names is now
     case-insensitive.

   - issue #6443(2): Plugins specified with ‘-p’ are now loaded after
     internal plugins, which results in their hooks being called
     ‘before’ the internal ones.

     This makes the ‘-p’ behavior consistent with ‘PYTEST_PLUGINS’.

   - issue #6637(3): Removed the long-deprecated ‘pytest_itemstart’
     hook.

     This hook has been marked as deprecated and not been even called by
     pytest for over 10 years now.

   - issue #6673(4): Reversed / fix meaning of “+/-” in error diffs.
     “-” means that sth.  expected is missing in the result and “+”
     means that there are unexpected extras in the result.

   - issue #6737(5): The ‘cached_result’ attribute of ‘FixtureDef’ is
     now set to ‘None’ when the result is unavailable, instead of being
     deleted.

     If your plugin performs checks like ‘hasattr(fixturedef,
     'cached_result')’, for example in a ‘pytest_fixture_post_finalizer’
     hook implementation, replace it with ‘fixturedef.cached_result is
     not None’.  If you ‘del’ the attribute, set it to ‘None’ instead.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6316

   (2) https://github.com/pytest-dev/pytest/issues/6443

   (3) https://github.com/pytest-dev/pytest/issues/6637

   (4) https://github.com/pytest-dev/pytest/issues/6673

   (5) https://github.com/pytest-dev/pytest/issues/6737


File: pytest.info,  Node: Deprecations<6>,  Next: Features<6>,  Prev: Breaking Changes<7>,  Up: pytest 5 4 0 2020-03-12

47.24.2 Deprecations
--------------------

   - issue #3238(1): Option ‘--no-print-logs’ is deprecated and meant to
     be removed in a future release.  If you use ‘--no-print-logs’,
     please try out ‘--show-capture’ and provide feedback.

     ‘--show-capture’ command-line option was added in ‘pytest 3.5.0’
     and allows to specify how to display captured output when tests
     fail: ‘no’, ‘stdout’, ‘stderr’, ‘log’ or ‘all’ (the default).

   - issue #571(2): Deprecate the unused/broken
     ‘pytest_collect_directory’ hook.  It was misaligned since the
     removal of the ‘Directory’ collector in 2010 and incorrect/unusable
     as soon as collection was split from test execution.

   - issue #5975(3): Deprecate using direct constructors for ‘Nodes’.

     Instead they are now constructed via ‘Node.from_parent’.

     This transitional mechanism enables us to untangle the very
     intensely entangled ‘Node’ relationships by enforcing more
     controlled creation/configuration patterns.

     As part of this change, session/config are already disallowed
     parameters and as we work on the details we might need disallow a
     few more as well.

     Subclasses are expected to use ‘super().from_parent’ if they intend
     to expand the creation of ‘Nodes’.

   - issue #6779(4): The ‘TerminalReporter.writer’ attribute has been
     deprecated and should no longer be used.  This was inadvertently
     exposed as part of the public API of that plugin and ties it too
     much with ‘py.io.TerminalWriter’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3238

   (2) https://github.com/pytest-dev/pytest/issues/571

   (3) https://github.com/pytest-dev/pytest/issues/5975

   (4) https://github.com/pytest-dev/pytest/issues/6779


File: pytest.info,  Node: Features<6>,  Next: Improvements<7>,  Prev: Deprecations<6>,  Up: pytest 5 4 0 2020-03-12

47.24.3 Features
----------------

   - issue #4597(1): New *note –capture=tee-sys: f2. option to allow
     both live printing and capturing of test output.

   - issue #5712(2): Now all arguments to ‘@pytest.mark.parametrize’
     need to be explicitly declared in the function signature or via
     ‘indirect’.  Previously it was possible to omit an argument if a
     fixture with the same name existed, which was just an accident of
     implementation and was not meant to be a part of the API.

   - issue #6454(3): Changed default for ‘-r’ to ‘fE’, which displays
     failures and errors in the short test summary.  ‘-rN’ can be used
     to disable it (the old behavior).

   - issue #6469(4): New options have been added to the *note
     junit_logging: 437. option: ‘log’, ‘out-err’, and ‘all’.

   - issue #6834(5): Excess warning summaries are now collapsed per file
     to ensure readable display of warning summaries.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4597

   (2) https://github.com/pytest-dev/pytest/issues/5712

   (3) https://github.com/pytest-dev/pytest/issues/6454

   (4) https://github.com/pytest-dev/pytest/issues/6469

   (5) https://github.com/pytest-dev/pytest/issues/6834


File: pytest.info,  Node: Improvements<7>,  Next: Bug Fixes<23>,  Prev: Features<6>,  Up: pytest 5 4 0 2020-03-12

47.24.4 Improvements
--------------------

   - issue #1857(1): ‘pytest.mark.parametrize’ accepts integers for
     ‘ids’ again, converting it to strings.

   - issue #449(2): Use “yellow” main color with any XPASSED tests.

   - issue #4639(3): Revert “A warning is now issued when assertions are
     made for ‘None’”.

     The warning proved to be less useful than initially expected and
     had quite a few false positive cases.

   - issue #5686(4): ‘tmpdir_factory.mktemp’ now fails when given
     absolute and non-normalized paths.

   - issue #5984(5): The ‘pytest_warning_captured’ hook now receives a
     ‘location’ parameter with the code location that generated the
     warning.

   - issue #6213(6): pytester: the ‘testdir’ fixture respects
     environment settings from the ‘monkeypatch’ fixture for inner runs.

   - issue #6247(7): ‘--fulltrace’ is honored with collection errors.

   - issue #6384(8): Make ‘--showlocals’ work also with ‘--tb=short’.

   - issue #6653(9): Add support for matching lines consecutively with
     *note LineMatcher: 250.’s ‘fnmatch_lines()’ and ‘re_match_lines()’.

   - issue #6658(10): Code is now highlighted in tracebacks when
     ‘pygments’ is installed.

     Users are encouraged to install ‘pygments’ into their environment
     and provide feedback, because the plan is to make ‘pygments’ a
     regular dependency in the future.

   - issue #6795(11): Import usage error message with invalid ‘-o’
     option.

   - issue #759(12): ‘pytest.mark.parametrize’ supports iterators and
     generators for ‘ids’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1857

   (2) https://github.com/pytest-dev/pytest/issues/449

   (3) https://github.com/pytest-dev/pytest/issues/4639

   (4) https://github.com/pytest-dev/pytest/issues/5686

   (5) https://github.com/pytest-dev/pytest/issues/5984

   (6) https://github.com/pytest-dev/pytest/issues/6213

   (7) https://github.com/pytest-dev/pytest/issues/6247

   (8) https://github.com/pytest-dev/pytest/issues/6384

   (9) https://github.com/pytest-dev/pytest/issues/6653

   (10) https://github.com/pytest-dev/pytest/issues/6658

   (11) https://github.com/pytest-dev/pytest/issues/6795

   (12) https://github.com/pytest-dev/pytest/issues/759


File: pytest.info,  Node: Bug Fixes<23>,  Next: Improved Documentation<9>,  Prev: Improvements<7>,  Up: pytest 5 4 0 2020-03-12

47.24.5 Bug Fixes
-----------------

   - issue #310(1): Add support for calling ‘pytest.xfail()’ and
     ‘pytest.importorskip()’ with doctests.

   - issue #3823(2): ‘--trace’ now works with unittests.

   - issue #4445(3): Fixed some warning reports produced by pytest to
     point to the correct location of the warning in the user’s code.

   - issue #5301(4): Fix ‘--last-failed’ to collect new tests from files
     with known failures.

   - issue #5928(5): Report ‘PytestUnknownMarkWarning’ at the level of
     the user’s code, not ‘pytest’’s.

   - issue #5991(6): Fix interaction with ‘--pdb’ and unittests: do not
     use unittest’s ‘TestCase.debug()’.

   - issue #6334(7): Fix summary entries appearing twice when ‘f/F’ and
     ‘s/S’ report chars were used at the same time in the ‘-r’
     command-line option (for example ‘-rFf’).

     The upper case variants were never documented and the preferred
     form should be the lower case.

   - issue #6409(8): Fallback to green (instead of yellow) for non-last
     items without previous passes with colored terminal progress
     indicator.

   - issue #6454(9): ‘--disable-warnings’ is honored with ‘-ra’ and
     ‘-rA’.

   - issue #6497(10): Fix bug in the comparison of request key with
     cached key in fixture.

     A construct ‘if key == cached_key:’ can fail either because ‘==’ is
     explicitly disallowed, or for, e.g., NumPy arrays, where the result
     of ‘a == b’ cannot generally be converted to bool(11).  The
     implemented fix replaces ‘==’ with ‘is’.

   - issue #6557(12): Make capture output streams ‘.write()’ method
     return the same return value from original streams.

   - issue #6566(13): Fix ‘EncodedFile.writelines’ to call the
     underlying buffer’s ‘writelines’ method.

   - issue #6575(14): Fix internal crash when ‘faulthandler’ starts
     initialized (for example with ‘PYTHONFAULTHANDLER=1’ environment
     variable set) and ‘faulthandler_timeout’ defined in the
     configuration file.

   - issue #6597(15): Fix node ids which contain a parametrized
     empty-string variable.

   - issue #6646(16): Assertion rewriting hooks are (re)stored for the
     current item, which fixes them being still used after e.g.
     pytester’s ‘testdir.runpytest’ etc.

   - issue #6660(17): *note pytest.exit(): 1df. is handled when emitted
     from the *note pytest_sessionfinish: 2a5. hook.  This includes
     quitting from a debugger.

   - issue #6752(18): When *note pytest.raises(): 31. is used as a
     function (as opposed to a context manager), a ‘match’ keyword
     argument is now passed through to the tested function.  Previously
     it was swallowed and ignored (regression in pytest 5.1.0).

   - issue #6801(19): Do not display empty lines in between traceback
     for unexpected exceptions with doctests.

   - issue #6802(20): The *note testdir fixture: 1ac. works within
     doctests now.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/310

   (2) https://github.com/pytest-dev/pytest/issues/3823

   (3) https://github.com/pytest-dev/pytest/issues/4445

   (4) https://github.com/pytest-dev/pytest/issues/5301

   (5) https://github.com/pytest-dev/pytest/issues/5928

   (6) https://github.com/pytest-dev/pytest/issues/5991

   (7) https://github.com/pytest-dev/pytest/issues/6334

   (8) https://github.com/pytest-dev/pytest/issues/6409

   (9) https://github.com/pytest-dev/pytest/issues/6454

   (10) https://github.com/pytest-dev/pytest/issues/6497

   (11) https://docs.python.org/3/library/functions.html#bool

   (12) https://github.com/pytest-dev/pytest/issues/6557

   (13) https://github.com/pytest-dev/pytest/issues/6566

   (14) https://github.com/pytest-dev/pytest/issues/6575

   (15) https://github.com/pytest-dev/pytest/issues/6597

   (16) https://github.com/pytest-dev/pytest/issues/6646

   (17) https://github.com/pytest-dev/pytest/issues/6660

   (18) https://github.com/pytest-dev/pytest/issues/6752

   (19) https://github.com/pytest-dev/pytest/issues/6801

   (20) https://github.com/pytest-dev/pytest/issues/6802


File: pytest.info,  Node: Improved Documentation<9>,  Next: Trivial/Internal Changes<9>,  Prev: Bug Fixes<23>,  Up: pytest 5 4 0 2020-03-12

47.24.6 Improved Documentation
------------------------------

   - issue #6696(1): Add list of fixtures to start of fixture chapter.

   - issue #6742(2): Expand first sentence on fixtures into a paragraph.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6696

   (2) https://github.com/pytest-dev/pytest/issues/6742


File: pytest.info,  Node: Trivial/Internal Changes<9>,  Prev: Improved Documentation<9>,  Up: pytest 5 4 0 2020-03-12

47.24.7 Trivial/Internal Changes
--------------------------------

   - issue #6404(1): Remove usage of ‘parser’ module, deprecated in
     Python 3.9.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6404


File: pytest.info,  Node: pytest 5 3 5 2020-01-29,  Next: pytest 5 3 4 2020-01-20,  Prev: pytest 5 4 0 2020-03-12,  Up: Changelog

47.25 pytest 5.3.5 (2020-01-29)
===============================

* Menu:

* Bug Fixes: Bug Fixes<24>.


File: pytest.info,  Node: Bug Fixes<24>,  Up: pytest 5 3 5 2020-01-29

47.25.1 Bug Fixes
-----------------

   - issue #6517(1): Fix regression in pytest 5.3.4 causing an
     INTERNALERROR due to a wrong assertion.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6517


File: pytest.info,  Node: pytest 5 3 4 2020-01-20,  Next: pytest 5 3 3 2020-01-16,  Prev: pytest 5 3 5 2020-01-29,  Up: Changelog

47.26 pytest 5.3.4 (2020-01-20)
===============================

* Menu:

* Bug Fixes: Bug Fixes<25>.


File: pytest.info,  Node: Bug Fixes<25>,  Up: pytest 5 3 4 2020-01-20

47.26.1 Bug Fixes
-----------------

   - issue #6496(1): Revert issue #6436(2): unfortunately this change
     has caused a number of regressions in many suites, so the team
     decided to revert this change and make a new release while we
     continue to look for a solution.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6496

   (2) https://github.com/pytest-dev/pytest/issues/6436


File: pytest.info,  Node: pytest 5 3 3 2020-01-16,  Next: pytest 5 3 2 2019-12-13,  Prev: pytest 5 3 4 2020-01-20,  Up: Changelog

47.27 pytest 5.3.3 (2020-01-16)
===============================

* Menu:

* Bug Fixes: Bug Fixes<26>.
* Trivial/Internal Changes: Trivial/Internal Changes<10>.


File: pytest.info,  Node: Bug Fixes<26>,  Next: Trivial/Internal Changes<10>,  Up: pytest 5 3 3 2020-01-16

47.27.1 Bug Fixes
-----------------

   - issue #2780(1): Captured output during teardown is shown with
     ‘-rP’.

   - issue #5971(2): Fix a ‘pytest-xdist’ crash when dealing with
     exceptions raised in subprocesses created by the ‘multiprocessing’
     module.

   - issue #6436(3): *note FixtureDef: 362. objects now properly
     register their finalizers with autouse and parameterized fixtures
     that execute before them in the fixture stack so they are torn down
     at the right times, and in the right order.

   - issue #6532(4): Fix parsing of outcomes containing multiple errors
     with ‘testdir’ results (regression in 5.3.0).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2780

   (2) https://github.com/pytest-dev/pytest/issues/5971

   (3) https://github.com/pytest-dev/pytest/issues/6436

   (4) https://github.com/pytest-dev/pytest/issues/6532


File: pytest.info,  Node: Trivial/Internal Changes<10>,  Prev: Bug Fixes<26>,  Up: pytest 5 3 3 2020-01-16

47.27.2 Trivial/Internal Changes
--------------------------------

   - issue #6350(1): Optimized automatic renaming of test parameter IDs.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6350


File: pytest.info,  Node: pytest 5 3 2 2019-12-13,  Next: pytest 5 3 1 2019-11-25,  Prev: pytest 5 3 3 2020-01-16,  Up: Changelog

47.28 pytest 5.3.2 (2019-12-13)
===============================

* Menu:

* Improvements: Improvements<8>.
* Bug Fixes: Bug Fixes<27>.


File: pytest.info,  Node: Improvements<8>,  Next: Bug Fixes<27>,  Up: pytest 5 3 2 2019-12-13

47.28.1 Improvements
--------------------

   - issue #4639(1): Revert “A warning is now issued when assertions are
     made for ‘None’”.

     The warning proved to be less useful than initially expected and
     had quite a few false positive cases.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4639


File: pytest.info,  Node: Bug Fixes<27>,  Prev: Improvements<8>,  Up: pytest 5 3 2 2019-12-13

47.28.2 Bug Fixes
-----------------

   - issue #5430(1): junitxml: Logs for failed test are now passed to
     junit report in case the test fails during call phase.

   - issue #6290(2): The supporting files in the ‘.pytest_cache’
     directory are kept with ‘--cache-clear’, which only clears cached
     values now.

   - issue #6301(3): Fix assertion rewriting for egg-based distributions
     and ‘editable’ installs (‘pip install --editable’).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5430

   (2) https://github.com/pytest-dev/pytest/issues/6290

   (3) https://github.com/pytest-dev/pytest/issues/6301


File: pytest.info,  Node: pytest 5 3 1 2019-11-25,  Next: pytest 5 3 0 2019-11-19,  Prev: pytest 5 3 2 2019-12-13,  Up: Changelog

47.29 pytest 5.3.1 (2019-11-25)
===============================

* Menu:

* Improvements: Improvements<9>.
* Bug Fixes: Bug Fixes<28>.


File: pytest.info,  Node: Improvements<9>,  Next: Bug Fixes<28>,  Up: pytest 5 3 1 2019-11-25

47.29.1 Improvements
--------------------

   - issue #6231(1): Improve check for misspelling of *note
     pytest.mark.parametrize: 95.

   - issue #6257(2): Handle *note pytest.exit(): 1df. being used via
     *note pytest_internalerror: 2f8, e.g.  when quitting pdb from post
     mortem.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6231

   (2) https://github.com/pytest-dev/pytest/issues/6257


File: pytest.info,  Node: Bug Fixes<28>,  Prev: Improvements<9>,  Up: pytest 5 3 1 2019-11-25

47.29.2 Bug Fixes
-----------------

   - issue #5914(1): pytester: fix ‘no_fnmatch_line()’ when used after
     positive matching.

   - issue #6082(2): Fix line detection for doctest samples inside
     property(3) docstrings, as a workaround to bpo-17446(4).

   - issue #6254(5): Fix compatibility with pytest-parallel (regression
     in pytest 5.3.0).

   - issue #6255(6): Clear the sys.last_traceback(7), sys.last_type(8)
     and sys.last_value(9) attributes by deleting them instead of
     setting them to ‘None’.  This better matches the behaviour of the
     Python standard library.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5914

   (2) https://github.com/pytest-dev/pytest/issues/6082

   (3) https://docs.python.org/3/library/functions.html#property

   (4) https://bugs.python.org/issue17446

   (5) https://github.com/pytest-dev/pytest/issues/6254

   (6) https://github.com/pytest-dev/pytest/issues/6255

   (7) https://docs.python.org/3/library/sys.html#sys.last_traceback

   (8) https://docs.python.org/3/library/sys.html#sys.last_type

   (9) https://docs.python.org/3/library/sys.html#sys.last_value


File: pytest.info,  Node: pytest 5 3 0 2019-11-19,  Next: pytest 5 2 4 2019-11-15,  Prev: pytest 5 3 1 2019-11-25,  Up: Changelog

47.30 pytest 5.3.0 (2019-11-19)
===============================

* Menu:

* Deprecations: Deprecations<7>.
* Features: Features<7>.
* Improvements: Improvements<10>.
* Bug Fixes: Bug Fixes<29>.
* Trivial/Internal Changes: Trivial/Internal Changes<11>.


File: pytest.info,  Node: Deprecations<7>,  Next: Features<7>,  Up: pytest 5 3 0 2019-11-19

47.30.1 Deprecations
--------------------

   - issue #6179(1): The default value of *note junit_family: 436.
     option will change to ‘"xunit2"’ in pytest 6.0, given that this is
     the version supported by default in modern tools that manipulate
     this type of file.

     In order to smooth the transition, pytest will issue a warning in
     case the ‘--junitxml’ option is given in the command line but *note
     junit_family: 436. is not explicitly configured in ‘pytest.ini’.

     For more information, *note see the docs: 4f0.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6179


File: pytest.info,  Node: Features<7>,  Next: Improvements<10>,  Prev: Deprecations<7>,  Up: pytest 5 3 0 2019-11-19

47.30.2 Features
----------------

   - issue #4488(1): The pytest team has created the pytest-reportlog(2)
     plugin, which provides a new ‘--report-log=FILE’ option that writes
     ‘report logs’ into a file as the test session executes.

     Each line of the report log contains a self contained JSON object
     corresponding to a testing event, such as a collection or a test
     result report.  The file is guaranteed to be flushed after writing
     each line, so systems can read and process events in real-time.

     The plugin is meant to replace the ‘--resultlog’ option, which is
     deprecated and meant to be removed in a future release.  If you use
     ‘--resultlog’, please try out ‘pytest-reportlog’ and provide
     feedback.

   - issue #4730(3): When sys.pycache_prefix(4) (Python 3.8+) is set, it
     will be used by pytest to cache test files changed by the assertion
     rewriting mechanism.

     This makes it easier to benefit of cached ‘.pyc’ files even on file
     systems without permissions.

   - issue #5515(5): Allow selective auto-indentation of multiline log
     messages.

     Adds command line option ‘--log-auto-indent’, config option *note
     log_auto_indent: 43a. and support for per-entry configuration of
     indentation behavior on calls to logging.log()(6).

     Alters the default for auto-indention from ‘"on"’ to ‘"off"’.  This
     restores the older behavior that existed prior to v4.6.0.  This
     reversion to earlier behavior was done because it is better to
     activate new features that may lead to broken tests explicitly
     rather than implicitly.

   - issue #5914(7): *note testdir: 1ac. learned two new functions,
     ‘no_fnmatch_line()’ and ‘no_re_match_line()’.

     The functions are used to ensure the captured text ‘does not’ match
     the given pattern.

     The previous idiom was to use re.match()(8):

          result = testdir.runpytest()
          assert re.match(pat, result.stdout.str()) is None

     Or the ‘in’ operator:

          result = testdir.runpytest()
          assert text in result.stdout.str()

     But the new functions produce best output on failure.

   - issue #6057(9): Added tolerances to complex values when printing
     ‘pytest.approx’.

     For example, ‘repr(pytest.approx(3+4j))’ returns ‘(3+4j) ± 5e-06 ∠
     ±180°’.  This is polar notation indicating a circle around the
     expected value, with a radius of 5e-06.  For ‘approx’ comparisons
     to return ‘True’, the actual value should fall within this circle.

   - issue #6061(10): Added the pluginmanager as an argument to
     ‘pytest_addoption’ so that hooks can be invoked when setting up
     command line options.  This is useful for having one plugin
     communicate things to another plugin, such as default values or
     which set of command line options to add.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4488

   (2) https://github.com/pytest-dev/pytest-reportlog

   (3) https://github.com/pytest-dev/pytest/issues/4730

   (4) https://docs.python.org/3/library/sys.html#sys.pycache_prefix

   (5) https://github.com/pytest-dev/pytest/issues/5515

   (6) https://docs.python.org/3/library/logging.html#logging.log

   (7) https://github.com/pytest-dev/pytest/issues/5914

   (8) https://docs.python.org/3/library/re.html#re.match

   (9) https://github.com/pytest-dev/pytest/issues/6057

   (10) https://github.com/pytest-dev/pytest/issues/6061


File: pytest.info,  Node: Improvements<10>,  Next: Bug Fixes<29>,  Prev: Features<7>,  Up: pytest 5 3 0 2019-11-19

47.30.3 Improvements
--------------------

   - issue #5061(1): Use multiple colors with terminal summary
     statistics.

   - issue #5630(2): Quitting from debuggers is now properly handled in
     ‘doctest’ items.

   - issue #5924(3): Improved verbose diff output with sequences.

     Before:

          E   AssertionError: assert ['version', '...version_info'] == ['version', '...version', ...]
          E     Right contains 3 more items, first extra item: ' '
          E     Full diff:
          E     - ['version', 'version_info', 'sys.version', 'sys.version_info']
          E     + ['version',
          E     +  'version_info',
          E     +  'sys.version',
          E     +  'sys.version_info',
          E     +  ' ',
          E     +  'sys.version',
          E     +  'sys.version_info']

     After:

          E   AssertionError: assert ['version', '...version_info'] == ['version', '...version', ...]
          E     Right contains 3 more items, first extra item: ' '
          E     Full diff:
          E       [
          E        'version',
          E        'version_info',
          E        'sys.version',
          E        'sys.version_info',
          E     +  ' ',
          E     +  'sys.version',
          E     +  'sys.version_info',
          E       ]

   - issue #5934(4): ‘repr’ of ‘ExceptionInfo’ objects has been improved
     to honor the ‘__repr__’ method of the underlying exception.

   - issue #5936(5): Display untruncated assertion message with ‘-vv’.

   - issue #5990(6): Fixed plurality mismatch in test summary (e.g.
     display “1 error” instead of “1 errors”).

   - issue #6008(7): ‘Config.InvocationParams.args’ is now always a
     ‘tuple’ to better convey that it should be immutable and avoid
     accidental modifications.

   - issue #6023(8): ‘pytest.main’ returns a ‘pytest.ExitCode’ instance
     now, except for when custom exit codes are used (where it returns
     ‘int’ then still).

   - issue #6026(9): Align prefixes in output of pytester’s
     ‘LineMatcher’.

   - issue #6059(10): Collection errors are reported as errors (and not
     failures like before) in the terminal’s short test summary.

   - issue #6069(11): ‘pytester.spawn’ does not skip/xfail tests on
     FreeBSD anymore unconditionally.

   - issue #6097(12): The “[…%]” indicator in the test summary is now
     colored according to the final (new) multi-colored line’s main
     color.

   - issue #6116(13): Added ‘--co’ as a synonym to ‘--collect-only’.

   - issue #6148(14): ‘atomicwrites’ is now only used on Windows, fixing
     a performance regression with assertion rewriting on Unix.

   - issue #6152(15): Now parametrization will use the ‘__name__’
     attribute of any object for the id, if present.  Previously it
     would only use ‘__name__’ for functions and classes.

   - issue #6176(16): Improved failure reporting with pytester’s
     ‘Hookrecorder.assertoutcome’.

   - issue #6181(17): The reason for a stopped session, e.g.  with
     ‘--maxfail’ / ‘-x’, now gets reported in the test summary.

   - issue #6206(18): Improved ‘cache.set’ robustness and performance.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5061

   (2) https://github.com/pytest-dev/pytest/issues/5630

   (3) https://github.com/pytest-dev/pytest/issues/5924

   (4) https://github.com/pytest-dev/pytest/issues/5934

   (5) https://github.com/pytest-dev/pytest/issues/5936

   (6) https://github.com/pytest-dev/pytest/issues/5990

   (7) https://github.com/pytest-dev/pytest/issues/6008

   (8) https://github.com/pytest-dev/pytest/issues/6023

   (9) https://github.com/pytest-dev/pytest/issues/6026

   (10) https://github.com/pytest-dev/pytest/issues/6059

   (11) https://github.com/pytest-dev/pytest/issues/6069

   (12) https://github.com/pytest-dev/pytest/issues/6097

   (13) https://github.com/pytest-dev/pytest/issues/6116

   (14) https://github.com/pytest-dev/pytest/issues/6148

   (15) https://github.com/pytest-dev/pytest/issues/6152

   (16) https://github.com/pytest-dev/pytest/issues/6176

   (17) https://github.com/pytest-dev/pytest/issues/6181

   (18) https://github.com/pytest-dev/pytest/issues/6206


File: pytest.info,  Node: Bug Fixes<29>,  Next: Trivial/Internal Changes<11>,  Prev: Improvements<10>,  Up: pytest 5 3 0 2019-11-19

47.30.4 Bug Fixes
-----------------

   - issue #2049(1): Fixed ‘--setup-plan’ showing inaccurate information
     about fixture lifetimes.

   - issue #2548(2): Fixed line offset mismatch of skipped tests in
     terminal summary.

   - issue #6039(3): The ‘PytestDoctestRunner’ is now properly
     invalidated when unconfiguring the doctest plugin.

     This is important when used with ‘pytester’’s
     ‘runpytest_inprocess’.

   - issue #6047(4): BaseExceptions are now handled in ‘saferepr’, which
     includes ‘pytest.fail.Exception’ etc.

   - issue #6074(5): pytester: fixed order of arguments in ‘rm_rf’
     warning when cleaning up temporary directories, and do not emit
     warnings for errors with ‘os.open’.

   - issue #6189(6): Fixed result of ‘getmodpath’ method.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2049

   (2) https://github.com/pytest-dev/pytest/issues/2548

   (3) https://github.com/pytest-dev/pytest/issues/6039

   (4) https://github.com/pytest-dev/pytest/issues/6047

   (5) https://github.com/pytest-dev/pytest/issues/6074

   (6) https://github.com/pytest-dev/pytest/issues/6189


File: pytest.info,  Node: Trivial/Internal Changes<11>,  Prev: Bug Fixes<29>,  Up: pytest 5 3 0 2019-11-19

47.30.5 Trivial/Internal Changes
--------------------------------

   - issue #4901(1): ‘RunResult’ from ‘pytester’ now displays the
     mnemonic of the ‘ret’ attribute when it is a valid
     ‘pytest.ExitCode’ value.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4901


File: pytest.info,  Node: pytest 5 2 4 2019-11-15,  Next: pytest 5 2 3 2019-11-14,  Prev: pytest 5 3 0 2019-11-19,  Up: Changelog

47.31 pytest 5.2.4 (2019-11-15)
===============================

* Menu:

* Bug Fixes: Bug Fixes<30>.


File: pytest.info,  Node: Bug Fixes<30>,  Up: pytest 5 2 4 2019-11-15

47.31.1 Bug Fixes
-----------------

   - issue #6194(1): Fix incorrect discovery of non-test ‘__init__.py’
     files.

   - issue #6197(2): Revert “The first test in a package (‘__init__.py’)
     marked with ‘@pytest.mark.skip’ is now correctly skipped.”.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6194

   (2) https://github.com/pytest-dev/pytest/issues/6197


File: pytest.info,  Node: pytest 5 2 3 2019-11-14,  Next: pytest 5 2 2 2019-10-24,  Prev: pytest 5 2 4 2019-11-15,  Up: Changelog

47.32 pytest 5.2.3 (2019-11-14)
===============================

* Menu:

* Bug Fixes: Bug Fixes<31>.


File: pytest.info,  Node: Bug Fixes<31>,  Up: pytest 5 2 3 2019-11-14

47.32.1 Bug Fixes
-----------------

   - issue #5830(1): The first test in a package (‘__init__.py’) marked
     with ‘@pytest.mark.skip’ is now correctly skipped.

   - issue #6099(2): Fix ‘--trace’ when used with parametrized
     functions.

   - issue #6183(3): Using ‘request’ as a parameter name in
     ‘@pytest.mark.parametrize’ now produces a more user-friendly error.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5830

   (2) https://github.com/pytest-dev/pytest/issues/6099

   (3) https://github.com/pytest-dev/pytest/issues/6183


File: pytest.info,  Node: pytest 5 2 2 2019-10-24,  Next: pytest 5 2 1 2019-10-06,  Prev: pytest 5 2 3 2019-11-14,  Up: Changelog

47.33 pytest 5.2.2 (2019-10-24)
===============================

* Menu:

* Bug Fixes: Bug Fixes<32>.


File: pytest.info,  Node: Bug Fixes<32>,  Up: pytest 5 2 2 2019-10-24

47.33.1 Bug Fixes
-----------------

   - issue #5206(1): Fix ‘--nf’ to not forget about known nodeids with
     partial test selection.

   - issue #5906(2): Fix crash with ‘KeyboardInterrupt’ during
     ‘--setup-show’.

   - issue #5946(3): Fixed issue when parametrizing fixtures with numpy
     arrays (and possibly other sequence-like types).

   - issue #6044(4): Properly ignore ‘FileNotFoundError’ exceptions when
     trying to remove old temporary directories, for instance when
     multiple processes try to remove the same directory (common with
     ‘pytest-xdist’ for example).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5206

   (2) https://github.com/pytest-dev/pytest/issues/5906

   (3) https://github.com/pytest-dev/pytest/issues/5946

   (4) https://github.com/pytest-dev/pytest/issues/6044


File: pytest.info,  Node: pytest 5 2 1 2019-10-06,  Next: pytest 5 2 0 2019-09-28,  Prev: pytest 5 2 2 2019-10-24,  Up: Changelog

47.34 pytest 5.2.1 (2019-10-06)
===============================

* Menu:

* Bug Fixes: Bug Fixes<33>.


File: pytest.info,  Node: Bug Fixes<33>,  Up: pytest 5 2 1 2019-10-06

47.34.1 Bug Fixes
-----------------

   - issue #5902(1): Fix warnings about deprecated ‘cmp’ attribute in
     ‘attrs>=19.2’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5902


File: pytest.info,  Node: pytest 5 2 0 2019-09-28,  Next: pytest 5 1 3 2019-09-18,  Prev: pytest 5 2 1 2019-10-06,  Up: Changelog

47.35 pytest 5.2.0 (2019-09-28)
===============================

* Menu:

* Deprecations: Deprecations<8>.
* Features: Features<8>.
* Bug Fixes: Bug Fixes<34>.
* Trivial/Internal Changes: Trivial/Internal Changes<12>.


File: pytest.info,  Node: Deprecations<8>,  Next: Features<8>,  Up: pytest 5 2 0 2019-09-28

47.35.1 Deprecations
--------------------

   - issue #1682(1): Passing arguments to pytest.fixture() as positional
     arguments is deprecated - pass them as a keyword argument instead.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1682


File: pytest.info,  Node: Features<8>,  Next: Bug Fixes<34>,  Prev: Deprecations<8>,  Up: pytest 5 2 0 2019-09-28

47.35.2 Features
----------------

   - issue #1682(1): The ‘scope’ parameter of ‘@pytest.fixture’ can now
     be a callable that receives the fixture name and the ‘config’
     object as keyword-only parameters.  See *note the docs: 52. for
     more information.

   - issue #5764(2): New behavior of the ‘--pastebin’ option: failures
     to connect to the pastebin server are reported, without failing the
     pytest run

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1682

   (2) https://github.com/pytest-dev/pytest/issues/5764


File: pytest.info,  Node: Bug Fixes<34>,  Next: Trivial/Internal Changes<12>,  Prev: Features<8>,  Up: pytest 5 2 0 2019-09-28

47.35.3 Bug Fixes
-----------------

   - issue #5806(1): Fix “lexer” being used when uploading to bpaste.net
     from ‘--pastebin’ to “text”.

   - issue #5884(2): Fix ‘--setup-only’ and ‘--setup-show’ for custom
     pytest items.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5806

   (2) https://github.com/pytest-dev/pytest/issues/5884


File: pytest.info,  Node: Trivial/Internal Changes<12>,  Prev: Bug Fixes<34>,  Up: pytest 5 2 0 2019-09-28

47.35.4 Trivial/Internal Changes
--------------------------------

   - issue #5056(1): The HelpFormatter uses ‘py.io.get_terminal_width’
     for better width detection.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5056


File: pytest.info,  Node: pytest 5 1 3 2019-09-18,  Next: pytest 5 1 2 2019-08-30,  Prev: pytest 5 2 0 2019-09-28,  Up: Changelog

47.36 pytest 5.1.3 (2019-09-18)
===============================

* Menu:

* Bug Fixes: Bug Fixes<35>.


File: pytest.info,  Node: Bug Fixes<35>,  Up: pytest 5 1 3 2019-09-18

47.36.1 Bug Fixes
-----------------

   - issue #5807(1): Fix pypy3.6 (nightly) on windows.

   - issue #5811(2): Handle ‘--fulltrace’ correctly with
     ‘pytest.raises’.

   - issue #5819(3): Windows: Fix regression with conftest whose
     qualified name contains uppercase characters (introduced by #5792).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5807

   (2) https://github.com/pytest-dev/pytest/issues/5811

   (3) https://github.com/pytest-dev/pytest/issues/5819


File: pytest.info,  Node: pytest 5 1 2 2019-08-30,  Next: pytest 5 1 1 2019-08-20,  Prev: pytest 5 1 3 2019-09-18,  Up: Changelog

47.37 pytest 5.1.2 (2019-08-30)
===============================

* Menu:

* Bug Fixes: Bug Fixes<36>.


File: pytest.info,  Node: Bug Fixes<36>,  Up: pytest 5 1 2 2019-08-30

47.37.1 Bug Fixes
-----------------

   - issue #2270(1): Fixed ‘self’ reference in function-scoped fixtures
     defined plugin classes: previously ‘self’ would be a reference to a
     ‘test’ class, not the ‘plugin’ class.

   - issue #570(2): Fixed long standing issue where fixture scope was
     not respected when indirect fixtures were used during
     parametrization.

   - issue #5782(3): Fix decoding error when printing an error response
     from ‘--pastebin’.

   - issue #5786(4): Chained exceptions in test and collection reports
     are now correctly serialized, allowing plugins like ‘pytest-xdist’
     to display them properly.

   - issue #5792(5): Windows: Fix error that occurs in certain
     circumstances when loading ‘conftest.py’ from a working directory
     that has casing other than the one stored in the filesystem (e.g.,
     ‘c:\test’ instead of ‘C:\test’).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2270

   (2) https://github.com/pytest-dev/pytest/issues/570

   (3) https://github.com/pytest-dev/pytest/issues/5782

   (4) https://github.com/pytest-dev/pytest/issues/5786

   (5) https://github.com/pytest-dev/pytest/issues/5792


File: pytest.info,  Node: pytest 5 1 1 2019-08-20,  Next: pytest 5 1 0 2019-08-15,  Prev: pytest 5 1 2 2019-08-30,  Up: Changelog

47.38 pytest 5.1.1 (2019-08-20)
===============================

* Menu:

* Bug Fixes: Bug Fixes<37>.


File: pytest.info,  Node: Bug Fixes<37>,  Up: pytest 5 1 1 2019-08-20

47.38.1 Bug Fixes
-----------------

   - issue #5751(1): Fixed ‘TypeError’ when importing pytest on Python
     3.5.0 and 3.5.1.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5751


File: pytest.info,  Node: pytest 5 1 0 2019-08-15,  Next: pytest 5 0 1 2019-07-04,  Prev: pytest 5 1 1 2019-08-20,  Up: Changelog

47.39 pytest 5.1.0 (2019-08-15)
===============================

* Menu:

* Removals::
* Features: Features<9>.
* Improvements: Improvements<11>.
* Bug Fixes: Bug Fixes<38>.
* Improved Documentation: Improved Documentation<10>.
* Trivial/Internal Changes: Trivial/Internal Changes<13>.


File: pytest.info,  Node: Removals,  Next: Features<9>,  Up: pytest 5 1 0 2019-08-15

47.39.1 Removals
----------------

   - issue #5180(1): As per our policy, the following features have been
     deprecated in the 4.X series and are now removed:

        * ‘Request.getfuncargvalue’: use ‘Request.getfixturevalue’
          instead.

        * ‘pytest.raises’ and ‘pytest.warns’ no longer support strings
          as the second argument.

        * ‘message’ parameter of ‘pytest.raises’.

        * ‘pytest.raises’, ‘pytest.warns’ and ‘ParameterSet.param’ now
          use native keyword-only syntax.  This might change the
          exception message from previous versions, but they still raise
          ‘TypeError’ on unknown keyword arguments as before.

        * ‘pytest.config’ global variable.

        * ‘tmpdir_factory.ensuretemp’ method.

        * ‘pytest_logwarning’ hook.

        * ‘RemovedInPytest4Warning’ warning type.

        * ‘request’ is now a reserved name for fixtures.

     For more information consult *note Deprecations and Removals: 4d1.
     in the docs.

   - issue #5565(2): Removed unused support code for unittest2(3).

     The ‘unittest2’ backport module is no longer necessary since Python
     3.3+, and the small amount of code in pytest to support it also
     doesn’t seem to be used: after removed, all tests still pass
     unchanged.

     Although our policy is to introduce a deprecation period before
     removing any features or support for third party libraries, because
     this code is apparently not used at all (even if ‘unittest2’ is
     used by a test suite executed by pytest), it was decided to remove
     it in this release.

     If you experience a regression because of this, please file an
     issue(4).

   - issue #5615(5): ‘pytest.fail’, ‘pytest.xfail’ and ‘pytest.skip’ no
     longer support bytes for the message argument.

     This was supported for Python 2 where it was tempting to use
     ‘"message"’ instead of ‘u"message"’.

     Python 3 code is unlikely to pass ‘bytes’ to these functions.  If
     you do, please decode it to an ‘str’ beforehand.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5180

   (2) https://github.com/pytest-dev/pytest/issues/5565

   (3) https://pypi.org/project/unittest2/

   (4) https://github.com/pytest-dev/pytest/issues/new

   (5) https://github.com/pytest-dev/pytest/issues/5615


File: pytest.info,  Node: Features<9>,  Next: Improvements<11>,  Prev: Removals,  Up: pytest 5 1 0 2019-08-15

47.39.2 Features
----------------

   - issue #5564(1): New ‘Config.invocation_args’ attribute containing
     the unchanged arguments passed to ‘pytest.main()’.

   - issue #5576(2): New *note NUMBER: c2. option for doctests to ignore
     irrelevant differences in floating-point numbers.  Inspired by
     Sébastien Boisgérault’s numtest(3) extension for doctest.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5564

   (2) https://github.com/pytest-dev/pytest/issues/5576

   (3) https://github.com/boisgera/numtest


File: pytest.info,  Node: Improvements<11>,  Next: Bug Fixes<38>,  Prev: Features<9>,  Up: pytest 5 1 0 2019-08-15

47.39.3 Improvements
--------------------

   - issue #5471(1): JUnit XML now includes a timestamp and hostname in
     the testsuite tag.

   - issue #5707(2): Time taken to run the test suite now includes a
     human-readable representation when it takes over 60 seconds, for
     example:

          ===== 2 failed in 102.70s (0:01:42) =====

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5471

   (2) https://github.com/pytest-dev/pytest/issues/5707


File: pytest.info,  Node: Bug Fixes<38>,  Next: Improved Documentation<10>,  Prev: Improvements<11>,  Up: pytest 5 1 0 2019-08-15

47.39.4 Bug Fixes
-----------------

   - issue #4344(1): Fix RuntimeError/StopIteration when trying to
     collect package with “__init__.py” only.

   - issue #5115(2): Warnings issued during ‘pytest_configure’ are
     explicitly not treated as errors, even if configured as such,
     because it otherwise completely breaks pytest.

   - issue #5477(3): The XML file produced by ‘--junitxml’ now correctly
     contain a ‘<testsuites>’ root element.

   - issue #5524(4): Fix issue where ‘tmp_path’ and ‘tmpdir’ would not
     remove directories containing files marked as read-only, which
     could lead to pytest crashing when executed a second time with the
     ‘--basetemp’ option.

   - issue #5537(5): Replace ‘importlib_metadata’ backport with
     ‘importlib.metadata’ from the standard library on Python 3.8+.

   - issue #5578(6): Improve type checking for some exception-raising
     functions (‘pytest.xfail’, ‘pytest.skip’, etc) so they provide
     better error messages when users meant to use marks (for example
     ‘@pytest.xfail’ instead of ‘@pytest.mark.xfail’).

   - issue #5606(7): Fixed internal error when test functions were
     patched with objects that cannot be compared for truth values
     against others, like ‘numpy’ arrays.

   - issue #5634(8): ‘pytest.exit’ is now correctly handled in
     ‘unittest’ cases.  This makes ‘unittest’ cases handle ‘quit’ from
     pytest’s pdb correctly.

   - issue #5650(9): Improved output when parsing an ini configuration
     file fails.

   - issue #5701(10): Fix collection of ‘staticmethod’ objects defined
     with ‘functools.partial’.

   - issue #5734(11): Skip async generator test functions, and update
     the warning message to refer to ‘async def’ functions.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4344

   (2) https://github.com/pytest-dev/pytest/issues/5115

   (3) https://github.com/pytest-dev/pytest/issues/5477

   (4) https://github.com/pytest-dev/pytest/issues/5524

   (5) https://github.com/pytest-dev/pytest/issues/5537

   (6) https://github.com/pytest-dev/pytest/issues/5578

   (7) https://github.com/pytest-dev/pytest/issues/5606

   (8) https://github.com/pytest-dev/pytest/issues/5634

   (9) https://github.com/pytest-dev/pytest/issues/5650

   (10) https://github.com/pytest-dev/pytest/issues/5701

   (11) https://github.com/pytest-dev/pytest/issues/5734


File: pytest.info,  Node: Improved Documentation<10>,  Next: Trivial/Internal Changes<13>,  Prev: Bug Fixes<38>,  Up: pytest 5 1 0 2019-08-15

47.39.5 Improved Documentation
------------------------------

   - issue #5669(1): Add docstring for ‘Testdir.copy_example’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5669


File: pytest.info,  Node: Trivial/Internal Changes<13>,  Prev: Improved Documentation<10>,  Up: pytest 5 1 0 2019-08-15

47.39.6 Trivial/Internal Changes
--------------------------------

   - issue #5095(1): XML files of the ‘xunit2’ family are now validated
     against the schema by pytest’s own test suite to avoid future
     regressions.

   - issue #5516(2): Cache node splitting function which can improve
     collection performance in very large test suites.

   - issue #5603(3): Simplified internal ‘SafeRepr’ class and removed
     some dead code.

   - issue #5664(4): When invoking pytest’s own testsuite with
     ‘PYTHONDONTWRITEBYTECODE=1’, the ‘test_xfail_handling’ test no
     longer fails.

   - issue #5684(5): Replace manual handling of ‘OSError.errno’ in the
     codebase by new ‘OSError’ subclasses (‘PermissionError’,
     ‘FileNotFoundError’, etc.).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5095

   (2) https://github.com/pytest-dev/pytest/issues/5516

   (3) https://github.com/pytest-dev/pytest/issues/5603

   (4) https://github.com/pytest-dev/pytest/issues/5664

   (5) https://github.com/pytest-dev/pytest/issues/5684


File: pytest.info,  Node: pytest 5 0 1 2019-07-04,  Next: pytest 5 0 0 2019-06-28,  Prev: pytest 5 1 0 2019-08-15,  Up: Changelog

47.40 pytest 5.0.1 (2019-07-04)
===============================

* Menu:

* Bug Fixes: Bug Fixes<39>.
* Improved Documentation: Improved Documentation<11>.


File: pytest.info,  Node: Bug Fixes<39>,  Next: Improved Documentation<11>,  Up: pytest 5 0 1 2019-07-04

47.40.1 Bug Fixes
-----------------

   - issue #5479(1): Improve quoting in ‘raises’ match failure message.

   - issue #5523(2): Fixed using multiple short options together in the
     command-line (for example ‘-vs’) in Python 3.8+.

   - issue #5547(3): ‘--step-wise’ now handles ‘xfail(strict=True)’
     markers properly.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5479

   (2) https://github.com/pytest-dev/pytest/issues/5523

   (3) https://github.com/pytest-dev/pytest/issues/5547


File: pytest.info,  Node: Improved Documentation<11>,  Prev: Bug Fixes<39>,  Up: pytest 5 0 1 2019-07-04

47.40.2 Improved Documentation
------------------------------

   - issue #5517(1): Improve “Declaring new hooks” section in chapter
     “Writing Plugins”

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5517


File: pytest.info,  Node: pytest 5 0 0 2019-06-28,  Next: pytest 4 6 11 2020-06-04,  Prev: pytest 5 0 1 2019-07-04,  Up: Changelog

47.41 pytest 5.0.0 (2019-06-28)
===============================

* Menu:

* Important::
* Removals: Removals<2>.
* Deprecations: Deprecations<9>.
* Features: Features<10>.
* Bug Fixes: Bug Fixes<40>.
* Improved Documentation: Improved Documentation<12>.


File: pytest.info,  Node: Important,  Next: Removals<2>,  Up: pytest 5 0 0 2019-06-28

47.41.1 Important
-----------------

This release is a Python3.5+ only release.

For more details, see our Python 2.7 and 3.4 support plan(1).

   ---------- Footnotes ----------

   (1) https://docs.pytest.org/en/7.0.x/py27-py34-deprecation.html


File: pytest.info,  Node: Removals<2>,  Next: Deprecations<9>,  Prev: Important,  Up: pytest 5 0 0 2019-06-28

47.41.2 Removals
----------------

   - issue #1149(1): Pytest no longer accepts prefixes of command-line
     arguments, for example typing ‘pytest --doctest-mod’ inplace of
     ‘--doctest-modules’.  This was previously allowed where the
     ‘ArgumentParser’ thought it was unambiguous, but this could be
     incorrect due to delayed parsing of options for plugins.  See for
     example issues issue #1149(2), issue #3413(3), and issue #4009(4).

   - issue #5402(5): ‘PytestDeprecationWarning are now errors by
     default.’

     Following our plan to remove deprecated features with as little
     disruption as possible, all warnings of type
     ‘PytestDeprecationWarning’ now generate errors instead of warning
     messages.

     ‘The affected features will be effectively removed in pytest 5.1’,
     so please consult the *note Deprecations and Removals: 4d1. section
     in the docs for directions on how to update existing code.

     In the pytest ‘5.0.X’ series, it is possible to change the errors
     back into warnings as a stop gap measure by adding this to your
     ‘pytest.ini’ file:

          [pytest]
          filterwarnings =
              ignore::pytest.PytestDeprecationWarning

     But this will stop working when pytest ‘5.1’ is released.

     ‘If you have concerns’ about the removal of a specific feature,
     please add a comment to issue #5402(6).

   - issue #5412(7): ‘ExceptionInfo’ objects (returned by
     ‘pytest.raises’) now have the same ‘str’ representation as ‘repr’,
     which avoids some confusion when users use ‘print(e)’ to inspect
     the object.

     This means code like:

          with pytest.raises(SomeException) as e:
              ...
          assert "some message" in str(e)

     Needs to be changed to:

          with pytest.raises(SomeException) as e:
              ...
          assert "some message" in str(e.value)

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1149

   (2) https://github.com/pytest-dev/pytest/issues/1149

   (3) https://github.com/pytest-dev/pytest/issues/3413

   (4) https://github.com/pytest-dev/pytest/issues/4009

   (5) https://github.com/pytest-dev/pytest/issues/5402

   (6) https://github.com/pytest-dev/pytest/issues/5402

   (7) https://github.com/pytest-dev/pytest/issues/5412


File: pytest.info,  Node: Deprecations<9>,  Next: Features<10>,  Prev: Removals<2>,  Up: pytest 5 0 0 2019-06-28

47.41.3 Deprecations
--------------------

   - issue #4488(1): The removal of the ‘--result-log’ option and module
     has been postponed to (tentatively) pytest 6.0 as the team has not
     yet got around to implement a good alternative for it.

   - issue #466(2): The ‘funcargnames’ attribute has been an alias for
     ‘fixturenames’ since pytest 2.3, and is now deprecated in code too.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4488

   (2) https://github.com/pytest-dev/pytest/issues/466


File: pytest.info,  Node: Features<10>,  Next: Bug Fixes<40>,  Prev: Deprecations<9>,  Up: pytest 5 0 0 2019-06-28

47.41.4 Features
----------------

   - issue #3457(1): New *note pytest_assertion_pass: 2f5. hook, called
     with context information when an assertion ‘passes’.

     This hook is still ‘experimental’ so use it with caution.

   - issue #5440(2): The faulthandler(3) standard library module is now
     enabled by default to help users diagnose crashes in C modules.

     This functionality was provided by integrating the external
     pytest-faulthandler(4) plugin into the core, so users should remove
     that plugin from their requirements if used.

     For more information see the docs: faulthandler.

   - issue #5452(5): When warnings are configured as errors, pytest
     warnings now appear as originating from ‘pytest.’ instead of the
     internal ‘_pytest.warning_types.’ module.

   - issue #5125(6): ‘Session.exitcode’ values are now coded in
     ‘pytest.ExitCode’, an ‘IntEnum’.  This makes the exit code
     available for consumer code and are more explicit other than just
     documentation.  User defined exit codes are still valid, but should
     be used with caution.

     The team doesn’t expect this change to break test suites or plugins
     in general, except in esoteric/specific scenarios.

     ‘pytest-xdist’ users should upgrade to ‘1.29.0’ or later, as
     ‘pytest-xdist’ required a compatibility fix because of this change.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3457

   (2) https://github.com/pytest-dev/pytest/issues/5440

   (3) 
https://docs.python.org/3/library/faulthandler.html#module-faulthandler

   (4) https://github.com/pytest-dev/pytest-faulthandler

   (5) https://github.com/pytest-dev/pytest/issues/5452

   (6) https://github.com/pytest-dev/pytest/issues/5125


File: pytest.info,  Node: Bug Fixes<40>,  Next: Improved Documentation<12>,  Prev: Features<10>,  Up: pytest 5 0 0 2019-06-28

47.41.5 Bug Fixes
-----------------

   - issue #1403(1): Switch from ‘imp’ to ‘importlib’.

   - issue #1671(2): The name of the ‘.pyc’ files cached by the
     assertion writer now includes the pytest version to avoid stale
     caches.

   - issue #2761(3): Honor PEP 235(4) on case-insensitive file systems.

   - issue #5078(5): Test module is no longer double-imported when using
     ‘--pyargs’.

   - issue #5260(6): Improved comparison of byte strings.

     When comparing bytes, the assertion message used to show the byte
     numeric value when showing the differences:

              def test():
          >       assert b'spam' == b'eggs'
          E       AssertionError: assert b'spam' == b'eggs'
          E         At index 0 diff: 115 != 101
          E         Use -v to get the full diff

     It now shows the actual ascii representation instead, which is
     often more useful:

              def test():
          >       assert b'spam' == b'eggs'
          E       AssertionError: assert b'spam' == b'eggs'
          E         At index 0 diff: b's' != b'e'
          E         Use -v to get the full diff

   - issue #5335(7): Colorize level names when the level in the logging
     format is formatted using ‘%(levelname).Xs’ (truncated fixed width
     alignment), where X is an integer.

   - issue #5354(8): Fix ‘pytest.mark.parametrize’ when the argvalues is
     an iterator.

   - issue #5370(9): Revert unrolling of ‘all()’ to fix ‘NameError’ on
     nested comprehensions.

   - issue #5371(10): Revert unrolling of ‘all()’ to fix incorrect
     handling of generators with ‘if’.

   - issue #5372(11): Revert unrolling of ‘all()’ to fix incorrect
     assertion when using ‘all()’ in an expression.

   - issue #5383(12): ‘-q’ has again an impact on the style of the
     collected items (‘--collect-only’) when ‘--log-cli-level’ is used.

   - issue #5389(13): Fix regressions of pull request #5063(14) for
     ‘importlib_metadata.PathDistribution’ which have their ‘files’
     attribute being ‘None’.

   - issue #5390(15): Fix regression where the ‘obj’ attribute of
     ‘TestCase’ items was no longer bound to methods.

   - issue #5404(16): Emit a warning when attempting to unwrap a broken
     object raises an exception, for easier debugging (issue #5080(17)).

   - issue #5432(18): Prevent “already imported” warnings from assertion
     rewriter when invoking pytest in-process multiple times.

   - issue #5433(19): Fix assertion rewriting in packages
     (‘__init__.py’).

   - issue #5444(20): Fix ‘--stepwise’ mode when the first file passed
     on the command-line fails to collect.

   - issue #5482(21): Fix bug introduced in 4.6.0 causing collection
     errors when passing more than 2 positional arguments to
     ‘pytest.mark.parametrize’.

   - issue #5505(22): Fix crash when discovery fails while using ‘-p
     no:terminal’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1403

   (2) https://github.com/pytest-dev/pytest/issues/1671

   (3) https://github.com/pytest-dev/pytest/issues/2761

   (4) https://peps.python.org/pep-0235/

   (5) https://github.com/pytest-dev/pytest/issues/5078

   (6) https://github.com/pytest-dev/pytest/issues/5260

   (7) https://github.com/pytest-dev/pytest/issues/5335

   (8) https://github.com/pytest-dev/pytest/issues/5354

   (9) https://github.com/pytest-dev/pytest/issues/5370

   (10) https://github.com/pytest-dev/pytest/issues/5371

   (11) https://github.com/pytest-dev/pytest/issues/5372

   (12) https://github.com/pytest-dev/pytest/issues/5383

   (13) https://github.com/pytest-dev/pytest/issues/5389

   (14) https://github.com/pytest-dev/pytest/pull/5063

   (15) https://github.com/pytest-dev/pytest/issues/5390

   (16) https://github.com/pytest-dev/pytest/issues/5404

   (17) https://github.com/pytest-dev/pytest/issues/5080

   (18) https://github.com/pytest-dev/pytest/issues/5432

   (19) https://github.com/pytest-dev/pytest/issues/5433

   (20) https://github.com/pytest-dev/pytest/issues/5444

   (21) https://github.com/pytest-dev/pytest/issues/5482

   (22) https://github.com/pytest-dev/pytest/issues/5505


File: pytest.info,  Node: Improved Documentation<12>,  Prev: Bug Fixes<40>,  Up: pytest 5 0 0 2019-06-28

47.41.6 Improved Documentation
------------------------------

   - issue #5315(1): Expand docs on mocking classes and dictionaries
     with ‘monkeypatch’.

   - issue #5416(2): Fix PytestUnknownMarkWarning in run/skip example.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5315

   (2) https://github.com/pytest-dev/pytest/issues/5416


File: pytest.info,  Node: pytest 4 6 11 2020-06-04,  Next: pytest 4 6 10 2020-05-08,  Prev: pytest 5 0 0 2019-06-28,  Up: Changelog

47.42 pytest 4.6.11 (2020-06-04)
================================

* Menu:

* Bug Fixes: Bug Fixes<41>.


File: pytest.info,  Node: Bug Fixes<41>,  Up: pytest 4 6 11 2020-06-04

47.42.1 Bug Fixes
-----------------

   - issue #6334(1): Fix summary entries appearing twice when ‘f/F’ and
     ‘s/S’ report chars were used at the same time in the ‘-r’
     command-line option (for example ‘-rFf’).

     The upper case variants were never documented and the preferred
     form should be the lower case.

   - issue #7310(2): Fix ‘UnboundLocalError: local variable 'letter'
     referenced before assignment’ in
     ‘_pytest.terminal.pytest_report_teststatus()’ when plugins return
     report objects in an unconventional state.

     This was making ‘pytest_report_teststatus()’ skip entering if-block
     branches that declare the ‘letter’ variable.

     The fix was to set the initial value of the ‘letter’ before the
     if-block cascade so that it always has a value.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6334

   (2) https://github.com/pytest-dev/pytest/issues/7310


File: pytest.info,  Node: pytest 4 6 10 2020-05-08,  Next: pytest 4 6 9 2020-01-04,  Prev: pytest 4 6 11 2020-06-04,  Up: Changelog

47.43 pytest 4.6.10 (2020-05-08)
================================

* Menu:

* Features: Features<11>.
* Trivial/Internal Changes: Trivial/Internal Changes<14>.


File: pytest.info,  Node: Features<11>,  Next: Trivial/Internal Changes<14>,  Up: pytest 4 6 10 2020-05-08

47.43.1 Features
----------------

   - issue #6870(1): New ‘Config.invocation_args’ attribute containing
     the unchanged arguments passed to ‘pytest.main()’.

     Remark: while this is technically a new feature and according to
     our policy(2) it should not have been backported, we have opened an
     exception in this particular case because it fixes a serious
     interaction with ‘pytest-xdist’, so it can also be considered a
     bugfix.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6870

   (2) 
https://docs.pytest.org/en/7.0.x/py27-py34-deprecation.html#what-goes-into-4-6-x-releases


File: pytest.info,  Node: Trivial/Internal Changes<14>,  Prev: Features<11>,  Up: pytest 4 6 10 2020-05-08

47.43.2 Trivial/Internal Changes
--------------------------------

   - issue #6404(1): Remove usage of ‘parser’ module, deprecated in
     Python 3.9.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6404


File: pytest.info,  Node: pytest 4 6 9 2020-01-04,  Next: pytest 4 6 8 2019-12-19,  Prev: pytest 4 6 10 2020-05-08,  Up: Changelog

47.44 pytest 4.6.9 (2020-01-04)
===============================

* Menu:

* Bug Fixes: Bug Fixes<42>.


File: pytest.info,  Node: Bug Fixes<42>,  Up: pytest 4 6 9 2020-01-04

47.44.1 Bug Fixes
-----------------

   - issue #6301(1): Fix assertion rewriting for egg-based distributions
     and ‘editable’ installs (‘pip install --editable’).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6301


File: pytest.info,  Node: pytest 4 6 8 2019-12-19,  Next: pytest 4 6 7 2019-12-05,  Prev: pytest 4 6 9 2020-01-04,  Up: Changelog

47.45 pytest 4.6.8 (2019-12-19)
===============================

* Menu:

* Features: Features<12>.
* Bug Fixes: Bug Fixes<43>.
* Trivial/Internal Changes: Trivial/Internal Changes<15>.


File: pytest.info,  Node: Features<12>,  Next: Bug Fixes<43>,  Up: pytest 4 6 8 2019-12-19

47.45.1 Features
----------------

   - issue #5471(1): JUnit XML now includes a timestamp and hostname in
     the testsuite tag.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5471


File: pytest.info,  Node: Bug Fixes<43>,  Next: Trivial/Internal Changes<15>,  Prev: Features<12>,  Up: pytest 4 6 8 2019-12-19

47.45.2 Bug Fixes
-----------------

   - issue #5430(1): junitxml: Logs for failed test are now passed to
     junit report in case the test fails during call phase.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5430


File: pytest.info,  Node: Trivial/Internal Changes<15>,  Prev: Bug Fixes<43>,  Up: pytest 4 6 8 2019-12-19

47.45.3 Trivial/Internal Changes
--------------------------------

   - issue #6345(1): Pin ‘colorama’ to ‘0.4.1’ only for Python 3.4 so
     newer Python versions can still receive colorama updates.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/6345


File: pytest.info,  Node: pytest 4 6 7 2019-12-05,  Next: pytest 4 6 6 2019-10-11,  Prev: pytest 4 6 8 2019-12-19,  Up: Changelog

47.46 pytest 4.6.7 (2019-12-05)
===============================

* Menu:

* Bug Fixes: Bug Fixes<44>.


File: pytest.info,  Node: Bug Fixes<44>,  Up: pytest 4 6 7 2019-12-05

47.46.1 Bug Fixes
-----------------

   - issue #5477(1): The XML file produced by ‘--junitxml’ now correctly
     contain a ‘<testsuites>’ root element.

   - issue #6044(2): Properly ignore ‘FileNotFoundError’ (‘OSError.errno
     == NOENT’ in Python 2) exceptions when trying to remove old
     temporary directories, for instance when multiple processes try to
     remove the same directory (common with ‘pytest-xdist’ for example).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5477

   (2) https://github.com/pytest-dev/pytest/issues/6044


File: pytest.info,  Node: pytest 4 6 6 2019-10-11,  Next: pytest 4 6 5 2019-08-05,  Prev: pytest 4 6 7 2019-12-05,  Up: Changelog

47.47 pytest 4.6.6 (2019-10-11)
===============================

* Menu:

* Bug Fixes: Bug Fixes<45>.
* Trivial/Internal Changes: Trivial/Internal Changes<16>.


File: pytest.info,  Node: Bug Fixes<45>,  Next: Trivial/Internal Changes<16>,  Up: pytest 4 6 6 2019-10-11

47.47.1 Bug Fixes
-----------------

   - issue #5523(1): Fixed using multiple short options together in the
     command-line (for example ‘-vs’) in Python 3.8+.

   - issue #5537(2): Replace ‘importlib_metadata’ backport with
     ‘importlib.metadata’ from the standard library on Python 3.8+.

   - issue #5806(3): Fix “lexer” being used when uploading to bpaste.net
     from ‘--pastebin’ to “text”.

   - issue #5902(4): Fix warnings about deprecated ‘cmp’ attribute in
     ‘attrs>=19.2’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5523

   (2) https://github.com/pytest-dev/pytest/issues/5537

   (3) https://github.com/pytest-dev/pytest/issues/5806

   (4) https://github.com/pytest-dev/pytest/issues/5902


File: pytest.info,  Node: Trivial/Internal Changes<16>,  Prev: Bug Fixes<45>,  Up: pytest 4 6 6 2019-10-11

47.47.2 Trivial/Internal Changes
--------------------------------

   - issue #5801(1): Fixes python version checks (detected by
     ‘flake8-2020’) in case python4 becomes a thing.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5801


File: pytest.info,  Node: pytest 4 6 5 2019-08-05,  Next: pytest 4 6 4 2019-06-28,  Prev: pytest 4 6 6 2019-10-11,  Up: Changelog

47.48 pytest 4.6.5 (2019-08-05)
===============================

* Menu:

* Bug Fixes: Bug Fixes<46>.


File: pytest.info,  Node: Bug Fixes<46>,  Up: pytest 4 6 5 2019-08-05

47.48.1 Bug Fixes
-----------------

   - issue #4344(1): Fix RuntimeError/StopIteration when trying to
     collect package with “__init__.py” only.

   - issue #5478(2): Fix encode error when using unicode strings in
     exceptions with ‘pytest.raises’.

   - issue #5524(3): Fix issue where ‘tmp_path’ and ‘tmpdir’ would not
     remove directories containing files marked as read-only, which
     could lead to pytest crashing when executed a second time with the
     ‘--basetemp’ option.

   - issue #5547(4): ‘--step-wise’ now handles ‘xfail(strict=True)’
     markers properly.

   - issue #5650(5): Improved output when parsing an ini configuration
     file fails.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4344

   (2) https://github.com/pytest-dev/pytest/issues/5478

   (3) https://github.com/pytest-dev/pytest/issues/5524

   (4) https://github.com/pytest-dev/pytest/issues/5547

   (5) https://github.com/pytest-dev/pytest/issues/5650


File: pytest.info,  Node: pytest 4 6 4 2019-06-28,  Next: pytest 4 6 3 2019-06-11,  Prev: pytest 4 6 5 2019-08-05,  Up: Changelog

47.49 pytest 4.6.4 (2019-06-28)
===============================

* Menu:

* Bug Fixes: Bug Fixes<47>.


File: pytest.info,  Node: Bug Fixes<47>,  Up: pytest 4 6 4 2019-06-28

47.49.1 Bug Fixes
-----------------

   - issue #5404(1): Emit a warning when attempting to unwrap a broken
     object raises an exception, for easier debugging (issue #5080(2)).

   - issue #5444(3): Fix ‘--stepwise’ mode when the first file passed on
     the command-line fails to collect.

   - issue #5482(4): Fix bug introduced in 4.6.0 causing collection
     errors when passing more than 2 positional arguments to
     ‘pytest.mark.parametrize’.

   - issue #5505(5): Fix crash when discovery fails while using ‘-p
     no:terminal’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5404

   (2) https://github.com/pytest-dev/pytest/issues/5080

   (3) https://github.com/pytest-dev/pytest/issues/5444

   (4) https://github.com/pytest-dev/pytest/issues/5482

   (5) https://github.com/pytest-dev/pytest/issues/5505


File: pytest.info,  Node: pytest 4 6 3 2019-06-11,  Next: pytest 4 6 2 2019-06-03,  Prev: pytest 4 6 4 2019-06-28,  Up: Changelog

47.50 pytest 4.6.3 (2019-06-11)
===============================

* Menu:

* Bug Fixes: Bug Fixes<48>.


File: pytest.info,  Node: Bug Fixes<48>,  Up: pytest 4 6 3 2019-06-11

47.50.1 Bug Fixes
-----------------

   - issue #5383(1): ‘-q’ has again an impact on the style of the
     collected items (‘--collect-only’) when ‘--log-cli-level’ is used.

   - issue #5389(2): Fix regressions of pull request #5063(3) for
     ‘importlib_metadata.PathDistribution’ which have their ‘files’
     attribute being ‘None’.

   - issue #5390(4): Fix regression where the ‘obj’ attribute of
     ‘TestCase’ items was no longer bound to methods.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5383

   (2) https://github.com/pytest-dev/pytest/issues/5389

   (3) https://github.com/pytest-dev/pytest/pull/5063

   (4) https://github.com/pytest-dev/pytest/issues/5390


File: pytest.info,  Node: pytest 4 6 2 2019-06-03,  Next: pytest 4 6 1 2019-06-02,  Prev: pytest 4 6 3 2019-06-11,  Up: Changelog

47.51 pytest 4.6.2 (2019-06-03)
===============================

* Menu:

* Bug Fixes: Bug Fixes<49>.


File: pytest.info,  Node: Bug Fixes<49>,  Up: pytest 4 6 2 2019-06-03

47.51.1 Bug Fixes
-----------------

   - issue #5370(1): Revert unrolling of ‘all()’ to fix ‘NameError’ on
     nested comprehensions.

   - issue #5371(2): Revert unrolling of ‘all()’ to fix incorrect
     handling of generators with ‘if’.

   - issue #5372(3): Revert unrolling of ‘all()’ to fix incorrect
     assertion when using ‘all()’ in an expression.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5370

   (2) https://github.com/pytest-dev/pytest/issues/5371

   (3) https://github.com/pytest-dev/pytest/issues/5372


File: pytest.info,  Node: pytest 4 6 1 2019-06-02,  Next: pytest 4 6 0 2019-05-31,  Prev: pytest 4 6 2 2019-06-03,  Up: Changelog

47.52 pytest 4.6.1 (2019-06-02)
===============================

* Menu:

* Bug Fixes: Bug Fixes<50>.


File: pytest.info,  Node: Bug Fixes<50>,  Up: pytest 4 6 1 2019-06-02

47.52.1 Bug Fixes
-----------------

   - issue #5354(1): Fix ‘pytest.mark.parametrize’ when the argvalues is
     an iterator.

   - issue #5358(2): Fix assertion rewriting of ‘all()’ calls to deal
     with non-generators.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5354

   (2) https://github.com/pytest-dev/pytest/issues/5358


File: pytest.info,  Node: pytest 4 6 0 2019-05-31,  Next: pytest 4 5 0 2019-05-11,  Prev: pytest 4 6 1 2019-06-02,  Up: Changelog

47.53 pytest 4.6.0 (2019-05-31)
===============================

* Menu:

* Important: Important<2>.
* Features: Features<13>.
* Bug Fixes: Bug Fixes<51>.
* Improved Documentation: Improved Documentation<13>.


File: pytest.info,  Node: Important<2>,  Next: Features<13>,  Up: pytest 4 6 0 2019-05-31

47.53.1 Important
-----------------

The ‘4.6.X’ series will be the last series to support ‘Python 2 and
Python 3.4’.

For more details, see our Python 2.7 and 3.4 support plan(1).

   ---------- Footnotes ----------

   (1) https://docs.pytest.org/en/7.0.x/py27-py34-deprecation.html


File: pytest.info,  Node: Features<13>,  Next: Bug Fixes<51>,  Prev: Important<2>,  Up: pytest 4 6 0 2019-05-31

47.53.2 Features
----------------

   - issue #4559(1): Added the ‘junit_log_passing_tests’ ini value which
     can be used to enable or disable logging of passing test output in
     the Junit XML file.

   - issue #4956(2): pytester’s ‘testdir.spawn’ uses ‘tmpdir’ as
     HOME/USERPROFILE directory.

   - issue #5062(3): Unroll calls to ‘all’ to full for-loops with
     assertion rewriting for better failure messages, especially when
     using Generator Expressions.

   - issue #5063(4): Switch from ‘pkg_resources’ to ‘importlib-metadata’
     for entrypoint detection for improved performance and import time.

   - issue #5091(5): The output for ini options in ‘--help’ has been
     improved.

   - issue #5269(6): ‘pytest.importorskip’ includes the ‘ImportError’
     now in the default ‘reason’.

   - issue #5311(7): Captured logs that are output for each failing test
     are formatted using the ColoredLevelFormatter.

   - issue #5312(8): Improved formatting of multiline log messages in
     Python 3.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4559

   (2) https://github.com/pytest-dev/pytest/issues/4956

   (3) https://github.com/pytest-dev/pytest/issues/5062

   (4) https://github.com/pytest-dev/pytest/issues/5063

   (5) https://github.com/pytest-dev/pytest/issues/5091

   (6) https://github.com/pytest-dev/pytest/issues/5269

   (7) https://github.com/pytest-dev/pytest/issues/5311

   (8) https://github.com/pytest-dev/pytest/issues/5312


File: pytest.info,  Node: Bug Fixes<51>,  Next: Improved Documentation<13>,  Prev: Features<13>,  Up: pytest 4 6 0 2019-05-31

47.53.3 Bug Fixes
-----------------

   - issue #2064(1): The debugging plugin imports the wrapped ‘Pdb’
     class (‘--pdbcls’) on-demand now.

   - issue #4908(2): The ‘pytest_enter_pdb’ hook gets called with
     post-mortem (‘--pdb’).

   - issue #5036(3): Fix issue where fixtures dependent on other
     parametrized fixtures would be erroneously parametrized.

   - issue #5256(4): Handle internal error due to a lone surrogate
     unicode character not being representable in Jython.

   - issue #5257(5): Ensure that ‘sys.stdout.mode’ does not include
     ‘'b'’ as it is a text stream.

   - issue #5278(6): Pytest’s internal python plugin can be disabled
     using ‘-p no:python’ again.

   - issue #5286(7): Fix issue with
     ‘disable_test_id_escaping_and_forfeit_all_rights_to_community_support’
     option not working when using a list of test IDs in parametrized
     tests.

   - issue #5330(8): Show the test module being collected when emitting
     ‘PytestCollectionWarning’ messages for test classes with ‘__init__’
     and ‘__new__’ methods to make it easier to pin down the problem.

   - issue #5333(9): Fix regression in 4.5.0 with ‘--lf’ not re-running
     all tests with known failures from non-selected tests.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2064

   (2) https://github.com/pytest-dev/pytest/issues/4908

   (3) https://github.com/pytest-dev/pytest/issues/5036

   (4) https://github.com/pytest-dev/pytest/issues/5256

   (5) https://github.com/pytest-dev/pytest/issues/5257

   (6) https://github.com/pytest-dev/pytest/issues/5278

   (7) https://github.com/pytest-dev/pytest/issues/5286

   (8) https://github.com/pytest-dev/pytest/issues/5330

   (9) https://github.com/pytest-dev/pytest/issues/5333


File: pytest.info,  Node: Improved Documentation<13>,  Prev: Bug Fixes<51>,  Up: pytest 4 6 0 2019-05-31

47.53.4 Improved Documentation
------------------------------

   - issue #5250(1): Expand docs on use of ‘setenv’ and ‘delenv’ with
     ‘monkeypatch’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5250


File: pytest.info,  Node: pytest 4 5 0 2019-05-11,  Next: pytest 4 4 2 2019-05-08,  Prev: pytest 4 6 0 2019-05-31,  Up: Changelog

47.54 pytest 4.5.0 (2019-05-11)
===============================

* Menu:

* Features: Features<14>.
* Bug Fixes: Bug Fixes<52>.
* Improved Documentation: Improved Documentation<14>.
* Trivial/Internal Changes: Trivial/Internal Changes<17>.


File: pytest.info,  Node: Features<14>,  Next: Bug Fixes<52>,  Up: pytest 4 5 0 2019-05-11

47.54.1 Features
----------------

   - issue #4826(1): A warning is now emitted when unknown marks are
     used as a decorator.  This is often due to a typo, which can lead
     to silently broken tests.

   - issue #4907(2): Show XFail reason as part of JUnitXML message
     field.

   - issue #5013(3): Messages from crash reports are displayed within
     test summaries now, truncated to the terminal width.

   - issue #5023(4): New flag ‘--strict-markers’ that triggers an error
     when unknown markers (e.g.  those not registered using the *note
     markers: 444. option in the configuration file) are used in the
     test suite.

     The existing ‘--strict’ option has the same behavior currently, but
     can be augmented in the future for additional checks.

   - issue #5026(5): Assertion failure messages for sequences and dicts
     contain the number of different items now.

   - issue #5034(6): Improve reporting with ‘--lf’ and ‘--ff’
     (run-last-failure).

   - issue #5035(7): The ‘--cache-show’ option/action accepts an
     optional glob to show only matching cache entries.

   - issue #5059(8): Standard input (stdin) can be given to pytester’s
     ‘Testdir.run()’ and ‘Testdir.popen()’.

   - issue #5068(9): The ‘-r’ option learnt about ‘A’ to display all
     reports (including passed ones) in the short test summary.

   - issue #5108(10): The short test summary is displayed after passes
     with output (‘-rP’).

   - issue #5172(11): The ‘--last-failed’ (‘--lf’) option got smarter
     and will now skip entire files if all tests of that test file have
     passed in previous runs, greatly speeding up collection.

   - issue #5177(12): Introduce new specific warning ‘PytestWarning’
     subclasses to make it easier to filter warnings based on the class,
     rather than on the message.  The new subclasses are:

        * ‘PytestAssertRewriteWarning’

        * ‘PytestCacheWarning’

        * ‘PytestCollectionWarning’

        * ‘PytestConfigWarning’

        * ‘PytestUnhandledCoroutineWarning’

        * ‘PytestUnknownMarkWarning’

   - issue #5202(13): New ‘record_testsuite_property’ session-scoped
     fixture allows users to log ‘<property>’ tags at the ‘testsuite’
     level with the ‘junitxml’ plugin.

     The generated XML is compatible with the latest xunit standard,
     contrary to the properties recorded by ‘record_property’ and
     ‘record_xml_attribute’.

   - issue #5214(14): The default logging format has been changed to
     improve readability.  Here is an example of a previous logging
     message:

          test_log_cli_enabled_disabled.py    3 CRITICAL critical message logged by test

     This has now become:

          CRITICAL root:test_log_cli_enabled_disabled.py:3 critical message logged by test

     The formatting can be changed through the *note log_format: 443.
     configuration option.

   - issue #5220(15): ‘--fixtures’ now also shows fixture scope for
     scopes other than ‘"function"’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4826

   (2) https://github.com/pytest-dev/pytest/issues/4907

   (3) https://github.com/pytest-dev/pytest/issues/5013

   (4) https://github.com/pytest-dev/pytest/issues/5023

   (5) https://github.com/pytest-dev/pytest/issues/5026

   (6) https://github.com/pytest-dev/pytest/issues/5034

   (7) https://github.com/pytest-dev/pytest/issues/5035

   (8) https://github.com/pytest-dev/pytest/issues/5059

   (9) https://github.com/pytest-dev/pytest/issues/5068

   (10) https://github.com/pytest-dev/pytest/issues/5108

   (11) https://github.com/pytest-dev/pytest/issues/5172

   (12) https://github.com/pytest-dev/pytest/issues/5177

   (13) https://github.com/pytest-dev/pytest/issues/5202

   (14) https://github.com/pytest-dev/pytest/issues/5214

   (15) https://github.com/pytest-dev/pytest/issues/5220


File: pytest.info,  Node: Bug Fixes<52>,  Next: Improved Documentation<14>,  Prev: Features<14>,  Up: pytest 4 5 0 2019-05-11

47.54.2 Bug Fixes
-----------------

   - issue #5113(1): Deselected items from plugins using
     ‘pytest_collect_modifyitems’ as a hookwrapper are correctly
     reported now.

   - issue #5144(2): With usage errors ‘exitstatus’ is set to
     ‘EXIT_USAGEERROR’ in the ‘pytest_sessionfinish’ hook now as
     expected.

   - issue #5235(3): ‘outcome.exit’ is not used with ‘EOF’ in the pdb
     wrapper anymore, but only with ‘quit’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5113

   (2) https://github.com/pytest-dev/pytest/issues/5144

   (3) https://github.com/pytest-dev/pytest/issues/5235


File: pytest.info,  Node: Improved Documentation<14>,  Next: Trivial/Internal Changes<17>,  Prev: Bug Fixes<52>,  Up: pytest 4 5 0 2019-05-11

47.54.3 Improved Documentation
------------------------------

   - issue #4935(1): Expand docs on registering marks and the effect of
     ‘--strict’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4935


File: pytest.info,  Node: Trivial/Internal Changes<17>,  Prev: Improved Documentation<14>,  Up: pytest 4 5 0 2019-05-11

47.54.4 Trivial/Internal Changes
--------------------------------

   - issue #4942(1): ‘logging.raiseExceptions’ is not set to ‘False’
     anymore.

   - issue #5013(2): pytest now depends on wcwidth(3) to properly track
     unicode character sizes for more precise terminal output.

   - issue #5059(4): pytester’s ‘Testdir.popen()’ uses ‘stdout’ and
     ‘stderr’ via keyword arguments with defaults now
     (‘subprocess.PIPE’).

   - issue #5069(5): The code for the short test summary in the terminal
     was moved to the terminal plugin.

   - issue #5082(6): Improved validation of kwargs for various methods
     in the pytester plugin.

   - issue #5202(7): ‘record_property’ now emits a ‘PytestWarning’ when
     used with ‘junit_family=xunit2’: the fixture generates ‘property’
     tags as children of ‘testcase’, which is not permitted according to
     the most recent schema(8).

   - issue #5239(9): Pin ‘pluggy’ to ‘< 1.0’ so we don’t update to ‘1.0’
     automatically when it gets released: there are planned breaking
     changes, and we want to ensure pytest properly supports ‘pluggy
     1.0’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4942

   (2) https://github.com/pytest-dev/pytest/issues/5013

   (3) https://pypi.org/project/wcwidth/

   (4) https://github.com/pytest-dev/pytest/issues/5059

   (5) https://github.com/pytest-dev/pytest/issues/5069

   (6) https://github.com/pytest-dev/pytest/issues/5082

   (7) https://github.com/pytest-dev/pytest/issues/5202

   (8) 
https://github.com/jenkinsci/xunit-plugin/blob/master/src/main/resources/org/jenkinsci/plugins/xunit/types/model/xsd/junit-10.xsd

   (9) https://github.com/pytest-dev/pytest/issues/5239


File: pytest.info,  Node: pytest 4 4 2 2019-05-08,  Next: pytest 4 4 1 2019-04-15,  Prev: pytest 4 5 0 2019-05-11,  Up: Changelog

47.55 pytest 4.4.2 (2019-05-08)
===============================

* Menu:

* Bug Fixes: Bug Fixes<53>.
* Improved Documentation: Improved Documentation<15>.
* Trivial/Internal Changes: Trivial/Internal Changes<18>.


File: pytest.info,  Node: Bug Fixes<53>,  Next: Improved Documentation<15>,  Up: pytest 4 4 2 2019-05-08

47.55.1 Bug Fixes
-----------------

   - issue #5089(1): Fix crash caused by error in ‘__repr__’ function
     with both ‘showlocals’ and verbose output enabled.

   - issue #5139(2): Eliminate core dependency on ‘terminal’ plugin.

   - issue #5229(3): Require ‘pluggy>=0.11.0’ which reverts a dependency
     to ‘importlib-metadata’ added in ‘0.10.0’.  The
     ‘importlib-metadata’ package cannot be imported when installed as
     an egg and causes issues when relying on ‘setup.py’ to install test
     dependencies.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5089

   (2) https://github.com/pytest-dev/pytest/issues/5139

   (3) https://github.com/pytest-dev/pytest/issues/5229


File: pytest.info,  Node: Improved Documentation<15>,  Next: Trivial/Internal Changes<18>,  Prev: Bug Fixes<53>,  Up: pytest 4 4 2 2019-05-08

47.55.2 Improved Documentation
------------------------------

   - issue #5171(1): Doc: ‘pytest_ignore_collect’,
     ‘pytest_collect_directory’, ‘pytest_collect_file’ and
     ‘pytest_pycollect_makemodule’ hooks’s ‘path’ parameter documented
     type is now ‘py.path.local’

   - issue #5188(2): Improve help for ‘--runxfail’ flag.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5171

   (2) https://github.com/pytest-dev/pytest/issues/5188


File: pytest.info,  Node: Trivial/Internal Changes<18>,  Prev: Improved Documentation<15>,  Up: pytest 4 4 2 2019-05-08

47.55.3 Trivial/Internal Changes
--------------------------------

   - issue #5182(1): Removed internal and unused
     ‘_pytest.deprecated.MARK_INFO_ATTRIBUTE’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5182


File: pytest.info,  Node: pytest 4 4 1 2019-04-15,  Next: pytest 4 4 0 2019-03-29,  Prev: pytest 4 4 2 2019-05-08,  Up: Changelog

47.56 pytest 4.4.1 (2019-04-15)
===============================

* Menu:

* Bug Fixes: Bug Fixes<54>.


File: pytest.info,  Node: Bug Fixes<54>,  Up: pytest 4 4 1 2019-04-15

47.56.1 Bug Fixes
-----------------

   - issue #5031(1): Environment variables are properly restored when
     using pytester’s ‘testdir’ fixture.

   - issue #5039(2): Fix regression with ‘--pdbcls’, which stopped
     working with local modules in 4.0.0.

   - issue #5092(3): Produce a warning when unknown keywords are passed
     to ‘pytest.param(...)’.

   - issue #5098(4): Invalidate import caches with
     ‘monkeypatch.syspath_prepend’, which is required with namespace
     packages being used.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/5031

   (2) https://github.com/pytest-dev/pytest/issues/5039

   (3) https://github.com/pytest-dev/pytest/issues/5092

   (4) https://github.com/pytest-dev/pytest/issues/5098


File: pytest.info,  Node: pytest 4 4 0 2019-03-29,  Next: pytest 4 3 1 2019-03-11,  Prev: pytest 4 4 1 2019-04-15,  Up: Changelog

47.57 pytest 4.4.0 (2019-03-29)
===============================

* Menu:

* Features: Features<15>.
* Bug Fixes: Bug Fixes<55>.
* Improved Documentation: Improved Documentation<16>.
* Trivial/Internal Changes: Trivial/Internal Changes<19>.


File: pytest.info,  Node: Features<15>,  Next: Bug Fixes<55>,  Up: pytest 4 4 0 2019-03-29

47.57.1 Features
----------------

   - issue #2224(1): ‘async’ test functions are skipped and a warning is
     emitted when a suitable async plugin is not installed (such as
     ‘pytest-asyncio’ or ‘pytest-trio’).

     Previously ‘async’ functions would not execute at all but still be
     marked as “passed”.

   - issue #2482(2): Include new
     ‘disable_test_id_escaping_and_forfeit_all_rights_to_community_support’
     option to disable ascii-escaping in parametrized values.  This may
     cause a series of problems and as the name makes clear, use at your
     own risk.

   - issue #4718(3): The ‘-p’ option can now be used to early-load
     plugins also by entry-point name, instead of just by module name.

     This makes it possible to early load external plugins like
     ‘pytest-cov’ in the command-line:

          pytest -p pytest_cov

   - issue #4855(4): The ‘--pdbcls’ option handles classes via module
     attributes now (e.g.  ‘pdb:pdb.Pdb’ with pdbpp(5)), and its
     validation was improved.

   - issue #4875(6): The *note testpaths: 44b. configuration option is
     now displayed next to the ‘rootdir’ and ‘inifile’ lines in the
     pytest header if the option is in effect, i.e., directories or file
     names were not explicitly passed in the command line.

     Also, ‘inifile’ is only displayed if there’s a configuration file,
     instead of an empty ‘inifile:’ string.

   - issue #4911(7): Doctests can be skipped now dynamically using
     ‘pytest.skip()’.

   - issue #4920(8): Internal refactorings have been made in order to
     make the implementation of the pytest-subtests(9) plugin possible,
     which adds unittest sub-test support and a new ‘subtests’ fixture
     as discussed in issue #1367(10).

     For details on the internal refactorings, please see the details on
     the related PR.

   - issue #4931(11): pytester’s ‘LineMatcher’ asserts that the passed
     lines are a sequence.

   - issue #4936(12): Handle ‘-p plug’ after ‘-p no:plug’.

     This can be used to override a blocked plugin (e.g.  in “addopts”)
     from the command line etc.

   - issue #4951(13): Output capturing is handled correctly when only
     capturing via fixtures (capsys, capfs) with ‘pdb.set_trace()’.

   - issue #4956(14): ‘pytester’ sets ‘$HOME’ and ‘$USERPROFILE’ to the
     temporary directory during test runs.

     This ensures to not load configuration files from the real user’s
     home directory.

   - issue #4980(15): Namespace packages are handled better with
     ‘monkeypatch.syspath_prepend’ and ‘testdir.syspathinsert’ (via
     ‘pkg_resources.fixup_namespace_packages’).

   - issue #4993(16): The stepwise plugin reports status information
     now.

   - issue #5008(17): If a ‘setup.cfg’ file contains ‘[tool:pytest]’ and
     also the no longer supported ‘[pytest]’ section, pytest will use
     ‘[tool:pytest]’ ignoring ‘[pytest]’.  Previously it would
     unconditionally error out.

     This makes it simpler for plugins to support old pytest versions.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2224

   (2) https://github.com/pytest-dev/pytest/issues/2482

   (3) https://github.com/pytest-dev/pytest/issues/4718

   (4) https://github.com/pytest-dev/pytest/issues/4855

   (5) https://pypi.org/project/pdbpp/

   (6) https://github.com/pytest-dev/pytest/issues/4875

   (7) https://github.com/pytest-dev/pytest/issues/4911

   (8) https://github.com/pytest-dev/pytest/issues/4920

   (9) https://github.com/pytest-dev/pytest-subtests

   (10) https://github.com/pytest-dev/pytest/issues/1367

   (11) https://github.com/pytest-dev/pytest/issues/4931

   (12) https://github.com/pytest-dev/pytest/issues/4936

   (13) https://github.com/pytest-dev/pytest/issues/4951

   (14) https://github.com/pytest-dev/pytest/issues/4956

   (15) https://github.com/pytest-dev/pytest/issues/4980

   (16) https://github.com/pytest-dev/pytest/issues/4993

   (17) https://github.com/pytest-dev/pytest/issues/5008


File: pytest.info,  Node: Bug Fixes<55>,  Next: Improved Documentation<16>,  Prev: Features<15>,  Up: pytest 4 4 0 2019-03-29

47.57.2 Bug Fixes
-----------------

   - issue #1895(1): Fix bug where fixtures requested dynamically via
     ‘request.getfixturevalue()’ might be teardown before the requesting
     fixture.

   - issue #4851(2): pytester unsets ‘PYTEST_ADDOPTS’ now to not use
     outer options with ‘testdir.runpytest()’.

   - issue #4903(3): Use the correct modified time for years after 2038
     in rewritten ‘.pyc’ files.

   - issue #4928(4): Fix line offsets with ‘ScopeMismatch’ errors.

   - issue #4957(5): ‘-p no:plugin’ is handled correctly for default
     (internal) plugins now, e.g.  with ‘-p no:capture’.

     Previously they were loaded (imported) always, making e.g.  the
     ‘capfd’ fixture available.

   - issue #4968(6): The pdb ‘quit’ command is handled properly when
     used after the ‘debug’ command with pdbpp(7).

   - issue #4975(8): Fix the interpretation of ‘-qq’ option where it was
     being considered as ‘-v’ instead.

   - issue #4978(9): ‘outcomes.Exit’ is not swallowed in
     ‘assertrepr_compare’ anymore.

   - issue #4988(10): Close logging’s file handler explicitly when the
     session finishes.

   - issue #5003(11): Fix line offset with mark collection error (off by
     one).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1895

   (2) https://github.com/pytest-dev/pytest/issues/4851

   (3) https://github.com/pytest-dev/pytest/issues/4903

   (4) https://github.com/pytest-dev/pytest/issues/4928

   (5) https://github.com/pytest-dev/pytest/issues/4957

   (6) https://github.com/pytest-dev/pytest/issues/4968

   (7) https://pypi.org/project/pdbpp/

   (8) https://github.com/pytest-dev/pytest/issues/4975

   (9) https://github.com/pytest-dev/pytest/issues/4978

   (10) https://github.com/pytest-dev/pytest/issues/4988

   (11) https://github.com/pytest-dev/pytest/issues/5003


File: pytest.info,  Node: Improved Documentation<16>,  Next: Trivial/Internal Changes<19>,  Prev: Bug Fixes<55>,  Up: pytest 4 4 0 2019-03-29

47.57.3 Improved Documentation
------------------------------

   - issue #4974(1): Update docs for ‘pytest_cmdline_parse’ hook to note
     availability liminations

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4974


File: pytest.info,  Node: Trivial/Internal Changes<19>,  Prev: Improved Documentation<16>,  Up: pytest 4 4 0 2019-03-29

47.57.4 Trivial/Internal Changes
--------------------------------

   - issue #4718(1): ‘pluggy>=0.9’ is now required.

   - issue #4815(2): ‘funcsigs>=1.0’ is now required for Python 2.7.

   - issue #4829(3): Some left-over internal code related to ‘yield’
     tests has been removed.

   - issue #4890(4): Remove internally unused ‘anypython’ fixture from
     the pytester plugin.

   - issue #4912(5): Remove deprecated Sphinx directive,
     ‘add_description_unit()’, pin sphinx-removed-in to >= 0.2.0 to
     support Sphinx 2.0.

   - issue #4913(6): Fix pytest tests invocation with custom
     ‘PYTHONPATH’.

   - issue #4965(7): New ‘pytest_report_to_serializable’ and
     ‘pytest_report_from_serializable’ ‘experimental’ hooks.

     These hooks will be used by ‘pytest-xdist’, ‘pytest-subtests’, and
     the replacement for resultlog to serialize and customize reports.

     They are experimental, meaning that their details might change or
     even be removed completely in future patch releases without
     warning.

     Feedback is welcome from plugin authors and users alike.

   - issue #4987(8): ‘Collector.repr_failure’ respects the ‘--tb’
     option, but only defaults to ‘short’ now (with ‘auto’).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4718

   (2) https://github.com/pytest-dev/pytest/issues/4815

   (3) https://github.com/pytest-dev/pytest/issues/4829

   (4) https://github.com/pytest-dev/pytest/issues/4890

   (5) https://github.com/pytest-dev/pytest/issues/4912

   (6) https://github.com/pytest-dev/pytest/issues/4913

   (7) https://github.com/pytest-dev/pytest/issues/4965

   (8) https://github.com/pytest-dev/pytest/issues/4987


File: pytest.info,  Node: pytest 4 3 1 2019-03-11,  Next: pytest 4 3 0 2019-02-16,  Prev: pytest 4 4 0 2019-03-29,  Up: Changelog

47.58 pytest 4.3.1 (2019-03-11)
===============================

* Menu:

* Bug Fixes: Bug Fixes<56>.
* Trivial/Internal Changes: Trivial/Internal Changes<20>.


File: pytest.info,  Node: Bug Fixes<56>,  Next: Trivial/Internal Changes<20>,  Up: pytest 4 3 1 2019-03-11

47.58.1 Bug Fixes
-----------------

   - issue #4810(1): Logging messages inside
     ‘pytest_runtest_logreport()’ are now properly captured and
     displayed.

   - issue #4861(2): Improve validation of contents written to captured
     output so it behaves the same as when capture is disabled.

   - issue #4898(3): Fix ‘AttributeError: FixtureRequest has no 'confg'
     attribute’ bug in ‘testdir.copy_example’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4810

   (2) https://github.com/pytest-dev/pytest/issues/4861

   (3) https://github.com/pytest-dev/pytest/issues/4898


File: pytest.info,  Node: Trivial/Internal Changes<20>,  Prev: Bug Fixes<56>,  Up: pytest 4 3 1 2019-03-11

47.58.2 Trivial/Internal Changes
--------------------------------

   - issue #4768(1): Avoid pkg_resources import at the top-level.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4768


File: pytest.info,  Node: pytest 4 3 0 2019-02-16,  Next: pytest 4 2 1 2019-02-12,  Prev: pytest 4 3 1 2019-03-11,  Up: Changelog

47.59 pytest 4.3.0 (2019-02-16)
===============================

* Menu:

* Deprecations: Deprecations<10>.
* Features: Features<16>.
* Bug Fixes: Bug Fixes<57>.


File: pytest.info,  Node: Deprecations<10>,  Next: Features<16>,  Up: pytest 4 3 0 2019-02-16

47.59.1 Deprecations
--------------------

   - issue #4724(1): ‘pytest.warns()’ now emits a warning when it
     receives unknown keyword arguments.

     This will be changed into an error in the future.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4724


File: pytest.info,  Node: Features<16>,  Next: Bug Fixes<57>,  Prev: Deprecations<10>,  Up: pytest 4 3 0 2019-02-16

47.59.2 Features
----------------

   - issue #2753(1): Usage errors from argparse are mapped to pytest’s
     ‘UsageError’.

   - issue #3711(2): Add the ‘--ignore-glob’ parameter to exclude
     test-modules with Unix shell-style wildcards.  Add the *note
     collect_ignore_glob: 416. for ‘conftest.py’ to exclude test-modules
     with Unix shell-style wildcards.

   - issue #4698(3): The warning about Python 2.7 and 3.4 not being
     supported in pytest 5.0 has been removed.

     In the end it was considered to be more of a nuisance than actual
     utility and users of those Python versions shouldn’t have problems
     as ‘pip’ will not install pytest 5.0 on those interpreters.

   - issue #4707(4): With the help of new ‘set_log_path()’ method there
     is a way to set ‘log_file’ paths from hooks.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2753

   (2) https://github.com/pytest-dev/pytest/issues/3711

   (3) https://github.com/pytest-dev/pytest/issues/4698

   (4) https://github.com/pytest-dev/pytest/issues/4707


File: pytest.info,  Node: Bug Fixes<57>,  Prev: Features<16>,  Up: pytest 4 3 0 2019-02-16

47.59.3 Bug Fixes
-----------------

   - issue #4651(1): ‘--help’ and ‘--version’ are handled with
     ‘UsageError’.

   - issue #4782(2): Fix ‘AssertionError’ with collection of broken
     symlinks with packages.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4651

   (2) https://github.com/pytest-dev/pytest/issues/4782


File: pytest.info,  Node: pytest 4 2 1 2019-02-12,  Next: pytest 4 2 0 2019-01-30,  Prev: pytest 4 3 0 2019-02-16,  Up: Changelog

47.60 pytest 4.2.1 (2019-02-12)
===============================

* Menu:

* Bug Fixes: Bug Fixes<58>.
* Improved Documentation: Improved Documentation<17>.
* Trivial/Internal Changes: Trivial/Internal Changes<21>.


File: pytest.info,  Node: Bug Fixes<58>,  Next: Improved Documentation<17>,  Up: pytest 4 2 1 2019-02-12

47.60.1 Bug Fixes
-----------------

   - issue #2895(1): The ‘pytest_report_collectionfinish’ hook now is
     also called with ‘--collect-only’.

   - issue #3899(2): Do not raise ‘UsageError’ when an imported package
     has a ‘pytest_plugins.py’ child module.

   - issue #4347(3): Fix output capturing when using pdb++ with
     recursive debugging.

   - issue #4592(4): Fix handling of ‘collect_ignore’ via parent
     ‘conftest.py’.

   - issue #4700(5): Fix regression where ‘setUpClass’ would always be
     called in subclasses even if all tests were skipped by a
     ‘unittest.skip()’ decorator applied in the subclass.

   - issue #4739(6): Fix ‘parametrize(... ids=<function>)’ when the
     function returns non-strings.

   - issue #4745(7): Fix/improve collection of args when passing in
     ‘__init__.py’ and a test file.

   - issue #4770(8): ‘more_itertools’ is now constrained to <6.0.0 when
     required for Python 2.7 compatibility.

   - issue #526(9): Fix “ValueError: Plugin already registered”
     exceptions when running in build directories that symlink to actual
     source.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2895

   (2) https://github.com/pytest-dev/pytest/issues/3899

   (3) https://github.com/pytest-dev/pytest/issues/4347

   (4) https://github.com/pytest-dev/pytest/issues/4592

   (5) https://github.com/pytest-dev/pytest/issues/4700

   (6) https://github.com/pytest-dev/pytest/issues/4739

   (7) https://github.com/pytest-dev/pytest/issues/4745

   (8) https://github.com/pytest-dev/pytest/issues/4770

   (9) https://github.com/pytest-dev/pytest/issues/526


File: pytest.info,  Node: Improved Documentation<17>,  Next: Trivial/Internal Changes<21>,  Prev: Bug Fixes<58>,  Up: pytest 4 2 1 2019-02-12

47.60.2 Improved Documentation
------------------------------

   - issue #3899(1): Add note to ‘plugins.rst’ that ‘pytest_plugins’
     should not be used as a name for a user module containing plugins.

   - issue #4324(2): Document how to use ‘raises’ and ‘does_not_raise’
     to write parametrized tests with conditional raises.

   - issue #4709(3): Document how to customize test failure messages
     when using ‘pytest.warns’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3899

   (2) https://github.com/pytest-dev/pytest/issues/4324

   (3) https://github.com/pytest-dev/pytest/issues/4709


File: pytest.info,  Node: Trivial/Internal Changes<21>,  Prev: Improved Documentation<17>,  Up: pytest 4 2 1 2019-02-12

47.60.3 Trivial/Internal Changes
--------------------------------

   - issue #4741(1): Some verbosity related attributes of the
     TerminalReporter plugin are now read only properties.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4741


File: pytest.info,  Node: pytest 4 2 0 2019-01-30,  Next: pytest 4 1 1 2019-01-12,  Prev: pytest 4 2 1 2019-02-12,  Up: Changelog

47.61 pytest 4.2.0 (2019-01-30)
===============================

* Menu:

* Features: Features<17>.
* Bug Fixes: Bug Fixes<59>.
* Trivial/Internal Changes: Trivial/Internal Changes<22>.


File: pytest.info,  Node: Features<17>,  Next: Bug Fixes<59>,  Up: pytest 4 2 0 2019-01-30

47.61.1 Features
----------------

   - issue #3094(1): *note Classic xunit-style: 18e. functions and
     methods now obey the scope of ‘autouse’ fixtures.

     This fixes a number of surprising issues like ‘setup_method’ being
     called before session-scoped autouse fixtures (see issue #517(2)
     for an example).

   - issue #4627(3): Display a message at the end of the test session
     when running under Python 2.7 and 3.4 that pytest 5.0 will no
     longer support those Python versions.

   - issue #4660(4): The number of ‘selected’ tests now are also
     displayed when the ‘-k’ or ‘-m’ flags are used.

   - issue #4688(5): ‘pytest_report_teststatus’ hook now can also
     receive a ‘config’ parameter.

   - issue #4691(6): ‘pytest_terminal_summary’ hook now can also receive
     a ‘config’ parameter.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3094

   (2) https://github.com/pytest-dev/pytest/issues/517

   (3) https://github.com/pytest-dev/pytest/issues/4627

   (4) https://github.com/pytest-dev/pytest/issues/4660

   (5) https://github.com/pytest-dev/pytest/issues/4688

   (6) https://github.com/pytest-dev/pytest/issues/4691


File: pytest.info,  Node: Bug Fixes<59>,  Next: Trivial/Internal Changes<22>,  Prev: Features<17>,  Up: pytest 4 2 0 2019-01-30

47.61.2 Bug Fixes
-----------------

   - issue #3547(1): ‘--junitxml’ can emit XML compatible with Jenkins
     xUnit.  ‘junit_family’ INI option accepts ‘legacy|xunit1’, which
     produces old style output, and ‘xunit2’ that conforms more strictly
     to
     ‘https://github.com/jenkinsci/xunit-plugin/blob/xunit-2.3.2/src/main/resources/org/jenkinsci/plugins/xunit/types/model/xsd/junit-10.xsd’

   - issue #4280(2): Improve quitting from pdb, especially with
     ‘--trace’.

     Using ‘q[quit]’ after ‘pdb.set_trace()’ will quit pytest also.

   - issue #4402(3): Warning summary now groups warnings by message
     instead of by test id.

     This makes the output more compact and better conveys the general
     idea of how much code is actually generating warnings, instead of
     how many tests call that code.

   - issue #4536(4): ‘monkeypatch.delattr’ handles class descriptors
     like ‘staticmethod’/‘classmethod’.

   - issue #4649(5): Restore marks being considered keywords for keyword
     expressions.

   - issue #4653(6): ‘tmp_path’ fixture and other related ones provides
     resolved path (a.k.a real path)

   - issue #4667(7): ‘pytest_terminal_summary’ uses result from
     ‘pytest_report_teststatus’ hook, rather than hardcoded strings.

   - issue #4669(8): Correctly handle ‘unittest.SkipTest’ exception
     containing non-ascii characters on Python 2.

   - issue #4680(9): Ensure the ‘tmpdir’ and the ‘tmp_path’ fixtures are
     the same folder.

   - issue #4681(10): Ensure ‘tmp_path’ is always a real path.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3547

   (2) https://github.com/pytest-dev/pytest/issues/4280

   (3) https://github.com/pytest-dev/pytest/issues/4402

   (4) https://github.com/pytest-dev/pytest/issues/4536

   (5) https://github.com/pytest-dev/pytest/issues/4649

   (6) https://github.com/pytest-dev/pytest/issues/4653

   (7) https://github.com/pytest-dev/pytest/issues/4667

   (8) https://github.com/pytest-dev/pytest/issues/4669

   (9) https://github.com/pytest-dev/pytest/issues/4680

   (10) https://github.com/pytest-dev/pytest/issues/4681


File: pytest.info,  Node: Trivial/Internal Changes<22>,  Prev: Bug Fixes<59>,  Up: pytest 4 2 0 2019-01-30

47.61.3 Trivial/Internal Changes
--------------------------------

   - issue #4643(1): Use ‘a.item()’ instead of the deprecated
     ‘np.asscalar(a)’ in ‘pytest.approx’.

     ‘np.asscalar’ has been deprecated(2) in ‘numpy 1.16.’.

   - issue #4657(3): Copy saferepr from pylib

   - issue #4668(4): The verbose word for expected failures in the
     teststatus report changes from ‘xfail’ to ‘XFAIL’ to be consistent
     with other test outcomes.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4643

   (2) https://numpy.org/doc/stable/release/1.16.0-notes.html

   (3) https://github.com/pytest-dev/pytest/issues/4657

   (4) https://github.com/pytest-dev/pytest/issues/4668


File: pytest.info,  Node: pytest 4 1 1 2019-01-12,  Next: pytest 4 1 0 2019-01-05,  Prev: pytest 4 2 0 2019-01-30,  Up: Changelog

47.62 pytest 4.1.1 (2019-01-12)
===============================

* Menu:

* Bug Fixes: Bug Fixes<60>.
* Improved Documentation: Improved Documentation<18>.
* Trivial/Internal Changes: Trivial/Internal Changes<23>.


File: pytest.info,  Node: Bug Fixes<60>,  Next: Improved Documentation<18>,  Up: pytest 4 1 1 2019-01-12

47.62.1 Bug Fixes
-----------------

   - issue #2256(1): Show full repr with ‘assert a==b’ and ‘-vv’.

   - issue #3456(2): Extend Doctest-modules to ignore mock objects.

   - issue #4617(3): Fixed ‘pytest.warns’ bug when context manager is
     reused (e.g.  multiple parametrization).

   - issue #4631(4): Don’t rewrite assertion when ‘__getattr__’ is
     broken

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2256

   (2) https://github.com/pytest-dev/pytest/issues/3456

   (3) https://github.com/pytest-dev/pytest/issues/4617

   (4) https://github.com/pytest-dev/pytest/issues/4631


File: pytest.info,  Node: Improved Documentation<18>,  Next: Trivial/Internal Changes<23>,  Prev: Bug Fixes<60>,  Up: pytest 4 1 1 2019-01-12

47.62.2 Improved Documentation
------------------------------

   - issue #3375(1): Document that using ‘setup.cfg’ may crash other
     tools or cause hard to track down problems because it uses a
     different parser than ‘pytest.ini’ or ‘tox.ini’ files.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3375


File: pytest.info,  Node: Trivial/Internal Changes<23>,  Prev: Improved Documentation<18>,  Up: pytest 4 1 1 2019-01-12

47.62.3 Trivial/Internal Changes
--------------------------------

   - issue #4602(1): Uninstall ‘hypothesis’ in regen tox env.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4602


File: pytest.info,  Node: pytest 4 1 0 2019-01-05,  Next: pytest 4 0 2 2018-12-13,  Prev: pytest 4 1 1 2019-01-12,  Up: Changelog

47.63 pytest 4.1.0 (2019-01-05)
===============================

* Menu:

* Removals: Removals<3>.
* Deprecations: Deprecations<11>.
* Features: Features<18>.
* Bug Fixes: Bug Fixes<61>.
* Improved Documentation: Improved Documentation<19>.
* Trivial/Internal Changes: Trivial/Internal Changes<24>.


File: pytest.info,  Node: Removals<3>,  Next: Deprecations<11>,  Up: pytest 4 1 0 2019-01-05

47.63.1 Removals
----------------

   - issue #2169(1): ‘pytest.mark.parametrize’: in previous versions,
     errors raised by id functions were suppressed and changed into
     warnings.  Now the exceptions are propagated, along with a pytest
     message informing the node, parameter value and index where the
     exception occurred.

   - issue #3078(2): Remove legacy internal warnings system:
     ‘config.warn’, ‘Node.warn’.  The ‘pytest_logwarning’ now issues a
     warning when implemented.

     See our *note docs: 508. on information on how to update your code.

   - issue #3079(3): Removed support for yield tests - they are
     fundamentally broken because they don’t support fixtures properly
     since collection and test execution were separated.

     See our *note docs: 510. on information on how to update your code.

   - issue #3082(4): Removed support for applying marks directly to
     values in ‘@pytest.mark.parametrize’.  Use ‘pytest.param’ instead.

     See our *note docs: 4fd. on information on how to update your code.

   - issue #3083(5): Removed ‘Metafunc.addcall’.  This was the
     predecessor mechanism to ‘@pytest.mark.parametrize’.

     See our *note docs: 502. on information on how to update your code.

   - issue #3085(6): Removed support for passing strings to
     ‘pytest.main’.  Now, always pass a list of strings instead.

     See our *note docs: 50c. on information on how to update your code.

   - issue #3086(7): ‘[pytest]’ section in ‘setup.cfg’ files is no
     longer supported, use ‘[tool:pytest]’ instead.  ‘setup.cfg’ files
     are meant for use with ‘distutils’, and a section named ‘pytest’
     has notoriously been a source of conflicts and bugs.

     Note that for ‘pytest.ini’ and ‘tox.ini’ files the section remains
     ‘[pytest]’.

   - issue #3616(8): Removed the deprecated compat properties for
     ‘node.Class/Function/Module’ - use ‘pytest.Class/Function/Module’
     now.

     See our *note docs: 512. on information on how to update your code.

   - issue #4421(9): Removed the implementation of the
     ‘pytest_namespace’ hook.

     See our *note docs: 518. on information on how to update your code.

   - issue #4489(10): Removed ‘request.cached_setup’.  This was the
     predecessor mechanism to modern fixtures.

     See our *note docs: 504. on information on how to update your code.

   - issue #4535(11): Removed the deprecated ‘PyCollector.makeitem’
     method.  This method was made public by mistake a long time ago.

   - issue #4543(12): Removed support to define fixtures using the
     ‘pytest_funcarg__’ prefix.  Use the ‘@pytest.fixture’ decorator
     instead.

     See our *note docs: 4ff. on information on how to update your code.

   - issue #4545(13): Calling fixtures directly is now always an error
     instead of a warning.

     See our *note docs: 50e. on information on how to update your code.

   - issue #4546(14): Remove ‘Node.get_marker(name)’ the return value
     was not usable for more than a existence check.

     Use ‘Node.get_closest_marker(name)’ as a replacement.

   - issue #4547(15): The deprecated ‘record_xml_property’ fixture has
     been removed, use the more generic ‘record_property’ instead.

     See our *note docs: 50a. for more information.

   - issue #4548(16): An error is now raised if the ‘pytest_plugins’
     variable is defined in a non-top-level ‘conftest.py’ file (i.e.,
     not residing in the ‘rootdir’).

     See our *note docs: 506. for more information.

   - issue #891(17): Remove ‘testfunction.markername’ attributes - use
     ‘Node.iter_markers(name=None)’ to iterate them.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2169

   (2) https://github.com/pytest-dev/pytest/issues/3078

   (3) https://github.com/pytest-dev/pytest/issues/3079

   (4) https://github.com/pytest-dev/pytest/issues/3082

   (5) https://github.com/pytest-dev/pytest/issues/3083

   (6) https://github.com/pytest-dev/pytest/issues/3085

   (7) https://github.com/pytest-dev/pytest/issues/3086

   (8) https://github.com/pytest-dev/pytest/issues/3616

   (9) https://github.com/pytest-dev/pytest/issues/4421

   (10) https://github.com/pytest-dev/pytest/issues/4489

   (11) https://github.com/pytest-dev/pytest/issues/4535

   (12) https://github.com/pytest-dev/pytest/issues/4543

   (13) https://github.com/pytest-dev/pytest/issues/4545

   (14) https://github.com/pytest-dev/pytest/issues/4546

   (15) https://github.com/pytest-dev/pytest/issues/4547

   (16) https://github.com/pytest-dev/pytest/issues/4548

   (17) https://github.com/pytest-dev/pytest/issues/891


File: pytest.info,  Node: Deprecations<11>,  Next: Features<18>,  Prev: Removals<3>,  Up: pytest 4 1 0 2019-01-05

47.63.2 Deprecations
--------------------

   - issue #3050(1): Deprecated the ‘pytest.config’ global.

     See *note pytest.config global: 4f6. for rationale.

   - issue #3974(2): Passing the ‘message’ parameter of ‘pytest.raises’
     now issues a ‘DeprecationWarning’.

     It is a common mistake to think this parameter will match the
     exception message, while in fact it only serves to provide a custom
     message in case the ‘pytest.raises’ check fails.  To avoid this
     mistake and because it is believed to be little used, pytest is
     deprecating it without providing an alternative for the moment.

     If you have concerns about this, please comment on issue #3974(3).

   - issue #4435(4): Deprecated ‘raises(..., 'code(as_a_string)')’ and
     ‘warns(..., 'code(as_a_string)')’.

     See *note raises / warns with a string as the second argument: 4f9.
     for rationale and examples.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3050

   (2) https://github.com/pytest-dev/pytest/issues/3974

   (3) https://github.com/pytest-dev/pytest/issues/3974

   (4) https://github.com/pytest-dev/pytest/issues/4435


File: pytest.info,  Node: Features<18>,  Next: Bug Fixes<61>,  Prev: Deprecations<11>,  Up: pytest 4 1 0 2019-01-05

47.63.3 Features
----------------

   - issue #3191(1): A warning is now issued when assertions are made
     for ‘None’.

     This is a common source of confusion among new users, which write:

          assert mocked_object.assert_called_with(3, 4, 5, key="value")

     When they should write:

          mocked_object.assert_called_with(3, 4, 5, key="value")

     Because the ‘assert_called_with’ method of mock objects already
     executes an assertion.

     This warning will not be issued when ‘None’ is explicitly checked.
     An assertion like:

          assert variable is None

     will not issue the warning.

   - issue #3632(2): Richer equality comparison introspection on
     ‘AssertionError’ for objects created using attrs(3) or
     dataclasses(4) (Python 3.7+, backported to 3.6(5)).

   - issue #4278(6): ‘CACHEDIR.TAG’ files are now created inside cache
     directories.

     Those files are part of the Cache Directory Tagging Standard(7),
     and can be used by backup or synchronization programs to identify
     pytest’s cache directory as such.

   - issue #4292(8): ‘pytest.outcomes.Exit’ is derived from ‘SystemExit’
     instead of ‘KeyboardInterrupt’.  This allows us to better handle
     ‘pdb’ exiting.

   - issue #4371(9): Updated the ‘--collect-only’ option to display test
     descriptions when ran using ‘--verbose’.

   - issue #4386(10): Restructured ‘ExceptionInfo’ object construction
     and ensure incomplete instances have a ‘repr’/‘str’.

   - issue #4416(11): pdb: added support for keyword arguments with
     ‘pdb.set_trace’.

     It handles ‘header’ similar to Python 3.7 does it, and forwards any
     other keyword arguments to the ‘Pdb’ constructor.

     This allows for ‘__import__("pdb").set_trace(skip=["foo.*"])’.

   - issue #4483(12): Added ini parameter ‘junit_duration_report’ to
     optionally report test call durations, excluding setup and teardown
     times.

     The JUnit XML specification and the default pytest behavior is to
     include setup and teardown times in the test duration report.  You
     can include just the call durations instead (excluding setup and
     teardown) by adding this to your ‘pytest.ini’ file:

          [pytest]
          junit_duration_report = call

   - issue #4532(13): ‘-ra’ now will show errors and failures last,
     instead of as the first items in the summary.

     This makes it easier to obtain a list of errors and failures to run
     tests selectively.

   - issue #4599(14): ‘pytest.importorskip’ now supports a ‘reason’
     parameter, which will be shown when the requested module cannot be
     imported.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3191

   (2) https://github.com/pytest-dev/pytest/issues/3632

   (3) https://www.attrs.org/en/stable/

   (4) 
https://docs.python.org/3/library/dataclasses.html#module-dataclasses

   (5) https://pypi.org/project/dataclasses/

   (6) https://github.com/pytest-dev/pytest/issues/4278

   (7) https://bford.info/cachedir/spec.html

   (8) https://github.com/pytest-dev/pytest/issues/4292

   (9) https://github.com/pytest-dev/pytest/issues/4371

   (10) https://github.com/pytest-dev/pytest/issues/4386

   (11) https://github.com/pytest-dev/pytest/issues/4416

   (12) https://github.com/pytest-dev/pytest/issues/4483

   (13) https://github.com/pytest-dev/pytest/issues/4532

   (14) https://github.com/pytest-dev/pytest/issues/4599


File: pytest.info,  Node: Bug Fixes<61>,  Next: Improved Documentation<19>,  Prev: Features<18>,  Up: pytest 4 1 0 2019-01-05

47.63.4 Bug Fixes
-----------------

   - issue #3532(1): ‘-p’ now accepts its argument without a space
     between the value, for example ‘-pmyplugin’.

   - issue #4327(2): ‘approx’ again works with more generic containers,
     more precisely instances of ‘Iterable’ and ‘Sized’ instead of more
     restrictive ‘Sequence’.

   - issue #4397(3): Ensure that node ids are printable.

   - issue #4435(4): Fixed ‘raises(..., 'code(string)')’ frame filename.

   - issue #4458(5): Display actual test ids in ‘--collect-only’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3532

   (2) https://github.com/pytest-dev/pytest/issues/4327

   (3) https://github.com/pytest-dev/pytest/issues/4397

   (4) https://github.com/pytest-dev/pytest/issues/4435

   (5) https://github.com/pytest-dev/pytest/issues/4458


File: pytest.info,  Node: Improved Documentation<19>,  Next: Trivial/Internal Changes<24>,  Prev: Bug Fixes<61>,  Up: pytest 4 1 0 2019-01-05

47.63.5 Improved Documentation
------------------------------

   - issue #4557(1): Markers example documentation page updated to
     support latest pytest version.

   - issue #4558(2): Update cache documentation example to correctly
     show cache hit and miss.

   - issue #4580(3): Improved detailed summary report documentation.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4557

   (2) https://github.com/pytest-dev/pytest/issues/4558

   (3) https://github.com/pytest-dev/pytest/issues/4580


File: pytest.info,  Node: Trivial/Internal Changes<24>,  Prev: Improved Documentation<19>,  Up: pytest 4 1 0 2019-01-05

47.63.6 Trivial/Internal Changes
--------------------------------

   - issue #4447(1): Changed the deprecation type of ‘--result-log’ to
     ‘PytestDeprecationWarning’.

     It was decided to remove this feature at the next major revision.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4447


File: pytest.info,  Node: pytest 4 0 2 2018-12-13,  Next: pytest 4 0 1 2018-11-23,  Prev: pytest 4 1 0 2019-01-05,  Up: Changelog

47.64 pytest 4.0.2 (2018-12-13)
===============================

* Menu:

* Bug Fixes: Bug Fixes<62>.
* Improved Documentation: Improved Documentation<20>.


File: pytest.info,  Node: Bug Fixes<62>,  Next: Improved Documentation<20>,  Up: pytest 4 0 2 2018-12-13

47.64.1 Bug Fixes
-----------------

   - issue #4265(1): Validate arguments from the ‘PYTEST_ADDOPTS’
     environment variable and the ‘addopts’ ini option separately.

   - issue #4435(2): Fix ‘raises(..., 'code(string)')’ frame filename.

   - issue #4500(3): When a fixture yields and a log call is made after
     the test runs, and, if the test is interrupted, capture attributes
     are ‘None’.

   - issue #4538(4): Raise ‘TypeError’ for ‘with raises(...,
     match=<non-None falsey value>)’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4265

   (2) https://github.com/pytest-dev/pytest/issues/4435

   (3) https://github.com/pytest-dev/pytest/issues/4500

   (4) https://github.com/pytest-dev/pytest/issues/4538


File: pytest.info,  Node: Improved Documentation<20>,  Prev: Bug Fixes<62>,  Up: pytest 4 0 2 2018-12-13

47.64.2 Improved Documentation
------------------------------

   - issue #1495(1): Document common doctest fixture directory tree
     structure pitfalls

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1495


File: pytest.info,  Node: pytest 4 0 1 2018-11-23,  Next: pytest 4 0 0 2018-11-13,  Prev: pytest 4 0 2 2018-12-13,  Up: Changelog

47.65 pytest 4.0.1 (2018-11-23)
===============================

* Menu:

* Bug Fixes: Bug Fixes<63>.
* Trivial/Internal Changes: Trivial/Internal Changes<25>.


File: pytest.info,  Node: Bug Fixes<63>,  Next: Trivial/Internal Changes<25>,  Up: pytest 4 0 1 2018-11-23

47.65.1 Bug Fixes
-----------------

   - issue #3952(1): Display warnings before “short test summary info”
     again, but still later warnings in the end.

   - issue #4386(2): Handle uninitialized exceptioninfo in repr/str.

   - issue #4393(3): Do not create ‘.gitignore’/‘README.md’ files in
     existing cache directories.

   - issue #4400(4): Rearrange warning handling for the yield test
     errors so the opt-out in 4.0.x correctly works.

   - issue #4405(5): Fix collection of testpaths with ‘--pyargs’.

   - issue #4412(6): Fix assertion rewriting involving ‘Starred’ +
     side-effects.

   - issue #4425(7): Ensure we resolve the absolute path when the given
     ‘--basetemp’ is a relative path.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3952

   (2) https://github.com/pytest-dev/pytest/issues/4386

   (3) https://github.com/pytest-dev/pytest/issues/4393

   (4) https://github.com/pytest-dev/pytest/issues/4400

   (5) https://github.com/pytest-dev/pytest/issues/4405

   (6) https://github.com/pytest-dev/pytest/issues/4412

   (7) https://github.com/pytest-dev/pytest/issues/4425


File: pytest.info,  Node: Trivial/Internal Changes<25>,  Prev: Bug Fixes<63>,  Up: pytest 4 0 1 2018-11-23

47.65.2 Trivial/Internal Changes
--------------------------------

   - issue #4315(1): Use ‘pkg_resources.parse_version’ instead of
     ‘LooseVersion’ in minversion check.

   - issue #4440(2): Adjust the stack level of some internal pytest
     warnings.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4315

   (2) https://github.com/pytest-dev/pytest/issues/4440


File: pytest.info,  Node: pytest 4 0 0 2018-11-13,  Next: pytest 3 10 1 2018-11-11,  Prev: pytest 4 0 1 2018-11-23,  Up: Changelog

47.66 pytest 4.0.0 (2018-11-13)
===============================

* Menu:

* Removals: Removals<4>.
* Features: Features<19>.
* Bug Fixes: Bug Fixes<64>.


File: pytest.info,  Node: Removals<4>,  Next: Features<19>,  Up: pytest 4 0 0 2018-11-13

47.66.1 Removals
----------------

   - issue #3737(1): ‘RemovedInPytest4Warnings are now errors by
     default.’

     Following our plan to remove deprecated features with as little
     disruption as possible, all warnings of type
     ‘RemovedInPytest4Warnings’ now generate errors instead of warning
     messages.

     ‘The affected features will be effectively removed in pytest 4.1’,
     so please consult the *note Deprecations and Removals: 4d1. section
     in the docs for directions on how to update existing code.

     In the pytest ‘4.0.X’ series, it is possible to change the errors
     back into warnings as a stop gap measure by adding this to your
     ‘pytest.ini’ file:

          [pytest]
          filterwarnings =
              ignore::pytest.RemovedInPytest4Warning

     But this will stop working when pytest ‘4.1’ is released.

     ‘If you have concerns’ about the removal of a specific feature,
     please add a comment to issue #4348(2).

   - issue #4358(3): Remove the ‘::()’ notation to denote a test class
     instance in node ids.

     Previously, node ids that contain test instances would use ‘::()’
     to denote the instance like this:

          test_foo.py::Test::()::test_bar

     The extra ‘::()’ was puzzling to most users and has been removed,
     so that the test id becomes now:

          test_foo.py::Test::test_bar

     This change could not accompany a deprecation period as is usual
     when user-facing functionality changes because it was not really
     possible to detect when the functionality was being used
     explicitly.

     The extra ‘::()’ might have been removed in some places internally
     already, which then led to confusion in places where it was
     expected, e.g.  with ‘--deselect’ (issue #4127(4)).

     Test class instances are also not listed with ‘--collect-only’
     anymore.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3737

   (2) https://github.com/pytest-dev/pytest/issues/4348

   (3) https://github.com/pytest-dev/pytest/issues/4358

   (4) https://github.com/pytest-dev/pytest/issues/4127


File: pytest.info,  Node: Features<19>,  Next: Bug Fixes<64>,  Prev: Removals<4>,  Up: pytest 4 0 0 2018-11-13

47.66.2 Features
----------------

   - issue #4270(1): The ‘cache_dir’ option uses ‘$TOX_ENV_DIR’ as
     prefix (if set in the environment).

     This uses a different cache per tox environment by default.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4270


File: pytest.info,  Node: Bug Fixes<64>,  Prev: Features<19>,  Up: pytest 4 0 0 2018-11-13

47.66.3 Bug Fixes
-----------------

   - issue #3554(1): Fix ‘CallInfo.__repr__’ for when the call is not
     finished yet.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3554


File: pytest.info,  Node: pytest 3 10 1 2018-11-11,  Next: pytest 3 10 0 2018-11-03,  Prev: pytest 4 0 0 2018-11-13,  Up: Changelog

47.67 pytest 3.10.1 (2018-11-11)
================================

* Menu:

* Bug Fixes: Bug Fixes<65>.
* Trivial/Internal Changes: Trivial/Internal Changes<26>.


File: pytest.info,  Node: Bug Fixes<65>,  Next: Trivial/Internal Changes<26>,  Up: pytest 3 10 1 2018-11-11

47.67.1 Bug Fixes
-----------------

   - issue #4287(1): Fix nested usage of debugging plugin (pdb), e.g.
     with pytester’s ‘testdir.runpytest’.

   - issue #4304(2): Block the ‘stepwise’ plugin if ‘cacheprovider’ is
     also blocked, as one depends on the other.

   - issue #4306(3): Parse ‘minversion’ as an actual version and not as
     dot-separated strings.

   - issue #4310(4): Fix duplicate collection due to multiple args
     matching the same packages.

   - issue #4321(5): Fix ‘item.nodeid’ with resolved symlinks.

   - issue #4325(6): Fix collection of direct symlinked files, where the
     target does not match ‘python_files’.

   - issue #4329(7): Fix TypeError in report_collect with
     _collect_report_last_write.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4287

   (2) https://github.com/pytest-dev/pytest/issues/4304

   (3) https://github.com/pytest-dev/pytest/issues/4306

   (4) https://github.com/pytest-dev/pytest/issues/4310

   (5) https://github.com/pytest-dev/pytest/issues/4321

   (6) https://github.com/pytest-dev/pytest/issues/4325

   (7) https://github.com/pytest-dev/pytest/issues/4329


File: pytest.info,  Node: Trivial/Internal Changes<26>,  Prev: Bug Fixes<65>,  Up: pytest 3 10 1 2018-11-11

47.67.2 Trivial/Internal Changes
--------------------------------

   - issue #4305(1): Replace byte/unicode helpers in test_capture with
     python level syntax.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4305


File: pytest.info,  Node: pytest 3 10 0 2018-11-03,  Next: pytest 3 9 3 2018-10-27,  Prev: pytest 3 10 1 2018-11-11,  Up: Changelog

47.68 pytest 3.10.0 (2018-11-03)
================================

* Menu:

* Features: Features<20>.
* Bug Fixes: Bug Fixes<66>.
* Improved Documentation: Improved Documentation<21>.
* Trivial/Internal Changes: Trivial/Internal Changes<27>.


File: pytest.info,  Node: Features<20>,  Next: Bug Fixes<66>,  Up: pytest 3 10 0 2018-11-03

47.68.1 Features
----------------

   - issue #2619(1): Resume capturing output after ‘continue’ with
     ‘__import__("pdb").set_trace()’.

     This also adds a new ‘pytest_leave_pdb’ hook, and passes in ‘pdb’
     to the existing ‘pytest_enter_pdb’ hook.

   - issue #4147(2): Add ‘--sw’, ‘--stepwise’ as an alternative to ‘--lf
     -x’ for stopping at the first failure, but starting the next test
     invocation from that test.  See *note the documentation: dd. for
     more info.

   - issue #4188(3): Make ‘--color’ emit colorful dots when not running
     in verbose mode.  Earlier, it would only colorize the test-by-test
     output if ‘--verbose’ was also passed.

   - issue #4225(4): Improve performance with collection reporting in
     non-quiet mode with terminals.

     The “collecting …” message is only printed/updated every 0.5s.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2619

   (2) https://github.com/pytest-dev/pytest/issues/4147

   (3) https://github.com/pytest-dev/pytest/issues/4188

   (4) https://github.com/pytest-dev/pytest/issues/4225


File: pytest.info,  Node: Bug Fixes<66>,  Next: Improved Documentation<21>,  Prev: Features<20>,  Up: pytest 3 10 0 2018-11-03

47.68.2 Bug Fixes
-----------------

   - issue #2701(1): Fix false ‘RemovedInPytest4Warning: usage of
     Session... is deprecated, please use pytest’ warnings.

   - issue #4046(2): Fix problems with running tests in package
     ‘__init__.py’ files.

   - issue #4260(3): Swallow warnings during anonymous compilation of
     source.

   - issue #4262(4): Fix access denied error when deleting stale
     directories created by ‘tmpdir’ / ‘tmp_path’.

   - issue #611(5): Naming a fixture ‘request’ will now raise a warning:
     the ‘request’ fixture is internal and should not be overwritten as
     it will lead to internal errors.

   - issue #4266(6): Handle (ignore) exceptions raised during
     collection, e.g.  with Django’s LazySettings proxy class.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2701

   (2) https://github.com/pytest-dev/pytest/issues/4046

   (3) https://github.com/pytest-dev/pytest/issues/4260

   (4) https://github.com/pytest-dev/pytest/issues/4262

   (5) https://github.com/pytest-dev/pytest/issues/611

   (6) https://github.com/pytest-dev/pytest/issues/4266


File: pytest.info,  Node: Improved Documentation<21>,  Next: Trivial/Internal Changes<27>,  Prev: Bug Fixes<66>,  Up: pytest 3 10 0 2018-11-03

47.68.3 Improved Documentation
------------------------------

   - issue #4255(1): Added missing documentation about the fact that
     module names passed to filter warnings are not regex-escaped.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4255


File: pytest.info,  Node: Trivial/Internal Changes<27>,  Prev: Improved Documentation<21>,  Up: pytest 3 10 0 2018-11-03

47.68.4 Trivial/Internal Changes
--------------------------------

   - issue #4272(1): Display cachedir also in non-verbose mode if
     non-default.

   - issue #4277(2): pdb: improve message about output capturing with
     ‘set_trace’.

     Do not display “IO-capturing turned off/on” when ‘-s’ is used to
     avoid confusion.

   - issue #4279(3): Improve message and stack level of warnings issued
     by ‘monkeypatch.setenv’ when the value of the environment variable
     is not a ‘str’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4272

   (2) https://github.com/pytest-dev/pytest/issues/4277

   (3) https://github.com/pytest-dev/pytest/issues/4279


File: pytest.info,  Node: pytest 3 9 3 2018-10-27,  Next: pytest 3 9 2 2018-10-22,  Prev: pytest 3 10 0 2018-11-03,  Up: Changelog

47.69 pytest 3.9.3 (2018-10-27)
===============================

* Menu:

* Bug Fixes: Bug Fixes<67>.
* Improved Documentation: Improved Documentation<22>.
* Trivial/Internal Changes: Trivial/Internal Changes<28>.


File: pytest.info,  Node: Bug Fixes<67>,  Next: Improved Documentation<22>,  Up: pytest 3 9 3 2018-10-27

47.69.1 Bug Fixes
-----------------

   - issue #4174(1): Fix “ValueError: Plugin already registered” with
     conftest plugins via symlink.

   - issue #4181(2): Handle race condition between creation and deletion
     of temporary folders.

   - issue #4221(3): Fix bug where the warning summary at the end of the
     test session was not showing the test where the warning was
     originated.

   - issue #4243(4): Fix regression when ‘stacklevel’ for warnings was
     passed as positional argument on python2.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4174

   (2) https://github.com/pytest-dev/pytest/issues/4181

   (3) https://github.com/pytest-dev/pytest/issues/4221

   (4) https://github.com/pytest-dev/pytest/issues/4243


File: pytest.info,  Node: Improved Documentation<22>,  Next: Trivial/Internal Changes<28>,  Prev: Bug Fixes<67>,  Up: pytest 3 9 3 2018-10-27

47.69.2 Improved Documentation
------------------------------

   - issue #3851(1): Add reference to ‘empty_parameter_set_mark’ ini
     option in documentation of ‘@pytest.mark.parametrize’

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3851


File: pytest.info,  Node: Trivial/Internal Changes<28>,  Prev: Improved Documentation<22>,  Up: pytest 3 9 3 2018-10-27

47.69.3 Trivial/Internal Changes
--------------------------------

   - issue #4028(1): Revert patching of ‘sys.breakpointhook’ since it
     appears to do nothing.

   - issue #4233(2): Apply an import sorter (‘reorder-python-imports’)
     to the codebase.

   - issue #4248(3): Remove use of unnecessary compat shim,
     six.binary_type

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4028

   (2) https://github.com/pytest-dev/pytest/issues/4233

   (3) https://github.com/pytest-dev/pytest/issues/4248


File: pytest.info,  Node: pytest 3 9 2 2018-10-22,  Next: pytest 3 9 1 2018-10-16,  Prev: pytest 3 9 3 2018-10-27,  Up: Changelog

47.70 pytest 3.9.2 (2018-10-22)
===============================

* Menu:

* Bug Fixes: Bug Fixes<68>.


File: pytest.info,  Node: Bug Fixes<68>,  Up: pytest 3 9 2 2018-10-22

47.70.1 Bug Fixes
-----------------

   - issue #2909(1): Improve error message when a recursive dependency
     between fixtures is detected.

   - issue #3340(2): Fix logging messages not shown in hooks
     ‘pytest_sessionstart()’ and ‘pytest_sessionfinish()’.

   - issue #3533(3): Fix unescaped XML raw objects in JUnit report for
     skipped tests

   - issue #3691(4): Python 2: safely format warning message about
     passing unicode strings to ‘warnings.warn’, which may cause
     surprising ‘MemoryError’ exception when monkey patching
     ‘warnings.warn’ itself.

   - issue #4026(5): Improve error message when it is not possible to
     determine a function’s signature.

   - issue #4177(6): Pin ‘setuptools>=40.0’ to support ‘py_modules’ in
     ‘setup.cfg’

   - issue #4179(7): Restore the tmpdir behaviour of symlinking the
     current test run.

   - issue #4192(8): Fix filename reported by ‘warnings.warn’ when using
     ‘recwarn’ under python2.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2909

   (2) https://github.com/pytest-dev/pytest/issues/3340

   (3) https://github.com/pytest-dev/pytest/issues/3533

   (4) https://github.com/pytest-dev/pytest/issues/3691

   (5) https://github.com/pytest-dev/pytest/issues/4026

   (6) https://github.com/pytest-dev/pytest/issues/4177

   (7) https://github.com/pytest-dev/pytest/issues/4179

   (8) https://github.com/pytest-dev/pytest/issues/4192


File: pytest.info,  Node: pytest 3 9 1 2018-10-16,  Next: pytest 3 9 0 2018-10-15 - not published due to a release automation bug,  Prev: pytest 3 9 2 2018-10-22,  Up: Changelog

47.71 pytest 3.9.1 (2018-10-16)
===============================

* Menu:

* Features: Features<21>.


File: pytest.info,  Node: Features<21>,  Up: pytest 3 9 1 2018-10-16

47.71.1 Features
----------------

   - issue #4159(1): For test-suites containing test classes, the
     information about the subclassed module is now output only if a
     higher verbosity level is specified (at least “-vv”).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4159


File: pytest.info,  Node: pytest 3 9 0 2018-10-15 - not published due to a release automation bug,  Next: pytest 3 8 2 2018-10-02,  Prev: pytest 3 9 1 2018-10-16,  Up: Changelog

47.72 pytest 3.9.0 (2018-10-15 - not published due to a release automation bug)
===============================================================================

* Menu:

* Deprecations: Deprecations<12>.
* Features: Features<22>.
* Bug Fixes: Bug Fixes<69>.
* Improved Documentation: Improved Documentation<23>.
* Trivial/Internal Changes: Trivial/Internal Changes<29>.


File: pytest.info,  Node: Deprecations<12>,  Next: Features<22>,  Up: pytest 3 9 0 2018-10-15 - not published due to a release automation bug

47.72.1 Deprecations
--------------------

   - issue #3616(1): The following accesses have been documented as
     deprecated for years, but are now actually emitting deprecation
     warnings.

        * Access of ‘Module’, ‘Function’, ‘Class’, ‘Instance’, ‘File’
          and ‘Item’ through ‘Node’ instances.  Now users will this
          warning:

               usage of Function.Module is deprecated, please use pytest.Module instead

          Users should just ‘import pytest’ and access those objects
          using the ‘pytest’ module.

        * ‘request.cached_setup’, this was the precursor of the
          setup/teardown mechanism available to fixtures.  You can
          consult funcarg comparison section in the docs.

        * Using objects named ‘"Class"’ as a way to customize the type
          of nodes that are collected in ‘Collector’ subclasses has been
          deprecated.  Users instead should use
          ‘pytest_collect_make_item’ to customize node types during
          collection.

          This issue should affect only advanced plugins who create new
          collection types, so if you see this warning message please
          contact the authors so they can change the code.

        * The warning that produces the message below has changed to
          ‘RemovedInPytest4Warning’:

               getfuncargvalue is deprecated, use getfixturevalue

   - issue #3988(2): Add a Deprecation warning for pytest.ensuretemp as
     it was deprecated since a while.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3616

   (2) https://github.com/pytest-dev/pytest/issues/3988


File: pytest.info,  Node: Features<22>,  Next: Bug Fixes<69>,  Prev: Deprecations<12>,  Up: pytest 3 9 0 2018-10-15 - not published due to a release automation bug

47.72.2 Features
----------------

   - issue #2293(1): Improve usage errors messages by hiding internal
     details which can be distracting and noisy.

     This has the side effect that some error conditions that previously
     raised generic errors (such as ‘ValueError’ for unregistered marks)
     are now raising ‘Failed’ exceptions.

   - issue #3332(2): Improve the error displayed when a ‘conftest.py’
     file could not be imported.

     In order to implement this, a new ‘chain’ parameter was added to
     ‘ExceptionInfo.getrepr’ to show or hide chained tracebacks in
     Python 3 (defaults to ‘True’).

   - issue #3849(3): Add ‘empty_parameter_set_mark=fail_at_collect’ ini
     option for raising an exception when parametrize collects an empty
     set.

   - issue #3964(4): Log messages generated in the collection phase are
     shown when live-logging is enabled and/or when they are logged to a
     file.

   - issue #3985(5): Introduce ‘tmp_path’ as a fixture providing a Path
     object.  Also introduce ‘tmp_path_factory’ as a session-scoped
     fixture for creating arbitrary temporary directories from any other
     fixture or test.

   - issue #4013(6): Deprecation warnings are now shown even if you
     customize the warnings filters yourself.  In the previous version
     any customization would override pytest’s filters and deprecation
     warnings would fall back to being hidden by default.

   - issue #4073(7): Allow specification of timeout for
     ‘Testdir.runpytest_subprocess()’ and ‘Testdir.run()’.

   - issue #4098(8): Add returncode argument to pytest.exit() to exit
     pytest with a specific return code.

   - issue #4102(9): Reimplement ‘pytest.deprecated_call’ using
     ‘pytest.warns’ so it supports the ‘match='...'’ keyword argument.

     This has the side effect that ‘pytest.deprecated_call’ now raises
     ‘pytest.fail.Exception’ instead of ‘AssertionError’.

   - issue #4149(10): Require setuptools>=30.3 and move most of the
     metadata to ‘setup.cfg’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2293

   (2) https://github.com/pytest-dev/pytest/issues/3332

   (3) https://github.com/pytest-dev/pytest/issues/3849

   (4) https://github.com/pytest-dev/pytest/issues/3964

   (5) https://github.com/pytest-dev/pytest/issues/3985

   (6) https://github.com/pytest-dev/pytest/issues/4013

   (7) https://github.com/pytest-dev/pytest/issues/4073

   (8) https://github.com/pytest-dev/pytest/issues/4098

   (9) https://github.com/pytest-dev/pytest/issues/4102

   (10) https://github.com/pytest-dev/pytest/issues/4149


File: pytest.info,  Node: Bug Fixes<69>,  Next: Improved Documentation<23>,  Prev: Features<22>,  Up: pytest 3 9 0 2018-10-15 - not published due to a release automation bug

47.72.3 Bug Fixes
-----------------

   - issue #2535(1): Improve error message when test functions of
     ‘unittest.TestCase’ subclasses use a parametrized fixture.

   - issue #3057(2): ‘request.fixturenames’ now correctly returns the
     name of fixtures created by ‘request.getfixturevalue()’.

   - issue #3946(3): Warning filters passed as command line options
     using ‘-W’ now take precedence over filters defined in ‘ini’
     configuration files.

   - issue #4066(4): Fix source reindenting by using ‘textwrap.dedent’
     directly.

   - issue #4102(5): ‘pytest.warn’ will capture previously-warned
     warnings in Python 2.  Previously they were never raised.

   - issue #4108(6): Resolve symbolic links for args.

     This fixes running ‘pytest tests/test_foo.py::test_bar’, where
     ‘tests’ is a symlink to ‘project/app/tests’: previously
     ‘project/app/conftest.py’ would be ignored for fixtures then.

   - issue #4132(7): Fix duplicate printing of internal errors when
     using ‘--pdb’.

   - issue #4135(8): pathlib based tmpdir cleanup now correctly handles
     symlinks in the folder.

   - issue #4152(9): Display the filename when encountering
     ‘SyntaxWarning’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2535

   (2) https://github.com/pytest-dev/pytest/issues/3057

   (3) https://github.com/pytest-dev/pytest/issues/3946

   (4) https://github.com/pytest-dev/pytest/issues/4066

   (5) https://github.com/pytest-dev/pytest/issues/4102

   (6) https://github.com/pytest-dev/pytest/issues/4108

   (7) https://github.com/pytest-dev/pytest/issues/4132

   (8) https://github.com/pytest-dev/pytest/issues/4135

   (9) https://github.com/pytest-dev/pytest/issues/4152


File: pytest.info,  Node: Improved Documentation<23>,  Next: Trivial/Internal Changes<29>,  Prev: Bug Fixes<69>,  Up: pytest 3 9 0 2018-10-15 - not published due to a release automation bug

47.72.4 Improved Documentation
------------------------------

   - issue #3713(1): Update usefixtures documentation to clarify that it
     can’t be used with fixture functions.

   - issue #4058(2): Update fixture documentation to specify that a
     fixture can be invoked twice in the scope it’s defined for.

   - issue #4064(3): According to unittest.rst, setUpModule and
     tearDownModule were not implemented, but it turns out they are.  So
     updated the documentation for unittest.

   - issue #4151(4): Add tempir testing example to CONTRIBUTING.rst
     guide

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3713

   (2) https://github.com/pytest-dev/pytest/issues/4058

   (3) https://github.com/pytest-dev/pytest/issues/4064

   (4) https://github.com/pytest-dev/pytest/issues/4151


File: pytest.info,  Node: Trivial/Internal Changes<29>,  Prev: Improved Documentation<23>,  Up: pytest 3 9 0 2018-10-15 - not published due to a release automation bug

47.72.5 Trivial/Internal Changes
--------------------------------

   - issue #2293(1): The internal ‘MarkerError’ exception has been
     removed.

   - issue #3988(2): Port the implementation of tmpdir to pathlib.

   - issue #4063(3): Exclude 0.00 second entries from ‘--duration’
     output unless ‘-vv’ is passed on the command-line.

   - issue #4093(4): Fixed formatting of string literals in internal
     tests.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2293

   (2) https://github.com/pytest-dev/pytest/issues/3988

   (3) https://github.com/pytest-dev/pytest/issues/4063

   (4) https://github.com/pytest-dev/pytest/issues/4093


File: pytest.info,  Node: pytest 3 8 2 2018-10-02,  Next: pytest 3 8 1 2018-09-22,  Prev: pytest 3 9 0 2018-10-15 - not published due to a release automation bug,  Up: Changelog

47.73 pytest 3.8.2 (2018-10-02)
===============================

* Menu:

* Deprecations and Removals: Deprecations and Removals<2>.
* Bug Fixes: Bug Fixes<70>.
* Improved Documentation: Improved Documentation<24>.


File: pytest.info,  Node: Deprecations and Removals<2>,  Next: Bug Fixes<70>,  Up: pytest 3 8 2 2018-10-02

47.73.1 Deprecations and Removals
---------------------------------

   - issue #4036(1): The ‘item’ parameter of ‘pytest_warning_captured’
     hook is now documented as deprecated.  We realized only after the
     ‘3.8’ release that this parameter is incompatible with
     ‘pytest-xdist’.

     Our policy is to not deprecate features during bug-fix releases,
     but in this case we believe it makes sense as we are only
     documenting it as deprecated, without issuing warnings which might
     potentially break test suites.  This will get the word out that
     hook implementers should not use this parameter at all.

     In a future release ‘item’ will always be ‘None’ and will emit a
     proper warning when a hook implementation makes use of it.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/4036


File: pytest.info,  Node: Bug Fixes<70>,  Next: Improved Documentation<24>,  Prev: Deprecations and Removals<2>,  Up: pytest 3 8 2 2018-10-02

47.73.2 Bug Fixes
-----------------

   - issue #3539(1): Fix reload on assertion rewritten modules.

   - issue #4034(2): The ‘.user_properties’ attribute of ‘TestReport’
     objects is a list of (name, value) tuples, but could sometimes be
     instantiated as a tuple of tuples.  It is now always a list.

   - issue #4039(3): No longer issue warnings about using
     ‘pytest_plugins’ in non-top-level directories when using
     ‘--pyargs’: the current ‘--pyargs’ mechanism is not reliable and
     might give false negatives.

   - issue #4040(4): Exclude empty reports for passed tests when ‘-rP’
     option is used.

   - issue #4051(5): Improve error message when an invalid Python
     expression is passed to the ‘-m’ option.

   - issue #4056(6): ‘MonkeyPatch.setenv’ and ‘MonkeyPatch.delenv’ issue
     a warning if the environment variable name is not ‘str’ on Python
     2.

     In Python 2, adding ‘unicode’ keys to ‘os.environ’ causes problems
     with ‘subprocess’ (and possible other modules), making this a
     subtle bug specially susceptible when used with ‘from __future__
     import unicode_literals’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3539

   (2) https://github.com/pytest-dev/pytest/issues/4034

   (3) https://github.com/pytest-dev/pytest/issues/4039

   (4) https://github.com/pytest-dev/pytest/issues/4040

   (5) https://github.com/pytest-dev/pytest/issues/4051

   (6) https://github.com/pytest-dev/pytest/issues/4056


File: pytest.info,  Node: Improved Documentation<24>,  Prev: Bug Fixes<70>,  Up: pytest 3 8 2 2018-10-02

47.73.3 Improved Documentation
------------------------------

   - issue #3928(1): Add possible values for fixture scope to docs.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3928


File: pytest.info,  Node: pytest 3 8 1 2018-09-22,  Next: pytest 3 8 0 2018-09-05,  Prev: pytest 3 8 2 2018-10-02,  Up: Changelog

47.74 pytest 3.8.1 (2018-09-22)
===============================

* Menu:

* Bug Fixes: Bug Fixes<71>.
* Improved Documentation: Improved Documentation<25>.
* Trivial/Internal Changes: Trivial/Internal Changes<30>.


File: pytest.info,  Node: Bug Fixes<71>,  Next: Improved Documentation<25>,  Up: pytest 3 8 1 2018-09-22

47.74.1 Bug Fixes
-----------------

   - issue #3286(1): ‘.pytest_cache’ directory is now automatically
     ignored by Git.  Users who would like to contribute a solution for
     other SCMs please consult/comment on this issue.

   - issue #3749(2): Fix the following error during collection of tests
     inside packages:

          TypeError: object of type 'Package' has no len()

   - issue #3941(3): Fix bug where indirect parametrization would
     consider the scope of all fixtures used by the test function to
     determine the parametrization scope, and not only the scope of the
     fixtures being parametrized.

   - issue #3973(4): Fix crash of the assertion rewriter if a test
     changed the current working directory without restoring it
     afterwards.

   - issue #3998(5): Fix issue that prevented some caplog properties
     (for example ‘record_tuples’) from being available when entering
     the debugger with ‘--pdb’.

   - issue #3999(6): Fix ‘UnicodeDecodeError’ in python2.x when a class
     returns a non-ascii binary ‘__repr__’ in an assertion which also
     contains non-ascii text.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3286

   (2) https://github.com/pytest-dev/pytest/issues/3749

   (3) https://github.com/pytest-dev/pytest/issues/3941

   (4) https://github.com/pytest-dev/pytest/issues/3973

   (5) https://github.com/pytest-dev/pytest/issues/3998

   (6) https://github.com/pytest-dev/pytest/issues/3999


File: pytest.info,  Node: Improved Documentation<25>,  Next: Trivial/Internal Changes<30>,  Prev: Bug Fixes<71>,  Up: pytest 3 8 1 2018-09-22

47.74.2 Improved Documentation
------------------------------

   - issue #3996(1): New *note Deprecations and Removals: 4d1. page
     shows all currently deprecated features, the rationale to do so,
     and alternatives to update your code.  It also list features
     removed from pytest in past major releases to help those with
     ancient pytest versions to upgrade.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3996


File: pytest.info,  Node: Trivial/Internal Changes<30>,  Prev: Improved Documentation<25>,  Up: pytest 3 8 1 2018-09-22

47.74.3 Trivial/Internal Changes
--------------------------------

   - issue #3955(1): Improve pre-commit detection for changelog
     filenames

   - issue #3975(2): Remove legacy code around im_func as that was
     python2 only

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3955

   (2) https://github.com/pytest-dev/pytest/issues/3975


File: pytest.info,  Node: pytest 3 8 0 2018-09-05,  Next: pytest 3 7 4 2018-08-29,  Prev: pytest 3 8 1 2018-09-22,  Up: Changelog

47.75 pytest 3.8.0 (2018-09-05)
===============================

* Menu:

* Deprecations and Removals: Deprecations and Removals<3>.
* Features: Features<23>.
* Bug Fixes: Bug Fixes<72>.
* Improved Documentation: Improved Documentation<26>.
* Trivial/Internal Changes: Trivial/Internal Changes<31>.


File: pytest.info,  Node: Deprecations and Removals<3>,  Next: Features<23>,  Up: pytest 3 8 0 2018-09-05

47.75.1 Deprecations and Removals
---------------------------------

   - issue #2452(1): ‘Config.warn’ and ‘Node.warn’ have been deprecated,
     see *note Config.warn and Node.warn: 508. for rationale and
     examples.

   - issue #3936(2): ‘@pytest.mark.filterwarnings’ second parameter is
     no longer regex-escaped, making it possible to actually use regular
     expressions to check the warning message.

     ‘Note’: regex-escaping the match string was an implementation
     oversight that might break test suites which depend on the old
     behavior.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2452

   (2) https://github.com/pytest-dev/pytest/issues/3936


File: pytest.info,  Node: Features<23>,  Next: Bug Fixes<72>,  Prev: Deprecations and Removals<3>,  Up: pytest 3 8 0 2018-09-05

47.75.2 Features
----------------

   - issue #2452(1): Internal pytest warnings are now issued using the
     standard ‘warnings’ module, making it possible to use the standard
     warnings filters to manage those warnings.  This introduces
     ‘PytestWarning’, ‘PytestDeprecationWarning’ and
     ‘RemovedInPytest4Warning’ warning types as part of the public API.

     Consult *note the documentation: 116. for more info.

   - issue #2908(2): ‘DeprecationWarning’ and
     ‘PendingDeprecationWarning’ are now shown by default if no other
     warning filter is configured.  This makes pytest more compliant
     with PEP 506#recommended-filter-settings-for-test-runners(3).  See
     *note the docs: 101. for more info.

   - issue #3251(4): Warnings are now captured and displayed during test
     collection.

   - issue #3784(5): ‘PYTEST_DISABLE_PLUGIN_AUTOLOAD’ environment
     variable disables plugin auto-loading when set.

   - issue #3829(6): Added the ‘count’ option to ‘console_output_style’
     to enable displaying the progress as a count instead of a
     percentage.

   - issue #3837(7): Added support for ‘xfailed’ and ‘xpassed’ outcomes
     to the ‘pytester.RunResult.assert_outcomes’ signature.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2452

   (2) https://github.com/pytest-dev/pytest/issues/2908

   (3) 
https://peps.python.org/pep-0506/#recommended-filter-settings-for-test-runners

   (4) https://github.com/pytest-dev/pytest/issues/3251

   (5) https://github.com/pytest-dev/pytest/issues/3784

   (6) https://github.com/pytest-dev/pytest/issues/3829

   (7) https://github.com/pytest-dev/pytest/issues/3837


File: pytest.info,  Node: Bug Fixes<72>,  Next: Improved Documentation<26>,  Prev: Features<23>,  Up: pytest 3 8 0 2018-09-05

47.75.3 Bug Fixes
-----------------

   - issue #3911(1): Terminal writer now takes into account unicode
     character width when writing out progress.

   - issue #3913(2): Pytest now returns with correct exit code
     (EXIT_USAGEERROR, 4) when called with unknown arguments.

   - issue #3918(3): Improve performance of assertion rewriting.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3911

   (2) https://github.com/pytest-dev/pytest/issues/3913

   (3) https://github.com/pytest-dev/pytest/issues/3918


File: pytest.info,  Node: Improved Documentation<26>,  Next: Trivial/Internal Changes<31>,  Prev: Bug Fixes<72>,  Up: pytest 3 8 0 2018-09-05

47.75.4 Improved Documentation
------------------------------

   - issue #3566(1): Added a blurb in usage.rst for the usage of -r flag
     which is used to show an extra test summary info.

   - issue #3907(2): Corrected type of the exceptions collection passed
     to ‘xfail’: ‘raises’ argument accepts a ‘tuple’ instead of ‘list’.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3566

   (2) https://github.com/pytest-dev/pytest/issues/3907


File: pytest.info,  Node: Trivial/Internal Changes<31>,  Prev: Improved Documentation<26>,  Up: pytest 3 8 0 2018-09-05

47.75.5 Trivial/Internal Changes
--------------------------------

   - issue #3853(1): Removed ‘"run all (no recorded failures)"’ message
     printed with ‘--failed-first’ and ‘--last-failed’ when there are no
     failed tests.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3853


File: pytest.info,  Node: pytest 3 7 4 2018-08-29,  Next: pytest 3 7 3 2018-08-26,  Prev: pytest 3 8 0 2018-09-05,  Up: Changelog

47.76 pytest 3.7.4 (2018-08-29)
===============================

* Menu:

* Bug Fixes: Bug Fixes<73>.
* Improved Documentation: Improved Documentation<27>.


File: pytest.info,  Node: Bug Fixes<73>,  Next: Improved Documentation<27>,  Up: pytest 3 7 4 2018-08-29

47.76.1 Bug Fixes
-----------------

   - issue #3506(1): Fix possible infinite recursion when writing ‘.pyc’
     files.

   - issue #3853(2): Cache plugin now obeys the ‘-q’ flag when
     ‘--last-failed’ and ‘--failed-first’ flags are used.

   - issue #3883(3): Fix bad console output when using
     ‘console_output_style=classic’.

   - issue #3888(4): Fix macOS specific code using ‘capturemanager’
     plugin in doctests.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3506

   (2) https://github.com/pytest-dev/pytest/issues/3853

   (3) https://github.com/pytest-dev/pytest/issues/3883

   (4) https://github.com/pytest-dev/pytest/issues/3888


File: pytest.info,  Node: Improved Documentation<27>,  Prev: Bug Fixes<73>,  Up: pytest 3 7 4 2018-08-29

47.76.2 Improved Documentation
------------------------------

   - issue #3902(1): Fix pytest.org links

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3902


File: pytest.info,  Node: pytest 3 7 3 2018-08-26,  Next: pytest 3 7 2 2018-08-16,  Prev: pytest 3 7 4 2018-08-29,  Up: Changelog

47.77 pytest 3.7.3 (2018-08-26)
===============================

* Menu:

* Bug Fixes: Bug Fixes<74>.
* Improved Documentation: Improved Documentation<28>.
* Trivial/Internal Changes: Trivial/Internal Changes<32>.


File: pytest.info,  Node: Bug Fixes<74>,  Next: Improved Documentation<28>,  Up: pytest 3 7 3 2018-08-26

47.77.1 Bug Fixes
-----------------

   - issue #3033(1): Fixtures during teardown can again use ‘capsys’ and
     ‘capfd’ to inspect output captured during tests.

   - issue #3773(2): Fix collection of tests from ‘__init__.py’ files if
     they match the ‘python_files’ configuration option.

   - issue #3796(3): Fix issue where teardown of fixtures of consecutive
     sub-packages were executed once, at the end of the outer package.

   - issue #3816(4): Fix bug where ‘--show-capture=no’ option would
     still show logs printed during fixture teardown.

   - issue #3819(5): Fix ‘stdout/stderr’ not getting captured when
     real-time cli logging is active.

   - issue #3843(6): Fix collection error when specifying test functions
     directly in the command line using ‘test.py::test’ syntax together
     with ‘--doctest-modules’.

   - issue #3848(7): Fix bugs where unicode arguments could not be
     passed to ‘testdir.runpytest’ on Python 2.

   - issue #3854(8): Fix double collection of tests within packages when
     the filename starts with a capital letter.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3033

   (2) https://github.com/pytest-dev/pytest/issues/3773

   (3) https://github.com/pytest-dev/pytest/issues/3796

   (4) https://github.com/pytest-dev/pytest/issues/3816

   (5) https://github.com/pytest-dev/pytest/issues/3819

   (6) https://github.com/pytest-dev/pytest/issues/3843

   (7) https://github.com/pytest-dev/pytest/issues/3848

   (8) https://github.com/pytest-dev/pytest/issues/3854


File: pytest.info,  Node: Improved Documentation<28>,  Next: Trivial/Internal Changes<32>,  Prev: Bug Fixes<74>,  Up: pytest 3 7 3 2018-08-26

47.77.2 Improved Documentation
------------------------------

   - issue #3824(1): Added example for multiple glob pattern matches in
     ‘python_files’.

   - issue #3833(2): Added missing docs for ‘pytester.Testdir’.

   - issue #3870(3): Correct documentation for setuptools integration.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3824

   (2) https://github.com/pytest-dev/pytest/issues/3833

   (3) https://github.com/pytest-dev/pytest/issues/3870


File: pytest.info,  Node: Trivial/Internal Changes<32>,  Prev: Improved Documentation<28>,  Up: pytest 3 7 3 2018-08-26

47.77.3 Trivial/Internal Changes
--------------------------------

   - issue #3826(1): Replace broken type annotations with type comments.

   - issue #3845(2): Remove a reference to issue issue #568(3) from the
     documentation, which has since been fixed.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3826

   (2) https://github.com/pytest-dev/pytest/issues/3845

   (3) https://github.com/pytest-dev/pytest/issues/568


File: pytest.info,  Node: pytest 3 7 2 2018-08-16,  Next: pytest 3 7 1 2018-08-02,  Prev: pytest 3 7 3 2018-08-26,  Up: Changelog

47.78 pytest 3.7.2 (2018-08-16)
===============================

* Menu:

* Bug Fixes: Bug Fixes<75>.
* Improved Documentation: Improved Documentation<29>.


File: pytest.info,  Node: Bug Fixes<75>,  Next: Improved Documentation<29>,  Up: pytest 3 7 2 2018-08-16

47.78.1 Bug Fixes
-----------------

   - issue #3671(1): Fix ‘filterwarnings’ not being registered as a
     builtin mark.

   - issue #3768(2), issue #3789(3): Fix test collection from packages
     mixed with normal directories.

   - issue #3771(4): Fix infinite recursion during collection if a
     ‘pytest_ignore_collect’ hook returns ‘False’ instead of ‘None’.

   - issue #3774(5): Fix bug where decorated fixtures would lose
     functionality (for example ‘@mock.patch’).

   - issue #3775(6): Fix bug where importing modules or other objects
     with prefix ‘pytest_’ prefix would raise a ‘PluginValidationError’.

   - issue #3788(7): Fix ‘AttributeError’ during teardown of ‘TestCase’
     subclasses which raise an exception during ‘__init__’.

   - issue #3804(8): Fix traceback reporting for exceptions with
     ‘__cause__’ cycles.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3671

   (2) https://github.com/pytest-dev/pytest/issues/3768

   (3) https://github.com/pytest-dev/pytest/issues/3789

   (4) https://github.com/pytest-dev/pytest/issues/3771

   (5) https://github.com/pytest-dev/pytest/issues/3774

   (6) https://github.com/pytest-dev/pytest/issues/3775

   (7) https://github.com/pytest-dev/pytest/issues/3788

   (8) https://github.com/pytest-dev/pytest/issues/3804


File: pytest.info,  Node: Improved Documentation<29>,  Prev: Bug Fixes<75>,  Up: pytest 3 7 2 2018-08-16

47.78.2 Improved Documentation
------------------------------

   - issue #3746(1): Add documentation for ‘metafunc.config’ that had
     been mistakenly hidden.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3746


File: pytest.info,  Node: pytest 3 7 1 2018-08-02,  Next: pytest 3 7 0 2018-07-30,  Prev: pytest 3 7 2 2018-08-16,  Up: Changelog

47.79 pytest 3.7.1 (2018-08-02)
===============================

* Menu:

* Bug Fixes: Bug Fixes<76>.


File: pytest.info,  Node: Bug Fixes<76>,  Up: pytest 3 7 1 2018-08-02

47.79.1 Bug Fixes
-----------------

   - issue #3473(1): Raise immediately if ‘approx()’ is given an
     expected value of a type it doesn’t understand (e.g.  strings,
     nested dicts, etc.).

   - issue #3712(2): Correctly represent the dimensions of a numpy array
     when calling ‘repr()’ on ‘approx()’.

   - issue #3742(3): Fix incompatibility with third party plugins during
     collection, which produced the error ‘object has no attribute
     '_collectfile'’.

   - issue #3745(4): Display the absolute path if ‘cache_dir’ is not
     relative to the ‘rootdir’ instead of failing.

   - issue #3747(5): Fix compatibility problem with plugins and the
     warning code issued by fixture functions when they are called
     directly.

   - issue #3748(6): Fix infinite recursion in ‘pytest.approx’ with
     arrays in ‘numpy<1.13’.

   - issue #3757(7): Pin pathlib2 to ‘>=2.2.0’ as we require
     ‘__fspath__’ support.

   - issue #3763(8): Fix ‘TypeError’ when the assertion message is
     ‘bytes’ in python 3.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3473

   (2) https://github.com/pytest-dev/pytest/issues/3712

   (3) https://github.com/pytest-dev/pytest/issues/3742

   (4) https://github.com/pytest-dev/pytest/issues/3745

   (5) https://github.com/pytest-dev/pytest/issues/3747

   (6) https://github.com/pytest-dev/pytest/issues/3748

   (7) https://github.com/pytest-dev/pytest/issues/3757

   (8) https://github.com/pytest-dev/pytest/issues/3763


File: pytest.info,  Node: pytest 3 7 0 2018-07-30,  Next: pytest 3 6 4 2018-07-28,  Prev: pytest 3 7 1 2018-08-02,  Up: Changelog

47.80 pytest 3.7.0 (2018-07-30)
===============================

* Menu:

* Deprecations and Removals: Deprecations and Removals<4>.
* Features: Features<24>.
* Bug Fixes: Bug Fixes<77>.
* Improved Documentation: Improved Documentation<30>.
* Trivial/Internal Changes: Trivial/Internal Changes<33>.


File: pytest.info,  Node: Deprecations and Removals<4>,  Next: Features<24>,  Up: pytest 3 7 0 2018-07-30

47.80.1 Deprecations and Removals
---------------------------------

   - issue #2639(1): ‘pytest_namespace’ has been *note deprecated: 518.

   - issue #3661(2): Calling a fixture function directly, as opposed to
     request them in a test function, now issues a
     ‘RemovedInPytest4Warning’.  See *note the documentation for
     rationale and examples: 50e.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2639

   (2) https://github.com/pytest-dev/pytest/issues/3661


File: pytest.info,  Node: Features<24>,  Next: Bug Fixes<77>,  Prev: Deprecations and Removals<4>,  Up: pytest 3 7 0 2018-07-30

47.80.2 Features
----------------

   - issue #2283(1): New ‘package’ fixture scope: fixtures are finalized
     when the last test of a ‘package’ finishes.  This feature is
     considered ‘experimental’, so use it sparingly.

   - issue #3576(2): ‘Node.add_marker’ now supports an
     ‘append=True/False’ parameter to determine whether the mark comes
     last (default) or first.

   - issue #3579(3): Fixture ‘caplog’ now has a ‘messages’ property,
     providing convenient access to the format-interpolated log messages
     without the extra data provided by the formatter/handler.

   - issue #3610(4): New ‘--trace’ option to enter the debugger at the
     start of a test.

   - issue #3623(5): Introduce ‘pytester.copy_example’ as helper to do
     acceptance tests against examples from the project.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2283

   (2) https://github.com/pytest-dev/pytest/issues/3576

   (3) https://github.com/pytest-dev/pytest/issues/3579

   (4) https://github.com/pytest-dev/pytest/issues/3610

   (5) https://github.com/pytest-dev/pytest/issues/3623


File: pytest.info,  Node: Bug Fixes<77>,  Next: Improved Documentation<30>,  Prev: Features<24>,  Up: pytest 3 7 0 2018-07-30

47.80.3 Bug Fixes
-----------------

   - issue #2220(1): Fix a bug where fixtures overridden by direct
     parameters (for example parametrization) were being instantiated
     even if they were not being used by a test.

   - issue #3695(2): Fix ‘ApproxNumpy’ initialisation argument mixup,
     ‘abs’ and ‘rel’ tolerances were flipped causing strange comparison
     results.  Add tests to check ‘abs’ and ‘rel’ tolerances for
     ‘np.array’ and test for expecting ‘nan’ with ‘np.array()’

   - issue #980(3): Fix truncated locals output in verbose mode.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2220

   (2) https://github.com/pytest-dev/pytest/issues/3695

   (3) https://github.com/pytest-dev/pytest/issues/980


File: pytest.info,  Node: Improved Documentation<30>,  Next: Trivial/Internal Changes<33>,  Prev: Bug Fixes<77>,  Up: pytest 3 7 0 2018-07-30

47.80.4 Improved Documentation
------------------------------

   - issue #3295(1): Correct the usage documentation of
     ‘--last-failed-no-failures’ by adding the missing ‘--last-failed’
     argument in the presented examples, because they are misleading and
     lead to think that the missing argument is not needed.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3295


File: pytest.info,  Node: Trivial/Internal Changes<33>,  Prev: Improved Documentation<30>,  Up: pytest 3 7 0 2018-07-30

47.80.5 Trivial/Internal Changes
--------------------------------

   - issue #3519(1): Now a ‘README.md’ file is created in
     ‘.pytest_cache’ to make it clear why the directory exists.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3519


File: pytest.info,  Node: pytest 3 6 4 2018-07-28,  Next: pytest 3 6 3 2018-07-04,  Prev: pytest 3 7 0 2018-07-30,  Up: Changelog

47.81 pytest 3.6.4 (2018-07-28)
===============================

* Menu:

* Bug Fixes: Bug Fixes<78>.
* Improved Documentation: Improved Documentation<31>.
* Trivial/Internal Changes: Trivial/Internal Changes<34>.


File: pytest.info,  Node: Bug Fixes<78>,  Next: Improved Documentation<31>,  Up: pytest 3 6 4 2018-07-28

47.81.1 Bug Fixes
-----------------

   - Invoke pytest using ‘-mpytest’ so ‘sys.path’ does not get polluted
     by packages installed in ‘site-packages’.  (issue #742(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/742


File: pytest.info,  Node: Improved Documentation<31>,  Next: Trivial/Internal Changes<34>,  Prev: Bug Fixes<78>,  Up: pytest 3 6 4 2018-07-28

47.81.2 Improved Documentation
------------------------------

   - Use ‘smtp_connection’ instead of ‘smtp’ in fixtures documentation
     to avoid possible confusion.  (issue #3592(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3592


File: pytest.info,  Node: Trivial/Internal Changes<34>,  Prev: Improved Documentation<31>,  Up: pytest 3 6 4 2018-07-28

47.81.3 Trivial/Internal Changes
--------------------------------

   - Remove obsolete ‘__future__’ imports.  (issue #2319(1))

   - Add CITATION to provide information on how to formally cite pytest.
     (issue #3402(2))

   - Replace broken type annotations with type comments.  (issue
     #3635(3))

   - Pin ‘pluggy’ to ‘<0.8’.  (issue #3727(4))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2319

   (2) https://github.com/pytest-dev/pytest/issues/3402

   (3) https://github.com/pytest-dev/pytest/issues/3635

   (4) https://github.com/pytest-dev/pytest/issues/3727


File: pytest.info,  Node: pytest 3 6 3 2018-07-04,  Next: pytest 3 6 2 2018-06-20,  Prev: pytest 3 6 4 2018-07-28,  Up: Changelog

47.82 pytest 3.6.3 (2018-07-04)
===============================

* Menu:

* Bug Fixes: Bug Fixes<79>.
* Improved Documentation: Improved Documentation<32>.
* Trivial/Internal Changes: Trivial/Internal Changes<35>.


File: pytest.info,  Node: Bug Fixes<79>,  Next: Improved Documentation<32>,  Up: pytest 3 6 3 2018-07-04

47.82.1 Bug Fixes
-----------------

   - Fix ‘ImportWarning’ triggered by explicit relative imports in
     assertion-rewritten package modules.  (issue #3061(1))

   - Fix error in ‘pytest.approx’ when dealing with 0-dimension numpy
     arrays.  (issue #3593(2))

   - No longer raise ‘ValueError’ when using the ‘get_marker’ API.
     (issue #3605(3))

   - Fix problem where log messages with non-ascii characters would not
     appear in the output log file.  (issue #3630(4))

   - No longer raise ‘AttributeError’ when legacy marks can’t be stored
     in functions.  (issue #3631(5))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3061

   (2) https://github.com/pytest-dev/pytest/issues/3593

   (3) https://github.com/pytest-dev/pytest/issues/3605

   (4) https://github.com/pytest-dev/pytest/issues/3630

   (5) https://github.com/pytest-dev/pytest/issues/3631


File: pytest.info,  Node: Improved Documentation<32>,  Next: Trivial/Internal Changes<35>,  Prev: Bug Fixes<79>,  Up: pytest 3 6 3 2018-07-04

47.82.2 Improved Documentation
------------------------------

   - The description above the example for ‘@pytest.mark.skipif’ now
     better matches the code.  (issue #3611(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3611


File: pytest.info,  Node: Trivial/Internal Changes<35>,  Prev: Improved Documentation<32>,  Up: pytest 3 6 3 2018-07-04

47.82.3 Trivial/Internal Changes
--------------------------------

   - Internal refactoring: removed unused ‘CallSpec2tox ._globalid_args’
     attribute and ‘metafunc’ parameter from ‘CallSpec2.copy()’.  (issue
     #3598(1))

   - Silence usage of ‘reduce’ warning in Python 2 (issue #3609(2))

   - Fix usage of ‘attr.ib’ deprecated ‘convert’ parameter.  (issue
     #3653(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3598

   (2) https://github.com/pytest-dev/pytest/issues/3609

   (3) https://github.com/pytest-dev/pytest/issues/3653


File: pytest.info,  Node: pytest 3 6 2 2018-06-20,  Next: pytest 3 6 1 2018-06-05,  Prev: pytest 3 6 3 2018-07-04,  Up: Changelog

47.83 pytest 3.6.2 (2018-06-20)
===============================

* Menu:

* Bug Fixes: Bug Fixes<80>.
* Improved Documentation: Improved Documentation<33>.
* Trivial/Internal Changes: Trivial/Internal Changes<36>.


File: pytest.info,  Node: Bug Fixes<80>,  Next: Improved Documentation<33>,  Up: pytest 3 6 2 2018-06-20

47.83.1 Bug Fixes
-----------------

   - Fix regression in ‘Node.add_marker’ by extracting the mark object
     of a ‘MarkDecorator’.  (issue #3555(1))

   - Warnings without ‘location’ were reported as ‘None’.  This is
     corrected to now report ‘<undetermined location>’.  (issue
     #3563(2))

   - Continue to call finalizers in the stack when a finalizer in a
     former scope raises an exception.  (issue #3569(3))

   - Fix encoding error with ‘print’ statements in doctests (issue
     #3583(4))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3555

   (2) https://github.com/pytest-dev/pytest/issues/3563

   (3) https://github.com/pytest-dev/pytest/issues/3569

   (4) https://github.com/pytest-dev/pytest/issues/3583


File: pytest.info,  Node: Improved Documentation<33>,  Next: Trivial/Internal Changes<36>,  Prev: Bug Fixes<80>,  Up: pytest 3 6 2 2018-06-20

47.83.2 Improved Documentation
------------------------------

   - Add documentation for the ‘--strict’ flag.  (issue #3549(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3549


File: pytest.info,  Node: Trivial/Internal Changes<36>,  Prev: Improved Documentation<33>,  Up: pytest 3 6 2 2018-06-20

47.83.3 Trivial/Internal Changes
--------------------------------

   - Update old quotation style to parens in fixture.rst documentation.
     (issue #3525(1))

   - Improve display of hint about ‘--fulltrace’ with
     ‘KeyboardInterrupt’.  (issue #3545(2))

   - pytest’s testsuite is no longer runnable through ‘python setup.py
     test’ – instead invoke ‘pytest’ or ‘tox’ directly.  (issue
     #3552(3))

   - Fix typo in documentation (issue #3567(4))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3525

   (2) https://github.com/pytest-dev/pytest/issues/3545

   (3) https://github.com/pytest-dev/pytest/issues/3552

   (4) https://github.com/pytest-dev/pytest/issues/3567


File: pytest.info,  Node: pytest 3 6 1 2018-06-05,  Next: pytest 3 6 0 2018-05-23,  Prev: pytest 3 6 2 2018-06-20,  Up: Changelog

47.84 pytest 3.6.1 (2018-06-05)
===============================

* Menu:

* Bug Fixes: Bug Fixes<81>.
* Improved Documentation: Improved Documentation<34>.
* Trivial/Internal Changes: Trivial/Internal Changes<37>.


File: pytest.info,  Node: Bug Fixes<81>,  Next: Improved Documentation<34>,  Up: pytest 3 6 1 2018-06-05

47.84.1 Bug Fixes
-----------------

   - Fixed a bug where stdout and stderr were logged twice by junitxml
     when a test was marked xfail.  (issue #3491(1))

   - Fix ‘usefixtures’ mark applied to unittest tests by correctly
     instantiating ‘FixtureInfo’.  (issue #3498(2))

   - Fix assertion rewriter compatibility with libraries that monkey
     patch ‘file’ objects.  (issue #3503(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3491

   (2) https://github.com/pytest-dev/pytest/issues/3498

   (3) https://github.com/pytest-dev/pytest/issues/3503


File: pytest.info,  Node: Improved Documentation<34>,  Next: Trivial/Internal Changes<37>,  Prev: Bug Fixes<81>,  Up: pytest 3 6 1 2018-06-05

47.84.2 Improved Documentation
------------------------------

   - Added a section on how to use fixtures as factories to the fixture
     documentation.  (issue #3461(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3461


File: pytest.info,  Node: Trivial/Internal Changes<37>,  Prev: Improved Documentation<34>,  Up: pytest 3 6 1 2018-06-05

47.84.3 Trivial/Internal Changes
--------------------------------

   - Enable caching for pip/pre-commit in order to reduce build time on
     travis/appveyor.  (issue #3502(1))

   - Switch pytest to the src/ layout as we already suggested it for
     good practice - now we implement it as well.  (issue #3513(2))

   - Fix if in tests to support 3.7.0b5, where a docstring handling in
     AST got reverted.  (issue #3530(3))

   - Remove some python2.5 compatibility code.  (issue #3529(4))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3502

   (2) https://github.com/pytest-dev/pytest/issues/3513

   (3) https://github.com/pytest-dev/pytest/issues/3530

   (4) https://github.com/pytest-dev/pytest/issues/3529


File: pytest.info,  Node: pytest 3 6 0 2018-05-23,  Next: pytest 3 5 1 2018-04-23,  Prev: pytest 3 6 1 2018-06-05,  Up: Changelog

47.85 pytest 3.6.0 (2018-05-23)
===============================

* Menu:

* Features: Features<25>.
* Bug Fixes: Bug Fixes<82>.
* Improved Documentation: Improved Documentation<35>.
* Trivial/Internal Changes: Trivial/Internal Changes<38>.


File: pytest.info,  Node: Features<25>,  Next: Bug Fixes<82>,  Up: pytest 3 6 0 2018-05-23

47.85.1 Features
----------------

   - Revamp the internals of the ‘pytest.mark’ implementation with
     correct per node handling which fixes a number of long standing
     bugs caused by the old design.  This introduces new
     ‘Node.iter_markers(name)’ and ‘Node.get_closest_marker(name)’ APIs.
     Users are ‘strongly encouraged’ to read the *note reasons for the
     revamp in the docs: 514, or jump over to details about *note
     updating existing code to use the new APIs: 515.  (issue #3317(1))

   - Now when ‘@pytest.fixture’ is applied more than once to the same
     function a ‘ValueError’ is raised.  This buggy behavior would cause
     surprising problems and if was working for a test suite it was
     mostly by accident.  (issue #2334(2))

   - Support for Python 3.7’s builtin ‘breakpoint()’ method, see Using
     the builtin breakpoint function for details.  (issue #3180(3))

   - ‘monkeypatch’ now supports a ‘context()’ function which acts as a
     context manager which undoes all patching done within the ‘with’
     block.  (issue #3290(4))

   - The ‘--pdb’ option now causes KeyboardInterrupt to enter the
     debugger, instead of stopping the test session.  On python 2.7,
     hitting CTRL+C again exits the debugger.  On python 3.2 and higher,
     use CTRL+D. (issue #3299(5))

   - pytest no longer changes the log level of the root logger when the
     ‘log-level’ parameter has greater numeric value than that of the
     level of the root logger, which makes it play better with custom
     logging configuration in user code.  (issue #3307(6))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3317

   (2) https://github.com/pytest-dev/pytest/issues/2334

   (3) https://github.com/pytest-dev/pytest/issues/3180

   (4) https://github.com/pytest-dev/pytest/issues/3290

   (5) https://github.com/pytest-dev/pytest/issues/3299

   (6) https://github.com/pytest-dev/pytest/issues/3307


File: pytest.info,  Node: Bug Fixes<82>,  Next: Improved Documentation<35>,  Prev: Features<25>,  Up: pytest 3 6 0 2018-05-23

47.85.2 Bug Fixes
-----------------

   - A rare race-condition which might result in corrupted ‘.pyc’ files
     on Windows has been hopefully solved.  (issue #3008(1))

   - Also use iter_marker for discovering the marks applying for marker
     expressions from the cli to avoid the bad data from the legacy mark
     storage.  (issue #3441(2))

   - When showing diffs of failed assertions where the contents contain
     only whitespace, escape them using ‘repr()’ first to make it easy
     to spot the differences.  (issue #3443(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3008

   (2) https://github.com/pytest-dev/pytest/issues/3441

   (3) https://github.com/pytest-dev/pytest/issues/3443


File: pytest.info,  Node: Improved Documentation<35>,  Next: Trivial/Internal Changes<38>,  Prev: Bug Fixes<82>,  Up: pytest 3 6 0 2018-05-23

47.85.3 Improved Documentation
------------------------------

   - Change documentation copyright year to a range which auto-updates
     itself each time it is published.  (issue #3303(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3303


File: pytest.info,  Node: Trivial/Internal Changes<38>,  Prev: Improved Documentation<35>,  Up: pytest 3 6 0 2018-05-23

47.85.4 Trivial/Internal Changes
--------------------------------

   - ‘pytest’ now depends on the python-atomicwrites(1) library.  (issue
     #3008(2))

   - Update all pypi.python.org URLs to pypi.org.  (issue #3431(3))

   - Detect ‘pytest_’ prefixed hooks using the internal plugin manager
     since ‘pluggy’ is deprecating the ‘implprefix’ argument to
     ‘PluginManager’.  (issue #3487(4))

   - Import ‘Mapping’ and ‘Sequence’ from ‘_pytest.compat’ instead of
     directly from ‘collections’ in ‘python_api.py::approx’.  Add
     ‘Mapping’ to ‘_pytest.compat’, import it from ‘collections’ on
     python 2, but from ‘collections.abc’ on Python 3 to avoid a
     ‘DeprecationWarning’ on Python 3.7 or newer.  (issue #3497(5))

   ---------- Footnotes ----------

   (1) https://github.com/untitaker/python-atomicwrites

   (2) https://github.com/pytest-dev/pytest/issues/3008

   (3) https://github.com/pytest-dev/pytest/issues/3431

   (4) https://github.com/pytest-dev/pytest/issues/3487

   (5) https://github.com/pytest-dev/pytest/issues/3497


File: pytest.info,  Node: pytest 3 5 1 2018-04-23,  Next: pytest 3 5 0 2018-03-21,  Prev: pytest 3 6 0 2018-05-23,  Up: Changelog

47.86 pytest 3.5.1 (2018-04-23)
===============================

* Menu:

* Bug Fixes: Bug Fixes<83>.
* Improved Documentation: Improved Documentation<36>.
* Trivial/Internal Changes: Trivial/Internal Changes<39>.


File: pytest.info,  Node: Bug Fixes<83>,  Next: Improved Documentation<36>,  Up: pytest 3 5 1 2018-04-23

47.86.1 Bug Fixes
-----------------

   - Reset ‘sys.last_type’, ‘sys.last_value’ and ‘sys.last_traceback’
     before each test executes.  Those attributes are added by pytest
     during the test run to aid debugging, but were never reset so they
     would create a leaking reference to the last failing test’s frame
     which in turn could never be reclaimed by the garbage collector.
     (issue #2798(1))

   - ‘pytest.raises’ now raises ‘TypeError’ when receiving an unknown
     keyword argument.  (issue #3348(2))

   - ‘pytest.raises’ now works with exception classes that look like
     iterables.  (issue #3372(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2798

   (2) https://github.com/pytest-dev/pytest/issues/3348

   (3) https://github.com/pytest-dev/pytest/issues/3372


File: pytest.info,  Node: Improved Documentation<36>,  Next: Trivial/Internal Changes<39>,  Prev: Bug Fixes<83>,  Up: pytest 3 5 1 2018-04-23

47.86.2 Improved Documentation
------------------------------

   - Fix typo in ‘caplog’ fixture documentation, which incorrectly
     identified certain attributes as methods.  (issue #3406(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3406


File: pytest.info,  Node: Trivial/Internal Changes<39>,  Prev: Improved Documentation<36>,  Up: pytest 3 5 1 2018-04-23

47.86.3 Trivial/Internal Changes
--------------------------------

   - Added a more indicative error message when parametrizing a function
     whose argument takes a default value.  (issue #3221(1))

   - Remove internal ‘_pytest.terminal.flatten’ function in favor of
     ‘more_itertools.collapse’.  (issue #3330(2))

   - Import some modules from ‘collections.abc’ instead of ‘collections’
     as the former modules trigger ‘DeprecationWarning’ in Python 3.7.
     (issue #3339(3))

   - record_property is no longer experimental, removing the warnings
     was forgotten.  (issue #3360(4))

   - Mention in documentation and CLI help that fixtures with leading
     ‘_’ are printed by ‘pytest --fixtures’ only if the ‘-v’ option is
     added.  (issue #3398(5))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3221

   (2) https://github.com/pytest-dev/pytest/issues/3330

   (3) https://github.com/pytest-dev/pytest/issues/3339

   (4) https://github.com/pytest-dev/pytest/issues/3360

   (5) https://github.com/pytest-dev/pytest/issues/3398


File: pytest.info,  Node: pytest 3 5 0 2018-03-21,  Next: pytest 3 4 2 2018-03-04,  Prev: pytest 3 5 1 2018-04-23,  Up: Changelog

47.87 pytest 3.5.0 (2018-03-21)
===============================

* Menu:

* Deprecations and Removals: Deprecations and Removals<5>.
* Features: Features<26>.
* Bug Fixes: Bug Fixes<84>.
* Improved Documentation: Improved Documentation<37>.
* Trivial/Internal Changes: Trivial/Internal Changes<40>.


File: pytest.info,  Node: Deprecations and Removals<5>,  Next: Features<26>,  Up: pytest 3 5 0 2018-03-21

47.87.1 Deprecations and Removals
---------------------------------

   - ‘record_xml_property’ fixture is now deprecated in favor of the
     more generic ‘record_property’.  (issue #2770(1))

   - Defining ‘pytest_plugins’ is now deprecated in non-top-level
     conftest.py files, because they “leak” to the entire directory
     tree.  *note See the docs: 506. for the rationale behind this
     decision (issue #3084(2))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2770

   (2) https://github.com/pytest-dev/pytest/issues/3084


File: pytest.info,  Node: Features<26>,  Next: Bug Fixes<84>,  Prev: Deprecations and Removals<5>,  Up: pytest 3 5 0 2018-03-21

47.87.2 Features
----------------

   - New ‘--show-capture’ command-line option that allows to specify how
     to display captured output when tests fail: ‘no’, ‘stdout’,
     ‘stderr’, ‘log’ or ‘all’ (the default).  (issue #1478(1))

   - New ‘--rootdir’ command-line option to override the rules for
     discovering the root directory.  See *note customize: 1ba. in the
     documentation for details.  (issue #1642(2))

   - Fixtures are now instantiated based on their scopes, with
     higher-scoped fixtures (such as ‘session’) being instantiated first
     than lower-scoped fixtures (such as ‘function’).  The relative
     order of fixtures of the same scope is kept unchanged, based in
     their declaration order and their dependencies.  (issue #2405(3))

   - ‘record_xml_property’ renamed to ‘record_property’ and is now
     compatible with xdist, markers and any reporter.
     ‘record_xml_property’ name is now deprecated.  (issue #2770(4))

   - New ‘--nf’, ‘--new-first’ options: run new tests first followed by
     the rest of the tests, in both cases tests are also sorted by the
     file modified time, with more recent files coming first.  (issue
     #3034(5))

   - New ‘--last-failed-no-failures’ command-line option that allows to
     specify the behavior of the cache plugin’s ‘`--last-failed’ feature
     when no tests failed in the last run (or no cache was found):
     ‘none’ or ‘all’ (the default).  (issue #3139(6))

   - New ‘--doctest-continue-on-failure’ command-line option to enable
     doctests to show multiple failures for each snippet, instead of
     stopping at the first failure.  (issue #3149(7))

   - Captured log messages are added to the ‘<system-out>’ tag in the
     generated junit xml file if the ‘junit_logging’ ini option is set
     to ‘system-out’.  If the value of this ini option is ‘system-err’,
     the logs are written to ‘<system-err>’.  The default value for
     ‘junit_logging’ is ‘no’, meaning captured logs are not written to
     the output file.  (issue #3156(8))

   - Allow the logging plugin to handle ‘pytest_runtest_logstart’ and
     ‘pytest_runtest_logfinish’ hooks when live logs are enabled.
     (issue #3189(9))

   - Passing ‘--log-cli-level’ in the command-line now automatically
     activates live logging.  (issue #3190(10))

   - Add command line option ‘--deselect’ to allow deselection of
     individual tests at collection time.  (issue #3198(11))

   - Captured logs are printed before entering pdb.  (issue #3204(12))

   - Deselected item count is now shown before tests are run, e.g.
     ‘collected X items / Y deselected’.  (issue #3213(13))

   - The builtin module ‘platform’ is now available for use in
     expressions in ‘pytest.mark’.  (issue #3236(14))

   - The ‘short test summary info’ section now is displayed after
     tracebacks and warnings in the terminal.  (issue #3255(15))

   - New ‘--verbosity’ flag to set verbosity level explicitly.  (issue
     #3296(16))

   - ‘pytest.approx’ now accepts comparing a numpy array with a scalar.
     (issue #3312(17))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1478

   (2) https://github.com/pytest-dev/pytest/issues/1642

   (3) https://github.com/pytest-dev/pytest/issues/2405

   (4) https://github.com/pytest-dev/pytest/issues/2770

   (5) https://github.com/pytest-dev/pytest/issues/3034

   (6) https://github.com/pytest-dev/pytest/issues/3139

   (7) https://github.com/pytest-dev/pytest/issues/3149

   (8) https://github.com/pytest-dev/pytest/issues/3156

   (9) https://github.com/pytest-dev/pytest/issues/3189

   (10) https://github.com/pytest-dev/pytest/issues/3190

   (11) https://github.com/pytest-dev/pytest/issues/3198

   (12) https://github.com/pytest-dev/pytest/issues/3204

   (13) https://github.com/pytest-dev/pytest/issues/3213

   (14) https://github.com/pytest-dev/pytest/issues/3236

   (15) https://github.com/pytest-dev/pytest/issues/3255

   (16) https://github.com/pytest-dev/pytest/issues/3296

   (17) https://github.com/pytest-dev/pytest/issues/3312


File: pytest.info,  Node: Bug Fixes<84>,  Next: Improved Documentation<37>,  Prev: Features<26>,  Up: pytest 3 5 0 2018-03-21

47.87.3 Bug Fixes
-----------------

   - Suppress ‘IOError’ when closing the temporary file used for
     capturing streams in Python 2.7.  (issue #2370(1))

   - Fixed ‘clear()’ method on ‘caplog’ fixture which cleared ‘records’,
     but not the ‘text’ property.  (issue #3297(2))

   - During test collection, when stdin is not allowed to be read, the
     ‘DontReadFromStdin’ object still allow itself to be iterable and
     resolved to an iterator without crashing.  (issue #3314(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2370

   (2) https://github.com/pytest-dev/pytest/issues/3297

   (3) https://github.com/pytest-dev/pytest/issues/3314


File: pytest.info,  Node: Improved Documentation<37>,  Next: Trivial/Internal Changes<40>,  Prev: Bug Fixes<84>,  Up: pytest 3 5 0 2018-03-21

47.87.4 Improved Documentation
------------------------------

   - Added a *note reference: 1d0. page to the docs.  (issue #1713(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1713


File: pytest.info,  Node: Trivial/Internal Changes<40>,  Prev: Improved Documentation<37>,  Up: pytest 3 5 0 2018-03-21

47.87.5 Trivial/Internal Changes
--------------------------------

   - Change minimum requirement of ‘attrs’ to ‘17.4.0’.  (issue
     #3228(1))

   - Renamed example directories so all tests pass when ran from the
     base directory.  (issue #3245(2))

   - Internal ‘mark.py’ module has been turned into a package.  (issue
     #3250(3))

   - ‘pytest’ now depends on the more-itertools(4) package.  (issue
     #3265(5))

   - Added warning when ‘[pytest]’ section is used in a ‘.cfg’ file
     passed with ‘-c’ (issue #3268(6))

   - ‘nodeids’ can now be passed explicitly to ‘FSCollector’ and ‘Node’
     constructors.  (issue #3291(7))

   - Internal refactoring of ‘FormattedExcinfo’ to use ‘attrs’
     facilities and remove old support code for legacy Python versions.
     (issue #3292(8))

   - Refactoring to unify how verbosity is handled internally.  (issue
     #3296(9))

   - Internal refactoring to better integrate with argparse.  (issue
     #3304(10))

   - Fix a python example when calling a fixture in doc/en/usage.rst
     (issue #3308(11))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3228

   (2) https://github.com/pytest-dev/pytest/issues/3245

   (3) https://github.com/pytest-dev/pytest/issues/3250

   (4) https://github.com/erikrose/more-itertools

   (5) https://github.com/pytest-dev/pytest/issues/3265

   (6) https://github.com/pytest-dev/pytest/issues/3268

   (7) https://github.com/pytest-dev/pytest/issues/3291

   (8) https://github.com/pytest-dev/pytest/issues/3292

   (9) https://github.com/pytest-dev/pytest/issues/3296

   (10) https://github.com/pytest-dev/pytest/issues/3304

   (11) https://github.com/pytest-dev/pytest/issues/3308


File: pytest.info,  Node: pytest 3 4 2 2018-03-04,  Next: pytest 3 4 1 2018-02-20,  Prev: pytest 3 5 0 2018-03-21,  Up: Changelog

47.88 pytest 3.4.2 (2018-03-04)
===============================

* Menu:

* Bug Fixes: Bug Fixes<85>.
* Improved Documentation: Improved Documentation<38>.
* Trivial/Internal Changes: Trivial/Internal Changes<41>.


File: pytest.info,  Node: Bug Fixes<85>,  Next: Improved Documentation<38>,  Up: pytest 3 4 2 2018-03-04

47.88.1 Bug Fixes
-----------------

   - Removed progress information when capture option is ‘no’.  (issue
     #3203(1))

   - Refactor check of bindir from ‘exists’ to ‘isdir’.  (issue
     #3241(2))

   - Fix ‘TypeError’ issue when using ‘approx’ with a ‘Decimal’ value.
     (issue #3247(3))

   - Fix reference cycle generated when using the ‘request’ fixture.
     (issue #3249(4))

   - ‘[tool:pytest]’ sections in ‘*.cfg’ files passed by the ‘-c’ option
     are now properly recognized.  (issue #3260(5))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3203

   (2) https://github.com/pytest-dev/pytest/issues/3241

   (3) https://github.com/pytest-dev/pytest/issues/3247

   (4) https://github.com/pytest-dev/pytest/issues/3249

   (5) https://github.com/pytest-dev/pytest/issues/3260


File: pytest.info,  Node: Improved Documentation<38>,  Next: Trivial/Internal Changes<41>,  Prev: Bug Fixes<85>,  Up: pytest 3 4 2 2018-03-04

47.88.2 Improved Documentation
------------------------------

   - Add logging plugin to plugins list.  (issue #3209(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3209


File: pytest.info,  Node: Trivial/Internal Changes<41>,  Prev: Improved Documentation<38>,  Up: pytest 3 4 2 2018-03-04

47.88.3 Trivial/Internal Changes
--------------------------------

   - Fix minor typo in fixture.rst (issue #3259(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3259


File: pytest.info,  Node: pytest 3 4 1 2018-02-20,  Next: pytest 3 4 0 2018-01-30,  Prev: pytest 3 4 2 2018-03-04,  Up: Changelog

47.89 pytest 3.4.1 (2018-02-20)
===============================

* Menu:

* Bug Fixes: Bug Fixes<86>.
* Improved Documentation: Improved Documentation<39>.
* Trivial/Internal Changes: Trivial/Internal Changes<42>.


File: pytest.info,  Node: Bug Fixes<86>,  Next: Improved Documentation<39>,  Up: pytest 3 4 1 2018-02-20

47.89.1 Bug Fixes
-----------------

   - Move import of ‘doctest.UnexpectedException’ to top-level to avoid
     possible errors when using ‘--pdb’.  (issue #1810(1))

   - Added printing of captured stdout/stderr before entering pdb, and
     improved a test which was giving false negatives about output
     capturing.  (issue #3052(2))

   - Fix ordering of tests using parametrized fixtures which can lead to
     fixtures being created more than necessary.  (issue #3161(3))

   - Fix bug where logging happening at hooks outside of “test run”
     hooks would cause an internal error.  (issue #3184(4))

   - Detect arguments injected by ‘unittest.mock.patch’ decorator
     correctly when pypi ‘mock.patch’ is installed and imported.  (issue
     #3206(5))

   - Errors shown when a ‘pytest.raises()’ with ‘match=’ fails are now
     cleaner on what happened: When no exception was raised, the
     “matching ‘…’” part got removed as it falsely implies that an
     exception was raised but it didn’t match.  When a wrong exception
     was raised, it’s now thrown (like ‘pytest.raised()’ without
     ‘match=’ would) instead of complaining about the unmatched text.
     (issue #3222(6))

   - Fixed output capture handling in doctests on macOS. (issue #985(7))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1810

   (2) https://github.com/pytest-dev/pytest/issues/3052

   (3) https://github.com/pytest-dev/pytest/issues/3161

   (4) https://github.com/pytest-dev/pytest/issues/3184

   (5) https://github.com/pytest-dev/pytest/issues/3206

   (6) https://github.com/pytest-dev/pytest/issues/3222

   (7) https://github.com/pytest-dev/pytest/issues/985


File: pytest.info,  Node: Improved Documentation<39>,  Next: Trivial/Internal Changes<42>,  Prev: Bug Fixes<86>,  Up: pytest 3 4 1 2018-02-20

47.89.2 Improved Documentation
------------------------------

   - Add Sphinx parameter docs for ‘match’ and ‘message’ args to
     ‘pytest.raises’.  (issue #3202(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3202


File: pytest.info,  Node: Trivial/Internal Changes<42>,  Prev: Improved Documentation<39>,  Up: pytest 3 4 1 2018-02-20

47.89.3 Trivial/Internal Changes
--------------------------------

   - pytest has changed the publication procedure and is now being
     published to PyPI directly from Travis.  (issue #3060(1))

   - Rename ‘ParameterSet._for_parameterize()’ to ‘_for_parametrize()’
     in order to comply with the naming convention.  (issue #3166(2))

   - Skip failing pdb/doctest test on mac.  (issue #985(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3060

   (2) https://github.com/pytest-dev/pytest/issues/3166

   (3) https://github.com/pytest-dev/pytest/issues/985


File: pytest.info,  Node: pytest 3 4 0 2018-01-30,  Next: pytest 3 3 2 2017-12-25,  Prev: pytest 3 4 1 2018-02-20,  Up: Changelog

47.90 pytest 3.4.0 (2018-01-30)
===============================

* Menu:

* Deprecations and Removals: Deprecations and Removals<6>.
* Features: Features<27>.
* Bug Fixes: Bug Fixes<87>.
* Improved Documentation: Improved Documentation<40>.
* Trivial/Internal Changes: Trivial/Internal Changes<43>.


File: pytest.info,  Node: Deprecations and Removals<6>,  Next: Features<27>,  Up: pytest 3 4 0 2018-01-30

47.90.1 Deprecations and Removals
---------------------------------

   - All pytest classes now subclass ‘object’ for better Python 2/3
     compatibility.  This should not affect user code except in very
     rare edge cases.  (issue #2147(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2147


File: pytest.info,  Node: Features<27>,  Next: Bug Fixes<87>,  Prev: Deprecations and Removals<6>,  Up: pytest 3 4 0 2018-01-30

47.90.2 Features
----------------

   - Introduce ‘empty_parameter_set_mark’ ini option to select which
     mark to apply when ‘@pytest.mark.parametrize’ is given an empty set
     of parameters.  Valid options are ‘skip’ (default) and ‘xfail’.
     Note that it is planned to change the default to ‘xfail’ in future
     releases as this is considered less error prone.  (issue #2527(1))

   - ‘Incompatible change’: after community feedback the *note logging:
     df. functionality has undergone some changes.  Please consult the
     *note logging documentation: ec. for details.  (issue #3013(2))

   - Console output falls back to “classic” mode when capturing is
     disabled (‘-s’), otherwise the output gets garbled to the point of
     being useless.  (issue #3038(3))

   - New *note pytest_runtest_logfinish: 2c4. hook which is called when
     a test item has finished executing, analogous to *note
     pytest_runtest_logstart: 2c2.  (issue #3101(4))

   - Improve performance when collecting tests using many fixtures.
     (issue #3107(5))

   - New ‘caplog.get_records(when)’ method which provides access to the
     captured records for the ‘"setup"’, ‘"call"’ and ‘"teardown"’
     testing stages.  (issue #3117(6))

   - New fixture ‘record_xml_attribute’ that allows modifying and
     inserting attributes on the ‘<testcase>’ xml node in JUnit reports.
     (issue #3130(7))

   - The default cache directory has been renamed from ‘.cache’ to
     ‘.pytest_cache’ after community feedback that the name ‘.cache’ did
     not make it clear that it was used by pytest.  (issue #3138(8))

   - Colorize the levelname column in the live-log output.  (issue
     #3142(9))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2527

   (2) https://github.com/pytest-dev/pytest/issues/3013

   (3) https://github.com/pytest-dev/pytest/issues/3038

   (4) https://github.com/pytest-dev/pytest/issues/3101

   (5) https://github.com/pytest-dev/pytest/issues/3107

   (6) https://github.com/pytest-dev/pytest/issues/3117

   (7) https://github.com/pytest-dev/pytest/issues/3130

   (8) https://github.com/pytest-dev/pytest/issues/3138

   (9) https://github.com/pytest-dev/pytest/issues/3142


File: pytest.info,  Node: Bug Fixes<87>,  Next: Improved Documentation<40>,  Prev: Features<27>,  Up: pytest 3 4 0 2018-01-30

47.90.3 Bug Fixes
-----------------

   - Fix hanging pexpect test on MacOS by using flush() instead of
     wait().  (issue #2022(1))

   - Fix restoring Python state after in-process pytest runs with the
     ‘pytester’ plugin; this may break tests using multiple inprocess
     pytest runs if later ones depend on earlier ones leaking global
     interpreter changes.  (issue #3016(2))

   - Fix skipping plugin reporting hook when test aborted before plugin
     setup hook.  (issue #3074(3))

   - Fix progress percentage reported when tests fail during teardown.
     (issue #3088(4))

   - ‘Incompatible change’: ‘-o/--override’ option no longer eats all
     the remaining options, which can lead to surprising behavior: for
     example, ‘pytest -o foo=1 /path/to/test.py’ would fail because
     ‘/path/to/test.py’ would be considered as part of the ‘-o’
     command-line argument.  One consequence of this is that now
     multiple configuration overrides need multiple ‘-o’ flags: ‘pytest
     -o foo=1 -o bar=2’.  (issue #3103(5))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2022

   (2) https://github.com/pytest-dev/pytest/issues/3016

   (3) https://github.com/pytest-dev/pytest/issues/3074

   (4) https://github.com/pytest-dev/pytest/issues/3088

   (5) https://github.com/pytest-dev/pytest/issues/3103


File: pytest.info,  Node: Improved Documentation<40>,  Next: Trivial/Internal Changes<43>,  Prev: Bug Fixes<87>,  Up: pytest 3 4 0 2018-01-30

47.90.4 Improved Documentation
------------------------------

   - Document hooks (defined with ‘historic=True’) which cannot be used
     with ‘hookwrapper=True’.  (issue #2423(1))

   - Clarify that warning capturing doesn’t change the warning filter by
     default.  (issue #2457(2))

   - Clarify a possible confusion when using pytest_fixture_setup with
     fixture functions that return None.  (issue #2698(3))

   - Fix the wording of a sentence on doctest flags used in pytest.
     (issue #3076(4))

   - Prefer ‘https://*.readthedocs.io’ over ‘http://*.rtfd.org’ for
     links in the documentation.  (issue #3092(5))

   - Improve readability (wording, grammar) of Getting Started guide
     (issue #3131(6))

   - Added note that calling pytest.main multiple times from the same
     process is not recommended because of import caching.  (issue
     #3143(7))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2423

   (2) https://github.com/pytest-dev/pytest/issues/2457

   (3) https://github.com/pytest-dev/pytest/issues/2698

   (4) https://github.com/pytest-dev/pytest/issues/3076

   (5) https://github.com/pytest-dev/pytest/issues/3092

   (6) https://github.com/pytest-dev/pytest/issues/3131

   (7) https://github.com/pytest-dev/pytest/issues/3143


File: pytest.info,  Node: Trivial/Internal Changes<43>,  Prev: Improved Documentation<40>,  Up: pytest 3 4 0 2018-01-30

47.90.5 Trivial/Internal Changes
--------------------------------

   - Show a simple and easy error when keyword expressions trigger a
     syntax error (for example, ‘"-k foo and import"’ will show an error
     that you can not use the ‘import’ keyword in expressions).  (issue
     #2953(1))

   - Change parametrized automatic test id generation to use the
     ‘__name__’ attribute of functions instead of the fallback argument
     name plus counter.  (issue #2976(2))

   - Replace py.std with stdlib imports.  (issue #3067(3))

   - Corrected ‘you’ to ‘your’ in logging docs.  (issue #3129(4))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2953

   (2) https://github.com/pytest-dev/pytest/issues/2976

   (3) https://github.com/pytest-dev/pytest/issues/3067

   (4) https://github.com/pytest-dev/pytest/issues/3129


File: pytest.info,  Node: pytest 3 3 2 2017-12-25,  Next: pytest 3 3 1 2017-12-05,  Prev: pytest 3 4 0 2018-01-30,  Up: Changelog

47.91 pytest 3.3.2 (2017-12-25)
===============================

* Menu:

* Bug Fixes: Bug Fixes<88>.
* Improved Documentation: Improved Documentation<41>.
* Trivial/Internal Changes: Trivial/Internal Changes<44>.


File: pytest.info,  Node: Bug Fixes<88>,  Next: Improved Documentation<41>,  Up: pytest 3 3 2 2017-12-25

47.91.1 Bug Fixes
-----------------

   - pytester: ignore files used to obtain current user metadata in the
     fd leak detector.  (issue #2784(1))

   - Fix ‘memory leak’ where objects returned by fixtures were never
     destructed by the garbage collector.  (issue #2981(2))

   - Fix conversion of pyargs to filename to not convert symlinks on
     Python 2.  (issue #2985(3))

   - ‘PYTEST_DONT_REWRITE’ is now checked for plugins too rather than
     only for test modules.  (issue #2995(4))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2784

   (2) https://github.com/pytest-dev/pytest/issues/2981

   (3) https://github.com/pytest-dev/pytest/issues/2985

   (4) https://github.com/pytest-dev/pytest/issues/2995


File: pytest.info,  Node: Improved Documentation<41>,  Next: Trivial/Internal Changes<44>,  Prev: Bug Fixes<88>,  Up: pytest 3 3 2 2017-12-25

47.91.2 Improved Documentation
------------------------------

   - Add clarifying note about behavior of multiple parametrized
     arguments (issue #3001(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3001


File: pytest.info,  Node: Trivial/Internal Changes<44>,  Prev: Improved Documentation<41>,  Up: pytest 3 3 2 2017-12-25

47.91.3 Trivial/Internal Changes
--------------------------------

   - Code cleanup.  (issue #3015(1), issue #3021(2))

   - Clean up code by replacing imports and references of ‘_ast’ to
     ‘ast’.  (issue #3018(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/3015

   (2) https://github.com/pytest-dev/pytest/issues/3021

   (3) https://github.com/pytest-dev/pytest/issues/3018


File: pytest.info,  Node: pytest 3 3 1 2017-12-05,  Next: pytest 3 3 0 2017-11-23,  Prev: pytest 3 3 2 2017-12-25,  Up: Changelog

47.92 pytest 3.3.1 (2017-12-05)
===============================

* Menu:

* Bug Fixes: Bug Fixes<89>.
* Improved Documentation: Improved Documentation<42>.
* Trivial/Internal Changes: Trivial/Internal Changes<45>.


File: pytest.info,  Node: Bug Fixes<89>,  Next: Improved Documentation<42>,  Up: pytest 3 3 1 2017-12-05

47.92.1 Bug Fixes
-----------------

   - Fix issue about ‘-p no:<plugin>’ having no effect.  (issue
     #2920(1))

   - Fix regression with warnings that contained non-strings in their
     arguments in Python 2.  (issue #2956(2))

   - Always escape null bytes when setting ‘PYTEST_CURRENT_TEST’.
     (issue #2957(3))

   - Fix ‘ZeroDivisionError’ when using the ‘testmon’ plugin when no
     tests were actually collected.  (issue #2971(4))

   - Bring back ‘TerminalReporter.writer’ as an alias to
     ‘TerminalReporter._tw’.  This alias was removed by accident in the
     ‘3.3.0’ release.  (issue #2984(5))

   - The ‘pytest-capturelog’ plugin is now also blacklisted, avoiding
     errors when running pytest with it still installed.  (issue
     #3004(6))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2920

   (2) https://github.com/pytest-dev/pytest/issues/2956

   (3) https://github.com/pytest-dev/pytest/issues/2957

   (4) https://github.com/pytest-dev/pytest/issues/2971

   (5) https://github.com/pytest-dev/pytest/issues/2984

   (6) https://github.com/pytest-dev/pytest/issues/3004


File: pytest.info,  Node: Improved Documentation<42>,  Next: Trivial/Internal Changes<45>,  Prev: Bug Fixes<89>,  Up: pytest 3 3 1 2017-12-05

47.92.2 Improved Documentation
------------------------------

   - Fix broken link to plugin ‘pytest-localserver’.  (issue #2963(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2963


File: pytest.info,  Node: Trivial/Internal Changes<45>,  Prev: Improved Documentation<42>,  Up: pytest 3 3 1 2017-12-05

47.92.3 Trivial/Internal Changes
--------------------------------

   - Update github “bugs” link in ‘CONTRIBUTING.rst’ (issue #2949(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2949


File: pytest.info,  Node: pytest 3 3 0 2017-11-23,  Next: pytest 3 2 5 2017-11-15,  Prev: pytest 3 3 1 2017-12-05,  Up: Changelog

47.93 pytest 3.3.0 (2017-11-23)
===============================

* Menu:

* Deprecations and Removals: Deprecations and Removals<7>.
* Features: Features<28>.
* Bug Fixes: Bug Fixes<90>.
* Trivial/Internal Changes: Trivial/Internal Changes<46>.


File: pytest.info,  Node: Deprecations and Removals<7>,  Next: Features<28>,  Up: pytest 3 3 0 2017-11-23

47.93.1 Deprecations and Removals
---------------------------------

   - pytest no longer supports Python ‘2.6’ and ‘3.3’.  Those Python
     versions are EOL for some time now and incur maintenance and
     compatibility costs on the pytest core team, and following up with
     the rest of the community we decided that they will no longer be
     supported starting on this version.  Users which still require
     those versions should pin pytest to ‘<3.3’.  (issue #2812(1))

   - Remove internal ‘_preloadplugins()’ function.  This removal is part
     of the ‘pytest_namespace()’ hook deprecation.  (issue #2636(2))

   - Internally change ‘CallSpec2’ to have a list of marks instead of a
     broken mapping of keywords.  This removes the keywords attribute of
     the internal ‘CallSpec2’ class.  (issue #2672(3))

   - Remove ParameterSet.deprecated_arg_dict - its not a public api and
     the lack of the underscore was a naming error.  (issue #2675(4))

   - Remove the internal multi-typed attribute ‘Node._evalskip’ and
     replace it with the boolean ‘Node._skipped_by_mark’.  (issue
     #2767(5))

   - The ‘params’ list passed to ‘pytest.fixture’ is now for all effects
     considered immutable and frozen at the moment of the
     ‘pytest.fixture’ call.  Previously the list could be changed before
     the first invocation of the fixture allowing for a form of dynamic
     parametrization (for example, updated from command-line options),
     but this was an unwanted implementation detail which complicated
     the internals and prevented some internal cleanup.  See issue issue
     #2959(6) for details and a recommended workaround.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2812

   (2) https://github.com/pytest-dev/pytest/issues/2636

   (3) https://github.com/pytest-dev/pytest/issues/2672

   (4) https://github.com/pytest-dev/pytest/issues/2675

   (5) https://github.com/pytest-dev/pytest/issues/2767

   (6) https://github.com/pytest-dev/pytest/issues/2959


File: pytest.info,  Node: Features<28>,  Next: Bug Fixes<90>,  Prev: Deprecations and Removals<7>,  Up: pytest 3 3 0 2017-11-23

47.93.2 Features
----------------

   - ‘pytest_fixture_post_finalizer’ hook can now receive a ‘request’
     argument.  (issue #2124(1))

   - Replace the old introspection code in compat.py that determines the
     available arguments of fixtures with inspect.signature on Python 3
     and funcsigs.signature on Python 2.  This should respect
     ‘__signature__’ declarations on functions.  (issue #2267(2))

   - Report tests with global ‘pytestmark’ variable only once.  (issue
     #2549(3))

   - Now pytest displays the total progress percentage while running
     tests.  The previous output style can be set by configuring the
     ‘console_output_style’ setting to ‘classic’.  (issue #2657(4))

   - Match ‘warns’ signature to ‘raises’ by adding ‘match’ keyword.
     (issue #2708(5))

   - pytest now captures and displays output from the standard ‘logging’
     module.  The user can control the logging level to be captured by
     specifying options in ‘pytest.ini’, the command line and also
     during individual tests using markers.  Also, a ‘caplog’ fixture is
     available that enables users to test the captured log during
     specific tests (similar to ‘capsys’ for example).  For more
     information, please see the *note logging docs: df.  This feature
     was introduced by merging the popular pytest-catchlog(6) plugin,
     thanks to @thisch(7).  Be advised that during the merging the
     backward compatibility interface with the defunct
     ‘pytest-capturelog’ has been dropped.  (issue #2794(8))

   - Add ‘allow_module_level’ kwarg to ‘pytest.skip()’, enabling to skip
     the whole module.  (issue #2808(9))

   - Allow setting ‘file_or_dir’, ‘-c’, and ‘-o’ in PYTEST_ADDOPTS.
     (issue #2824(10))

   - Return stdout/stderr capture results as a ‘namedtuple’, so ‘out’
     and ‘err’ can be accessed by attribute.  (issue #2879(11))

   - Add ‘capfdbinary’, a version of ‘capfd’ which returns bytes from
     ‘readouterr()’.  (issue #2923(12))

   - Add ‘capsysbinary’ a version of ‘capsys’ which returns bytes from
     ‘readouterr()’.  (issue #2934(13))

   - Implement feature to skip ‘setup.py’ files when run with
     ‘--doctest-modules’.  (issue #502(14))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2124

   (2) https://github.com/pytest-dev/pytest/issues/2267

   (3) https://github.com/pytest-dev/pytest/issues/2549

   (4) https://github.com/pytest-dev/pytest/issues/2657

   (5) https://github.com/pytest-dev/pytest/issues/2708

   (6) https://pypi.org/project/pytest-catchlog/

   (7) https://github.com/thisch

   (8) https://github.com/pytest-dev/pytest/issues/2794

   (9) https://github.com/pytest-dev/pytest/issues/2808

   (10) https://github.com/pytest-dev/pytest/issues/2824

   (11) https://github.com/pytest-dev/pytest/issues/2879

   (12) https://github.com/pytest-dev/pytest/issues/2923

   (13) https://github.com/pytest-dev/pytest/issues/2934

   (14) https://github.com/pytest-dev/pytest/issues/502


File: pytest.info,  Node: Bug Fixes<90>,  Next: Trivial/Internal Changes<46>,  Prev: Features<28>,  Up: pytest 3 3 0 2017-11-23

47.93.3 Bug Fixes
-----------------

   - Resume output capturing after ‘capsys/capfd.disabled()’ context
     manager.  (issue #1993(1))

   - ‘pytest_fixture_setup’ and ‘pytest_fixture_post_finalizer’ hooks
     are now called for all ‘conftest.py’ files.  (issue #2124(2))

   - If an exception happens while loading a plugin, pytest no longer
     hides the original traceback.  In Python 2 it will show the
     original traceback with a new message that explains in which
     plugin.  In Python 3 it will show 2 canonized exceptions, the
     original exception while loading the plugin in addition to an
     exception that pytest throws about loading a plugin.  (issue
     #2491(3))

   - ‘capsys’ and ‘capfd’ can now be used by other fixtures.  (issue
     #2709(4))

   - Internal ‘pytester’ plugin properly encodes ‘bytes’ arguments to
     ‘utf-8’.  (issue #2738(5))

   - ‘testdir’ now uses use the same method used by ‘tmpdir’ to create
     its temporary directory.  This changes the final structure of the
     ‘testdir’ directory slightly, but should not affect usage in normal
     scenarios and avoids a number of potential problems.  (issue
     #2751(6))

   - pytest no longer complains about warnings with unicode messages
     being non-ascii compatible even for ascii-compatible messages.  As
     a result of this, warnings with unicode messages are converted
     first to an ascii representation for safety.  (issue #2809(7))

   - Change return value of pytest command when ‘--maxfail’ is reached
     from ‘2’ (interrupted) to ‘1’ (failed).  (issue #2845(8))

   - Fix issue in assertion rewriting which could lead it to rewrite
     modules which should not be rewritten.  (issue #2939(9))

   - Handle marks without description in ‘pytest.ini’.  (issue
     #2942(10))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1993

   (2) https://github.com/pytest-dev/pytest/issues/2124

   (3) https://github.com/pytest-dev/pytest/issues/2491

   (4) https://github.com/pytest-dev/pytest/issues/2709

   (5) https://github.com/pytest-dev/pytest/issues/2738

   (6) https://github.com/pytest-dev/pytest/issues/2751

   (7) https://github.com/pytest-dev/pytest/issues/2809

   (8) https://github.com/pytest-dev/pytest/issues/2845

   (9) https://github.com/pytest-dev/pytest/issues/2939

   (10) https://github.com/pytest-dev/pytest/issues/2942


File: pytest.info,  Node: Trivial/Internal Changes<46>,  Prev: Bug Fixes<90>,  Up: pytest 3 3 0 2017-11-23

47.93.4 Trivial/Internal Changes
--------------------------------

   - pytest now depends on attrs(1) for internal structures to ease code
     maintainability.  (issue #2641(2))

   - Refactored internal Python 2/3 compatibility code to use ‘six’.
     (issue #2642(3))

   - Stop vendoring ‘pluggy’ - we’re missing out on its latest changes
     for not much benefit (issue #2719(4))

   - Internal refactor: simplify ascii string escaping by using the
     backslashreplace error handler in newer Python 3 versions.  (issue
     #2734(5))

   - Remove unnecessary mark evaluator in unittest plugin (issue
     #2767(6))

   - Calls to ‘Metafunc.addcall’ now emit a deprecation warning.  This
     function is scheduled to be removed in ‘pytest-4.0’.  (issue
     #2876(7))

   - Internal move of the parameterset extraction to a more maintainable
     place.  (issue #2877(8))

   - Internal refactoring to simplify scope node lookup.  (issue
     #2910(9))

   - Configure ‘pytest’ to prevent pip from installing pytest in
     unsupported Python versions.  (issue #2922(10))

   ---------- Footnotes ----------

   (1) https://pypi.org/project/attrs/

   (2) https://github.com/pytest-dev/pytest/issues/2641

   (3) https://github.com/pytest-dev/pytest/issues/2642

   (4) https://github.com/pytest-dev/pytest/issues/2719

   (5) https://github.com/pytest-dev/pytest/issues/2734

   (6) https://github.com/pytest-dev/pytest/issues/2767

   (7) https://github.com/pytest-dev/pytest/issues/2876

   (8) https://github.com/pytest-dev/pytest/issues/2877

   (9) https://github.com/pytest-dev/pytest/issues/2910

   (10) https://github.com/pytest-dev/pytest/issues/2922


File: pytest.info,  Node: pytest 3 2 5 2017-11-15,  Next: pytest 3 2 4 2017-11-13,  Prev: pytest 3 3 0 2017-11-23,  Up: Changelog

47.94 pytest 3.2.5 (2017-11-15)
===============================

* Menu:

* Bug Fixes: Bug Fixes<91>.


File: pytest.info,  Node: Bug Fixes<91>,  Up: pytest 3 2 5 2017-11-15

47.94.1 Bug Fixes
-----------------

   - Remove ‘py<1.5’ restriction from ‘pytest’ as this can cause version
     conflicts in some installations.  (issue #2926(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2926


File: pytest.info,  Node: pytest 3 2 4 2017-11-13,  Next: pytest 3 2 3 2017-10-03,  Prev: pytest 3 2 5 2017-11-15,  Up: Changelog

47.95 pytest 3.2.4 (2017-11-13)
===============================

* Menu:

* Bug Fixes: Bug Fixes<92>.
* Improved Documentation: Improved Documentation<43>.


File: pytest.info,  Node: Bug Fixes<92>,  Next: Improved Documentation<43>,  Up: pytest 3 2 4 2017-11-13

47.95.1 Bug Fixes
-----------------

   - Fix the bug where running with ‘--pyargs’ will result in items with
     empty ‘parent.nodeid’ if run from a different root directory.
     (issue #2775(1))

   - Fix issue with ‘@pytest.parametrize’ if argnames was specified as
     keyword arguments.  (issue #2819(2))

   - Strip whitespace from marker names when reading them from INI
     config.  (issue #2856(3))

   - Show full context of doctest source in the pytest output, if the
     line number of failed example in the docstring is < 9.  (issue
     #2882(4))

   - Match fixture paths against actual path segments in order to avoid
     matching folders which share a prefix.  (issue #2836(5))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2775

   (2) https://github.com/pytest-dev/pytest/issues/2819

   (3) https://github.com/pytest-dev/pytest/issues/2856

   (4) https://github.com/pytest-dev/pytest/issues/2882

   (5) https://github.com/pytest-dev/pytest/issues/2836


File: pytest.info,  Node: Improved Documentation<43>,  Prev: Bug Fixes<92>,  Up: pytest 3 2 4 2017-11-13

47.95.2 Improved Documentation
------------------------------

   - Introduce a dedicated section about conftest.py.  (issue #1505(1))

   - Explicitly mention ‘xpass’ in the documentation of ‘xfail’.  (issue
     #1997(2))

   - Append example for pytest.param in the example/parametrize
     document.  (issue #2658(3))

   - Clarify language of proposal for fixtures parameters (issue
     #2893(4))

   - List python 3.6 in the documented supported versions in the getting
     started document.  (issue #2903(5))

   - Clarify the documentation of available fixture scopes.  (issue
     #538(6))

   - Add documentation about the ‘python -m pytest’ invocation adding
     the current directory to sys.path.  (issue #911(7))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1505

   (2) https://github.com/pytest-dev/pytest/issues/1997

   (3) https://github.com/pytest-dev/pytest/issues/2658

   (4) https://github.com/pytest-dev/pytest/issues/2893

   (5) https://github.com/pytest-dev/pytest/issues/2903

   (6) https://github.com/pytest-dev/pytest/issues/538

   (7) https://github.com/pytest-dev/pytest/issues/911


File: pytest.info,  Node: pytest 3 2 3 2017-10-03,  Next: pytest 3 2 2 2017-09-06,  Prev: pytest 3 2 4 2017-11-13,  Up: Changelog

47.96 pytest 3.2.3 (2017-10-03)
===============================

* Menu:

* Bug Fixes: Bug Fixes<93>.
* Improved Documentation: Improved Documentation<44>.
* Trivial/Internal Changes: Trivial/Internal Changes<47>.


File: pytest.info,  Node: Bug Fixes<93>,  Next: Improved Documentation<44>,  Up: pytest 3 2 3 2017-10-03

47.96.1 Bug Fixes
-----------------

   - Fix crash in tab completion when no prefix is given.  (issue
     #2748(1))

   - The equality checking function (‘__eq__’) of ‘MarkDecorator’
     returns ‘False’ if one object is not an instance of
     ‘MarkDecorator’.  (issue #2758(2))

   - When running ‘pytest --fixtures-per-test’: don’t crash if an item
     has no _fixtureinfo attribute (e.g.  doctests) (issue #2788(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2748

   (2) https://github.com/pytest-dev/pytest/issues/2758

   (3) https://github.com/pytest-dev/pytest/issues/2788


File: pytest.info,  Node: Improved Documentation<44>,  Next: Trivial/Internal Changes<47>,  Prev: Bug Fixes<93>,  Up: pytest 3 2 3 2017-10-03

47.96.2 Improved Documentation
------------------------------

   - In help text of ‘-k’ option, add example of using ‘not’ to not
     select certain tests whose names match the provided expression.
     (issue #1442(1))

   - Add note in ‘parametrize.rst’ about calling ‘metafunc.parametrize’
     multiple times.  (issue #1548(2))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1442

   (2) https://github.com/pytest-dev/pytest/issues/1548


File: pytest.info,  Node: Trivial/Internal Changes<47>,  Prev: Improved Documentation<44>,  Up: pytest 3 2 3 2017-10-03

47.96.3 Trivial/Internal Changes
--------------------------------

   - Set ‘xfail_strict=True’ in pytest’s own test suite to catch
     expected failures as soon as they start to pass.  (issue #2722(1))

   - Fix typo in example of passing a callable to markers (in
     example/markers.rst) (issue #2765(2))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2722

   (2) https://github.com/pytest-dev/pytest/issues/2765


File: pytest.info,  Node: pytest 3 2 2 2017-09-06,  Next: pytest 3 2 1 2017-08-08,  Prev: pytest 3 2 3 2017-10-03,  Up: Changelog

47.97 pytest 3.2.2 (2017-09-06)
===============================

* Menu:

* Bug Fixes: Bug Fixes<94>.
* Improved Documentation: Improved Documentation<45>.
* Trivial/Internal Changes: Trivial/Internal Changes<48>.


File: pytest.info,  Node: Bug Fixes<94>,  Next: Improved Documentation<45>,  Up: pytest 3 2 2 2017-09-06

47.97.1 Bug Fixes
-----------------

   - Calling the deprecated ‘request.getfuncargvalue()’ now shows the
     source of the call.  (issue #2681(1))

   - Allow tests declared as ‘@staticmethod’ to use fixtures.  (issue
     #2699(2))

   - Fixed edge-case during collection: attributes which raised
     ‘pytest.fail’ when accessed would abort the entire collection.
     (issue #2707(3))

   - Fix ‘ReprFuncArgs’ with mixed unicode and UTF-8 args.  (issue
     #2731(4))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2681

   (2) https://github.com/pytest-dev/pytest/issues/2699

   (3) https://github.com/pytest-dev/pytest/issues/2707

   (4) https://github.com/pytest-dev/pytest/issues/2731


File: pytest.info,  Node: Improved Documentation<45>,  Next: Trivial/Internal Changes<48>,  Prev: Bug Fixes<94>,  Up: pytest 3 2 2 2017-09-06

47.97.2 Improved Documentation
------------------------------

   - In examples on working with custom markers, add examples
     demonstrating the usage of ‘pytest.mark.MARKER_NAME.with_args’ in
     comparison with ‘pytest.mark.MARKER_NAME.__call__’ (issue #2604(1))

   - In one of the simple examples, use
     ‘pytest_collection_modifyitems()’ to skip tests based on a
     command-line option, allowing its sharing while preventing a user
     error when accessing ‘pytest.config’ before the argument parsing.
     (issue #2653(2))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2604

   (2) https://github.com/pytest-dev/pytest/issues/2653


File: pytest.info,  Node: Trivial/Internal Changes<48>,  Prev: Improved Documentation<45>,  Up: pytest 3 2 2 2017-09-06

47.97.3 Trivial/Internal Changes
--------------------------------

   - Fixed minor error in ‘Good Practices/Manual Integration’ code
     snippet.  (issue #2691(1))

   - Fixed typo in goodpractices.rst.  (issue #2721(2))

   - Improve user guidance regarding ‘--resultlog’ deprecation.  (issue
     #2739(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2691

   (2) https://github.com/pytest-dev/pytest/issues/2721

   (3) https://github.com/pytest-dev/pytest/issues/2739


File: pytest.info,  Node: pytest 3 2 1 2017-08-08,  Next: pytest 3 2 0 2017-07-30,  Prev: pytest 3 2 2 2017-09-06,  Up: Changelog

47.98 pytest 3.2.1 (2017-08-08)
===============================

* Menu:

* Bug Fixes: Bug Fixes<95>.
* Improved Documentation: Improved Documentation<46>.


File: pytest.info,  Node: Bug Fixes<95>,  Next: Improved Documentation<46>,  Up: pytest 3 2 1 2017-08-08

47.98.1 Bug Fixes
-----------------

   - Fixed small terminal glitch when collecting a single test item.
     (issue #2579(1))

   - Correctly consider ‘/’ as the file separator to automatically mark
     plugin files for rewrite on Windows.  (issue #2591(2))

   - Properly escape test names when setting ‘PYTEST_CURRENT_TEST’
     environment variable.  (issue #2644(3))

   - Fix error on Windows and Python 3.6+ when ‘sys.stdout’ has been
     replaced with a stream-like object which does not implement the
     full ‘io’ module buffer protocol.  In particular this affects
     ‘pytest-xdist’ users on the aforementioned platform.  (issue
     #2666(4))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2579

   (2) https://github.com/pytest-dev/pytest/issues/2591

   (3) https://github.com/pytest-dev/pytest/issues/2644

   (4) https://github.com/pytest-dev/pytest/issues/2666


File: pytest.info,  Node: Improved Documentation<46>,  Prev: Bug Fixes<95>,  Up: pytest 3 2 1 2017-08-08

47.98.2 Improved Documentation
------------------------------

   - Explicitly document which pytest features work with ‘unittest’.
     (issue #2626(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2626


File: pytest.info,  Node: pytest 3 2 0 2017-07-30,  Next: pytest 3 1 3 2017-07-03,  Prev: pytest 3 2 1 2017-08-08,  Up: Changelog

47.99 pytest 3.2.0 (2017-07-30)
===============================

* Menu:

* Deprecations and Removals: Deprecations and Removals<8>.
* Features: Features<29>.
* Bug Fixes: Bug Fixes<96>.
* Improved Documentation: Improved Documentation<47>.
* Trivial/Internal Changes: Trivial/Internal Changes<49>.


File: pytest.info,  Node: Deprecations and Removals<8>,  Next: Features<29>,  Up: pytest 3 2 0 2017-07-30

47.99.1 Deprecations and Removals
---------------------------------

   - ‘pytest.approx’ no longer supports ‘>’, ‘>=’, ‘<’ and ‘<=’
     operators to avoid surprising/inconsistent behavior.  See the *note
     approx(): c3. docs for more information.  (issue #2003(1))

   - All old-style specific behavior in current classes in the pytest’s
     API is considered deprecated at this point and will be removed in a
     future release.  This affects Python 2 users only and in rare
     situations.  (issue #2147(2))

   - A deprecation warning is now raised when using marks for parameters
     in ‘pytest.mark.parametrize’.  Use ‘pytest.param’ to apply marks to
     parameters instead.  (issue #2427(3))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2003

   (2) https://github.com/pytest-dev/pytest/issues/2147

   (3) https://github.com/pytest-dev/pytest/issues/2427


File: pytest.info,  Node: Features<29>,  Next: Bug Fixes<96>,  Prev: Deprecations and Removals<8>,  Up: pytest 3 2 0 2017-07-30

47.99.2 Features
----------------

   - Add support for numpy arrays (and dicts) to approx.  (issue
     #1994(1))

   - Now test function objects have a ‘pytestmark’ attribute containing
     a list of marks applied directly to the test function, as opposed
     to marks inherited from parent classes or modules.  (issue
     #2516(2))

   - Collection ignores local virtualenvs by default;
     ‘--collect-in-virtualenv’ overrides this behavior.  (issue
     #2518(3))

   - Allow class methods decorated as ‘@staticmethod’ to be candidates
     for collection as a test function.  (Only for Python 2.7 and above.
     Python 2.6 will still ignore static methods.)  (issue #2528(4))

   - Introduce ‘mark.with_args’ in order to allow passing
     functions/classes as sole argument to marks.  (issue #2540(5))

   - New ‘cache_dir’ ini option: sets the directory where the contents
     of the cache plugin are stored.  Directory may be relative or
     absolute path: if relative path, then directory is created relative
     to ‘rootdir’, otherwise it is used as is.  Additionally path may
     contain environment variables which are expanded during runtime.
     (issue #2543(6))

   - Introduce the ‘PYTEST_CURRENT_TEST’ environment variable that is
     set with the ‘nodeid’ and stage (‘setup’, ‘call’ and ‘teardown’) of
     the test being currently executed.  See the *note documentation:
     41b. for more info.  (issue #2583(7))

   - Introduced ‘@pytest.mark.filterwarnings’ mark which allows
     overwriting the warnings filter on a per test, class or module
     level.  See the *note docs: 80. for more information.  (issue
     #2598(8))

   - ‘--last-failed’ now remembers forever when a test has failed and
     only forgets it if it passes again.  This makes it easy to fix a
     test suite by selectively running files and fixing tests
     incrementally.  (issue #2621(9))

   - New ‘pytest_report_collectionfinish’ hook which allows plugins to
     add messages to the terminal reporting after collection has been
     finished successfully.  (issue #2622(10))

   - Added support for PEP 415(11)’s ‘Exception.__suppress_context__’.
     Now if a ‘raise exception from None’ is caught by pytest, pytest
     will no longer chain the context in the test report.  The behavior
     now matches Python’s traceback behavior.  (issue #2631(12))

   - Exceptions raised by ‘pytest.fail’, ‘pytest.skip’ and
     ‘pytest.xfail’ now subclass BaseException, making them harder to be
     caught unintentionally by normal code.  (issue #580(13))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1994

   (2) https://github.com/pytest-dev/pytest/issues/2516

   (3) https://github.com/pytest-dev/pytest/issues/2518

   (4) https://github.com/pytest-dev/pytest/issues/2528

   (5) https://github.com/pytest-dev/pytest/issues/2540

   (6) https://github.com/pytest-dev/pytest/issues/2543

   (7) https://github.com/pytest-dev/pytest/issues/2583

   (8) https://github.com/pytest-dev/pytest/issues/2598

   (9) https://github.com/pytest-dev/pytest/issues/2621

   (10) https://github.com/pytest-dev/pytest/issues/2622

   (11) https://peps.python.org/pep-0415/

   (12) https://github.com/pytest-dev/pytest/issues/2631

   (13) https://github.com/pytest-dev/pytest/issues/580


File: pytest.info,  Node: Bug Fixes<96>,  Next: Improved Documentation<47>,  Prev: Features<29>,  Up: pytest 3 2 0 2017-07-30

47.99.3 Bug Fixes
-----------------

   - Set ‘stdin’ to a closed ‘PIPE’ in ‘pytester.py.Testdir.popen()’ for
     avoid unwanted interactive ‘pdb’ (issue #2023(1))

   - Add missing ‘encoding’ attribute to ‘sys.std*’ streams when using
     ‘capsys’ capture mode.  (issue #2375(2))

   - Fix terminal color changing to black on Windows if ‘colorama’ is
     imported in a ‘conftest.py’ file.  (issue #2510(3))

   - Fix line number when reporting summary of skipped tests.  (issue
     #2548(4))

   - capture: ensure that EncodedFile.name is a string.  (issue
     #2555(5))

   - The options ‘--fixtures’ and ‘--fixtures-per-test’ will now keep
     indentation within docstrings.  (issue #2574(6))

   - doctests line numbers are now reported correctly, fixing
     pytest-sugar#122(7).  (issue #2610(8))

   - Fix non-determinism in order of fixture collection.  Adds new
     dependency (ordereddict) for Python 2.6.  (issue #920(9))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2023

   (2) https://github.com/pytest-dev/pytest/issues/2375

   (3) https://github.com/pytest-dev/pytest/issues/2510

   (4) https://github.com/pytest-dev/pytest/issues/2548

   (5) https://github.com/pytest-dev/pytest/issues/2555

   (6) https://github.com/pytest-dev/pytest/issues/2574

   (7) https://github.com/Frozenball/pytest-sugar/issues/122

   (8) https://github.com/pytest-dev/pytest/issues/2610

   (9) https://github.com/pytest-dev/pytest/issues/920


File: pytest.info,  Node: Improved Documentation<47>,  Next: Trivial/Internal Changes<49>,  Prev: Bug Fixes<96>,  Up: pytest 3 2 0 2017-07-30

47.99.4 Improved Documentation
------------------------------

   - Clarify ‘pytest_configure’ hook call order.  (issue #2539(1))

   - Extend documentation for testing plugin code with the ‘pytester’
     plugin.  (issue #971(2))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2539

   (2) https://github.com/pytest-dev/pytest/issues/971


File: pytest.info,  Node: Trivial/Internal Changes<49>,  Prev: Improved Documentation<47>,  Up: pytest 3 2 0 2017-07-30

47.99.5 Trivial/Internal Changes
--------------------------------

   - Update help message for ‘--strict’ to make it clear it only deals
     with unregistered markers, not warnings.  (issue #2444(1))

   - Internal code move: move code for pytest.approx/pytest.raises to
     own files in order to cut down the size of python.py (issue
     #2489(2))

   - Renamed the utility function ‘_pytest.compat._escape_strings’ to
     ‘_ascii_escaped’ to better communicate the function’s purpose.
     (issue #2533(3))

   - Improve error message for CollectError with skip/skipif.  (issue
     #2546(4))

   - Emit warning about ‘yield’ tests being deprecated only once per
     generator.  (issue #2562(5))

   - Ensure final collected line doesn’t include artifacts of previous
     write.  (issue #2571(6))

   - Fixed all flake8 errors and warnings.  (issue #2581(7))

   - Added ‘fix-lint’ tox environment to run automatic pep8 fixes on the
     code.  (issue #2582(8))

   - Turn warnings into errors in pytest’s own test suite in order to
     catch regressions due to deprecations more promptly.  (issue
     #2588(9))

   - Show multiple issue links in CHANGELOG entries.  (issue #2620(10))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2444

   (2) https://github.com/pytest-dev/pytest/issues/2489

   (3) https://github.com/pytest-dev/pytest/issues/2533

   (4) https://github.com/pytest-dev/pytest/issues/2546

   (5) https://github.com/pytest-dev/pytest/issues/2562

   (6) https://github.com/pytest-dev/pytest/issues/2571

   (7) https://github.com/pytest-dev/pytest/issues/2581

   (8) https://github.com/pytest-dev/pytest/issues/2582

   (9) https://github.com/pytest-dev/pytest/issues/2588

   (10) https://github.com/pytest-dev/pytest/issues/2620


File: pytest.info,  Node: pytest 3 1 3 2017-07-03,  Next: pytest 3 1 2 2017-06-08,  Prev: pytest 3 2 0 2017-07-30,  Up: Changelog

47.100 pytest 3.1.3 (2017-07-03)
================================

* Menu:

* Bug Fixes: Bug Fixes<97>.
* Improved Documentation: Improved Documentation<48>.
* Trivial/Internal Changes: Trivial/Internal Changes<50>.


File: pytest.info,  Node: Bug Fixes<97>,  Next: Improved Documentation<48>,  Up: pytest 3 1 3 2017-07-03

47.100.1 Bug Fixes
------------------

   - Fix decode error in Python 2 for doctests in docstrings.  (issue
     #2434(1))

   - Exceptions raised during teardown by finalizers are now suppressed
     until all finalizers are called, with the initial exception
     reraised.  (issue #2440(2))

   - Fix incorrect “collected items” report when specifying tests on the
     command- line.  (issue #2464(3))

   - ‘deprecated_call’ in context-manager form now captures deprecation
     warnings even if the same warning has already been raised.  Also,
     ‘deprecated_call’ will always produce the same error message
     (previously it would produce different messages in context-manager
     vs.  function-call mode).  (issue #2469(4))

   - Fix issue where paths collected by pytest could have triple leading
     ‘/’ characters.  (issue #2475(5))

   - Fix internal error when trying to detect the start of a recursive
     traceback.  (issue #2486(6))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2434

   (2) https://github.com/pytest-dev/pytest/issues/2440

   (3) https://github.com/pytest-dev/pytest/issues/2464

   (4) https://github.com/pytest-dev/pytest/issues/2469

   (5) https://github.com/pytest-dev/pytest/issues/2475

   (6) https://github.com/pytest-dev/pytest/issues/2486


File: pytest.info,  Node: Improved Documentation<48>,  Next: Trivial/Internal Changes<50>,  Prev: Bug Fixes<97>,  Up: pytest 3 1 3 2017-07-03

47.100.2 Improved Documentation
-------------------------------

   - Explicitly state for which hooks the calls stop after the first
     non-None result.  (issue #2493(1))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2493


File: pytest.info,  Node: Trivial/Internal Changes<50>,  Prev: Improved Documentation<48>,  Up: pytest 3 1 3 2017-07-03

47.100.3 Trivial/Internal Changes
---------------------------------

   - Create invoke tasks for updating the vendored packages.  (issue
     #2474(1))

   - Update copyright dates in LICENSE, README.rst and in the
     documentation.  (issue #2499(2))

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2474

   (2) https://github.com/pytest-dev/pytest/issues/2499


File: pytest.info,  Node: pytest 3 1 2 2017-06-08,  Next: pytest 3 1 1 2017-05-30,  Prev: pytest 3 1 3 2017-07-03,  Up: Changelog

47.101 pytest 3.1.2 (2017-06-08)
================================

* Menu:

* Bug Fixes: Bug Fixes<98>.
* Improved Documentation: Improved Documentation<49>.


File: pytest.info,  Node: Bug Fixes<98>,  Next: Improved Documentation<49>,  Up: pytest 3 1 2 2017-06-08

47.101.1 Bug Fixes
------------------

   - Required options added via ‘pytest_addoption’ will no longer
     prevent using –help without passing them.  (#1999)

   - Respect ‘python_files’ in assertion rewriting.  (#2121)

   - Fix recursion error detection when frames in the traceback contain
     objects that can’t be compared (like ‘numpy’ arrays).  (#2459)

   - ‘UnicodeWarning’ is issued from the internal pytest warnings plugin
     only when the message contains non-ascii unicode (Python 2 only).
     (#2463)

   - Added a workaround for Python 3.6 ‘WindowsConsoleIO’ breaking due
     to Pytests’s ‘FDCapture’.  Other code using console handles might
     still be affected by the very same issue and might require further
     workarounds/fixes, i.e.  ‘colorama’.  (#2467)


File: pytest.info,  Node: Improved Documentation<49>,  Prev: Bug Fixes<98>,  Up: pytest 3 1 2 2017-06-08

47.101.2 Improved Documentation
-------------------------------

   - Fix internal API links to ‘pluggy’ objects.  (#2331)

   - Make it clear that ‘pytest.xfail’ stops test execution at the
     calling point and improve overall flow of the ‘skipping’ docs.
     (#810)


File: pytest.info,  Node: pytest 3 1 1 2017-05-30,  Next: 3 1 0 2017-05-22,  Prev: pytest 3 1 2 2017-06-08,  Up: Changelog

47.102 pytest 3.1.1 (2017-05-30)
================================

* Menu:

* Bug Fixes: Bug Fixes<99>.
* Improved Documentation: Improved Documentation<50>.


File: pytest.info,  Node: Bug Fixes<99>,  Next: Improved Documentation<50>,  Up: pytest 3 1 1 2017-05-30

47.102.1 Bug Fixes
------------------

   - pytest warning capture no longer overrides existing warning
     filters.  The previous behaviour would override all filters and
     caused regressions in test suites which configure warning filters
     to match their needs.  Note that as a side-effect of this is that
     ‘DeprecationWarning’ and ‘PendingDeprecationWarning’ are no longer
     shown by default.  (#2430)

   - Fix issue with non-ascii contents in doctest text files.  (#2434)

   - Fix encoding errors for unicode warnings in Python 2.  (#2436)

   - ‘pytest.deprecated_call’ now captures ‘PendingDeprecationWarning’
     in context manager form.  (#2441)


File: pytest.info,  Node: Improved Documentation<50>,  Prev: Bug Fixes<99>,  Up: pytest 3 1 1 2017-05-30

47.102.2 Improved Documentation
-------------------------------

   - Addition of towncrier for changelog management.  (#2390)


File: pytest.info,  Node: 3 1 0 2017-05-22,  Next: 3 0 7 2017-03-14,  Prev: pytest 3 1 1 2017-05-30,  Up: Changelog

47.103 3.1.0 (2017-05-22)
=========================

* Menu:

* New Features: New Features<2>.
* Changes::
* Bug Fixes: Bug Fixes<100>.


File: pytest.info,  Node: New Features<2>,  Next: Changes,  Up: 3 1 0 2017-05-22

47.103.1 New Features
---------------------

   * The ‘pytest-warnings’ plugin has been integrated into the core and
     now ‘pytest’ automatically captures and displays warnings at the
     end of the test session.

          Warning: This feature may disrupt test suites which apply and
          treat warnings themselves, and can be disabled in your
          ‘pytest.ini’:

               [pytest]
               addopts = -p no:warnings

          See the *note warnings documentation page: f8. for more
          information.

     Thanks @nicoddemus(1) for the PR.

   * Added ‘junit_suite_name’ ini option to specify root ‘<testsuite>’
     name for JUnit XML reports (issue #533(2)).

   * Added an ini option ‘doctest_encoding’ to specify which encoding to
     use for doctest files.  Thanks @wheerd(3) for the PR (pull request
     #2101(4)).

   * ‘pytest.warns’ now checks for subclass relationship rather than
     class equality.  Thanks @lesteve(5) for the PR (pull request
     #2166(6))

   * ‘pytest.raises’ now asserts that the error message matches a text
     or regex with the ‘match’ keyword argument.  Thanks @Kriechi(7) for
     the PR.

   * ‘pytest.param’ can be used to declare test parameter sets with
     marks and test ids.  Thanks @RonnyPfannschmidt(8) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/nicoddemus

   (2) https://github.com/pytest-dev/pytest/issues/533

   (3) https://github.com/wheerd

   (4) https://github.com/pytest-dev/pytest/pull/2101

   (5) https://github.com/lesteve

   (6) https://github.com/pytest-dev/pytest/pull/2166

   (7) https://github.com/Kriechi

   (8) https://github.com/RonnyPfannschmidt


File: pytest.info,  Node: Changes,  Next: Bug Fixes<100>,  Prev: New Features<2>,  Up: 3 1 0 2017-05-22

47.103.2 Changes
----------------

   * remove all internal uses of pytest_namespace hooks, this is to
     prepare the removal of preloadconfig in pytest 4.0 Thanks to
     @RonnyPfannschmidt(1) for the PR.

   * pytest now warns when a callable ids raises in a parametrized test.
     Thanks @fogo(2) for the PR.

   * It is now possible to skip test classes from being collected by
     setting a ‘__test__’ attribute to ‘False’ in the class body (issue
     #2007(3)).  Thanks to @syre(4) for the report and @lwm(5) for the
     PR.

   * Change junitxml.py to produce reports that comply with Junitxml
     schema.  If the same test fails with failure in call and then
     errors in teardown we split testcase element into two, one
     containing the error and the other the failure.  (issue #2228(6))
     Thanks to @kkoukiou(7) for the PR.

   * Testcase reports with a ‘url’ attribute will now properly write
     this to junitxml.  Thanks @fushi(8) for the PR (pull request
     #1874(9)).

   * Remove common items from dict comparison output when verbosity=1.
     Also update the truncation message to make it clearer that pytest
     truncates all assertion messages if verbosity < 2 (issue
     #1512(10)).  Thanks @mattduck(11) for the PR

   * ‘--pdbcls’ no longer implies ‘--pdb’.  This makes it possible to
     use ‘addopts=--pdbcls=module.SomeClass’ on ‘pytest.ini’.  Thanks
     @davidszotten(12) for the PR (pull request #1952(13)).

   * fix issue #2013(14): turn RecordedWarning into ‘namedtuple’, to
     give it a comprehensible repr while preventing unwarranted
     modification.

   * fix issue #2208(15): ensure an iteration limit for
     _pytest.compat.get_real_func.  Thanks @RonnyPfannschmidt(16) for
     the report and PR.

   * Hooks are now verified after collection is complete, rather than
     right after loading installed plugins.  This makes it easy to write
     hooks for plugins which will be loaded during collection, for
     example using the ‘pytest_plugins’ special variable (issue
     #1821(17)).  Thanks @nicoddemus(18) for the PR.

   * Modify ‘pytest_make_parametrize_id()’ hook to accept ‘argname’ as
     an additional parameter.  Thanks @unsignedint(19) for the PR.

   * Add ‘venv’ to the default ‘norecursedirs’ setting.  Thanks
     @The-Compiler(20) for the PR.

   * ‘PluginManager.import_plugin’ now accepts unicode plugin names in
     Python 2.  Thanks @reutsharabani(21) for the PR.

   * fix issue #2308(22): When using both ‘--lf’ and ‘--ff’, only the
     last failed tests are run.  Thanks @ojii(23) for the PR.

   * Replace minor/patch level version numbers in the documentation with
     placeholders.  This significantly reduces change-noise as different
     contributors regenerate the documentation on different platforms.
     Thanks @RonnyPfannschmidt(24) for the PR.

   * fix issue #2391(25): consider pytest_plugins on all plugin modules
     Thanks @RonnyPfannschmidt(26) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/RonnyPfannschmidt

   (2) https://github.com/fogo

   (3) https://github.com/pytest-dev/pytest/issues/2007

   (4) https://github.com/syre

   (5) https://github.com/lwm

   (6) https://github.com/pytest-dev/pytest/issues/2228

   (7) https://github.com/kkoukiou

   (8) https://github.com/fushi

   (9) https://github.com/pytest-dev/pytest/pull/1874

   (10) https://github.com/pytest-dev/pytest/issues/1512

   (11) https://github.com/mattduck

   (12) https://github.com/davidszotten

   (13) https://github.com/pytest-dev/pytest/pull/1952

   (14) https://github.com/pytest-dev/pytest/issues/2013

   (15) https://github.com/pytest-dev/pytest/issues/2208

   (16) https://github.com/RonnyPfannschmidt

   (17) https://github.com/pytest-dev/pytest/issues/1821

   (18) https://github.com/nicoddemus

   (19) https://github.com/unsignedint

   (20) https://github.com/The-Compiler

   (21) https://github.com/reutsharabani

   (22) https://github.com/pytest-dev/pytest/issues/2308

   (23) https://github.com/ojii

   (24) https://github.com/RonnyPfannschmidt

   (25) https://github.com/pytest-dev/pytest/issues/2391

   (26) https://github.com/RonnyPfannschmidt


File: pytest.info,  Node: Bug Fixes<100>,  Prev: Changes,  Up: 3 1 0 2017-05-22

47.103.3 Bug Fixes
------------------

   * Fix ‘AttributeError’ on ‘sys.stdout.buffer’ / ‘sys.stderr.buffer’
     while using ‘capsys’ fixture in python 3.  (issue #1407(1)).
     Thanks to @asottile(2).

   * Change capture.py’s ‘DontReadFromInput’ class to throw
     ‘io.UnsupportedOperation’ errors rather than ValueErrors in the
     ‘fileno’ method (issue #2276(3)).  Thanks @metasyn(4) and
     @vlad-dragos(5) for the PR.

   * Fix exception formatting while importing modules when the exception
     message contains non-ascii characters (issue #2336(6)).  Thanks
     @fabioz(7) for the report and @nicoddemus(8) for the PR.

   * Added documentation related to issue (issue #1937(9)) Thanks
     @skylarjhdownes(10) for the PR.

   * Allow collecting files with any file extension as Python modules
     (issue #2369(11)).  Thanks @Kodiologist(12) for the PR.

   * Show the correct error message when collect “parametrize” func with
     wrong args (issue #2383(13)).  Thanks @The-Compiler(14) for the
     report and @robin0371(15) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1407

   (2) https://github.com/asottile

   (3) https://github.com/pytest-dev/pytest/issues/2276

   (4) https://github.com/metasyn

   (5) https://github.com/vlad-dragos

   (6) https://github.com/pytest-dev/pytest/issues/2336

   (7) https://github.com/fabioz

   (8) https://github.com/nicoddemus

   (9) https://github.com/pytest-dev/pytest/issues/1937

   (10) https://github.com/skylarjhdownes

   (11) https://github.com/pytest-dev/pytest/issues/2369

   (12) https://github.com/Kodiologist

   (13) https://github.com/pytest-dev/pytest/issues/2383

   (14) https://github.com/The-Compiler

   (15) https://github.com/robin0371


File: pytest.info,  Node: 3 0 7 2017-03-14,  Next: 3 0 6 2017-01-22,  Prev: 3 1 0 2017-05-22,  Up: Changelog

47.104 3.0.7 (2017-03-14)
=========================

   * Fix issue in assertion rewriting breaking due to modules silently
     discarding other modules when importing fails Notably, importing
     the ‘anydbm’ module is fixed.  (issue #2248(1)).  Thanks
     @pfhayes(2) for the PR.

   * junitxml: Fix problematic case where system-out tag occurred twice
     per testcase element in the XML report.  Thanks @kkoukiou(3) for
     the PR.

   * Fix regression, pytest now skips unittest correctly if run with
     ‘--pdb’ (issue #2137(4)).  Thanks to @gst(5) for the report and
     @mbyt(6) for the PR.

   * Ignore exceptions raised from descriptors (e.g.  properties) during
     Python test collection (issue #2234(7)).  Thanks to @bluetech(8).

   * ‘--override-ini’ now correctly overrides some fundamental options
     like ‘python_files’ (issue #2238(9)).  Thanks @sirex(10) for the
     report and @nicoddemus(11) for the PR.

   * Replace ‘raise StopIteration’ usages in the code by simple
     ‘returns’ to finish generators, in accordance to PEP 479(12) (issue
     #2160(13)).  Thanks to @nicoddemus(14) for the PR.

   * Fix internal errors when an unprintable ‘AssertionError’ is raised
     inside a test.  Thanks @omerhadari(15) for the PR.

   * Skipping plugin now also works with test items generated by custom
     collectors (issue #2231(16)).  Thanks to @vidartf(17).

   * Fix trailing whitespace in console output if no .ini file presented
     (issue #2281(18)).  Thanks @fbjorn(19) for the PR.

   * Conditionless ‘xfail’ markers no longer rely on the underlying test
     item being an instance of ‘PyobjMixin’, and can therefore apply to
     tests not collected by the built-in python test collector.  Thanks
     @barneygale(20) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2248

   (2) https://github.com/pfhayes

   (3) https://github.com/kkoukiou

   (4) https://github.com/pytest-dev/pytest/issues/2137

   (5) https://github.com/gst

   (6) https://github.com/mbyt

   (7) https://github.com/pytest-dev/pytest/issues/2234

   (8) https://github.com/bluetech

   (9) https://github.com/pytest-dev/pytest/issues/2238

   (10) https://github.com/sirex

   (11) https://github.com/nicoddemus

   (12) https://peps.python.org/pep-0479/

   (13) https://github.com/pytest-dev/pytest/issues/2160

   (14) https://github.com/nicoddemus

   (15) https://github.com/omerhadari

   (16) https://github.com/pytest-dev/pytest/issues/2231

   (17) https://github.com/vidartf

   (18) https://github.com/pytest-dev/pytest/issues/2281

   (19) https://github.com/fbjorn

   (20) https://github.com/barneygale


File: pytest.info,  Node: 3 0 6 2017-01-22,  Next: 3 0 5 2016-12-05,  Prev: 3 0 7 2017-03-14,  Up: Changelog

47.105 3.0.6 (2017-01-22)
=========================

   * pytest no longer generates ‘PendingDeprecationWarning’ from its own
     operations, which was introduced by mistake in version ‘3.0.5’
     (issue #2118(1)).  Thanks to @nicoddemus(2) for the report and
     @RonnyPfannschmidt(3) for the PR.

   * pytest no longer recognizes coroutine functions as yield tests
     (issue #2129(4)).  Thanks to @malinoff(5) for the PR.

   * Plugins loaded by the ‘PYTEST_PLUGINS’ environment variable are now
     automatically considered for assertion rewriting (issue #2185(6)).
     Thanks @nicoddemus(7) for the PR.

   * Improve error message when pytest.warns fails (issue #2150(8)).
     The type(s) of the expected warnings and the list of caught
     warnings is added to the error message.  Thanks @lesteve(9) for the
     PR.

   * Fix ‘pytester’ internal plugin to work correctly with latest
     versions of ‘zope.interface’ (issue #1989(10)).  Thanks
     @nicoddemus(11) for the PR.

   * Assert statements of the ‘pytester’ plugin again benefit from
     assertion rewriting (issue #1920(12)).  Thanks
     @RonnyPfannschmidt(13) for the report and @nicoddemus(14) for the
     PR.

   * Specifying tests with colons like ‘test_foo.py::test_bar’ for tests
     in subdirectories with ini configuration files now uses the correct
     ini file (issue #2148(15)).  Thanks @pelme(16).

   * Fail ‘testdir.runpytest().assert_outcomes()’ explicitly if the
     pytest terminal output it relies on is missing.  Thanks to
     @eli-b(17) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2118

   (2) https://github.com/nicoddemus

   (3) https://github.com/RonnyPfannschmidt

   (4) https://github.com/pytest-dev/pytest/issues/2129

   (5) https://github.com/malinoff

   (6) https://github.com/pytest-dev/pytest/issues/2185

   (7) https://github.com/nicoddemus

   (8) https://github.com/pytest-dev/pytest/issues/2150

   (9) https://github.com/lesteve

   (10) https://github.com/pytest-dev/pytest/issues/1989

   (11) https://github.com/nicoddemus

   (12) https://github.com/pytest-dev/pytest/issues/1920

   (13) https://github.com/RonnyPfannschmidt

   (14) https://github.com/nicoddemus

   (15) https://github.com/pytest-dev/pytest/issues/2148

   (16) https://github.com/pelme

   (17) https://github.com/eli-b


File: pytest.info,  Node: 3 0 5 2016-12-05,  Next: 3 0 4 2016-11-09,  Prev: 3 0 6 2017-01-22,  Up: Changelog

47.106 3.0.5 (2016-12-05)
=========================

   * Add warning when not passing ‘option=value’ correctly to
     ‘-o/--override-ini’ (issue #2105(1)).  Also improved the help
     documentation.  Thanks to @mbukatov(2) for the report and @lwm(3)
     for the PR.

   * Now ‘--confcutdir’ and ‘--junit-xml’ are properly validated if they
     are directories and filenames, respectively (issue #2089(4) and
     issue #2078(5)).  Thanks to @lwm(6) for the PR.

   * Add hint to error message hinting possible missing ‘__init__.py’
     (issue #478(7)).  Thanks @DuncanBetts(8).

   * More accurately describe when fixture finalization occurs in
     documentation (issue #687(9)).  Thanks @DuncanBetts(10).

   * Provide ‘:ref:’ targets for ‘recwarn.rst’ so we can use intersphinx
     referencing.  Thanks to @dupuy(11) for the report and @lwm(12) for
     the PR.

   * In Python 2, use a simple ‘+-’ ASCII string in the string
     representation of ‘pytest.approx’ (for example ‘"4 +- 4.0e-06"’)
     because it is brittle to handle that in different contexts and
     representations internally in pytest which can result in bugs such
     as issue #2111(13).  In Python 3, the representation still uses ‘±’
     (for example ‘4 ± 4.0e-06’).  Thanks @kerrick-lyft(14) for the
     report and @nicoddemus(15) for the PR.

   * Using ‘item.Function’, ‘item.Module’, etc., is now issuing
     deprecation warnings, prefer ‘pytest.Function’, ‘pytest.Module’,
     etc., instead (issue #2034(16)).  Thanks @nmundar(17) for the PR.

   * Fix error message using ‘approx’ with complex numbers (issue
     #2082(18)).  Thanks @adler-j(19) for the report and @nicoddemus(20)
     for the PR.

   * Fixed false-positives warnings from assertion rewrite hook for
     modules imported more than once by the ‘pytest_plugins’ mechanism.
     Thanks @nicoddemus(21) for the PR.

   * Remove an internal cache which could cause hooks from ‘conftest.py’
     files in sub-directories to be called in other directories
     incorrectly (issue #2016(22)).  Thanks @d-b-w(23) for the report
     and @nicoddemus(24) for the PR.

   * Remove internal code meant to support earlier Python 3 versions
     that produced the side effect of leaving ‘None’ in ‘sys.modules’
     when expressions were evaluated by pytest (for example passing a
     condition as a string to ‘pytest.mark.skipif’)(issue #2103(25)).
     Thanks @jaraco(26) for the report and @nicoddemus(27) for the PR.

   * Cope gracefully with a .pyc file with no matching .py file (issue
     #2038(28)).  Thanks @nedbat(29).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/2105

   (2) https://github.com/mbukatov

   (3) https://github.com/lwm

   (4) https://github.com/pytest-dev/pytest/issues/2089

   (5) https://github.com/pytest-dev/pytest/issues/2078

   (6) https://github.com/lwm

   (7) https://github.com/pytest-dev/pytest/issues/478

   (8) https://github.com/DuncanBetts

   (9) https://github.com/pytest-dev/pytest/issues/687

   (10) https://github.com/DuncanBetts

   (11) https://github.com/dupuy

   (12) https://github.com/lwm

   (13) https://github.com/pytest-dev/pytest/issues/2111

   (14) https://github.com/kerrick-lyft

   (15) https://github.com/nicoddemus

   (16) https://github.com/pytest-dev/pytest/issues/2034

   (17) https://github.com/nmundar

   (18) https://github.com/pytest-dev/pytest/issues/2082

   (19) https://github.com/adler-j

   (20) https://github.com/nicoddemus

   (21) https://github.com/nicoddemus

   (22) https://github.com/pytest-dev/pytest/issues/2016

   (23) https://github.com/d-b-w

   (24) https://github.com/nicoddemus

   (25) https://github.com/pytest-dev/pytest/issues/2103

   (26) https://github.com/jaraco

   (27) https://github.com/nicoddemus

   (28) https://github.com/pytest-dev/pytest/issues/2038

   (29) https://github.com/nedbat


File: pytest.info,  Node: 3 0 4 2016-11-09,  Next: 3 0 3 2016-09-28,  Prev: 3 0 5 2016-12-05,  Up: Changelog

47.107 3.0.4 (2016-11-09)
=========================

   * Import errors when collecting test modules now display the full
     traceback (issue #1976(1)).  Thanks @cwitty(2) for the report and
     @nicoddemus(3) for the PR.

   * Fix confusing command-line help message for custom options with two
     or more ‘metavar’ properties (issue #2004(4)).  Thanks
     @okulynyak(5) and @davehunt(6) for the report and @nicoddemus(7)
     for the PR.

   * When loading plugins, import errors which contain non-ascii
     messages are now properly handled in Python 2 (issue #1998(8)).
     Thanks @nicoddemus(9) for the PR.

   * Fixed cyclic reference when ‘pytest.raises’ is used in
     context-manager form (issue #1965(10)).  Also as a result of this
     fix, ‘sys.exc_info()’ is left empty in both context-manager and
     function call usages.  Previously, ‘sys.exc_info’ would contain the
     exception caught by the context manager, even when the expected
     exception occurred.  Thanks @MSeifert04(11) for the report and the
     PR.

   * Fixed false-positives warnings from assertion rewrite hook for
     modules that were rewritten but were later marked explicitly by
     ‘pytest.register_assert_rewrite’ or implicitly as a plugin (issue
     #2005(12)).  Thanks @RonnyPfannschmidt(13) for the report and
     @nicoddemus(14) for the PR.

   * Report teardown output on test failure (issue #442(15)).  Thanks
     @matclab(16) for the PR.

   * Fix teardown error message in generated xUnit XML. Thanks
     @gdyuldin(17) for the PR.

   * Properly handle exceptions in ‘multiprocessing’ tasks (issue
     #1984(18)).  Thanks @adborden(19) for the report and
     @nicoddemus(20) for the PR.

   * Clean up unittest TestCase objects after tests are complete (issue
     #1649(21)).  Thanks @d_b_w(22) for the report and PR.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1976

   (2) https://github.com/cwitty

   (3) https://github.com/nicoddemus

   (4) https://github.com/pytest-dev/pytest/issues/2004

   (5) https://github.com/okulynyak

   (6) https://github.com/davehunt

   (7) https://github.com/nicoddemus

   (8) https://github.com/pytest-dev/pytest/issues/1998

   (9) https://github.com/nicoddemus

   (10) https://github.com/pytest-dev/pytest/issues/1965

   (11) https://github.com/MSeifert04

   (12) https://github.com/pytest-dev/pytest/issues/2005

   (13) https://github.com/RonnyPfannschmidt

   (14) https://github.com/nicoddemus

   (15) https://github.com/pytest-dev/pytest/issues/442

   (16) https://github.com/matclab

   (17) https://github.com/gdyuldin

   (18) https://github.com/pytest-dev/pytest/issues/1984

   (19) https://github.com/adborden

   (20) https://github.com/nicoddemus

   (21) https://github.com/pytest-dev/pytest/issues/1649

   (22) https://github.com/d_b_w


File: pytest.info,  Node: 3 0 3 2016-09-28,  Next: 3 0 2 2016-09-01,  Prev: 3 0 4 2016-11-09,  Up: Changelog

47.108 3.0.3 (2016-09-28)
=========================

   * The ‘ids’ argument to ‘parametrize’ again accepts ‘unicode’ strings
     in Python 2 (issue #1905(1)).  Thanks @philpep(2) for the report
     and @nicoddemus(3) for the PR.

   * Assertions are now being rewritten for plugins in development mode
     (‘pip install -e’) (issue #1934(4)).  Thanks @nicoddemus(5) for the
     PR.

   * Fix pkg_resources import error in Jython projects (issue #1853(6)).
     Thanks @raquel-ucl(7) for the PR.

   * Got rid of ‘AttributeError: 'Module' object has no attribute
     '_obj'’ exception in Python 3 (issue #1944(8)).  Thanks @axil(9)
     for the PR.

   * Explain a bad scope value passed to ‘@fixture’ declarations or a
     ‘MetaFunc.parametrize()’ call.

   * This version includes ‘pluggy-0.4.0’, which correctly handles
     ‘VersionConflict’ errors in plugins (issue #704(10)).  Thanks
     @nicoddemus(11) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1905

   (2) https://github.com/philpep

   (3) https://github.com/nicoddemus

   (4) https://github.com/pytest-dev/pytest/issues/1934

   (5) https://github.com/nicoddemus

   (6) https://github.com/pytest-dev/pytest/issues/1853

   (7) https://github.com/raquel-ucl

   (8) https://github.com/pytest-dev/pytest/issues/1944

   (9) https://github.com/axil

   (10) https://github.com/pytest-dev/pytest/issues/704

   (11) https://github.com/nicoddemus


File: pytest.info,  Node: 3 0 2 2016-09-01,  Next: 3 0 1 2016-08-23,  Prev: 3 0 3 2016-09-28,  Up: Changelog

47.109 3.0.2 (2016-09-01)
=========================

   * Improve error message when passing non-string ids to
     ‘pytest.mark.parametrize’ (issue #1857(1)).  Thanks @okken(2) for
     the report and @nicoddemus(3) for the PR.

   * Add ‘buffer’ attribute to stdin stub class
     ‘pytest.capture.DontReadFromInput’ Thanks @joguSD(4) for the PR.

   * Fix ‘UnicodeEncodeError’ when string comparison with unicode has
     failed.  (issue #1864(5)) Thanks @AiOO(6) for the PR.

   * ‘pytest_plugins’ is now handled correctly if defined as a string
     (as opposed as a sequence of strings) when modules are considered
     for assertion rewriting.  Due to this bug, much more modules were
     being rewritten than necessary if a test suite uses
     ‘pytest_plugins’ to load internal plugins (issue #1888(7)).  Thanks
     @jaraco(8) for the report and @nicoddemus(9) for the PR (pull
     request #1891(10)).

   * Do not call tearDown and cleanups when running tests from
     ‘unittest.TestCase’ subclasses with ‘--pdb’ enabled.  This allows
     proper post mortem debugging for all applications which have
     significant logic in their tearDown machinery (issue #1890(11)).
     Thanks @mbyt(12) for the PR.

   * Fix use of deprecated ‘getfuncargvalue’ method in the internal
     doctest plugin.  Thanks @ViviCoder(13) for the report (issue
     #1898(14)).

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1857

   (2) https://github.com/okken

   (3) https://github.com/nicoddemus

   (4) https://github.com/joguSD

   (5) https://github.com/pytest-dev/pytest/issues/1864

   (6) https://github.com/AiOO

   (7) https://github.com/pytest-dev/pytest/issues/1888

   (8) https://github.com/jaraco

   (9) https://github.com/nicoddemus

   (10) https://github.com/pytest-dev/pytest/pull/1891

   (11) https://github.com/pytest-dev/pytest/issues/1890

   (12) https://github.com/mbyt

   (13) https://github.com/ViviCoder

   (14) https://github.com/pytest-dev/pytest/issues/1898


File: pytest.info,  Node: 3 0 1 2016-08-23,  Next: 3 0 0 2016-08-18,  Prev: 3 0 2 2016-09-01,  Up: Changelog

47.110 3.0.1 (2016-08-23)
=========================

   * Fix regression when ‘importorskip’ is used at module level (issue
     #1822(1)).  Thanks @jaraco(2) and @The-Compiler(3) for the report
     and @nicoddemus(4) for the PR.

   * Fix parametrization scope when session fixtures are used in
     conjunction with normal parameters in the same call (issue
     #1832(5)).  Thanks @The-Compiler(6) for the report, @Kingdread(7)
     and @nicoddemus(8) for the PR.

   * Fix internal error when parametrizing tests or fixtures using an
     empty ‘ids’ argument (issue #1849(9)).  Thanks @OPpuolitaival(10)
     for the report and @nicoddemus(11) for the PR.

   * Fix loader error when running ‘pytest’ embedded in a zipfile.
     Thanks @mbachry(12) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/1822

   (2) https://github.com/jaraco

   (3) https://github.com/The-Compiler

   (4) https://github.com/nicoddemus

   (5) https://github.com/pytest-dev/pytest/issues/1832

   (6) https://github.com/The-Compiler

   (7) https://github.com/Kingdread

   (8) https://github.com/nicoddemus

   (9) https://github.com/pytest-dev/pytest/issues/1849

   (10) https://github.com/OPpuolitaival

   (11) https://github.com/nicoddemus

   (12) https://github.com/mbachry


File: pytest.info,  Node: 3 0 0 2016-08-18,  Next: 2 9 2 2016-05-31,  Prev: 3 0 1 2016-08-23,  Up: Changelog

47.111 3.0.0 (2016-08-18)
=========================

‘Incompatible changes’

A number of incompatible changes were made in this release, with the
intent of removing features deprecated for a long time or change
existing behaviors in order to make them less surprising/more useful.

   * Reinterpretation mode has now been removed.  Only plain and rewrite
     mode are available, consequently the ‘--assert=reinterp’ option is
     no longer available.  This also means files imported from plugins
     or ‘conftest.py’ will not benefit from improved assertions by
     default, you should use ‘pytest.register_assert_rewrite()’ to
     explicitly turn on assertion rewriting for those files.  Thanks
     @flub(1) for the PR.

   * The following deprecated commandline options were removed:

        * ‘--genscript’: no longer supported;

        * ‘--no-assert’: use ‘--assert=plain’ instead;

        * ‘--nomagic’: use ‘--assert=plain’ instead;

        * ‘--report’: use ‘-r’ instead;

     Thanks to @RedBeardCode(2) for the PR (pull request #1664(3)).

   * ImportErrors in plugins now are a fatal error instead of issuing a
     pytest warning (issue #1479(4)).  Thanks to @The-Compiler(5) for
     the PR.

   * Removed support code for Python 3 versions < 3.3 (pull request
     #1627(6)).

   * Removed all ‘py.test-X*’ entry points.  The versioned, suffixed
     entry points were never documented and a leftover from a
     pre-virtualenv era.  These entry points also created broken entry
     points in wheels, so removing them also removes a source of
     confusion for users (issue #1632(7)).  Thanks @obestwalter(8) for
     the PR.

   * ‘pytest.skip()’ now raises an error when used to decorate a test
     function, as opposed to its original intent (to imperatively skip a
     test inside a test function).  Previously this usage would cause
     the entire module to be skipped (issue #607(9)).  Thanks
     @omarkohl(10) for the complete PR (pull request #1519(11)).

   * Exit tests if a collection error occurs.  A poll indicated most
     users will hit CTRL-C anyway as soon as they see collection errors,
     so pytest might as well make that the default behavior (issue
     #1421(12)).  A ‘--continue-on-collection-errors’ option has been
     added to restore the previous behaviour.  Thanks @olegpidsadnyi(13)
     and @omarkohl(14) for the complete PR (pull request #1628(15)).

   * Renamed the pytest ‘pdb’ module (plugin) into ‘debugging’ to avoid
     clashes with the builtin ‘pdb’ module.

   * Raise a helpful failure message when requesting a parametrized
     fixture at runtime, e.g.  with ‘request.getfixturevalue’.
     Previously these parameters were simply never defined, so a fixture
     decorated like ‘@pytest.fixture(params=[0, 1, 2])’ only ran once
     (pull request #460(16)).  Thanks to @nikratio(17) for the bug
     report, @RedBeardCode(18) and @tomviner(19) for the PR.

   * ‘_pytest.monkeypatch.monkeypatch’ class has been renamed to
     ‘_pytest.monkeypatch.MonkeyPatch’ so it doesn’t conflict with the
     ‘monkeypatch’ fixture.

   * ‘--exitfirst / -x’ can now be overridden by a following
     ‘--maxfail=N’ and is just a synonym for ‘--maxfail=1’.

‘New Features’

   * Support nose-style ‘__test__’ attribute on methods of classes,
     including unittest-style Classes.  If set to ‘False’, the test will
     not be collected.

   * New ‘doctest_namespace’ fixture for injecting names into the
     namespace in which doctests run.  Thanks @milliams(20) for the
     complete PR (pull request #1428(21)).

   * New ‘--doctest-report’ option available to change the output format
     of diffs when running (failing) doctests (implements issue
     #1749(22)).  Thanks @hartym(23) for the PR.

   * New ‘name’ argument to ‘pytest.fixture’ decorator which allows a
     custom name for a fixture (to solve the funcarg-shadowing-fixture
     problem).  Thanks @novas0x2a(24) for the complete PR (pull request
     #1444(25)).

   * New ‘approx()’ function for easily comparing floating-point numbers
     in tests.  Thanks @kalekundert(26) for the complete PR (pull
     request #1441(27)).

   * Ability to add global properties in the final xunit output file by
     accessing the internal ‘junitxml’ plugin (experimental).  Thanks
     @tareqalayan(28) for the complete PR pull request #1454(29)).

   * New ‘ExceptionInfo.match()’ method to match a regular expression on
     the string representation of an exception (issue #372(30)).  Thanks
     @omarkohl(31) for the complete PR (pull request #1502(32)).

   * ‘__tracebackhide__’ can now also be set to a callable which then
     can decide whether to filter the traceback based on the
     ‘ExceptionInfo’ object passed to it.  Thanks @The-Compiler(33) for
     the complete PR (pull request #1526(34)).

   * New ‘pytest_make_parametrize_id(config, val)’ hook which can be
     used by plugins to provide friendly strings for custom types.
     Thanks @palaviv(35) for the PR.

   * ‘capsys’ and ‘capfd’ now have a ‘disabled()’ context-manager
     method, which can be used to temporarily disable capture within a
     test.  Thanks @nicoddemus(36) for the PR.

   * New cli flag ‘--fixtures-per-test’: shows which fixtures are being
     used for each selected test item.  Features doc strings of fixtures
     by default.  Can also show where fixtures are defined if combined
     with ‘-v’.  Thanks @hackebrot(37) for the PR.

   * Introduce ‘pytest’ command as recommended entry point.  Note that
     ‘py.test’ still works and is not scheduled for removal.  Closes
     proposal issue #1629(38).  Thanks @obestwalter(39) and
     @davehunt(40) for the complete PR (pull request #1633(41)).

   * New cli flags:

        + ‘--setup-plan’: performs normal collection and reports the
          potential setup and teardown and does not execute any fixtures
          and tests;

        + ‘--setup-only’: performs normal collection, executes setup and
          teardown of fixtures and reports them;

        + ‘--setup-show’: performs normal test execution and
          additionally shows setup and teardown of fixtures;

        + ‘--keep-duplicates’: py.test now ignores duplicated paths
          given in the command line.  To retain the previous behavior
          where the same test could be run multiple times by specifying
          it in the command-line multiple times, pass the
          ‘--keep-duplicates’ argument (issue #1609(42));

     Thanks @d6e(43), @kvas-it(44), @sallner(45), @ioggstream(46) and
     @omarkohl(47) for the PRs.

   * New CLI flag ‘--override-ini’/‘-o’: overrides values from the ini
     file.  For example: ‘"-o xfail_strict=True"’’.  Thanks @blueyed(48)
     and @fengxx(49) for the PR.

   * New hooks:

        + ‘pytest_fixture_setup(fixturedef, request)’: executes fixture
          setup;

        + ‘pytest_fixture_post_finalizer(fixturedef)’: called after the
          fixture’s finalizer and has access to the fixture’s result
          cache.

     Thanks @d6e(50), @sallner(51).

   * Issue warnings for asserts whose test is a tuple literal.  Such
     asserts will never fail because tuples are always truthy and are
     usually a mistake (see issue #1562(52)).  Thanks @kvas-it(53), for
     the PR.

   * Allow passing a custom debugger class (e.g.
     ‘--pdbcls=IPython.core.debugger:Pdb’).  Thanks to @anntzer(54) for
     the PR.

‘Changes’

   * Plugins now benefit from assertion rewriting.  Thanks @sober7(55),
     @nicoddemus(56) and @flub(57) for the PR.

   * Change ‘report.outcome’ for ‘xpassed’ tests to ‘"passed"’ in
     non-strict mode and ‘"failed"’ in strict mode.  Thanks to
     @hackebrot(58) for the PR (pull request #1795(59)) and
     @gprasad84(60) for report (issue #1546(61)).

   * Tests marked with ‘xfail(strict=False)’ (the default) now appear in
     JUnitXML reports as passing tests instead of skipped.  Thanks to
     @hackebrot(62) for the PR (pull request #1795(63)).

   * Highlight path of the file location in the error report to make it
     easier to copy/paste.  Thanks @suzaku(64) for the PR (pull request
     #1778(65)).

   * Fixtures marked with ‘@pytest.fixture’ can now use ‘yield’
     statements exactly like those marked with the
     ‘@pytest.yield_fixture’ decorator.  This change renders
     ‘@pytest.yield_fixture’ deprecated and makes ‘@pytest.fixture’ with
     ‘yield’ statements the preferred way to write teardown code (pull
     request #1461(66)).  Thanks @csaftoiu(67) for bringing this to
     attention and @nicoddemus(68) for the PR.

   * Explicitly passed parametrize ids do not get escaped to ascii
     (issue #1351(69)).  Thanks @ceridwen(70) for the PR.

   * Fixtures are now sorted in the error message displayed when an
     unknown fixture is declared in a test function.  Thanks
     @nicoddemus(71) for the PR.

   * ‘pytest_terminal_summary’ hook now receives the ‘exitstatus’ of the
     test session as argument.  Thanks @blueyed(72) for the PR (pull
     request #1809(73)).

   * Parametrize ids can accept ‘None’ as specific test id, in which
     case the automatically generated id for that argument will be used.
     Thanks @palaviv(74) for the complete PR (pull request #1468(75)).

   * The parameter to xunit-style setup/teardown methods
     (‘setup_method’, ‘setup_module’, etc.)  is now optional and may be
     omitted.  Thanks @okken(76) for bringing this to attention and
     @nicoddemus(77) for the PR.

   * Improved automatic id generation selection in case of duplicate ids
     in parametrize.  Thanks @palaviv(78) for the complete PR (pull
     request #1474(79)).

   * Now pytest warnings summary is shown up by default.  Added a new
     flag ‘--disable-pytest-warnings’ to explicitly disable the warnings
     summary (issue #1668(80)).

   * Make ImportError during collection more explicit by reminding the
     user to check the name of the test module/package(s) (issue
     #1426(81)).  Thanks @omarkohl(82) for the complete PR (pull request
     #1520(83)).

   * Add ‘build/’ and ‘dist/’ to the default ‘--norecursedirs’ list.
     Thanks @mikofski(84) for the report and @tomviner(85) for the PR
     (issue #1544(86)).

   * ‘pytest.raises’ in the context manager form accepts a custom
     ‘message’ to raise when no exception occurred.  Thanks @palaviv(87)
     for the complete PR (pull request #1616(88)).

   * ‘conftest.py’ files now benefit from assertion rewriting;
     previously it was only available for test modules.  Thanks
     @flub(89), @sober7(90) and @nicoddemus(91) for the PR (issue
     #1619(92)).

   * Text documents without any doctests no longer appear as “skipped”.
     Thanks @graingert(93) for reporting and providing a full PR (pull
     request #1580(94)).

   * Ensure that a module within a namespace package can be found when
     it is specified on the command line together with the ‘--pyargs’
     option.  Thanks to @taschini(95) for the PR (pull request
     #1597(96)).

   * Always include full assertion explanation during assertion
     rewriting.  The previous behaviour was hiding sub-expressions that
     happened to be ‘False’, assuming this was redundant information.
     Thanks @bagerard(97) for reporting (issue #1503(98)).  Thanks to
     @davehunt(99) and @tomviner(100) for the PR.

   * ‘OptionGroup.addoption()’ now checks if option names were already
     added before, to make it easier to track down issues like issue
     #1618(101).  Before, you only got exceptions later from ‘argparse’
     library, giving no clue about the actual reason for double-added
     options.

   * ‘yield’-based tests are considered deprecated and will be removed
     in pytest-4.0.  Thanks @nicoddemus(102) for the PR.

   * ‘[pytest]’ sections in ‘setup.cfg’ files should now be named
     ‘[tool:pytest]’ to avoid conflicts with other distutils commands
     (see pull request #567(103)).  ‘[pytest]’ sections in ‘pytest.ini’
     or ‘tox.ini’ files are supported and unchanged.  Thanks
     @nicoddemus(104) for the PR.

   * Using ‘pytest_funcarg__’ prefix to declare fixtures is considered
     deprecated and will be removed in pytest-4.0 (pull request
     #1684(105)).  Thanks @nicoddemus(106) for the PR.

   * Passing a command-line string to ‘pytest.main()’ is considered
     deprecated and scheduled for removal in pytest-4.0.  It is
     recommended to pass a list of arguments instead (pull request
     #1723(107)).

   * Rename ‘getfuncargvalue’ to ‘getfixturevalue’.  ‘getfuncargvalue’
     is still present but is now considered deprecated.  Thanks to
     @RedBeardCode(108) and @tomviner(109) for the PR (pull request
     #1626(110)).

   * ‘optparse’ type usage now triggers DeprecationWarnings (issue
     #1740(111)).

   * ‘optparse’ backward compatibility supports float/complex types
     (issue #457(112)).

   * Refined logic for determining the ‘rootdir’, considering only valid
     paths which fixes a number of issues: issue #1594(113), issue
     #1435(114) and issue #1471(115).  Updated the documentation
     according to current behavior.  Thanks to @blueyed(116),
     @davehunt(117) and @matthiasha(118) for the PR.

   * Always include full assertion explanation.  The previous behaviour
     was hiding sub-expressions that happened to be False, assuming this
     was redundant information.  Thanks @bagerard(119) for reporting
     (issue #1503(120)).  Thanks to @davehunt(121) and @tomviner(122)
     for PR.

   * Better message in case of not using parametrized variable (see
     issue #1539(123)).  Thanks to @tramwaj29(124) for the PR.

   * Updated docstrings with a more uniform style.

   * Add stderr write for ‘pytest.exit(msg)’ during startup.  Previously
     the message was never shown.  Thanks @BeyondEvil(125) for reporting
     issue #1210(126).  Thanks to @jgsonesen and @tomviner(127) for the
     PR.

   * No longer display the incorrect test deselection reason (issue
     #1372(128)).  Thanks @ronnypfannschmidt(129) for the PR.

   * The ‘--resultlog’ command line option has been deprecated: it is
     little used and there are more modern and better alternatives (see
     issue #830(130)).  Thanks @nicoddemus(131) for the PR.

   * Improve error message with fixture lookup errors: add an ‘E’ to the
     first line and ‘>’ to the rest.  Fixes issue #717(132).  Thanks
     @blueyed(133) for reporting and a PR, @eolo999(134) for the initial
     PR and @tomviner(135) for his guidance during EuroPython2016
     sprint.

‘Bug Fixes’

   * Parametrize now correctly handles duplicated test ids.

   * Fix internal error issue when the ‘method’ argument is missing for
     ‘teardown_method()’ (issue #1605(136)).

   * Fix exception visualization in case the current working directory
     (CWD) gets deleted during testing (issue #1235(137)).  Thanks
     @bukzor(138) for reporting.  PR by @marscher(139).

   * Improve test output for logical expression with brackets (issue
     #925(140)).  Thanks @DRMacIver(141) for reporting and
     @RedBeardCode(142) for the PR.

   * Create correct diff for strings ending with newlines (issue
     #1553(143)).  Thanks @Vogtinator(144) for reporting and
     @RedBeardCode(145) and @tomviner(146) for the PR.

   * ‘ConftestImportFailure’ now shows the traceback making it easier to
     identify bugs in ‘conftest.py’ files (pull request #1516(147)).
     Thanks @txomon(148) for the PR.

   * Text documents without any doctests no longer appear as “skipped”.
     Thanks @graingert(149) for reporting and providing a full PR (pull
     request #1580(150)).

   * Fixed collection of classes with custom ‘__new__’ method.  Fixes
     issue #1579(151).  Thanks to @Stranger6667(152) for the PR.

   * Fixed scope overriding inside metafunc.parametrize (issue
     #634(153)).  Thanks to @Stranger6667(154) for the PR.

   * Fixed the total tests tally in junit xml output (pull request
     #1798(155)).  Thanks to @cboelsen(156) for the PR.

   * Fixed off-by-one error with lines from ‘request.node.warn’.  Thanks
     to @blueyed(157) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/flub

   (2) https://github.com/RedBeardCode

   (3) https://github.com/pytest-dev/pytest/pull/1664

   (4) https://github.com/pytest-dev/pytest/issues/1479

   (5) https://github.com/The-Compiler

   (6) https://github.com/pytest-dev/pytest/pull/1627

   (7) https://github.com/pytest-dev/pytest/issues/1632

   (8) https://github.com/obestwalter

   (9) https://github.com/pytest-dev/pytest/issues/607

   (10) https://github.com/omarkohl

   (11) https://github.com/pytest-dev/pytest/pull/1519

   (12) https://github.com/pytest-dev/pytest/issues/1421

   (13) https://github.com/olegpidsadnyi

   (14) https://github.com/omarkohl

   (15) https://github.com/pytest-dev/pytest/pull/1628

   (16) https://github.com/pytest-dev/pytest/pull/460

   (17) https://github.com/nikratio

   (18) https://github.com/RedBeardCode

   (19) https://github.com/tomviner

   (20) https://github.com/milliams

   (21) https://github.com/pytest-dev/pytest/pull/1428

   (22) https://github.com/pytest-dev/pytest/issues/1749

   (23) https://github.com/hartym

   (24) https://github.com/novas0x2a

   (25) https://github.com/pytest-dev/pytest/pull/1444

   (26) https://github.com/kalekundert

   (27) https://github.com/pytest-dev/pytest/pull/1441

   (28) https://github.com/tareqalayan

   (29) https://github.com/pytest-dev/pytest/pull/1454

   (30) https://github.com/pytest-dev/pytest/issues/372

   (31) https://github.com/omarkohl

   (32) https://github.com/pytest-dev/pytest/pull/1502

   (33) https://github.com/The-Compiler

   (34) https://github.com/pytest-dev/pytest/pull/1526

   (35) https://github.com/palaviv

   (36) https://github.com/nicoddemus

   (37) https://github.com/hackebrot

   (38) https://github.com/pytest-dev/pytest/issues/1629

   (39) https://github.com/obestwalter

   (40) https://github.com/davehunt

   (41) https://github.com/pytest-dev/pytest/pull/1633

   (42) https://github.com/pytest-dev/pytest/issues/1609

   (43) https://github.com/d6e

   (44) https://github.com/kvas-it

   (45) https://github.com/sallner

   (46) https://github.com/ioggstream

   (47) https://github.com/omarkohl

   (48) https://github.com/blueyed

   (49) https://github.com/fengxx

   (50) https://github.com/d6e

   (51) https://github.com/sallner

   (52) https://github.com/pytest-dev/pytest/issues/1562

   (53) https://github.com/kvas-it

   (54) https://github.com/anntzer

   (55) https://github.com/sober7

   (56) https://github.com/nicoddemus

   (57) https://github.com/flub

   (58) https://github.com/hackebrot

   (59) https://github.com/pytest-dev/pytest/pull/1795

   (60) https://github.com/gprasad84

   (61) https://github.com/pytest-dev/pytest/issues/1546

   (62) https://github.com/hackebrot

   (63) https://github.com/pytest-dev/pytest/pull/1795

   (64) https://github.com/suzaku

   (65) https://github.com/pytest-dev/pytest/pull/1778

   (66) https://github.com/pytest-dev/pytest/pull/1461

   (67) https://github.com/csaftoiu

   (68) https://github.com/nicoddemus

   (69) https://github.com/pytest-dev/pytest/issues/1351

   (70) https://github.com/ceridwen

   (71) https://github.com/nicoddemus

   (72) https://github.com/blueyed

   (73) https://github.com/pytest-dev/pytest/pull/1809

   (74) https://github.com/palaviv

   (75) https://github.com/pytest-dev/pytest/pull/1468

   (76) https://github.com/okken

   (77) https://github.com/nicoddemus

   (78) https://github.com/palaviv

   (79) https://github.com/pytest-dev/pytest/pull/1474

   (80) https://github.com/pytest-dev/pytest/issues/1668

   (81) https://github.com/pytest-dev/pytest/issues/1426

   (82) https://github.com/omarkohl

   (83) https://github.com/pytest-dev/pytest/pull/1520

   (84) https://github.com/mikofski

   (85) https://github.com/tomviner

   (86) https://github.com/pytest-dev/pytest/issues/1544

   (87) https://github.com/palaviv

   (88) https://github.com/pytest-dev/pytest/pull/1616

   (89) https://github.com/flub

   (90) https://github.com/sober7

   (91) https://github.com/nicoddemus

   (92) https://github.com/pytest-dev/pytest/issues/1619

   (93) https://github.com/graingert

   (94) https://github.com/pytest-dev/pytest/pull/1580

   (95) https://github.com/taschini

   (96) https://github.com/pytest-dev/pytest/pull/1597

   (97) https://github.com/bagerard

   (98) https://github.com/pytest-dev/pytest/issues/1503

   (99) https://github.com/davehunt

   (100) https://github.com/tomviner

   (101) https://github.com/pytest-dev/pytest/issues/1618

   (102) https://github.com/nicoddemus

   (103) https://github.com/pytest-dev/pytest/pull/567

   (104) https://github.com/nicoddemus

   (105) https://github.com/pytest-dev/pytest/pull/1684

   (106) https://github.com/nicoddemus

   (107) https://github.com/pytest-dev/pytest/pull/1723

   (108) https://github.com/RedBeardCode

   (109) https://github.com/tomviner

   (110) https://github.com/pytest-dev/pytest/pull/1626

   (111) https://github.com/pytest-dev/pytest/issues/1740

   (112) https://github.com/pytest-dev/pytest/issues/457

   (113) https://github.com/pytest-dev/pytest/issues/1594

   (114) https://github.com/pytest-dev/pytest/issues/1435

   (115) https://github.com/pytest-dev/pytest/issues/1471

   (116) https://github.com/blueyed

   (117) https://github.com/davehunt

   (118) https://github.com/matthiasha

   (119) https://github.com/bagerard

   (120) https://github.com/pytest-dev/pytest/issues/1503

   (121) https://github.com/davehunt

   (122) https://github.com/tomviner

   (123) https://github.com/pytest-dev/pytest/issues/1539

   (124) https://github.com/tramwaj29

   (125) https://github.com/BeyondEvil

   (126) https://github.com/pytest-dev/pytest/issues/1210

   (127) https://github.com/tomviner

   (128) https://github.com/pytest-dev/pytest/issues/1372

   (129) https://github.com/ronnypfannschmidt

   (130) https://github.com/pytest-dev/pytest/issues/830

   (131) https://github.com/nicoddemus

   (132) https://github.com/pytest-dev/pytest/issues/717

   (133) https://github.com/blueyed

   (134) https://github.com/eolo999

   (135) https://github.com/tomviner

   (136) https://github.com/pytest-dev/pytest/issues/1605

   (137) https://github.com/pytest-dev/pytest/issues/1235

   (138) https://github.com/bukzor

   (139) https://github.com/marscher

   (140) https://github.com/pytest-dev/pytest/issues/925

   (141) https://github.com/DRMacIver

   (142) https://github.com/RedBeardCode

   (143) https://github.com/pytest-dev/pytest/issues/1553

   (144) https://github.com/Vogtinator

   (145) https://github.com/RedBeardCode

   (146) https://github.com/tomviner

   (147) https://github.com/pytest-dev/pytest/pull/1516

   (148) https://github.com/txomon

   (149) https://github.com/graingert

   (150) https://github.com/pytest-dev/pytest/pull/1580

   (151) https://github.com/pytest-dev/pytest/issues/1579

   (152) https://github.com/Stranger6667

   (153) https://github.com/pytest-dev/pytest/issues/634

   (154) https://github.com/Stranger6667

   (155) https://github.com/pytest-dev/pytest/pull/1798

   (156) https://github.com/cboelsen

   (157) https://github.com/blueyed


File: pytest.info,  Node: 2 9 2 2016-05-31,  Next: 2 9 1 2016-03-17,  Prev: 3 0 0 2016-08-18,  Up: Changelog

47.112 2.9.2 (2016-05-31)
=========================

‘Bug Fixes’

   * fix issue #510(1): skip tests where one parameterize dimension was
     empty thanks Alex Stapleton for the Report and
     @RonnyPfannschmidt(2) for the PR

   * Fix Xfail does not work with condition keyword argument.  Thanks
     @astraw38(3) for reporting the issue (issue #1496(4)) and
     @tomviner(5) for PR the (pull request #1524(6)).

   * Fix win32 path issue when putting custom config file with absolute
     path in ‘pytest.main("-c your_absolute_path")’.

   * Fix maximum recursion depth detection when raised error class is
     not aware of unicode/encoded bytes.  Thanks @prusse-martin(7) for
     the PR (pull request #1506(8)).

   * Fix ‘pytest.mark.skip’ mark when used in strict mode.  Thanks
     @pquentin(9) for the PR and @RonnyPfannschmidt(10) for showing how
     to fix the bug.

   * Minor improvements and fixes to the documentation.  Thanks
     @omarkohl(11) for the PR.

   * Fix ‘--fixtures’ to show all fixture definitions as opposed to just
     one per fixture name.  Thanks to @hackebrot(12) for the PR.

   ---------- Footnotes ----------

   (1) https://github.com/pytest-dev/pytest/issues/510

   (2) https://github.com/RonnyPfannschmidt

   (3) https://github.com/astraw38

   (4) https://github.com/pytest-dev/pytest/issues/1496

   (5) https://github.com/tomviner

   (6) https://github.com/pytest-dev/pytest/pull/1524

   (7) https://github.com/prusse-martin

   (8) https://github.com/pytest-dev/pytest/pull/1506

   (9) https://github.com/pquentin

   (10) https://github.com/RonnyPfannschmidt

   (11) https://github.com/omarkohl

   (12) https://github.com/hackebrot


File: pytest.info,  Node: 2 9 1 2016-03-17,  Next: 2 9 0 2016-02-29,  Prev: 2 9 2 2016-05-31,  Up: Changelog

47.113 2.9.1 (2016-03-17)
=========================

‘Bug Fixes’

   * Improve error message when a plugin fails to load.  Thanks
     @nicoddemus(1) for the PR.

   * Fix (issue #1178(2)): ‘pytest.fail’ with non-ascii characters
     raises an internal pytest error.  Thanks @nicoddemus(3) for the PR.

   * Fix (issue #469(4)): junit parses report.nodeid incorrectly, when
     params IDs contain ‘::’.  Thanks @tomviner(5) for the PR (pull
     request #1431(6)).

   * Fix (issue #578(7)): SyntaxErrors containing non-ascii lines at the
     point of failure generated an internal py.test error.  Thanks
     @asottile(8) for the report and @nicoddemus(9) for the PR.

   * Fix (issue #1437(10)): When passing in a bytestring regex pattern
     to parameterize attempt to decode it as utf-8 ignoring errors.

   * Fix (issue #649(11)): parametrized test nodes cannot be specified
     to run on the command line.

   * Fix (issue #138(12)): better reporting for python 3.3+ chained
     exceptions

   ---------- Footnotes ----------

   (1) https://github.com/nicoddemus

   (2) https://github.com/pytest-dev/pytest/issues/1178

   (3) https://github.com/nicoddemus

   (4) https://github.com/pytest-dev/pytest/issues/469

   (5) https://github.com/tomviner

   (6) https://github.com/pytest-dev/pytest/pull/1431

   (7) https://github.com/pytest-dev/pytest/issues/578

   (8) https://github.com/asottile

   (9) https://github.com/nicoddemus

   (10) https://github.com/pytest-dev/pytest/issues/1437

   (11) https://github.com/pytest-dev/pytest/issues/649

   (12) https://github.com/pytest-dev/pytest/issues/138


File: pytest.info,  Node: 2 9 0 2016-02-29,  Next: 2 8 7 2016-01-24,  Prev: 2 9 1 2016-03-17,  Up: Changelog

47.114 2.9.0 (2016-02-29)
=========================

‘New Features’

   * New ‘pytest.mark.skip’ mark, which unconditionally skips marked
     tests.  Thanks @MichaelAquilina(1) for the complete PR (pull
     request #1040(2)).

   * ‘--doctest-glob’ may now be passed multiple times in the
     command-line.  Thanks @jab(3) and @nicoddemus(4) for the PR.

   * New ‘-rp’ and ‘-rP’ reporting options give the summary and full
     output of passing tests, respectively.  Thanks to @codewarrior0(5)
     for the PR.

   * ‘pytest.mark.xfail’ now has a ‘strict’ option, which makes ‘XPASS’
     tests to fail the test suite (defaulting to ‘False’).  There’s also
     a ‘xfail_strict’ ini option that can be used to configure it
     project-wise.  Thanks @rabbbit(6) for the request and
     @nicoddemus(7) for the PR (pull request #1355(8)).

   * ‘Parser.addini’ now supports options of type ‘bool’.  Thanks
     @nicoddemus(9) for the PR.

   * New ‘ALLOW_BYTES’ doctest option.  This strips ‘b’ prefixes from
     byte strings in doctest output (similar to ‘ALLOW_UNICODE’).
     Thanks @jaraco(10) for the request and @nicoddemus(11) for the PR
     (pull request #1287(12)).

   * Give a hint on ‘KeyboardInterrupt’ to use the ‘--fulltrace’ option
     to show the errors.  Fixes issue #1366(13).  Thanks to @hpk42(14)
     for the report and @RonnyPfannschmidt(15) for the PR.

   * Catch ‘IndexError’ exceptions when getting exception source
     location.  Fixes a pytest internal error for dynamically generated
     code (fixtures and tests) where source lines are fake by intention.

‘Changes’

   * ‘Important’: py.code(16) has been merged into the ‘pytest’
     repository as ‘pytest._code’.  This decision was made because
     ‘py.code’ had very few uses outside ‘pytest’ and the fact that it
     was in a different repository made it difficult to fix bugs on its
     code in a timely manner.  The team hopes with this to be able to
     better refactor out and improve that code.  This change shouldn’t
     affect users, but it is useful to let users aware if they encounter
     any strange behavior.

     Keep in mind that the code for ‘pytest._code’ is ‘private’ and
     ‘experimental’, so you definitely should not import it explicitly!

     Please note that the original ‘py.code’ is still available in
     pylib(17).

   * ‘pytest_enter_pdb’ now optionally receives the pytest config
     object.  Thanks @nicoddemus(18) for the PR.

   * Removed code and documentation for Python 2.5 or lower versions,
     including removal of the obsolete ‘_pytest.assertion.oldinterpret’
     module.  Thanks @nicoddemus(19) for the PR (pull request
     #1226(20)).

   * Comparisons now always show up in full when ‘CI’ or ‘BUILD_NUMBER’
     is found in the environment, even when ‘-vv’ isn’t used.  Thanks
     @The-Compiler(21) for the PR.

   * ‘--lf’ and ‘--ff’ now support long names: ‘--last-failed’ and
     ‘--failed-first’ respectively.  Thanks @MichaelAquilina(22) for the
     PR.

   * Added expected exceptions to ‘pytest.raises’ fail message.

   * Collection only displays progress (“collecting X items”) when in a
     terminal.  This avoids cluttering the output when using
     ‘--color=yes’ to obtain colors in CI integrations systems (issue
     #1397(23)).

‘Bug Fixes’

   * The ‘-s’ and ‘-c’ options should now work under ‘xdist’;
     ‘Config.fromdictargs’ now represents its input much more
     faithfully.  Thanks to @bukzor(24) for the complete PR (issue
     #680(25)).

   * Fix (issue #1290(26)): support Python 3.5’s ‘@’ operator in
     assertion rewriting.  Thanks @Shinkenjoe(27) for report with test
     case and @tomviner(28) for the PR.

   * Fix formatting utf-8 explanation messages (issue #1379(29)).
     Thanks @biern(30) for the PR.

   * Fix traceback style docs to describe all of the available options
     (auto/long/short/line/native/no), with ‘auto’ being the default
     since v2.6.  Thanks @hackebrot(31) for the PR.

   * Fix (issue #1422(32)): junit record_xml_property doesn’t allow
     multiple records with same name.

   ---------- Footnotes ----------

   (1) https://github.com/MichaelAquilina

   (2) https://github.com/pytest-dev/pytest/pull/1040

   (3) https://github.com/jab

   (4) https://github.com/nicoddemus

   (5) https://github.com/codewarrior0

   (6) https://github.com/rabbbit

   (7) https://github.com/nicoddemus

   (8) https://github.com/pytest-dev/pytest/pull/1355

   (9) https://github.com/nicoddemus

   (10) https://github.com/jaraco

   (11) https://github.com/nicoddemus

   (12) https://github.com/pytest-dev/pytest/pull/1287

   (13) https://github.com/pytest-dev/pytest/issues/1366

   (14) https://github.com/hpk42

   (15) https://github.com/RonnyPfannschmidt

   (16) https://pylib.readthedocs.io/en/stable/code.html

   (17) https://pylib.readthedocs.io

   (18) https://github.com/nicoddemus

   (19) https://github.com/nicoddemus

   (20) https://github.com/pytest-dev/pytest/pull/1226

   (21) https://github.com/The-Compiler

   (22) https://github.com/MichaelAquilina

   (23) https://github.com/pytest-dev/pytest/issues/1397

   (24) https://github.com/bukzor

   (25) https://github.com/pytest-dev/pytest/issues/680

   (26) https://github.com/pytest-dev/pytest/issues/1290

   (27) https://github.com/Shinkenjoe

   (28) https://github.com/tomviner

   (29) https://github.com/pytest-dev/pytest/issues/1379

   (30) https://github.com/biern

   (31) https://github.com/hackebrot

   (32) https://github.com/pytest-dev/pytest/issues/1422


File: pytest.info,  Node: 2 8 7 2016-01-24,  Next: 2 8 6 2016-01-21,  Prev: 2 9 0 2016-02-29,  Up: Changelog

47.115 2.8.7 (2016-01-24)
=========================

   - fix #1338: use predictable object resolution for monkeypatch


File: pytest.info,  Node: 2 8 6 2016-01-21,  Next: 2 8 5 2015-12-11,  Prev: 2 8 7 2016-01-24,  Up: Changelog

47.116 2.8.6 (2016-01-21)
=========================

   - fix #1259: allow for double nodeids in junitxml, this was a
     regression failing plugins combinations like pytest-pep8 +
     pytest-flakes

   - Workaround for exception that occurs in pyreadline when using
     ‘--pdb’ with standard I/O capture enabled.  Thanks Erik M. Bray for
     the PR.

   - fix #900: Better error message in case the target of a
     ‘monkeypatch’ call raises an ‘ImportError’.

   - fix #1292: monkeypatch calls (setattr, setenv, etc.)  are now O(1).
     Thanks David R. MacIver for the report and Bruno Oliveira for the
     PR.

   - fix #1223: captured stdout and stderr are now properly displayed
     before entering pdb when ‘--pdb’ is used instead of being thrown
     away.  Thanks Cal Leeming for the PR.

   - fix #1305: pytest warnings emitted during ‘pytest_terminal_summary’
     are now properly displayed.  Thanks Ionel Maries Cristian for the
     report and Bruno Oliveira for the PR.

   - fix #628: fixed internal UnicodeDecodeError when doctests contain
     unicode.  Thanks Jason R. Coombs for the report and Bruno Oliveira
     for the PR.

   - fix #1334: Add captured stdout to jUnit XML report on setup error.
     Thanks Georgy Dyuldin for the PR.


File: pytest.info,  Node: 2 8 5 2015-12-11,  Next: 2 8 4 2015-12-06,  Prev: 2 8 6 2016-01-21,  Up: Changelog

47.117 2.8.5 (2015-12-11)
=========================

   - fix #1243: fixed issue where class attributes injected during
     collection could break pytest.  PR by Alexei Kozlenok, thanks Ronny
     Pfannschmidt and Bruno Oliveira for the review and help.

   - fix #1074: precompute junitxml chunks instead of storing the whole
     tree in objects Thanks Bruno Oliveira for the report and Ronny
     Pfannschmidt for the PR

   - fix #1238: fix ‘pytest.deprecated_call()’ receiving multiple
     arguments (Regression introduced in 2.8.4).  Thanks Alex Gaynor for
     the report and Bruno Oliveira for the PR.


File: pytest.info,  Node: 2 8 4 2015-12-06,  Next: 2 8 3 2015-11-18,  Prev: 2 8 5 2015-12-11,  Up: Changelog

47.118 2.8.4 (2015-12-06)
=========================

   - fix #1190: ‘deprecated_call()’ now works when the deprecated
     function has been already called by another test in the same
     module.  Thanks Mikhail Chernykh for the report and Bruno Oliveira
     for the PR.

   - fix #1198: ‘--pastebin’ option now works on Python 3.  Thanks Mehdy
     Khoshnoody for the PR.

   - fix #1219: ‘--pastebin’ now works correctly when captured output
     contains non-ascii characters.  Thanks Bruno Oliveira for the PR.

   - fix #1204: another error when collecting with a nasty
     __getattr__().  Thanks Florian Bruhin for the PR.

   - fix the summary printed when no tests did run.  Thanks Florian
     Bruhin for the PR.

   - fix #1185 - ensure MANIFEST.in exactly matches what should go to a
     sdist

   - a number of documentation modernizations wrt good practices.
     Thanks Bruno Oliveira for the PR.


File: pytest.info,  Node: 2 8 3 2015-11-18,  Next: 2 8 2 2015-10-07,  Prev: 2 8 4 2015-12-06,  Up: Changelog

47.119 2.8.3 (2015-11-18)
=========================

   - fix #1169: add __name__ attribute to testcases in TestCaseFunction
     to support the @unittest.skip decorator on functions and methods.
     Thanks Lee Kamentsky for the PR.

   - fix #1035: collecting tests if test module level obj has
     __getattr__().  Thanks Suor for the report and Bruno Oliveira / Tom
     Viner for the PR.

   - fix #331: don’t collect tests if their failure cannot be reported
     correctly e.g.  they are a callable instance of a class.

   - fix #1133: fixed internal error when filtering tracebacks where one
     entry belongs to a file which is no longer available.  Thanks Bruno
     Oliveira for the PR.

   - enhancement made to highlight in red the name of the failing tests
     so they stand out in the output.  Thanks Gabriel Reis for the PR.

   - add more talks to the documentation

   - extend documentation on the –ignore cli option

   - use pytest-runner for setuptools integration

   - minor fixes for interaction with OS X El Capitan system integrity
     protection (thanks Florian)


File: pytest.info,  Node: 2 8 2 2015-10-07,  Next: 2 8 1 2015-09-29,  Prev: 2 8 3 2015-11-18,  Up: Changelog

47.120 2.8.2 (2015-10-07)
=========================

   - fix #1085: proper handling of encoding errors when passing encoded
     byte strings to pytest.parametrize in Python 2.  Thanks
     Themanwithoutaplan for the report and Bruno Oliveira for the PR.

   - fix #1087: handling SystemError when passing empty byte strings to
     pytest.parametrize in Python 3.  Thanks Paul Kehrer for the report
     and Bruno Oliveira for the PR.

   - fix #995: fixed internal error when filtering tracebacks where one
     entry was generated by an exec() statement.  Thanks Daniel Hahler,
     Ashley C Straw, Philippe Gauthier and Pavel Savchenko for
     contributing and Bruno Oliveira for the PR.

   - fix #1100 and #1057: errors when using autouse fixtures and doctest
     modules.  Thanks Sergey B Kirpichev and Vital Kudzelka for
     contributing and Bruno Oliveira for the PR.


File: pytest.info,  Node: 2 8 1 2015-09-29,  Next: 2 8 0 2015-09-18,  Prev: 2 8 2 2015-10-07,  Up: Changelog

47.121 2.8.1 (2015-09-29)
=========================

   - fix #1034: Add missing nodeid on pytest_logwarning call in addhook.
     Thanks Simon Gomizelj for the PR.

   - ‘deprecated_call’ is now only satisfied with a DeprecationWarning
     or PendingDeprecationWarning.  Before 2.8.0, it accepted any
     warning, and 2.8.0 made it accept only DeprecationWarning (but not
     PendingDeprecationWarning).  Thanks Alex Gaynor for the issue and
     Eric Hunsberger for the PR.

   - fix issue #1073: avoid calling __getattr__ on potential plugin
     objects.  This fixes an incompatibility with pytest-django.  Thanks
     Andreas Pelme, Bruno Oliveira and Ronny Pfannschmidt for
     contributing and Holger Krekel for the fix.

   - Fix issue #704: handle versionconflict during plugin loading more
     gracefully.  Thanks Bruno Oliveira for the PR.

   - Fix issue #1064: “”–junitxml” regression when used with the
     “pytest-xdist” plugin, with test reports being assigned to the
     wrong tests.  Thanks Daniel Grunwald for the report and Bruno
     Oliveira for the PR.

   - (experimental) adapt more SEMVER style versioning and change
     meaning of master branch in git repo: “master” branch now keeps the
     bug fixes, changes aimed for micro releases.  “features” branch
     will only be released with minor or major pytest releases.

   - Fix issue #766 by removing documentation references to distutils.
     Thanks Russel Winder.

   - Fix issue #1030: now byte-strings are escaped to produce item node
     ids to make them always serializable.  Thanks Andy Freeland for the
     report and Bruno Oliveira for the PR.

   - Python 2: if unicode parametrized values are convertible to ascii,
     their ascii representation is used for the node id.

   - Fix issue #411: Add __eq__ method to assertion comparison example.
     Thanks Ben Webb.

   - Fix issue #653: deprecated_call can be used as context manager.

   - fix issue 877: properly handle assertion explanations with
     non-ascii repr Thanks Mathieu Agopian for the report and Ronny
     Pfannschmidt for the PR.

   - fix issue 1029: transform errors when writing cache values into
     pytest-warnings


File: pytest.info,  Node: 2 8 0 2015-09-18,  Next: 2 7 3 2015-09-15,  Prev: 2 8 1 2015-09-29,  Up: Changelog

47.122 2.8.0 (2015-09-18)
=========================

   - new ‘--lf’ and ‘-ff’ options to run only the last failing tests or
     “failing tests first” from the last run.  This functionality is
     provided through porting the formerly external pytest-cache plugin
     into pytest core.  BACKWARD INCOMPAT: if you used pytest-cache’s
     functionality to persist data between test runs be aware that we
     don’t serialize sets anymore.  Thanks Ronny Pfannschmidt for most
     of the merging work.

   - “-r” option now accepts “a” to include all possible reports,
     similar to passing “fEsxXw” explicitly (issue960).  Thanks Abhijeet
     Kasurde for the PR.

   - avoid python3.5 deprecation warnings by introducing version
     specific inspection helpers, thanks Michael Droettboom.

   - fix issue562: @nose.tools.istest now fully respected.

   - fix issue934: when string comparison fails and a diff is too large
     to display without passing -vv, still show a few lines of the diff.
     Thanks Florian Bruhin for the report and Bruno Oliveira for the PR.

   - fix issue736: Fix a bug where fixture params would be discarded
     when combined with parametrization markers.  Thanks to Markus
     Unterwaditzer for the PR.

   - fix issue710: introduce ALLOW_UNICODE doctest option: when enabled,
     the ‘u’ prefix is stripped from unicode strings in expected doctest
     output.  This allows doctests which use unicode to run in Python 2
     and 3 unchanged.  Thanks Jason R. Coombs for the report and Bruno
     Oliveira for the PR.

   - parametrize now also generates meaningful test IDs for enum, regex
     and class objects (as opposed to class instances).  Thanks to
     Florian Bruhin for the PR.

   - Add ‘warns’ to assert that warnings are thrown (like ‘raises’).
     Thanks to Eric Hunsberger for the PR.

   - Fix issue683: Do not apply an already applied mark.  Thanks ojake
     for the PR.

   - Deal with capturing failures better so fewer exceptions get lost to
     /dev/null.  Thanks David Szotten for the PR.

   - fix issue730: deprecate and warn about the –genscript option.
     Thanks Ronny Pfannschmidt for the report and Christian Pommranz for
     the PR.

   - fix issue751: multiple parametrize with ids bug if it parametrizes
     class with two or more test methods.  Thanks Sergey Chipiga for
     reporting and Jan Bednarik for PR.

   - fix issue82: avoid loading conftest files from
     setup.cfg/pytest.ini/tox.ini files and upwards by default
     (–confcutdir can still be set to override this).  Thanks Bruno
     Oliveira for the PR.

   - fix issue768: docstrings found in python modules were not setting
     up session fixtures.  Thanks Jason R. Coombs for reporting and
     Bruno Oliveira for the PR.

   - added ‘tmpdir_factory’, a session-scoped fixture that can be used
     to create directories under the base temporary directory.
     Previously this object was installed as a ‘_tmpdirhandler’
     attribute of the ‘config’ object, but now it is part of the
     official API and using ‘config._tmpdirhandler’ is deprecated.
     Thanks Bruno Oliveira for the PR.

   - fix issue808: pytest’s internal assertion rewrite hook now
     implements the optional PEP 302(1) get_data API so tests can access
     data files next to them.  Thanks xmo-odoo for request and example
     and Bruno Oliveira for the PR.

   - rootdir and inifile are now displayed during usage errors to help
     users diagnose problems such as unexpected ini files which add
     unknown options being picked up by pytest.  Thanks to Pavel
     Savchenko for bringing the problem to attention in #821 and Bruno
     Oliveira for the PR.

   - Summary bar now is colored yellow for warning situations such as:
     all tests either were skipped or xpass/xfailed, or no tests were
     run at all (this is a partial fix for issue500).

   - fix issue812: pytest now exits with status code 5 in situations
     where no tests were run at all, such as the directory given in the
     command line does not contain any tests or as result of a command
     line option filters all out all tests (-k for example).  Thanks
     Eric Siegerman (issue812) and Bruno Oliveira for the PR.

   - Summary bar now is colored yellow for warning situations such as:
     all tests either were skipped or xpass/xfailed, or no tests were
     run at all (related to issue500).  Thanks Eric Siegerman.

   - New ‘testpaths’ ini option: list of directories to search for tests
     when executing pytest from the root directory.  This can be used to
     speed up test collection when a project has well specified
     directories for tests, being usually more practical than
     configuring norecursedirs for all directories that do not contain
     tests.  Thanks to Adrian for idea (#694) and Bruno Oliveira for the
     PR.

   - fix issue713: JUnit XML reports for doctest failures.  Thanks
     Punyashloka Biswal.

   - fix issue970: internal pytest warnings now appear as
     “pytest-warnings” in the terminal instead of “warnings”, so it is
     clear for users that those warnings are from pytest and not from
     the builtin “warnings” module.  Thanks Bruno Oliveira.

   - Include setup and teardown in junitxml test durations.  Thanks
     Janne Vanhala.

   - fix issue735: assertion failures on debug versions of Python 3.4+

   - new option ‘--import-mode’ to allow to change test module importing
     behaviour to append to sys.path instead of prepending.  This better
     allows to run test modules against installed versions of a package
     even if the package under test has the same import root.  In this
     example:

          testing/__init__.py
          testing/test_pkg_under_test.py
          pkg_under_test/

     the tests will run against the installed version of pkg_under_test
     when ‘--import-mode=append’ is used whereas by default they would
     always pick up the local version.  Thanks Holger Krekel.

   - pytester: add method ‘TmpTestdir.delete_loaded_modules()’, and call
     it from ‘inline_run()’ to allow temporary modules to be reloaded.
     Thanks Eduardo Schettino.

   - internally refactor pluginmanager API and code so that there is a
     clear distinction between a pytest-agnostic rather simple
     pluginmanager and the PytestPluginManager which adds a lot of
     behaviour, among it handling of the local conftest files.  In terms
     of documented methods this is a backward compatible change but it
     might still break 3rd party plugins which relied on details like
     especially the pluginmanager.add_shutdown() API. Thanks Holger
     Krekel.

   - pluginmanagement: introduce ‘pytest.hookimpl’ and ‘pytest.hookspec’
     decorators for setting impl/spec specific parameters.  This
     substitutes the previous now deprecated use of ‘pytest.mark’ which
     is meant to contain markers for test functions only.

   - write/refine docs for “writing plugins” which now have their own
     page and are separate from the “using/installing plugins‘‘ page.

   - fix issue732: properly unregister plugins from any hook calling
     sites allowing to have temporary plugins during test execution.

   - deprecate and warn about ‘__multicall__’ argument in hook
     implementations.  Use the ‘hookwrapper’ mechanism instead already
     introduced with pytest-2.7.

   - speed up pytest’s own test suite considerably by using inprocess
     tests by default (testrun can be modified with
     –runpytest=subprocess to create subprocesses in many places
     instead).  The main APIs to run pytest in a test is “runpytest()”
     or “runpytest_subprocess” and “runpytest_inprocess” if you need a
     particular way of running the test.  In all cases you get back a
     RunResult but the inprocess one will also have a “reprec” attribute
     with the recorded events/reports.

   - fix monkeypatch.setattr(“x.y”, raising=False) to actually not raise
     if “y” is not a pre-existing attribute.  Thanks Florian Bruhin.

   - fix issue741: make running output from testdir.run copy/pasteable
     Thanks Bruno Oliveira.

   - add a new ‘--noconftest’ argument which ignores all ‘conftest.py’
     files.

   - add ‘file’ and ‘line’ attributes to JUnit-XML output.

   - fix issue890: changed extension of all documentation files from
     ‘txt’ to ‘rst’.  Thanks to Abhijeet for the PR.

   - fix issue714: add ability to apply indirect=True parameter on
     particular argnames.  Thanks Elizaveta239.

   - fix issue890: changed extension of all documentation files from
     ‘txt’ to ‘rst’.  Thanks to Abhijeet for the PR.

   - fix issue957: “# doctest: SKIP” option will now register doctests
     as SKIPPED rather than PASSED. Thanks Thomas Grainger for the
     report and Bruno Oliveira for the PR.

   - issue951: add new record_xml_property fixture, that supports
     logging additional information on xml output.  Thanks David Diaz
     for the PR.

   - issue949: paths after normal options (for example ‘-s’, ‘-v’, etc)
     are now properly used to discover ‘rootdir’ and ‘ini’ files.
     Thanks Peter Lauri for the report and Bruno Oliveira for the PR.

   ---------- Footnotes ----------

   (1) https://peps.python.org/pep-0302/


File: pytest.info,  Node: 2 7 3 2015-09-15,  Next: 2 7 2 2015-06-23,  Prev: 2 8 0 2015-09-18,  Up: Changelog

47.123 2.7.3 (2015-09-15)
=========================

   - Allow ‘dev’, ‘rc’, or other non-integer version strings in
     ‘importorskip’.  Thanks to Eric Hunsberger for the PR.

   - fix issue856: consider –color parameter in all outputs (for example
     –fixtures).  Thanks Barney Gale for the report and Bruno Oliveira
     for the PR.

   - fix issue855: passing str objects as ‘plugins’ argument to
     pytest.main is now interpreted as a module name to be imported and
     registered as a plugin, instead of silently having no effect.
     Thanks xmo-odoo for the report and Bruno Oliveira for the PR.

   - fix issue744: fix for ast.Call changes in Python 3.5+.  Thanks
     Guido van Rossum, Matthias Bussonnier, Stefan Zimmermann and Thomas
     Kluyver.

   - fix issue842: applying markers in classes no longer propagate this
     markers to superclasses which also have markers.  Thanks xmo-odoo
     for the report and Bruno Oliveira for the PR.

   - preserve warning functions after call to pytest.deprecated_call.
     Thanks Pieter Mulder for PR.

   - fix issue854: autouse yield_fixtures defined as class members of
     unittest.TestCase subclasses now work as expected.  Thannks
     xmo-odoo for the report and Bruno Oliveira for the PR.

   - fix issue833: –fixtures now shows all fixtures of collected test
     files, instead of just the fixtures declared on the first one.
     Thanks Florian Bruhin for reporting and Bruno Oliveira for the PR.

   - fix issue863: skipped tests now report the correct reason when a
     skip/xfail condition is met when using multiple markers.  Thanks
     Raphael Pierzina for reporting and Bruno Oliveira for the PR.

   - optimized tmpdir fixture initialization, which should make test
     sessions faster (specially when using pytest-xdist).  The only
     visible effect is that now pytest uses a subdirectory in the $TEMP
     directory for all directories created by this fixture (defaults to
     $TEMP/pytest-$USER). Thanks Bruno Oliveira for the PR.


File: pytest.info,  Node: 2 7 2 2015-06-23,  Next: 2 7 1 2015-05-19,  Prev: 2 7 3 2015-09-15,  Up: Changelog

47.124 2.7.2 (2015-06-23)
=========================

   - fix issue767: pytest.raises value attribute does not contain the
     exception instance on Python 2.6.  Thanks Eric Siegerman for
     providing the test case and Bruno Oliveira for PR.

   - Automatically create directory for junitxml and results log.
     Thanks Aron Curzon.

   - fix issue713: JUnit XML reports for doctest failures.  Thanks
     Punyashloka Biswal.

   - fix issue735: assertion failures on debug versions of Python 3.4+
     Thanks Benjamin Peterson.

   - fix issue114: skipif marker reports to internal skipping plugin;
     Thanks Floris Bruynooghe for reporting and Bruno Oliveira for the
     PR.

   - fix issue748: unittest.SkipTest reports to internal pytest unittest
     plugin.  Thanks Thomas De Schampheleire for reporting and Bruno
     Oliveira for the PR.

   - fix issue718: failed to create representation of sets containing
     unsortable elements in python 2.  Thanks Edison Gustavo Muenz.

   - fix issue756, fix issue752 (and similar issues): depend on
     py-1.4.29 which has a refined algorithm for traceback generation.


File: pytest.info,  Node: 2 7 1 2015-05-19,  Next: 2 7 0 2015-03-26,  Prev: 2 7 2 2015-06-23,  Up: Changelog

47.125 2.7.1 (2015-05-19)
=========================

   - fix issue731: do not get confused by the braces which may be
     present and unbalanced in an object’s repr while collapsing False
     explanations.  Thanks Carl Meyer for the report and test case.

   - fix issue553: properly handling inspect.getsourcelines failures in
     FixtureLookupError which would lead to an internal error,
     obfuscating the original problem.  Thanks talljosh for initial
     diagnose/patch and Bruno Oliveira for final patch.

   - fix issue660: properly report scope-mismatch-access errors
     independently from ordering of fixture arguments.  Also avoid the
     pytest internal traceback which does not provide information to the
     user.  Thanks Holger Krekel.

   - streamlined and documented release process.  Also all versions (in
     setup.py and documentation generation) are now read from
     _pytest/__init__.py.  Thanks Holger Krekel.

   - fixed docs to remove the notion that yield-fixtures are
     experimental.  They are here to stay :) Thanks Bruno Oliveira.

   - Support building wheels by using environment markers for the
     requirements.  Thanks Ionel Maries Cristian.

   - fixed regression to 2.6.4 which surfaced e.g.  in lost stdout
     capture printing when tests raised SystemExit.  Thanks Holger
     Krekel.

   - reintroduced _pytest fixture of the pytester plugin which is used
     at least by pytest-xdist.


File: pytest.info,  Node: 2 7 0 2015-03-26,  Next: 2 6 4 2014-10-24,  Prev: 2 7 1 2015-05-19,  Up: Changelog

47.126 2.7.0 (2015-03-26)
=========================

   - fix issue435: make reload() work when assert rewriting is active.
     Thanks Daniel Hahler.

   - fix issue616: conftest.py files and their contained fixtures are
     now properly considered for visibility, independently from the
     exact current working directory and test arguments that are used.
     Many thanks to Eric Siegerman and his PR235 which contains
     systematic tests for conftest visibility and now passes.  This
     change also introduces the concept of a ‘rootdir’ which is printed
     as a new pytest header and documented in the pytest customize web
     page.

   - change reporting of “diverted” tests, i.e.  tests that are
     collected in one file but actually come from another (e.g.  when
     tests in a test class come from a base class in a different file).
     We now show the nodeid and indicate via a postfix the other file.

   - add ability to set command line options by environment variable
     PYTEST_ADDOPTS.

   - added documentation on the new pytest-dev teams on bitbucket and
     github.  See ‘https://pytest.org/en/stable/contributing.html’ .
     Thanks to Anatoly for pushing and initial work on this.

   - fix issue650: new option ‘--docttest-ignore-import-errors’ which
     will turn import errors in doctests into skips.  Thanks Charles
     Cloud for the complete PR.

   - fix issue655: work around different ways that cause python2/3 to
     leak sys.exc_info into fixtures/tests causing failures in 3rd party
     code

   - fix issue615: assertion rewriting did not correctly escape % signs
     when formatting boolean operations, which tripped over mixing
     booleans with modulo operators.  Thanks to Tom Viner for the
     report, triaging and fix.

   - implement issue351: add ability to specify parametrize ids as a
     callable to generate custom test ids.  Thanks Brianna Laugher for
     the idea and implementation.

   - introduce and document new hookwrapper mechanism useful for plugins
     which want to wrap the execution of certain hooks for their
     purposes.  This supersedes the undocumented ‘__multicall__’
     protocol which pytest itself and some external plugins use.  Note
     that pytest-2.8 is scheduled to drop supporting the old
     ‘__multicall__’ and only support the hookwrapper protocol.

   - majorly speed up invocation of plugin hooks

   - use hookwrapper mechanism in builtin pytest plugins.

   - add a doctest ini option for doctest flags, thanks Holger Peters.

   - add note to docs that if you want to mark a parameter and the
     parameter is a callable, you also need to pass in a reason to
     disambiguate it from the “decorator” case.  Thanks Tom Viner.

   - “python_classes” and “python_functions” options now support
     glob-patterns for test discovery, as discussed in issue600.  Thanks
     Ldiary Translations.

   - allow to override parametrized fixtures with non-parametrized ones
     and vice versa (bubenkoff).

   - fix issue463: raise specific error for ‘parameterize’ misspelling
     (pfctdayelise).

   - On failure, the ‘sys.last_value’, ‘sys.last_type’ and
     ‘sys.last_traceback’ are set, so that a user can inspect the error
     via postmortem debugging (almarklein).


File: pytest.info,  Node: 2 6 4 2014-10-24,  Next: 2 6 3 2014-09-24,  Prev: 2 7 0 2015-03-26,  Up: Changelog

47.127 2.6.4 (2014-10-24)
=========================

   - Improve assertion failure reporting on iterables, by using ndiff
     and pprint.

   - removed outdated japanese docs from source tree.

   - docs for “pytest_addhooks” hook.  Thanks Bruno Oliveira.

   - updated plugin index docs.  Thanks Bruno Oliveira.

   - fix issue557: with “-k” we only allow the old style “-” for
     negation at the beginning of strings and even that is deprecated.
     Use “not” instead.  This should allow to pick parametrized tests
     where “-” appeared in the parameter.

   - fix issue604: Escape % character in the assertion message.

   - fix issue620: add explanation in the –genscript target about what
     the binary blob means.  Thanks Dinu Gherman.

   - fix issue614: fixed pastebin support.

   - fix issue620: add explanation in the –genscript target about what
     the binary blob means.  Thanks Dinu Gherman.

   - fix issue614: fixed pastebin support.


File: pytest.info,  Node: 2 6 3 2014-09-24,  Next: 2 6 2 2014-09-05,  Prev: 2 6 4 2014-10-24,  Up: Changelog

47.128 2.6.3 (2014-09-24)
=========================

   - fix issue575: xunit-xml was reporting collection errors as failures
     instead of errors, thanks Oleg Sinyavskiy.

   - fix issue582: fix setuptools example, thanks Laszlo Papp and Ronny
     Pfannschmidt.

   - Fix infinite recursion bug when pickling capture.EncodedFile,
     thanks Uwe Schmitt.

   - fix issue589: fix bad interaction with numpy and others when
     showing exceptions.  Check for precise “maximum recursion depth
     exceed” exception instead of presuming any RuntimeError is that one
     (implemented in py dep).  Thanks Charles Cloud for analysing the
     issue.

   - fix conftest related fixture visibility issue: when running with a
     CWD outside of a test package pytest would get fixture discovery
     wrong.  Thanks to Wolfgang Schnerring for figuring out a
     reproducible example.

   - Introduce pytest_enter_pdb hook (needed e.g.  by pytest_timeout to
     cancel the timeout when interactively entering pdb).  Thanks
     Wolfgang Schnerring.

   - check xfail/skip also with non-python function test items.  Thanks
     Floris Bruynooghe.


File: pytest.info,  Node: 2 6 2 2014-09-05,  Next: 2 6 1 2014-08-07,  Prev: 2 6 3 2014-09-24,  Up: Changelog

47.129 2.6.2 (2014-09-05)
=========================

   - Added function pytest.freeze_includes(), which makes it easy to
     embed pytest into executables using tools like cx_freeze.  See docs
     for examples and rationale.  Thanks Bruno Oliveira.

   - Improve assertion rewriting cache invalidation precision.

   - fixed issue561: adapt autouse fixture example for python3.

   - fixed issue453: assertion rewriting issue with __repr__ containing
     “n{”, “n}” and “n~”.

   - fix issue560: correctly display code if an “else:” or “finally:” is
     followed by statements on the same line.

   - Fix example in monkeypatch documentation, thanks t-8ch.

   - fix issue572: correct tmpdir doc example for python3.

   - Do not mark as universal wheel because Python 2.6 is different from
     other builds due to the extra argparse dependency.  Fixes issue566.
     Thanks sontek.

   - Implement issue549: user-provided assertion messages now no longer
     replace the py.test introspection message but are shown in addition
     to them.


File: pytest.info,  Node: 2 6 1 2014-08-07,  Next: 2 6,  Prev: 2 6 2 2014-09-05,  Up: Changelog

47.130 2.6.1 (2014-08-07)
=========================

   - No longer show line numbers in the –verbose output, the output is
     now purely the nodeid.  The line number is still shown in failure
     reports.  Thanks Floris Bruynooghe.

   - fix issue437 where assertion rewriting could cause pytest-xdist
     worker nodes to collect different tests.  Thanks Bruno Oliveira.

   - fix issue555: add “errors” attribute to capture-streams to satisfy
     some distutils and possibly other code accessing sys.stdout.errors.

   - fix issue547 capsys/capfd also work when output capturing (“-s”) is
     disabled.

   - address issue170: allow pytest.mark.xfail(…) to specify expected
     exceptions via an optional “raises=EXC” argument where EXC can be a
     single exception or a tuple of exception classes.  Thanks David
     Mohr for the complete PR.

   - fix integration of pytest with unittest.mock.patch decorator when
     it uses the “new” argument.  Thanks Nicolas Delaby for test and PR.

   - fix issue with detecting conftest files if the arguments contain
     “::” node id specifications (copy pasted from “-v” output)

   - fix issue544 by only removing “@NUM” at the end of “::” separated
     parts and if the part has a “.py” extension

   - don’t use py.std import helper, rather import things directly.
     Thanks Bruno Oliveira.


File: pytest.info,  Node: 2 6,  Next: 2 5 2 2014-01-29,  Prev: 2 6 1 2014-08-07,  Up: Changelog

47.131 2.6
==========

   - Cache exceptions from fixtures according to their scope (issue
     467).

   - fix issue537: Avoid importing old assertion reinterpretation code
     by default.

   - fix issue364: shorten and enhance tracebacks representation by
     default.  The new “–tb=auto” option (default) will only display
     long tracebacks for the first and last entry.  You can get the old
     behaviour of printing all entries as long entries with “–tb=long”.
     Also short entries by default are now printed very similarly to
     “–tb=native” ones.

   - fix issue514: teach assertion reinterpretation about private class
     attributes

   - change -v output to include full node IDs of tests.  Users can copy
     a node ID from a test run, including line number, and use it as a
     positional argument in order to run only a single test.

   - fix issue 475: fail early and comprehensible if calling
     pytest.raises with wrong exception type.

   - fix issue516: tell in getting-started about current dependencies.

   - cleanup setup.py a bit and specify supported versions.  Thanks
     Jurko Gospodnetic for the PR.

   - change XPASS colour to yellow rather then red when tests are run
     with -v.

   - fix issue473: work around mock putting an unbound method into a
     class dict when double-patching.

   - fix issue498: if a fixture finalizer fails, make sure that the
     fixture is still invalidated.

   - fix issue453: the result of the pytest_assertrepr_compare hook now
     gets it’s newlines escaped so that format_exception does not blow
     up.

   - internal new warning system: pytest will now produce warnings when
     it detects oddities in your test collection or execution.  Warnings
     are ultimately sent to a new pytest_logwarning hook which is
     currently only implemented by the terminal plugin which displays
     warnings in the summary line and shows more details when -rw
     (report on warnings) is specified.

   - change skips into warnings for test classes with an __init__ and
     callables in test modules which look like a test but are not
     functions.

   - fix issue436: improved finding of initial conftest files from
     command line arguments by using the result of parse_known_args
     rather than the previous flaky heuristics.  Thanks Marc Abramowitz
     for tests and initial fixing approaches in this area.

   - fix issue #479: properly handle nose/unittest(2) SkipTest
     exceptions during collection/loading of test modules.  Thanks to
     Marc Schlaich for the complete PR.

   - fix issue490: include pytest_load_initial_conftests in
     documentation and improve docstring.

   - fix issue472: clarify that ‘pytest.config.getvalue()’ cannot work
     if it’s triggered ahead of command line parsing.

   - merge PR123: improved integration with mock.patch decorator on
     tests.

   - fix issue412: messing with stdout/stderr FD-level streams is now
     captured without crashes.

   - fix issue483: trial/py33 works now properly.  Thanks Daniel Grana
     for PR.

   - improve example for pytest integration with “python setup.py test”
     which now has a generic “-a” or “–pytest-args” option where you can
     pass additional options as a quoted string.  Thanks Trevor Bekolay.

   - simplified internal capturing mechanism and made it more robust
     against tests or setups changing FD1/FD2, also better integrated
     now with pytest.pdb() in single tests.

   - improvements to pytest’s own test-suite leakage detection, courtesy
     of PRs from Marc Abramowitz

   - fix issue492: avoid leak in test_writeorg.  Thanks Marc Abramowitz.

   - fix issue493: don’t run tests in doc directory with ‘python
     setup.py test’ (use tox -e doctesting for that)

   - fix issue486: better reporting and handling of early conftest
     loading failures

   - some cleanup and simplification of internal conftest handling.

   - work a bit harder to break reference cycles when catching
     exceptions.  Thanks Jurko Gospodnetic.

   - fix issue443: fix skip examples to use proper comparison.  Thanks
     Alex Groenholm.

   - support nose-style ‘__test__’ attribute on modules, classes and
     functions, including unittest-style Classes.  If set to False, the
     test will not be collected.

   - fix issue512: show “<notset>” for arguments which might not be set
     in monkeypatch plugin.  Improves output in documentation.


File: pytest.info,  Node: 2 5 2 2014-01-29,  Next: 2 5 1 2013-12-17,  Prev: 2 6,  Up: Changelog

47.132 2.5.2 (2014-01-29)
=========================

   - fix issue409 – better interoperate with cx_freeze by not trying to
     import from collections.abc which causes problems for
     py27/cx_freeze.  Thanks Wolfgang L. for reporting and tracking it
     down.

   - fixed docs and code to use “pytest” instead of “py.test” almost
     everywhere.  Thanks Jurko Gospodnetic for the complete PR.

   - fix issue425: mention at end of “py.test -h” that –markers and
     –fixtures work according to specified test path (or current dir)

   - fix issue413: exceptions with unicode attributes are now printed
     correctly also on python2 and with pytest-xdist runs.  (the fix
     requires py-1.4.20)

   - copy, cleanup and integrate py.io capture from pylib 1.4.20.dev2
     (rev 13d9af95547e)

   - address issue416: clarify docs as to conftest.py loading semantics

   - fix issue429: comparing byte strings with non-ascii chars in assert
     expressions now work better.  Thanks Floris Bruynooghe.

   - make capfd/capsys.capture private, its unused and shouldn’t be
     exposed


File: pytest.info,  Node: 2 5 1 2013-12-17,  Next: 2 5 0 2013-12-12,  Prev: 2 5 2 2014-01-29,  Up: Changelog

47.133 2.5.1 (2013-12-17)
=========================

   - merge new documentation styling PR from Tobias Bieniek.

   - fix issue403: allow parametrize of multiple same-name functions
     within a collection node.  Thanks Andreas Kloeckner and Alex Gaynor
     for reporting and analysis.

   - Allow parameterized fixtures to specify the ID of the parameters by
     adding an ids argument to pytest.fixture() and
     pytest.yield_fixture().  Thanks Floris Bruynooghe.

   - fix issue404 by always using the binary xml escape in the junitxml
     plugin.  Thanks Ronny Pfannschmidt.

   - fix issue407: fix addoption docstring to point to argparse instead
     of optparse.  Thanks Daniel D. Wright.


File: pytest.info,  Node: 2 5 0 2013-12-12,  Next: 2 4 2 2013-10-04,  Prev: 2 5 1 2013-12-17,  Up: Changelog

47.134 2.5.0 (2013-12-12)
=========================

   - dropped python2.5 from automated release testing of pytest itself
     which means it’s probably going to break soon (but still works with
     this release we believe).

   - simplified and fixed implementation for calling finalizers when
     parametrized fixtures or function arguments are involved.
     finalization is now performed lazily at setup time instead of in
     the “teardown phase”.  While this might sound odd at first, it
     helps to ensure that we are correctly handling setup/teardown even
     in complex code.  User-level code should not be affected unless
     it’s implementing the pytest_runtest_teardown hook and expecting
     certain fixture instances are torn down within (very unlikely and
     would have been unreliable anyway).

   - PR90: add –color=yes|no|auto option to force terminal coloring mode
     (“auto” is default).  Thanks Marc Abramowitz.

   - fix issue319 - correctly show unicode in assertion errors.  Many
     thanks to Floris Bruynooghe for the complete PR. Also means we
     depend on py>=1.4.19 now.

   - fix issue396 - correctly sort and finalize class-scoped
     parametrized tests independently from number of methods on the
     class.

   - refix issue323 in a better way – parametrization should now never
     cause Runtime Recursion errors because the underlying algorithm for
     re-ordering tests per-scope/per-fixture is not recursive anymore
     (it was tail-call recursive before which could lead to problems for
     more than >966 non-function scoped parameters).

   - fix issue290 - there is preliminary support now for parametrizing
     with repeated same values (sometimes useful to test if calling a
     second time works as with the first time).

   - close issue240 - document precisely how pytest module importing
     works, discuss the two common test directory layouts, and how it
     interacts with PEP 420(1)-namespace packages.

   - fix issue246 fix finalizer order to be LIFO on independent fixtures
     depending on a parametrized higher-than-function scoped fixture.
     (was quite some effort so please bear with the complexity of this
     sentence :) Thanks Ralph Schmitt for the precise failure example.

   - fix issue244 by implementing special index for parameters to only
     use indices for paramentrized test ids

   - fix issue287 by running all finalizers but saving the exception
     from the first failing finalizer and re-raising it so teardown will
     still have failed.  We reraise the first failing exception because
     it might be the cause for other finalizers to fail.

   - fix ordering when mock.patch or other standard decorator-wrappings
     are used with test methods.  This fixues issue346 and should help
     with random “xdist” collection failures.  Thanks to Ronny
     Pfannschmidt and Donald Stufft for helping to isolate it.

   - fix issue357 - special case “-k” expressions to allow for filtering
     with simple strings that are not valid python expressions.
     Examples: “-k 1.3” matches all tests parametrized with 1.3.  “-k
     None” filters all tests that have “None” in their name and
     conversely “-k ‘not None’”.  Previously these examples would raise
     syntax errors.

   - fix issue384 by removing the trial support code since the unittest
     compat enhancements allow trial to handle it on its own

   - don’t hide an ImportError when importing a plugin produces one.
     fixes issue375.

   - fix issue275 - allow usefixtures and autouse fixtures for running
     doctest text files.

   - fix issue380 by making –resultlog only rely on longrepr instead of
     the “reprcrash” attribute which only exists sometimes.

   - address issue122: allow @pytest.fixture(params=iterator) by
     exploding into a list early on.

   - fix pexpect-3.0 compatibility for pytest’s own tests.  (fixes
     issue386)

   - allow nested parametrize-value markers, thanks James Lan for the
     PR.

   - fix unicode handling with new monkeypatch.setattr(import_path,
     value) API. Thanks Rob Dennis.  Fixes issue371.

   - fix unicode handling with junitxml, fixes issue368.

   - In assertion rewriting mode on Python 2, fix the detection of
     coding cookies.  See issue #330.

   - make “–runxfail” turn imperative pytest.xfail calls into no ops (it
     already did neutralize pytest.mark.xfail markers)

   - refine pytest / pkg_resources interactions: The
     AssertionRewritingHook PEP 302(2) compliant loader now registers
     itself with setuptools/pkg_resources properly so that the
     pkg_resources.resource_stream method works properly.  Fixes
     issue366.  Thanks for the investigations and full PR to Jason R.
     Coombs.

   - pytestconfig fixture is now session-scoped as it is the same object
     during the whole test run.  Fixes issue370.

   - avoid one surprising case of marker malfunction/confusion:

          @pytest.mark.some(lambda arg: ...)
          def test_function():

     would not work correctly because pytest assumes @pytest.mark.some
     gets a function to be decorated already.  We now at least detect if
     this arg is a lambda and thus the example will work.  Thanks Alex
     Gaynor for bringing it up.

   - xfail a test on pypy that checks wrong encoding/ascii (pypy does
     not error out).  fixes issue385.

   - internally make varnames() deal with classes’s __init__, although
     it’s not needed by pytest itself atm.  Also fix caching.  Fixes
     issue376.

   - fix issue221 - handle importing of namespace-package with no
     __init__.py properly.

   - refactor internal FixtureRequest handling to avoid monkeypatching.
     One of the positive user-facing effects is that the “request”
     object can now be used in closures.

   - fixed version comparison in pytest.importskip(modname,
     minverstring)

   - fix issue377 by clarifying in the nose-compat docs that pytest does
     not duplicate the unittest-API into the “plain” namespace.

   - fix verbose reporting for @mock’d test functions

   ---------- Footnotes ----------

   (1) https://peps.python.org/pep-0420/

   (2) https://peps.python.org/pep-0302/


File: pytest.info,  Node: 2 4 2 2013-10-04,  Next: 2 4 1 2013-10-02,  Prev: 2 5 0 2013-12-12,  Up: Changelog

47.135 2.4.2 (2013-10-04)
=========================

   - on Windows require colorama and a newer py lib so that
     py.io.TerminalWriter() now uses colorama instead of its own ctypes
     hacks.  (fixes issue365) thanks Paul Moore for bringing it up.

   - fix “-k” matching of tests where “repr” and “attr” and other names
     would cause wrong matches because of an internal implementation
     quirk (don’t ask) which is now properly implemented.  fixes
     issue345.

   - avoid tmpdir fixture to create too long filenames especially when
     parametrization is used (issue354)

   - fix pytest-pep8 and pytest-flakes / pytest interactions (collection
     names in mark plugin was assuming an item always has a function
     which is not true for those plugins etc.)  Thanks Andi Zeidler.

   - introduce node.get_marker/node.add_marker API for plugins like
     pytest-pep8 and pytest-flakes to avoid the messy details of the
     node.keywords pseudo-dicts.  Adapted docs.

   - remove attempt to “dup” stdout at startup as it’s icky.  the normal
     capturing should catch enough possibilities of tests messing up
     standard FDs.

   - add pluginmanager.do_configure(config) as a link to
     config.do_configure() for plugin-compatibility


File: pytest.info,  Node: 2 4 1 2013-10-02,  Next: 2 4,  Prev: 2 4 2 2013-10-04,  Up: Changelog

47.136 2.4.1 (2013-10-02)
=========================

   - When using parser.addoption() unicode arguments to the “type”
     keyword should also be converted to the respective types.  thanks
     Floris Bruynooghe, @dnozay.  (fixes issue360 and issue362)

   - fix dotted filename completion when using argcomplete thanks Anthon
     van der Neuth.  (fixes issue361)

   - fix regression when a 1-tuple (“arg”,) is used for specifying
     parametrization (the values of the parametrization were passed
     nested in a tuple).  Thanks Donald Stufft.

   - merge doc typo fixes, thanks Andy Dirnberger


File: pytest.info,  Node: 2 4,  Next: 2 3 5 2013-04-30,  Prev: 2 4 1 2013-10-02,  Up: Changelog

47.137 2.4
==========

known incompatibilities:

   - if calling –genscript from python2.7 or above, you only get a
     standalone script which works on python2.7 or above.  Use Python2.6
     to also get a python2.5 compatible version.

   - all xunit-style teardown methods (nose-style, pytest-style,
     unittest-style) will not be called if the corresponding setup
     method failed, see issue322 below.

   - the pytest_plugin_unregister hook wasn’t ever properly called and
     there is no known implementation of the hook - so it got removed.

   - pytest.fixture-decorated functions cannot be generators (i.e.  use
     yield) anymore.  This change might be reversed in 2.4.1 if it
     causes unforeseen real-life issues.  However, you can always write
     and return an inner function/generator and change the fixture
     consumer to iterate over the returned generator.  This change was
     done in lieu of the new ‘pytest.yield_fixture’ decorator, see
     below.

new features:

   - experimentally introduce a new ‘pytest.yield_fixture’ decorator
     which accepts exactly the same parameters as pytest.fixture but
     mandates a ‘yield’ statement instead of a ‘return statement’ from
     fixture functions.  This allows direct integration with
     “with-style” context managers in fixture functions and generally
     avoids registering of finalization callbacks in favour of treating
     the “after-yield” as teardown code.  Thanks Andreas Pelme, Vladimir
     Keleshev, Floris Bruynooghe, Ronny Pfannschmidt and many others for
     discussions.

   - allow boolean expression directly with skipif/xfail if a “reason”
     is also specified.  Rework skipping documentation to recommend
     “condition as booleans” because it prevents surprises when
     importing markers between modules.  Specifying conditions as
     strings will remain fully supported.

   - reporting: color the last line red or green depending if
     failures/errors occurred or everything passed.  thanks Christian
     Theunert.

   - make “import pdb ; pdb.set_trace()” work natively wrt capturing (no
     “-s” needed anymore), making ‘pytest.set_trace()’ a mere shortcut.

   - fix issue181: –pdb now also works on collect errors (and on
     internal errors) .  This was implemented by a slight internal
     refactoring and the introduction of a new hook
     ‘pytest_exception_interact’ hook (see next item).

   - fix issue341: introduce new experimental hook for IDEs/terminals to
     intercept debugging: ‘pytest_exception_interact(node, call,
     report)’.

   - new monkeypatch.setattr() variant to provide a shorter invocation
     for patching out classes/functions from modules:

          monkeypatch.setattr(“requests.get”, myfunc)

     will replace the “get” function of the “requests” module with
     ‘myfunc’.

   - fix issue322: tearDownClass is not run if setUpClass failed.
     Thanks Mathieu Agopian for the initial fix.  Also make all of
     pytest/nose finalizer mimic the same generic behaviour: if a setupX
     exists and fails, don’t run teardownX. This internally introduces a
     new method “node.addfinalizer()” helper which can only be called
     during the setup phase of a node.

   - simplify pytest.mark.parametrize() signature: allow to pass a
     CSV-separated string to specify argnames.  For example:
     ‘pytest.mark.parametrize("input,expected", [(1,2), (2,3)])’ works
     as well as the previous: ‘pytest.mark.parametrize(("input",
     "expected"), ...)’.

   - add support for setUpModule/tearDownModule detection, thanks Brian
     Okken.

   - integrate tab-completion on options through use of “argcomplete”.
     Thanks Anthon van der Neut for the PR.

   - change option names to be hyphen-separated long options but keep
     the old spelling backward compatible.  py.test -h will only show
     the hyphenated version, for example “–collect-only” but
     “–collectonly” will remain valid as well (for backward-compat
     reasons).  Many thanks to Anthon van der Neut for the
     implementation and to Hynek Schlawack for pushing us.

   - fix issue 308 - allow to mark/xfail/skip individual parameter sets
     when parametrizing.  Thanks Brianna Laugher.

   - call new experimental pytest_load_initial_conftests hook to allow
     3rd party plugins to do something before a conftest is loaded.

Bug fixes:

   - fix issue358 - capturing options are now parsed more properly by
     using a new parser.parse_known_args method.

   - pytest now uses argparse instead of optparse (thanks Anthon) which
     means that “argparse” is added as a dependency if installing into
     python2.6 environments or below.

   - fix issue333: fix a case of bad unittest/pytest hook interaction.

   - PR27: correctly handle nose.SkipTest during collection.  Thanks
     Antonio Cuni, Ronny Pfannschmidt.

   - fix issue355: junitxml puts name=”pytest” attribute to testsuite
     tag.

   - fix issue336: autouse fixture in plugins should work again.

   - fix issue279: improve object comparisons on assertion failure for
     standard datatypes and recognise collections.abc.  Thanks to
     Brianna Laugher and Mathieu Agopian.

   - fix issue317: assertion rewriter support for the is_package method

   - fix issue335: document py.code.ExceptionInfo() object returned from
     pytest.raises(), thanks Mathieu Agopian.

   - remove implicit distribute_setup support from setup.py.

   - fix issue305: ignore any problems when writing pyc files.

   - SO-17664702: call fixture finalizers even if the fixture function
     partially failed (finalizers would not always be called before)

   - fix issue320 - fix class scope for fixtures when mixed with
     module-level functions.  Thanks Anatloy Bubenkoff.

   - you can specify “-q” or “-qq” to get different levels of “quieter”
     reporting (thanks Katarzyna Jachim)

   - fix issue300 - Fix order of conftest loading when starting py.test
     in a subdirectory.

   - fix issue323 - sorting of many module-scoped arg parametrizations

   - make sessionfinish hooks execute with the same cwd-context as at
     session start (helps fix plugin behaviour which write output files
     with relative path such as pytest-cov)

   - fix issue316 - properly reference collection hooks in docs

   - fix issue 306 - cleanup of -k/-m options to only match markers/test
     names/keywords respectively.  Thanks Wouter van Ackooy.

   - improved doctest counting for doctests in python modules – files
     without any doctest items will not show up anymore and doctest
     examples are counted as separate test items.  thanks Danilo
     Bellini.

   - fix issue245 by depending on the released py-1.4.14 which fixes
     py.io.dupfile to work with files with no mode.  Thanks Jason R.
     Coombs.

   - fix junitxml generation when test output contains control
     characters, addressing issue267, thanks Jaap Broekhuizen

   - fix issue338: honor –tb style for setup/teardown errors as well.
     Thanks Maho.

   - fix issue307 - use yaml.safe_load in example, thanks Mark Eichin.

   - better parametrize error messages, thanks Brianna Laugher

   - pytest_terminal_summary(terminalreporter) hooks can now use
     “.section(title)” and “.line(msg)” methods to print extra
     information at the end of a test run.


File: pytest.info,  Node: 2 3 5 2013-04-30,  Next: 2 3 4 2012-11-20,  Prev: 2 4,  Up: Changelog

47.138 2.3.5 (2013-04-30)
=========================

   - fix issue169: respect –tb=style with setup/teardown errors as well.

   - never consider a fixture function for test function collection

   - allow re-running of test items / helps to fix pytest-reruntests
     plugin and also help to keep less fixture/resource references alive

   - put captured stdout/stderr into junitxml output even for passing
     tests (thanks Adam Goucher)

   - Issue 265 - integrate nose setup/teardown with setupstate so it
     doesn’t try to teardown if it did not setup

   - issue 271 - don’t write junitxml on worker nodes

   - Issue 274 - don’t try to show full doctest example when doctest
     does not know the example location

   - issue 280 - disable assertion rewriting on buggy CPython 2.6.0

   - inject “getfixture()” helper to retrieve fixtures from doctests,
     thanks Andreas Zeidler

   - issue 259 - when assertion rewriting, be consistent with the
     default source encoding of ASCII on Python 2

   - issue 251 - report a skip instead of ignoring classes with init

   - issue250 unicode/str mixes in parametrization names and values now
     works

   - issue257, assertion-triggered compilation of source ending in a
     comment line doesn’t blow up in python2.5 (fixed through
     py>=1.4.13.dev6)

   - fix –genscript option to generate standalone scripts that also work
     with python3.3 (importer ordering)

   - issue171 - in assertion rewriting, show the repr of some global
     variables

   - fix option help for “-k”

   - move long description of distribution into README.rst

   - improve docstring for metafunc.parametrize()

   - fix bug where using capsys with pytest.set_trace() in a test
     function would break when looking at capsys.readouterr()

   - allow to specify prefixes starting with “_” when customizing
     python_functions test discovery.  (thanks Graham Horler)

   - improve PYTEST_DEBUG tracing output by putting extra data on a new
     lines with additional indent

   - ensure OutcomeExceptions like skip/fail have initialized exception
     attributes

   - issue 260 - don’t use nose special setup on plain unittest cases

   - fix issue134 - print the collect errors that prevent running
     specified test items

   - fix issue266 - accept unicode in MarkEvaluator expressions


File: pytest.info,  Node: 2 3 4 2012-11-20,  Next: 2 3 3 2012-11-06,  Prev: 2 3 5 2013-04-30,  Up: Changelog

47.139 2.3.4 (2012-11-20)
=========================

   - yielded test functions will now have autouse-fixtures active but
     cannot accept fixtures as funcargs - it’s anyway recommended to
     rather use the post-2.0 parametrize features instead of yield, see:
     ‘http://pytest.org/en/stable/example/how-to/parametrize.html’

   - fix autouse-issue where autouse-fixtures would not be discovered if
     defined in an a/conftest.py file and tests in a/tests/test_some.py

   - fix issue226 - LIFO ordering for fixture teardowns

   - fix issue224 - invocations with >256 char arguments now work

   - fix issue91 - add/discuss package/directory level setups in example

   - allow to dynamically define markers via item.keywords[…]=assignment
     integrating with “-m” option

   - make “-k” accept an expressions the same as with “-m” so that one
     can write: -k “name1 or name2” etc.  This is a slight
     incompatibility if you used special syntax like
     “TestClass.test_method” which you now need to write as -k
     “TestClass and test_method” to match a certain method in a certain
     test class.


File: pytest.info,  Node: 2 3 3 2012-11-06,  Next: 2 3 2 2012-10-25,  Prev: 2 3 4 2012-11-20,  Up: Changelog

47.140 2.3.3 (2012-11-06)
=========================

   - fix issue214 - parse modules that contain special objects like e.
     g.  flask’s request object which blows up on getattr access if no
     request is active.  thanks Thomas Waldmann.

   - fix issue213 - allow to parametrize with values like numpy arrays
     that do not support an __eq__ operator

   - fix issue215 - split test_python.org into multiple files

   - fix issue148 - @unittest.skip on classes is now recognized and
     avoids calling setUpClass/tearDownClass, thanks Pavel Repin

   - fix issue209 - reintroduce python2.4 support by depending on newer
     pylib which re-introduced statement-finding for pre-AST
     interpreters

   - nose support: only call setup if it’s a callable, thanks Andrew
     Taumoefolau

   - fix issue219 - add py2.4-3.3 classifiers to TROVE list

   - in tracebacks ‘,*’ arg values are now shown next to normal
     arguments (thanks Manuel Jacob)

   - fix issue217 - support mock.patch with pytest’s fixtures - note
     that you need either mock-1.0.1 or the python3.3 builtin
     unittest.mock.

   - fix issue127 - improve documentation for pytest_addoption() and add
     a ‘config.getoption(name)’ helper function for consistency.


File: pytest.info,  Node: 2 3 2 2012-10-25,  Next: 2 3 1 2012-10-20,  Prev: 2 3 3 2012-11-06,  Up: Changelog

47.141 2.3.2 (2012-10-25)
=========================

   - fix issue208 and fix issue29 use new py version to avoid long
     pauses when printing tracebacks in long modules

   - fix issue205 - conftests in subdirs customizing
     pytest_pycollect_makemodule and pytest_pycollect_makeitem now work
     properly

   - fix teardown-ordering for parametrized setups

   - fix issue127 - better documentation for pytest_addoption and
     related objects.

   - fix unittest behaviour: TestCase.runtest only called if there are
     test methods defined

   - improve trial support: don’t collect its empty
     unittest.TestCase.runTest() method

   - “python setup.py test” now works with pytest itself

   - fix/improve internal/packaging related bits:

        - exception message check of test_nose.py now passes on python33
          as well

        - issue206 - fix test_assertrewrite.py to work when a global
          PYTHONDONTWRITEBYTECODE=1 is present

        - add tox.ini to pytest distribution so that ignore-dirs and
          others config bits are properly distributed for maintainers
          who run pytest-own tests


File: pytest.info,  Node: 2 3 1 2012-10-20,  Next: 2 3 0 2012-10-19,  Prev: 2 3 2 2012-10-25,  Up: Changelog

47.142 2.3.1 (2012-10-20)
=========================

   - fix issue202 - fix regression: using “self” from fixture functions
     now works as expected (it’s the same “self” instance that a test
     method which uses the fixture sees)

   - skip pexpect using tests (test_pdb.py mostly) on freebsd* systems
     due to pexpect not supporting it properly (hanging)

   - link to web pages from –markers output which provides help for
     pytest.mark.* usage.


File: pytest.info,  Node: 2 3 0 2012-10-19,  Next: 2 2 4 2012-05-22,  Prev: 2 3 1 2012-10-20,  Up: Changelog

47.143 2.3.0 (2012-10-19)
=========================

   - fix issue202 - better automatic names for parametrized test
     functions

   - fix issue139 - introduce @pytest.fixture which allows direct
     scoping and parametrization of funcarg factories.

   - fix issue198 - conftest fixtures were not found on windows32 in
     some circumstances with nested directory structures due to path
     manipulation issues

   - fix issue193 skip test functions with were parametrized with empty
     parameter sets

   - fix python3.3 compat, mostly reporting bits that previously
     depended on dict ordering

   - introduce re-ordering of tests by resource and parametrization
     setup which takes precedence to the usual file-ordering

   - fix issue185 monkeypatching time.time does not cause pytest to fail

   - fix issue172 duplicate call of pytest.fixture decoratored
     setup_module functions

   - fix junitxml=path construction so that if tests change the current
     working directory and the path is a relative path it is constructed
     correctly from the original current working dir.

   - fix “python setup.py test” example to cause a proper “errno” return

   - fix issue165 - fix broken doc links and mention stackoverflow for
     FAQ

   - catch unicode-issues when writing failure representations to
     terminal to prevent the whole session from crashing

   - fix xfail/skip confusion: a skip-mark or an imperative pytest.skip
     will now take precedence before xfail-markers because we can’t
     determine xfail/xpass status in case of a skip.  see also:
     ‘http://stackoverflow.com/questions/11105828/in-py-test-when-i-explicitly-skip-a-test-that-is-marked-as-xfail-how-can-i-get’

   - always report installed 3rd party plugins in the header of a test
     run

   - fix issue160: a failing setup of an xfail-marked tests should be
     reported as xfail (not xpass)

   - fix issue128: show captured output when capsys/capfd are used

   - fix issue179: properly show the dependency chain of factories

   - pluginmanager.register(…) now raises ValueError if the plugin has
     been already registered or the name is taken

   - fix issue159: improve ‘https://docs.pytest.org/en/6.0.1/faq.html’
     especially with respect to the “magic” history, also mention
     pytest-django, trial and unittest integration.

   - make request.keywords and node.keywords writable.  All descendant
     collection nodes will see keyword values.  Keywords are
     dictionaries containing markers and other info.

   - fix issue 178: xml binary escapes are now wrapped in py.xml.raw

   - fix issue 176: correctly catch the builtin AssertionError even when
     we replaced AssertionError with a subclass on the python level

   - factory discovery no longer fails with magic global callables that
     provide no sane __code__ object (mock.call for example)

   - fix issue 182: testdir.inprocess_run now considers passed plugins

   - 
     fix issue 188: ensure sys.exc_info is clear on python2

          before calling into a test

   - fix issue 191: add unittest TestCase runTest method support

   - fix issue 156: monkeypatch correctly handles class level
     descriptors

   - reporting refinements:

        - pytest_report_header now receives a “startdir” so that you can
          use startdir.bestrelpath(yourpath) to show nice relative path

        - allow plugins to implement both pytest_report_header and
          pytest_sessionstart (sessionstart is invoked first).

        - don’t show deselected reason line if there is none

        - py.test -vv will show all of assert comparisons instead of
          truncating


File: pytest.info,  Node: 2 2 4 2012-05-22,  Next: 2 2 3 2012-02-05,  Prev: 2 3 0 2012-10-19,  Up: Changelog

47.144 2.2.4 (2012-05-22)
=========================

   - fix error message for rewritten assertions involving the % operator

   - fix issue 126: correctly match all invalid xml characters for
     junitxml binary escape

   - fix issue with unittest: now @unittest.expectedFailure markers
     should be processed correctly (you can also use @pytest.mark
     markers)

   - document integration with the extended distribute/setuptools test
     commands

   - fix issue 140: properly get the real functions of bound
     classmethods for setup/teardown_class

   - fix issue #141: switch from the deceased paste.pocoo.org to
     bpaste.net

   - fix issue #143: call unconfigure/sessionfinish always when
     configure/sessionstart where called

   - fix issue #144: better mangle test ids to junitxml classnames

   - upgrade distribute_setup.py to 0.6.27


File: pytest.info,  Node: 2 2 3 2012-02-05,  Next: 2 2 2 2012-02-05,  Prev: 2 2 4 2012-05-22,  Up: Changelog

47.145 2.2.3 (2012-02-05)
=========================

   - fix uploaded package to only include necessary files


File: pytest.info,  Node: 2 2 2 2012-02-05,  Next: 2 2 1 2011-12-16,  Prev: 2 2 3 2012-02-05,  Up: Changelog

47.146 2.2.2 (2012-02-05)
=========================

   - fix issue101: wrong args to unittest.TestCase test function now
     produce better output

   - fix issue102: report more useful errors and hints for when a test
     directory was renamed and some pyc/__pycache__ remain

   - fix issue106: allow parametrize to be applied multiple times e.g.
     from module, class and at function level.

   - fix issue107: actually perform session scope finalization

   - don’t check in parametrize if indirect parameters are funcarg names

   - add chdir method to monkeypatch funcarg

   - fix crash resulting from calling monkeypatch undo a second time

   - fix issue115: make –collectonly robust against early failure
     (missing files/directories)

   - “-qq –collectonly” now shows only files and the number of tests in
     them

   - “-q –collectonly” now shows test ids

   - allow adding of attributes to test reports such that it also works
     with distributed testing (no upgrade of pytest-xdist needed)


File: pytest.info,  Node: 2 2 1 2011-12-16,  Next: 2 2 0 2011-11-18,  Prev: 2 2 2 2012-02-05,  Up: Changelog

47.147 2.2.1 (2011-12-16)
=========================

   - fix issue99 (in pytest and py) internallerrors with resultlog now
     produce better output - fixed by normalizing pytest_internalerror
     input arguments.

   - fix issue97 / traceback issues (in pytest and py) improve traceback
     output in conjunction with jinja2 and cython which hack tracebacks

   - fix issue93 (in pytest and pytest-xdist) avoid “delayed teardowns”:
     the final test in a test node will now run its teardown directly
     instead of waiting for the end of the session.  Thanks Dave Hunt
     for the good reporting and feedback.  The pytest_runtest_protocol
     as well as the pytest_runtest_teardown hooks now have “nextitem”
     available which will be None indicating the end of the test run.

   - fix collection crash due to unknown-source collected items, thanks
     to Ralf Schmitt (fixed by depending on a more recent pylib)


File: pytest.info,  Node: 2 2 0 2011-11-18,  Next: 2 1 3 2011-10-18,  Prev: 2 2 1 2011-12-16,  Up: Changelog

47.148 2.2.0 (2011-11-18)
=========================

   - fix issue90: introduce eager tearing down of test items so that
     teardown function are called earlier.

   - add an all-powerful metafunc.parametrize function which allows to
     parametrize test function arguments in multiple steps and therefore
     from independent plugins and places.

   - add a @pytest.mark.parametrize helper which allows to easily call a
     test function with different argument values

   - Add examples to the “parametrize” example page, including a quick
     port of Test scenarios and the new parametrize function and
     decorator.

   - introduce registration for “pytest.mark.*” helpers via ini-files or
     through plugin hooks.  Also introduce a “–strict” option which will
     treat unregistered markers as errors allowing to avoid typos and
     maintain a well described set of markers for your test suite.  See
     examples at ‘http://pytest.org/en/stable/how-to/mark.html’ and its
     links.

   - issue50: introduce “-m marker” option to select tests based on
     markers (this is a stricter and more predictable version of ‘-k’ in
     that “-m” only matches complete markers and has more obvious rules
     for and/or semantics.

   - new feature to help optimizing the speed of your tests:
     –durations=N option for displaying N slowest test calls and
     setup/teardown methods.

   - fix issue87: –pastebin now works with python3

   - fix issue89: –pdb with unexpected exceptions in doctest work more
     sensibly

   - fix and cleanup pytest’s own test suite to not leak FDs

   - fix issue83: link to generated funcarg list

   - fix issue74: pyarg module names are now checked against
     imp.find_module false positives

   - fix compatibility with twisted/trial-11.1.0 use cases

   - simplify Node.listchain

   - simplify junitxml output code by relying on py.xml

   - add support for skip properties on unittest classes and functions


File: pytest.info,  Node: 2 1 3 2011-10-18,  Next: 2 1 2 2011-09-24,  Prev: 2 2 0 2011-11-18,  Up: Changelog

47.149 2.1.3 (2011-10-18)
=========================

   - fix issue79: assertion rewriting failed on some comparisons in
     boolops

   - correctly handle zero length arguments (a la pytest ‘’)

   - fix issue67 / junitxml now contains correct test durations, thanks
     ronny

   - fix issue75 / skipping test failure on jython

   - fix issue77 / Allow assertrepr_compare hook to apply to a subset of
     tests


File: pytest.info,  Node: 2 1 2 2011-09-24,  Next: 2 1 1,  Prev: 2 1 3 2011-10-18,  Up: Changelog

47.150 2.1.2 (2011-09-24)
=========================

   - fix assertion rewriting on files with windows newlines on some
     Python versions

   - refine test discovery by package/module name (–pyargs), thanks
     Florian Mayer

   - fix issue69 / assertion rewriting fixed on some boolean operations

   - fix issue68 / packages now work with assertion rewriting

   - fix issue66: use different assertion rewriting caches when the -O
     option is passed

   - don’t try assertion rewriting on Jython, use reinterp


File: pytest.info,  Node: 2 1 1,  Next: 2 1 0 2011-07-09,  Prev: 2 1 2 2011-09-24,  Up: Changelog

47.151 2.1.1
============

   - fix issue64 / pytest.set_trace now works within
     pytest_generate_tests hooks

   - fix issue60 / fix error conditions involving the creation of
     __pycache__

   - fix issue63 / assertion rewriting on inserts involving strings
     containing ‘%’

   - fix assertion rewriting on calls with a ** arg

   - don’t cache rewritten modules if bytecode generation is disabled

   - fix assertion rewriting in read-only directories

   - fix issue59: provide system-out/err tags for junitxml output

   - fix issue61: assertion rewriting on boolean operations with 3 or
     more operands

   - you can now build a man page with “cd doc ; make man”


File: pytest.info,  Node: 2 1 0 2011-07-09,  Next: 2 0 3 2011-05-11,  Prev: 2 1 1,  Up: Changelog

47.152 2.1.0 (2011-07-09)
=========================

   - fix issue53 call nosestyle setup functions with correct ordering

   - fix issue58 and issue59: new assertion code fixes

   - merge Benjamin’s assertionrewrite branch: now assertions for test
     modules on python 2.6 and above are done by rewriting the AST and
     saving the pyc file before the test module is imported.  see
     doc/assert.txt for more info.

   - fix issue43: improve doctests with better traceback reporting on
     unexpected exceptions

   - fix issue47: timing output in junitxml for test cases is now
     correct

   - fix issue48: typo in MarkInfo repr leading to exception

   - fix issue49: avoid confusing error when initizaliation partially
     fails

   - fix issue44: env/username expansion for junitxml file path

   - show releaselevel information in test runs for pypy

   - reworked doc pages for better navigation and PDF generation

   - report KeyboardInterrupt even if interrupted during session startup

   - fix issue 35 - provide PDF doc version and download link from index
     page


File: pytest.info,  Node: 2 0 3 2011-05-11,  Next: 2 0 2 2011-03-09,  Prev: 2 1 0 2011-07-09,  Up: Changelog

47.153 2.0.3 (2011-05-11)
=========================

   - fix issue38: nicer tracebacks on calls to hooks, particularly early
     configure/sessionstart ones

   - fix missing skip reason/meta information in junitxml files,
     reported via
     ‘http://lists.idyll.org/pipermail/testing-in-python/2011-March/003928.html’

   - fix issue34: avoid collection failure with “test” prefixed classes
     deriving from object.

   - don’t require zlib (and other libs) for genscript plugin without
     –genscript actually being used.

   - speed up skips (by not doing a full traceback representation
     internally)

   - fix issue37: avoid invalid characters in junitxml’s output


File: pytest.info,  Node: 2 0 2 2011-03-09,  Next: 2 0 1 2011-02-07,  Prev: 2 0 3 2011-05-11,  Up: Changelog

47.154 2.0.2 (2011-03-09)
=========================

   - tackle issue32 - speed up test runs of very quick test functions by
     reducing the relative overhead

   - fix issue30 - extended xfail/skipif handling and improved
     reporting.  If you have a syntax error in your skip/xfail
     expressions you now get nice error reports.

     Also you can now access module globals from xfail/skipif
     expressions so that this for example works now:

          import pytest
          import mymodule
          @pytest.mark.skipif("mymodule.__version__[0] == "1")
          def test_function():
              pass

     This will not run the test function if the module’s version string
     does not start with a “1”.  Note that specifying a string instead
     of a boolean expressions allows py.test to report meaningful
     information when summarizing a test run as to what conditions lead
     to skipping (or xfail-ing) tests.

   - fix issue28 - setup_method and pytest_generate_tests work together
     The setup_method fixture method now gets called also for test
     function invocations generated from the pytest_generate_tests hook.

   - fix issue27 - collectonly and keyword-selection (-k) now work
     together Also, if you do “py.test –collectonly -q” you now get a
     flat list of test ids that you can use to paste to the py.test
     commandline in order to execute a particular test.

   - fix issue25 avoid reported problems with –pdb and
     python3.2/encodings output

   - fix issue23 - tmpdir argument now works on Python3.2 and WindowsXP
     Starting with Python3.2 os.symlink may be supported.  By requiring
     a newer py lib version the py.path.local() implementation
     acknowledges this.

   - fixed typos in the docs (thanks Victor Garcia, Brianna Laugher) and
     particular thanks to Laura Creighton who also reviewed parts of the
     documentation.

   - fix slightly wrong output of verbose progress reporting for classes
     (thanks Amaury)

   - more precise (avoiding of) deprecation warnings for
     node.Class|Function accesses

   - avoid std unittest assertion helper code in tracebacks (thanks
     Ronny)


File: pytest.info,  Node: 2 0 1 2011-02-07,  Next: 2 0 0 2010-11-25,  Prev: 2 0 2 2011-03-09,  Up: Changelog

47.155 2.0.1 (2011-02-07)
=========================

   - refine and unify initial capturing so that it works nicely even if
     the logging module is used on an early-loaded conftest.py file or
     plugin.

   - allow to omit “()” in test ids to allow for uniform test ids as
     produced by Alfredo’s nice pytest.vim plugin.

   - fix issue12 - show plugin versions with “–version” and
     “–traceconfig” and also document how to add extra information to
     reporting test header

   - fix issue17 (import-* reporting issue on python3) by requiring
     py>1.4.0 (1.4.1 is going to include it)

   - fix issue10 (numpy arrays truth checking) by refining assertion
     interpretation in py lib

   - fix issue15: make nose compatibility tests compatible with python3
     (now that nose-1.0 supports python3)

   - remove somewhat surprising “same-conftest” detection because it
     ignores conftest.py when they appear in several subdirs.

   - improve assertions (“not in”), thanks Floris Bruynooghe

   - improve behaviour/warnings when running on top of “python -OO”
     (assertions and docstrings are turned off, leading to potential
     false positives)

   - introduce a pytest_cmdline_processargs(args) hook to allow dynamic
     computation of command line arguments.  This fixes a regression
     because py.test prior to 2.0 allowed to set command line options
     from conftest.py files which so far pytest-2.0 only allowed from
     ini-files now.

   - fix issue7: assert failures in doctest modules.  unexpected
     failures in doctests will not generally show nicer, i.e.  within
     the doctest failing context.

   - fix issue9: setup/teardown functions for an xfail-marked test will
     report as xfail if they fail but report as normally passing (not
     xpassing) if they succeed.  This only is true for “direct”
     setup/teardown invocations because teardown_class/ teardown_module
     cannot closely relate to a single test.

   - fix issue14: no logging errors at process exit

   - refinements to “collecting” output on non-ttys

   - refine internal plugin registration and –traceconfig output

   - introduce a mechanism to prevent/unregister plugins from the
     command line, see
     ‘http://pytest.org/en/stable/how-to/plugins.html#cmdunregister’

   - activate resultlog plugin by default

   - fix regression wrt yielded tests which due to the
     collection-before-running semantics were not setup as with pytest
     1.3.4.  Note, however, that the recommended and much cleaner way to
     do test parametraization remains the “pytest_generate_tests”
     mechanism, see the docs.


File: pytest.info,  Node: 2 0 0 2010-11-25,  Next: 1 3 4 2010-09-14,  Prev: 2 0 1 2011-02-07,  Up: Changelog

47.156 2.0.0 (2010-11-25)
=========================

   - pytest-2.0 is now its own package and depends on pylib-2.0

   - new ability: python -m pytest / python -m pytest.main ability

   - new python invocation: pytest.main(args, plugins) to load some
     custom plugins early.

   - try harder to run unittest test suites in a more compatible manner
     by deferring setup/teardown semantics to the unittest package.
     also work harder to run twisted/trial and Django tests which should
     now basically work by default.

   - introduce a new way to set config options via ini-style files, by
     default setup.cfg and tox.ini files are searched.  The old ways
     (certain environment variables, dynamic conftest.py reading is
     removed).

   - add a new “-q” option which decreases verbosity and prints a more
     nose/unittest-style “dot” output.

   - fix issue135 - marks now work with unittest test cases as well

   - fix issue126 - introduce py.test.set_trace() to trace execution via
     PDB during the running of tests even if capturing is ongoing.

   - fix issue123 - new “python -m py.test” invocation for py.test
     (requires Python 2.5 or above)

   - fix issue124 - make reporting more resilient against tests opening
     files on filedescriptor 1 (stdout).

   - fix issue109 - sibling conftest.py files will not be loaded.  (and
     Directory collectors cannot be customized anymore from a
     Directory’s conftest.py - this needs to happen at least one level
     up).

   - introduce (customizable) assertion failure representations and
     enhance output on assertion failures for comparisons and other
     cases (Floris Bruynooghe)

   - nose-plugin: pass through type-signature failures in setup/teardown
     functions instead of not calling them (Ed Singleton)

   - remove py.test.collect.Directory (follows from a major refactoring
     and simplification of the collection process)

   - majorly reduce py.test core code, shift function/python testing to
     own plugin

   - fix issue88 (finding custom test nodes from command line arg)

   - refine ‘tmpdir’ creation, will now create basenames better
     associated with test names (thanks Ronny)

   - “xpass” (unexpected pass) tests don’t cause exitcode!=0

   - fix issue131 / issue60 - importing doctests in __init__ files used
     as namespace packages

   - fix issue93 stdout/stderr is captured while importing conftest.py

   - fix bug: unittest collected functions now also can have
     “pytestmark” applied at class/module level

   - add ability to use “class” level for cached_setup helper

   - fix strangeness: mark.* objects are now immutable, create new
     instances


File: pytest.info,  Node: 1 3 4 2010-09-14,  Next: 1 3 3 2010-07-30,  Prev: 2 0 0 2010-11-25,  Up: Changelog

47.157 1.3.4 (2010-09-14)
=========================

   - fix issue111: improve install documentation for windows

   - fix issue119: fix custom collectability of __init__.py as a module

   - fix issue116: –doctestmodules work with __init__.py files as well

   - fix issue115: unify internal exception
     passthrough/catching/GeneratorExit

   - fix issue118: new –tb=native for presenting cpython-standard
     exceptions


File: pytest.info,  Node: 1 3 3 2010-07-30,  Next: 1 3 2 2010-07-08,  Prev: 1 3 4 2010-09-14,  Up: Changelog

47.158 1.3.3 (2010-07-30)
=========================

   - fix issue113: assertion representation problem with triple-quoted
     strings (and possibly other cases)

   - make conftest loading detect that a conftest file with the same
     content was already loaded, avoids surprises in nested directory
     structures which can be produced e.g.  by Hudson.  It probably
     removes the need to use –confcutdir in most cases.

   - fix terminal coloring for win32 (thanks Michael Foord for
     reporting)

   - fix weirdness: make terminal width detection work on stdout instead
     of stdin (thanks Armin Ronacher for reporting)

   - remove trailing whitespace in all py/text distribution files


File: pytest.info,  Node: 1 3 2 2010-07-08,  Next: 1 3 1 2010-05-25,  Prev: 1 3 3 2010-07-30,  Up: Changelog

47.159 1.3.2 (2010-07-08)
=========================

‘New features’

   - fix issue103: introduce py.test.raises as context manager,
     examples:

          with py.test.raises(ZeroDivisionError):
              x = 0
              1 / x

          with py.test.raises(RuntimeError) as excinfo:
              call_something()

          # you may do extra checks on excinfo.value|type|traceback here

     (thanks Ronny Pfannschmidt)

   - Funcarg factories can now dynamically apply a marker to a test
     invocation.  This is for example useful if a factory provides
     parameters to a test which are expected-to-fail:

          def pytest_funcarg__arg(request):
              request.applymarker(py.test.mark.xfail(reason="flaky config"))
              ...

          def test_function(arg):
              ...

   - improved error reporting on collection and import errors.  This
     makes use of a more general mechanism, namely that for custom test
     item/collect nodes ‘node.repr_failure(excinfo)’ is now uniformly
     called so that you can override it to return a string error
     representation of your choice which is going to be reported as a
     (red) string.

   - introduce ‘–junitprefix=STR’ option to prepend a prefix to all
     reports in the junitxml file.

‘Bug fixes’

   - make tests and the ‘pytest_recwarn’ plugin in particular fully
     compatible to Python2.7 (if you use the ‘recwarn’ funcarg warnings
     will be enabled so that you can properly check for their existence
     in a cross-python manner).

   - refine –pdb: ignore xfailed tests, unify its TB-reporting and don’t
     display failures again at the end.

   - fix assertion interpretation with the ** operator (thanks Benjamin
     Peterson)

   - fix issue105 assignment on the same line as a failing assertion
     (thanks Benjamin Peterson)

   - fix issue104 proper escaping for test names in junitxml plugin
     (thanks anonymous)

   - fix issue57 -f|–looponfail to work with xpassing tests (thanks
     Ronny)

   - fix issue92 collectonly reporter and –pastebin (thanks Benjamin
     Peterson)

   - fix py.code.compile(source) to generate unique filenames

   - fix assertion re-interp problems on PyPy, by deferring code
     compilation to the (overridable) Frame.eval class.  (thanks Amaury
     Forgeot)

   - fix py.path.local.pyimport() to work with directories

   - streamline py.path.local.mkdtemp implementation and usage

   - don’t print empty lines when showing junitxml-filename

   - add optional boolean ignore_errors parameter to
     py.path.local.remove

   - fix terminal writing on win32/python2.4

   - py.process.cmdexec() now tries harder to return properly encoded
     unicode objects on all python versions

   - install plain py.test/py.which scripts also for Jython, this helps
     to get canonical script paths in virtualenv situations

   - make path.bestrelpath(path) return “.”, note that when calling
     X.bestrelpath the assumption is that X is a directory.

   - make initial conftest discovery ignore “–” prefixed arguments

   - fix resultlog plugin when used in a multicpu/multihost xdist
     situation (thanks Jakub Gustak)

   - perform distributed testing related reporting in the xdist-plugin
     rather than having dist-related code in the generic py.test
     distribution

   - fix homedir detection on Windows

   - ship distribute_setup.py version 0.6.13


File: pytest.info,  Node: 1 3 1 2010-05-25,  Next: 1 3 0 2010-05-05,  Prev: 1 3 2 2010-07-08,  Up: Changelog

47.160 1.3.1 (2010-05-25)
=========================

‘New features’

   - issue91: introduce new py.test.xfail(reason) helper to imperatively
     mark a test as expected to fail.  Can be used from within setup and
     test functions.  This is useful especially for parametrized tests
     when certain configurations are expected-to-fail.  In this case the
     declarative approach with the @py.test.mark.xfail cannot be used as
     it would mark all configurations as xfail.

   - issue102: introduce new –maxfail=NUM option to stop test runs after
     NUM failures.  This is a generalization of the ‘-x’ or ‘–exitfirst’
     option which is now equivalent to ‘–maxfail=1’.  Both ‘-x’ and
     ‘–maxfail’ will now also print a line near the end indicating the
     Interruption.

   - issue89: allow py.test.mark decorators to be used on classes (class
     decorators were introduced with python2.6) and also allow to have
     multiple markers applied at class/module level by specifying a
     list.

   - improve and refine letter reporting in the progress bar: .  pass f
     failed test s skipped tests (reminder: use for dependency/platform
     mismatch only) x xfailed test (test that was expected to fail) X
     xpassed test (test that was expected to fail but passed)

     You can use any combination of ‘fsxX’ with the ‘-r’ extended
     reporting option.  The xfail/xpass results will show up as skipped
     tests in the junitxml output - which also fixes issue99.

   - make py.test.cmdline.main() return the exitstatus instead of
     raising SystemExit and also allow it to be called multiple times.
     This of course requires that your application and tests are
     properly teared down and don’t have global state.

‘Bug Fixes’

   - improved traceback presentation: - improved and unified reporting
     for “–tb=short” option - Errors during test module imports are much
     shorter, (using –tb=short style) - raises shows shorter more
     relevant tracebacks - –fulltrace now more systematically makes
     traces longer / inhibits cutting

   - improve support for raises and other dynamically compiled code by
     manipulating python’s linecache.cache instead of the previous
     rather hacky way of creating custom code objects.  This makes it
     seamlessly work on Jython and PyPy where it previously didn’t.

   - fix issue96: make capturing more resilient against Control-C
     interruptions (involved somewhat substantial refactoring to the
     underlying capturing functionality to avoid race conditions).

   - fix chaining of conditional skipif/xfail decorators - so it works
     now as expected to use multiple @py.test.mark.skipif(condition)
     decorators, including specific reporting which of the conditions
     lead to skipping.

   - fix issue95: late-import zlib so that it’s not required for general
     py.test startup.

   - fix issue94: make reporting more robust against bogus source code
     (and internally be more careful when presenting unexpected byte
     sequences)


File: pytest.info,  Node: 1 3 0 2010-05-05,  Next: 1 2 0 2010-01-18,  Prev: 1 3 1 2010-05-25,  Up: Changelog

47.161 1.3.0 (2010-05-05)
=========================

   - deprecate –report option in favour of a new shorter and easier to
     remember -r option: it takes a string argument consisting of any
     combination of ‘xfsX’ characters.  They relate to the single chars
     you see during the dotted progress printing and will print an extra
     line per test at the end of the test run.  This extra line
     indicates the exact position or test ID that you directly paste to
     the py.test cmdline in order to re-run a particular test.

   - allow external plugins to register new hooks via the new
     pytest_addhooks(pluginmanager) hook.  The new release of the
     pytest-xdist plugin for distributed and looponfailing testing
     requires this feature.

   - add a new pytest_ignore_collect(path, config) hook to allow
     projects and plugins to define exclusion behaviour for their
     directory structure - for example you may define in a conftest.py
     this method:

          def pytest_ignore_collect(path):
              return path.check(link=1)

     to prevent even a collection try of any tests in symlinked dirs.

   - new pytest_pycollect_makemodule(path, parent) hook for allowing
     customization of the Module collection object for a matching test
     module.

   - extend and refine xfail mechanism: ‘@py.test.mark.xfail(run=False)’
     do not run the decorated test ‘@py.test.mark.xfail(reason="...")’
     prints the reason string in xfail summaries specifying ‘--runxfail’
     on command line virtually ignores xfail markers

   - expose (previously internal) commonly useful methods:
     py.io.get_terminal_with() -> return terminal width
     py.io.ansi_print(…) -> print colored/bold text on linux/win32
     py.io.saferepr(obj) -> return limited representation string

   - expose test outcome related exceptions as py.test.skip.Exception,
     py.test.raises.Exception etc., useful mostly for plugins doing
     special outcome interpretation/tweaking

   - (issue85) fix junitxml plugin to handle tests with non-ascii output

   - fix/refine python3 compatibility (thanks Benjamin Peterson)

   - fixes for making the jython/win32 combination work, note however:
     jython2.5.1/win32 does not provide a command line launcher, see
     ‘https://bugs.jython.org/issue1491’ .  See pylib install
     documentation for how to work around.

   - fixes for handling of unicode exception values and unprintable
     objects

   - (issue87) fix unboundlocal error in assertionold code

   - (issue86) improve documentation for looponfailing

   - refine IO capturing: stdin-redirect pseudo-file now has a NOP
     close() method

   - ship distribute_setup.py version 0.6.10

   - added links to the new capturelog and coverage plugins


File: pytest.info,  Node: 1 2 0 2010-01-18,  Next: 1 1 1 2009-11-24,  Prev: 1 3 0 2010-05-05,  Up: Changelog

47.162 1.2.0 (2010-01-18)
=========================

   - refined usage and options for “py.cleanup”:

          py.cleanup     # remove "*.pyc" and "*$py.class" (jython) files
          py.cleanup -e .swp -e .cache # also remove files with these extensions
          py.cleanup -s  # remove "build" and "dist" directory next to setup.py files
          py.cleanup -d  # also remove empty directories
          py.cleanup -a  # synonym for "-s -d -e 'pip-log.txt'"
          py.cleanup -n  # dry run, only show what would be removed

   - add a new option “py.test –funcargs” which shows available funcargs
     and their help strings (docstrings on their respective factory
     function) for a given test path

   - display a short and concise traceback if a funcarg lookup fails

   - early-load “conftest.py” files in non-dot first-level sub
     directories.  allows to conveniently keep and access test-related
     options in a ‘test’ subdir and still add command line options.

   - fix issue67: new super-short traceback-printing option: “–tb=line”
     will print a single line for each failing (python) test indicating
     its filename, lineno and the failure value

   - fix issue78: always call python-level teardown functions even if
     the according setup failed.  This includes refinements for calling
     setup_module/class functions which will now only be called once
     instead of the previous behaviour where they’d be called multiple
     times if they raise an exception (including a Skipped exception).
     Any exception will be re-corded and associated with all tests in
     the according module/class scope.

   - fix issue63: assume <40 columns to be a bogus terminal width,
     default to 80

   - fix pdb debugging to be in the correct frame on raises-related
     errors

   - update apipkg.py to fix an issue where recursive imports might
     unnecessarily break importing

   - fix plugin links


File: pytest.info,  Node: 1 1 1 2009-11-24,  Next: 1 1 0 2009-11-05,  Prev: 1 2 0 2010-01-18,  Up: Changelog

47.163 1.1.1 (2009-11-24)
=========================

   - moved dist/looponfailing from py.test core into a new separately
     released pytest-xdist plugin.

   - new junitxml plugin: –junitxml=path will generate a junit style xml
     file which is processable e.g.  by the Hudson CI system.

   - new option: –genscript=path will generate a standalone py.test
     script which will not need any libraries installed.  thanks to Ralf
     Schmitt.

   - new option: –ignore will prevent specified path from collection.
     Can be specified multiple times.

   - new option: –confcutdir=dir will make py.test only consider
     conftest files that are relative to the specified dir.

   - new funcarg: “pytestconfig” is the pytest config object for access
     to command line args and can now be easily used in a test.

   - install ‘py.test’ and ‘py.which’ with a ‘-$VERSION’ suffix to
     disambiguate between Python3, python2.X, Jython and PyPy installed
     versions.

   - new “pytestconfig” funcarg allows access to test config object

   - new “pytest_report_header” hook can return additional lines to be
     displayed at the header of a test run.

   - (experimental) allow “py.test path::name1::name2::…” for pointing
     to a test within a test collection directly.  This might eventually
     evolve as a full substitute to “-k” specifications.

   - streamlined plugin loading: order is now as documented in
     customize.html: setuptools, ENV, commandline, conftest.  also
     setuptools entry point names are turned to canonical names
     (“pytest_*”)

   - automatically skip tests that need ‘capfd’ but have no os.dup

   - allow pytest_generate_tests to be defined in classes as well

   - deprecate usage of ‘disabled’ attribute in favour of pytestmark

   - deprecate definition of Directory, Module, Class and Function nodes
     in conftest.py files.  Use pytest collect hooks instead.

   - collection/item node specific runtest/collect hooks are only called
     exactly on matching conftest.py files, i.e.  ones which are exactly
     below the filesystem path of an item

   - change: the first pytest_collect_directory hook to return something
     will now prevent further hooks to be called.

   - change: figleaf plugin now requires –figleaf to run.  Also change
     its long command line options to be a bit shorter (see py.test -h).

   - change: pytest doctest plugin is now enabled by default and has a
     new option –doctest-glob to set a pattern for file matches.

   - change: remove internal py._* helper vars, only keep py._pydir

   - robustify capturing to survive if custom pytest_runtest_setup code
     failed and prevented the capturing setup code from running.

   - make py.test.* helpers provided by default plugins visible early -
     works transparently both for pydoc and for interactive sessions
     which will regularly see e.g.  py.test.mark and
     py.test.importorskip.

   - simplify internal plugin manager machinery

   - simplify internal collection tree by introducing a RootCollector
     node

   - fix assert reinterpreation that sees a call containing “keyword=…”

   - fix issue66: invoke pytest_sessionstart and pytest_sessionfinish
     hooks on worker nodes during dist-testing, report module/session
     teardown hooks correctly.

   - fix issue65: properly handle dist-testing if no execnet/py lib
     installed remotely.

   - skip some install-tests if no execnet is available

   - fix docs, fix internal bin/ script generation


File: pytest.info,  Node: 1 1 0 2009-11-05,  Next: 1 0 3,  Prev: 1 1 1 2009-11-24,  Up: Changelog

47.164 1.1.0 (2009-11-05)
=========================

   - introduce automatic plugin registration via ‘pytest11’ entrypoints
     via setuptools’ pkg_resources.iter_entry_points

   - fix py.test dist-testing to work with execnet >= 1.0.0b4

   - re-introduce py.test.cmdline.main() for better backward
     compatibility

   - svn paths: fix a bug with path.check(versioned=True) for svn paths,
     allow ‘%’ in svn paths, make svnwc.update() default to interactive
     mode like in 1.0.x and add svnwc.update(interactive=False) to
     inhibit interaction.

   - refine distributed tarball to contain test and no pyc files

   - try harder to have deprecation warnings for py.compat.* accesses
     report a correct location


File: pytest.info,  Node: 1 0 3,  Next: 1 0 2 2009-08-27,  Prev: 1 1 0 2009-11-05,  Up: Changelog

47.165 1.0.3
============

   * adjust and improve docs

   * remove py.rest tool and internal namespace - it was never really
     advertised and can still be used with the old release if needed.
     If there is interest it could be revived into its own tool i guess.

   * fix issue48 and issue59: raise an Error if the module from an
     imported test file does not seem to come from the filepath - avoids
     “same-name” confusion that has been reported repeatedly

   * merged Ronny’s nose-compatibility hacks: now nose-style
     setup_module() and setup() functions are supported

   * introduce generalized py.test.mark function marking

   * reshuffle / refine command line grouping

   * deprecate parser.addgroup in favour of getgroup which creates
     option group

   * add –report command line option that allows to control showing of
     skipped/xfailed sections

   * generalized skipping: a new way to mark python functions with
     skipif or xfail at function, class and modules level based on
     platform or sys-module attributes.

   * extend py.test.mark decorator to allow for positional args

   * introduce and test “py.cleanup -d” to remove empty directories

   * fix issue #59 - robustify unittest test collection

   * make bpython/help interaction work by adding an __all__ attribute
     to ApiModule, cleanup initpkg

   * use MIT license for pylib, add some contributors

   * remove py.execnet code and substitute all usages with ‘execnet’
     proper

   * fix issue50 - cached_setup now caches more to expectations for test
     functions with multiple arguments.

   * merge Jarko’s fixes, issue #45 and #46

   * add the ability to specify a path for py.lookup to search in

   * fix a funcarg cached_setup bug probably only occurring in
     distributed testing and “module” scope with teardown.

   * many fixes and changes for making the code base python3 compatible,
     many thanks to Benjamin Peterson for helping with this.

   * consolidate builtins implementation to be compatible with >=2.3,
     add helpers to ease keeping 2 and 3k compatible code

   * deprecate py.compat.doctest|subprocess|textwrap|optparse

   * deprecate py.magic.autopath, remove py/magic directory

   * move pytest assertion handling to py/code and a pytest_assertion
     plugin, add “–no-assert” option, deprecate py.magic namespaces in
     favour of (less) py.code ones.

   * consolidate and cleanup py/code classes and files

   * cleanup py/misc, move tests to bin-for-dist

   * introduce delattr/delitem/delenv methods to py.test’s monkeypatch
     funcarg

   * consolidate py.log implementation, remove old approach.

   * introduce py.io.TextIO and py.io.BytesIO for distinguishing between
     text/unicode and byte-streams (uses underlying standard lib io.* if
     available)

   * make py.unittest_convert helper script available which converts
     “unittest.py” style files into the simpler
     assert/direct-test-classes py.test/nosetests style.  The script was
     written by Laura Creighton.

   * simplified internal localpath implementation


File: pytest.info,  Node: 1 0 2 2009-08-27,  Next: 1 0 1 2009-08-19,  Prev: 1 0 3,  Up: Changelog

47.166 1.0.2 (2009-08-27)
=========================

   * fixing packaging issues, triggered by fedora redhat packaging, also
     added doc, examples and contrib dirs to the tarball.

   * added a documentation link to the new django plugin.


File: pytest.info,  Node: 1 0 1 2009-08-19,  Next: 1 0 0 2009-08-04,  Prev: 1 0 2 2009-08-27,  Up: Changelog

47.167 1.0.1 (2009-08-19)
=========================

   * added a ‘pytest_nose’ plugin which handles nose.SkipTest,
     nose-style function/method/generator setup/teardown and tries to
     report functions correctly.

   * capturing of unicode writes or encoded strings to sys.stdout/err
     work better, also terminalwriting was adapted and somewhat unified
     between windows and linux.

   * improved documentation layout and content a lot

   * added a “–help-config” option to show conftest.py / ENV-var names
     for all longopt cmdline options, and some special conftest.py
     variables.  renamed ‘conf_capture’ conftest setting to
     ‘option_capture’ accordingly.

   * fix issue #27: better reporting on non-collectable items given on
     commandline (e.g.  pyc files)

   * fix issue #33: added –version flag (thanks Benjamin Peterson)

   * fix issue #32: adding support for “incomplete” paths to
     wcpath.status()

   * “Test” prefixed classes are ‘not’ collected by default anymore if
     they have an __init__ method

   * monkeypatch setenv() now accepts a “prepend” parameter

   * improved reporting of collection error tracebacks

   * simplified multicall mechanism and plugin architecture, renamed
     some internal methods and argnames


File: pytest.info,  Node: 1 0 0 2009-08-04,  Next: 1 0 0b9 2009-07-31,  Prev: 1 0 1 2009-08-19,  Up: Changelog

47.168 1.0.0 (2009-08-04)
=========================

   * more terse reporting try to show filesystem path relatively to
     current dir

   * improve xfail output a bit


File: pytest.info,  Node: 1 0 0b9 2009-07-31,  Next: 1 0 0b8 2009-07-22,  Prev: 1 0 0 2009-08-04,  Up: Changelog

47.169 1.0.0b9 (2009-07-31)
===========================

   * cleanly handle and report final teardown of test setup

   * fix svn-1.6 compat issue with py.path.svnwc().versioned() (thanks
     Wouter Vanden Hove)

   * setup/teardown or collection problems now show as ERRORs or with
     big “E“‘s in the progress lines.  they are reported and counted
     separately.

   * dist-testing: properly handle test items that get locally collected
     but cannot be collected on the remote side - often due to
     platform/dependency reasons

   * simplified py.test.mark API - see keyword plugin documentation

   * integrate better with logging: capturing now by default captures
     test functions and their immediate setup/teardown in a single
     stream

   * capsys and capfd funcargs now have a readouterr() and a close()
     method (underlyingly py.io.StdCapture/FD objects are used which
     grew a readouterr() method as well to return snapshots of captured
     out/err)

   * make assert-reinterpretation work better with comparisons not
     returning bools (reported with numpy from thanks maciej
     fijalkowski)

   * reworked per-test output capturing into the pytest_iocapture.py
     plugin and thus removed capturing code from config object

   * item.repr_failure(excinfo) instead of item.repr_failure(excinfo,
     outerr)


File: pytest.info,  Node: 1 0 0b8 2009-07-22,  Next: 1 0 0b7,  Prev: 1 0 0b9 2009-07-31,  Up: Changelog

47.170 1.0.0b8 (2009-07-22)
===========================

   * pytest_unittest-plugin is now enabled by default

   * introduced pytest_keyboardinterrupt hook and refined
     pytest_sessionfinish hooked, added tests.

   * workaround a buggy logging module interaction (“closing already
     closed files”).  Thanks to Sridhar Ratnakumar for triggering.

   * if plugins use “py.test.importorskip” for importing a dependency
     only a warning will be issued instead of exiting the testing
     process.

   * many improvements to docs: - refined funcargs doc , use the term
     “factory” instead of “provider” - added a new talk/tutorial doc
     page - better download page - better plugin docstrings - added new
     plugins page and automatic doc generation script

   * fixed teardown problem related to partially failing funcarg setups
     (thanks MrTopf for reporting), “pytest_runtest_teardown” is now
     always invoked even if the “pytest_runtest_setup” failed.

   * tweaked doctest output for docstrings in py modules, thanks
     Radomir.


File: pytest.info,  Node: 1 0 0b7,  Next: 1 0 0b3 2009-06-19,  Prev: 1 0 0b8 2009-07-22,  Up: Changelog

47.171 1.0.0b7
==============

   * renamed py.test.xfail back to py.test.mark.xfail to avoid two ways
     to decorate for xfail

   * re-added py.test.mark decorator for setting keywords on functions
     (it was actually documented so removing it was not nice)

   * remove scope-argument from request.addfinalizer() because
     request.cached_setup has the scope arg.  TOOWTDI.

   * perform setup finalization before reporting failures

   * apply modified patches from Andreas Kloeckner to allow test
     functions to have no func_code (#22) and to make “-k” and function
     keywords work (#20)

   * apply patch from Daniel Peolzleithner (issue #23)

   * resolve issue #18, multiprocessing.Manager() and redirection clash

   * make __name__ == “__channelexec__” for remote_exec code


File: pytest.info,  Node: 1 0 0b3 2009-06-19,  Next: 1 0 0b1,  Prev: 1 0 0b7,  Up: Changelog

47.172 1.0.0b3 (2009-06-19)
===========================

   * plugin classes are removed: one now defines hooks directly in
     conftest.py or global pytest_*.py files.

   * added new pytest_namespace(config) hook that allows to inject
     helpers directly to the py.test.* namespace.

   * documented and refined many hooks

   * added new style of generative tests via pytest_generate_tests hook
     that integrates well with function arguments.


File: pytest.info,  Node: 1 0 0b1,  Next: 0 9 2,  Prev: 1 0 0b3 2009-06-19,  Up: Changelog

47.173 1.0.0b1
==============

   * introduced new “funcarg” setup method, see doc/test/funcarg.txt

   * introduced plugin architecture and many new py.test plugins, see
     doc/test/plugins.txt

   * teardown_method is now guaranteed to get called after a test method
     has run.

   * new method: py.test.importorskip(mod,minversion) will either import
     or call py.test.skip()

   * completely revised internal py.test architecture

   * new py.process.ForkedFunc object allowing to fork execution of a
     function to a sub process and getting a result back.

XXX lots of things missing here XXX


File: pytest.info,  Node: 0 9 2,  Next: 0 9 1,  Prev: 1 0 0b1,  Up: Changelog

47.174 0.9.2
============

   * refined installation and metadata, created new setup.py, now based
     on setuptools/ez_setup (thanks to Ralf Schmitt for his support).

   * improved the way of making py.* scripts available in windows
     environments, they are now added to the Scripts directory as “.cmd”
     files.

   * py.path.svnwc.status() now is more complete and uses xml output
     from the ‘svn’ command if available (Guido Wesdorp)

   * fix for py.path.svn* to work with svn 1.5 (Chris Lamb)

   * fix path.relto(otherpath) method on windows to use normcase for
     checking if a path is relative.

   * py.test’s traceback is better parseable from editors (follows the
     filenames:LINENO: MSG convention) (thanks to Osmo Salomaa)

   * fix to javascript-generation, “py.test –runbrowser” should work
     more reliably now

   * removed previously accidentally added py.test.broken and
     py.test.notimplemented helpers.

   * there now is a py.__version__ attribute


File: pytest.info,  Node: 0 9 1,  Prev: 0 9 2,  Up: Changelog

47.175 0.9.1
============

This is a fairly complete list of v0.9.1, which can serve as a reference
for developers.

   * allowing + signs in py.path.svn urls [39106]

   * fixed support for Failed exceptions without excinfo in py.test
     [39340]

   * added support for killing processes for Windows (as well as
     platforms that support os.kill) in py.misc.killproc [39655]

   * added setup/teardown for generative tests to py.test [40702]

   * added detection of FAILED TO LOAD MODULE to py.test [40703, 40738,
     40739]

   * fixed problem with calling .remove() on wcpaths of non-versioned
     files in py.path [44248]

   * fixed some import and inheritance issues in py.test [41480, 44648,
     44655]

   * fail to run greenlet tests when pypy is available, but without
     stackless [45294]

   * small fixes in rsession tests [45295]

   * fixed issue with 2.5 type representations in py.test [45483, 45484]

   * made that internal reporting issues displaying is done atomically
     in py.test [45518]

   * made that non-existing files are ignored by the py.lookup script
     [45519]

   * improved exception name creation in py.test [45535]

   * made that less threads are used in execnet [merge in 45539]

   * removed lock required for atomic reporting issue displaying in
     py.test [45545]

   * removed globals from execnet [45541, 45547]

   * refactored cleanup mechanics, made that setDaemon is set to 1 to
     make atexit get called in 2.5 (py.execnet) [45548]

   * fixed bug in joining threads in py.execnet’s servemain [45549]

   * refactored py.test.rsession tests to not rely on exact output
     format anymore [45646]

   * using repr() on test outcome [45647]

   * added ‘Reason’ classes for py.test.skip() [45648, 45649]

   * killed some unnecessary sanity check in py.test.collect [45655]

   * avoid using os.tmpfile() in py.io.fdcapture because on Windows it’s
     only usable by Administrators [45901]

   * added support for locking and non-recursive commits to
     py.path.svnwc [45994]

   * locking files in py.execnet to prevent CPython from segfaulting
     [46010]

   * added export() method to py.path.svnurl

   * fixed -d -x in py.test [47277]

   * fixed argument concatenation problem in py.path.svnwc [49423]

   * restore py.test behaviour that it exits with code 1 when there are
     failures [49974]

   * don’t fail on html files that don’t have an accompanying .txt file
     [50606]

   * fixed ‘utestconvert.py < input’ [50645]

   * small fix for code indentation in py.code.source [50755]

   * fix _docgen.py documentation building [51285]

   * improved checks for source representation of code blocks in py.test
     [51292]

   * added support for passing authentication to py.path.svn* objects
     [52000, 52001]

   * removed sorted() call for py.apigen tests in favour of [].sort() to
     support Python 2.3 [52481]


File: pytest.info,  Node: Index,  Prev: Changelog,  Up: Top

Index
*****

 [index ]
* Menu:

* __contains__() (Stash method):         Stash.               (line  63)
* __delitem__() (Stash method):          Stash.               (line  57)
* __getitem__() (Stash method):          Stash.               (line  41)
* __len__() (Stash method):              Stash.               (line  67)
* __setitem__() (Stash method):          Stash.               (line  37)
* __str__() (LineMatcher method):        pytester.            (line 519)
* addfinalizer() (FixtureRequest method): request.            (line  69)
* addfinalizer() (Node method):          Node.                (line 161)
* addini() (Parser method):              Parser.              (line  58)
* addinivalue_line() (Config method):    Config.              (line 127)
* addoption() (OptionGroup method):      OptionGroup.         (line  10)
* addoption() (Parser method):           Parser.              (line  32)
* addopts; configuration value:          Configuration Options.
                                                              (line  25)
* add_cleanup() (Config method):         Config.              (line  99)
* add_hookcall_monitoring() (PytestPluginManager method): PytestPluginManager.
                                                              (line  42)
* add_hookspecs() (PytestPluginManager method): PytestPluginManager.
                                                              (line  58)
* add_marker() (Node method):            Node.                (line 112)
* add_report_section() (Item method):    Item.                (line  60)
* applymarker() (FixtureRequest method): request.             (line  74)
* approx() (in module pytest):           pytest approx.       (line   6)
* args (Config.InvocationParams attribute): Config.           (line  35)
* args (Mark attribute):                 Mark.                (line  12)
* args (MarkDecorator property):         MarkDecorator.       (line  46)
* assert_outcomes() (RunResult method):  pytester.            (line 499)
* at_level() (LogCaptureFixture method): caplog.              (line 108)
* built-in function; pytest.mark.filterwarnings(): pytest mark filterwarnings.
                                                              (line  10)
* built-in function; pytest.mark.skip(): pytest mark skip.    (line  10)
* built-in function; pytest.mark.skipif(): pytest mark skipif.
                                                              (line  10)
* built-in function; pytest.mark.usefixtures(): pytest mark usefixtures.
                                                              (line  11)
* built-in function; pytest.mark.xfail(): pytest mark xfail.  (line  10)
* Cache (class in pytest):               config cache.        (line  18)
* cache; fixture:                        capsysbinary.        (line  24)
* cache_dir; configuration value:        Configuration Options.
                                                              (line  41)
* CallInfo (class in pytest):            CallInfo.            (line   6)
* capfd() (in module _pytest.capture):   capfd.               (line   8)
* capfd; fixture:                        @pytest fixture.     (line  73)
* capfdbinary() (in module _pytest.capture): capfdbinary.     (line   8)
* capfdbinary; fixture:                  capfd.               (line  24)
* caplog (CollectReport property):       CollectReport.       (line  39)
* caplog (TestReport property):          TestReport.          (line  66)
* caplog() (in module _pytest.logging):  caplog.              (line   8)
* caplog; fixture:                       capfdbinary.         (line  24)
* capstderr (CollectReport property):    CollectReport.       (line  45)
* capstderr (TestReport property):       TestReport.          (line  72)
* capstdout (CollectReport property):    CollectReport.       (line  51)
* capstdout (TestReport property):       TestReport.          (line  78)
* capsys() (in module _pytest.capture):  capsys.              (line   8)
* capsys; fixture:                       caplog.              (line 121)
* capsysbinary() (in module _pytest.capture): capsysbinary.   (line   8)
* capsysbinary; fixture:                 capsys.              (line  45)
* CaptureFixture (class in pytest):      capsys.              (line  25)
* chdir() (MonkeyPatch method):          monkeypatch.         (line 157)
* chdir() (Pytester method):             pytester.            (line  54)
* check_pending() (PytestPluginManager method): PytestPluginManager.
                                                              (line  64)
* Class (class in pytest):               Class.               (line   6)
* clear() (LogCaptureFixture method):    caplog.              (line  88)
* clear() (WarningsRecorder method):     recwarn.             (line  36)
* cls (FixtureRequest property):         request.             (line  45)
* cls (Metafunc attribute):              Metafunc.            (line  36)
* collect() (Class method):              Class.               (line  17)
* collect() (Collector method):          Collector.           (line  19)
* collect() (Module method):             Module.              (line  12)
* collect() (Session method):            Session.             (line  49)
* Collector (class in pytest):           Collector.           (line   6)
* Collector.CollectError:                Collector.           (line  13)
* CollectReport (class in pytest):       CollectReport.       (line   6)
* collect_by_name() (Pytester method):   pytester.            (line 338)
* collect_ignore; global variable interpreted by pytest: Global Variables.
                                                              (line   9)
* collect_ignore_glob; global variable interpreted by pytest: Global Variables.
                                                              (line  19)
* combined_with() (Mark method):         Mark.                (line  20)
* config (Class attribute):              Class.               (line  30)
* Config (class in pytest):              Config.              (line   6)
* config (Collector attribute):          Collector.           (line  41)
* config (File attribute):               File.                (line  22)
* config (FixtureRequest property):      request.             (line  37)
* config (FSCollector attribute):        FSCollector.         (line  28)
* config (Function attribute):           Function.            (line  88)
* config (FunctionDefinition attribute): FunctionDefinition.  (line  25)
* config (Item attribute):               Item.                (line  29)
* config (Metafunc attribute):           Metafunc.            (line  19)
* config (Module attribute):             Module.              (line  25)
* config (Node attribute):               Node.                (line  28)
* config (Session attribute):            Session.             (line  62)
* Config.InvocationParams (class in pytest): Config.          (line  20)
* console_output_style; configuration value: Configuration Options.
                                                              (line  52)
* context() (MonkeyPatch class method):  monkeypatch.         (line  56)
* copy_example() (Pytester method):      pytester.            (line 159)
* count_towards_summary (CollectReport property): CollectReport.
                                                              (line  57)
* count_towards_summary (TestReport property): TestReport.    (line  84)
* definition (Metafunc attribute):       Metafunc.            (line  14)
* delattr() (MonkeyPatch method):        monkeypatch.         (line 116)
* delenv() (MonkeyPatch method):         monkeypatch.         (line 146)
* delitem() (MonkeyPatch method):        monkeypatch.         (line 131)
* deprecated_call() (in module pytest):  pytest deprecated_call.
                                                              (line   8)
* dir (Config.InvocationParams attribute): Config.            (line  46)
* disabled() (CaptureFixture method):    capsys.              (line  42)
* doctest_encoding; configuration value: Configuration Options.
                                                              (line  71)
* doctest_namespace() (in module _pytest.doctest): doctest_namespace.
                                                              (line   8)
* doctest_namespace; fixture:            config cache.        (line  67)
* doctest_optionflags; configuration value: Configuration Options.
                                                              (line  76)
* duration (CallInfo attribute):         CallInfo.            (line  25)
* duration (RunResult attribute):        pytester.            (line 472)
* duration (TestReport attribute):       TestReport.          (line  58)
* empty_parameter_set_mark; configuration value: Configuration Options.
                                                              (line  81)
* enable_tracing() (PytestPluginManager method): PytestPluginManager.
                                                              (line  70)
* environment variable; FORCE_COLOR:     Environment Variables.
                                                              (line  58)
* environment variable; FORCE_COLOR <1>: Features<4>.         (line   6)
* environment variable; NO_COLOR:        Environment Variables.
                                                              (line  51)
* environment variable; NO_COLOR <1>:    Features<4>.         (line   6)
* environment variable; PYTEST_ADDOPTS:  Environment Variables.
                                                              (line   8)
* environment variable; PYTEST_CURRENT_TEST: Environment Variables.
                                                              (line  14)
* environment variable; PYTEST_CURRENT_TEST <1>: PYTEST_CURRENT_TEST.
                                                              (line   6)
* environment variable; PYTEST_CURRENT_TEST <2>: PYTEST_CURRENT_TEST environment variable.
                                                              (line  12)
* environment variable; PYTEST_DEBUG:    Environment Variables.
                                                              (line  21)
* environment variable; PYTEST_DISABLE_PLUGIN_AUTOLOAD: Environment Variables.
                                                              (line  25)
* environment variable; PYTEST_PLUGINS:  Plugin discovery order at tool startup.
                                                              (line  22)
* environment variable; PYTEST_PLUGINS <1>: Environment Variables.
                                                              (line  30)
* environment variable; PYTEST_THEME:    Syntax highlighting theme customization.
                                                              (line   9)
* environment variable; PYTEST_THEME <1>: Environment Variables.
                                                              (line  37)
* environment variable; PYTEST_THEME <2>: Environment Variables.
                                                              (line  43)
* environment variable; PYTEST_THEME <3>: Features.           (line  12)
* environment variable; PYTEST_THEME_MODE: Syntax highlighting theme customization.
                                                              (line  11)
* environment variable; PYTEST_THEME_MODE <1>: Environment Variables.
                                                              (line  41)
* environment variable; PYTEST_THEME_MODE <2>: Features.      (line  13)
* environment variable; python;PYTHONWARNINGS: DeprecationWarning and PendingDeprecationWarning.
                                                              (line  36)
* environment variable; PYTHONPATH:      Configuration Options.
                                                              (line 468)
* environment variable; PYTHONPATH <1>:  Bug Fixes<4>.        (line  30)
* environment variable; PYTHONTRACEMALLOC: Resource Warnings. (line  10)
* environment variable; PY_COLORS:       Environment Variables.
                                                              (line  45)
* errisinstance() (ExceptionInfo method): ExceptionInfo.      (line  72)
* errlines (RunResult attribute):        pytester.            (line 457)
* ExceptionInfo (class in pytest):       ExceptionInfo.       (line   6)
* excinfo (CallInfo attribute):          CallInfo.            (line  10)
* exconly() (ExceptionInfo method):      ExceptionInfo.       (line  63)
* exit() (in module pytest):             pytest exit.         (line   6)
* ExitCode (class in pytest):            ExitCode.            (line   6)
* extra_keyword_matches (File attribute): File.               (line  50)
* extra_keyword_matches (FSCollector attribute): FSCollector. (line  51)
* extra_keyword_matches (FunctionDefinition attribute): FunctionDefinition.
                                                              (line  62)
* extra_keyword_matches (Module attribute): Module.           (line  53)
* extra_keyword_matches (Node attribute): Node.               (line  49)
* fail() (in module pytest):             pytest fail.         (line   9)
* failed (CollectReport property):       CollectReport.       (line  67)
* failed (TestReport property):          TestReport.          (line  94)
* faulthandler_timeout; configuration value: Configuration Options.
                                                              (line 102)
* File (class in pytest):                File.                (line   6)
* fill_unfilled() (ExceptionInfo method): ExceptionInfo.      (line  39)
* filterwarnings; configuration value:   Configuration Options.
                                                              (line 115)
* fixture() (in module pytest):          @pytest fixture.     (line   6)
* FixtureDef (class in _pytest.fixtures): FixtureDef.         (line   6)
* fixturename (FixtureRequest attribute): request.            (line  20)
* fixturenames (FixtureRequest property): request.            (line  29)
* fixturenames (Metafunc attribute):     Metafunc.            (line  32)
* FixtureRequest (class in pytest):      request.             (line  12)
* fnmatch_lines() (LineMatcher method):  pytester.            (line 542)
* fnmatch_lines_random() (LineMatcher method): pytester.      (line 526)
* FORCE_COLOR:                           Features<4>.         (line   6)
* for_later() (ExceptionInfo class method): ExceptionInfo.    (line  35)
* freeze_includes() (in module pytest):  pytest freeze_includes.
                                                              (line   8)
* fromdictargs() (Config class method):  Config.              (line 104)
* from_call() (CallInfo class method):   CallInfo.            (line  41)
* from_current() (ExceptionInfo class method): ExceptionInfo. (line  23)
* from_exc_info() (ExceptionInfo class method): ExceptionInfo.
                                                              (line  11)
* from_item_and_call() (TestReport class method): TestReport. (line  62)
* from_parent() (Class class method):    Class.               (line  12)
* from_parent() (FSCollector class method): FSCollector.      (line  15)
* from_parent() (Function class method): Function.            (line  54)
* from_parent() (Node class method):     Node.                (line  61)
* FSCollector (class in _pytest.nodes):  FSCollector.         (line   6)
* fspath (Class attribute):              Class.               (line  43)
* fspath (Collector attribute):          Collector.           (line  54)
* fspath (CollectReport property):       CollectReport.       (line  71)
* fspath (File attribute):               File.                (line  35)
* fspath (FSCollector attribute):        FSCollector.         (line  36)
* fspath (Function attribute):           Function.            (line 101)
* fspath (FunctionDefinition attribute): FunctionDefinition.  (line  42)
* fspath (Item attribute):               Item.                (line  42)
* fspath (Module attribute):             Module.              (line  38)
* fspath (Node attribute):               Node.                (line  13)
* fspath (TestReport property):          TestReport.          (line  98)
* Function (class in pytest):            Function.            (line   6)
* function (FixtureRequest property):    request.             (line  41)
* function (Function property):          Function.            (line  58)
* function (Metafunc attribute):         Metafunc.            (line  28)
* FunctionDefinition (class in _pytest.python): FunctionDefinition.
                                                              (line   6)
* genitems() (Pytester method):          pytester.            (line 197)
* get() (Cache method):                  config cache.        (line  36)
* get() (Stash method):                  Stash.               (line  47)
* getbasetemp() (TempdirFactory method): tmpdir_factory.      (line  24)
* getbasetemp() (TempPathFactory method): tmp_path_factory.   (line  38)
* getcalls() (HookRecorder method):      pytester.            (line 607)
* getfixturevalue() (FixtureRequest method): request.         (line  90)
* getgroup() (Parser method):            Parser.              (line  14)
* getini() (Config method):              Config.              (line 133)
* getinicfg() (Pytester method):         pytester.            (line  99)
* getitem() (Pytester method):           pytester.            (line 291)
* getitems() (Pytester method):          pytester.            (line 308)
* getmodulecol() (Pytester method):      pytester.            (line 316)
* getnode() (Pytester method):           pytester.            (line 172)
* getoption() (Config method):           Config.              (line 141)
* getparent() (Node method):             Node.                (line 168)
* getpathnode() (Pytester method):       pytester.            (line 185)
* getplugin() (PytestPluginManager method): PytestPluginManager.
                                                              (line  29)
* getrepr() (ExceptionInfo method):      ExceptionInfo.       (line  78)
* getvalue() (Config method):            Config.              (line 158)
* getvalueorskip() (Config method):      Config.              (line 162)
* get_canonical_name() (PytestPluginManager method): PytestPluginManager.
                                                              (line  74)
* get_closest_marker() (Node method):    Node.                (line 143)
* get_hookcallers() (PytestPluginManager method): PytestPluginManager.
                                                              (line  81)
* get_lines_after() (LineMatcher method): pytester.           (line 536)
* get_name() (PytestPluginManager method): PytestPluginManager.
                                                              (line  85)
* get_plugin() (PytestPluginManager method): PytestPluginManager.
                                                              (line  89)
* get_plugins() (PytestPluginManager method): PytestPluginManager.
                                                              (line  93)
* get_records() (LogCaptureFixture method): caplog.           (line  34)
* handler (LogCaptureFixture property):  caplog.              (line  27)
* hasplugin() (PytestPluginManager method): PytestPluginManager.
                                                              (line  31)
* has_plugin() (PytestPluginManager method): PytestPluginManager.
                                                              (line  97)
* head_line (CollectReport property):    CollectReport.       (line  75)
* head_line (TestReport property):       TestReport.          (line 102)
* HookRecorder (class in pytest):        pytester.            (line 598)
* ihook (Node property):                 Node.                (line  75)
* importorskip() (in module pytest):     pytest importorskip. (line   6)
* import_plugin() (PytestPluginManager method): PytestPluginManager.
                                                              (line  35)
* inipath (Config property):             Config.              (line  90)
* inline_genitems() (Pytester method):   pytester.            (line 228)
* inline_run() (Pytester method):        pytester.            (line 237)
* inline_runsource() (Pytester method):  pytester.            (line 213)
* instance (FixtureRequest property):    request.             (line  49)
* INTERNAL_ERROR (ExitCode attribute):   ExitCode.            (line  26)
* INTERRUPTED (ExitCode attribute):      ExitCode.            (line  22)
* invocation_params (Config attribute):  Config.              (line  58)
* issue_config_time_warning() (Config method): Config.        (line 108)
* is_blocked() (PytestPluginManager method): PytestPluginManager.
                                                              (line 101)
* is_registered() (PytestPluginManager method): PytestPluginManager.
                                                              (line 105)
* Item (class in pytest):                Item.                (line   6)
* iter_markers() (Node method):          Node.                (line 120)
* iter_markers_with_node() (Node method): Node.               (line 128)
* junit_duration_report; configuration value: Configuration Options.
                                                              (line 131)
* junit_family; configuration value:     Configuration Options.
                                                              (line 146)
* junit_logging; configuration value:    Configuration Options.
                                                              (line 165)
* junit_log_passing_tests; configuration value: Configuration Options.
                                                              (line 190)
* junit_suite_name; configuration value: Configuration Options.
                                                              (line 201)
* keywords (File attribute):             File.                (line  42)
* keywords (FixtureRequest property):    request.             (line  61)
* keywords (FSCollector attribute):      FSCollector.         (line  43)
* keywords (FunctionDefinition attribute): FunctionDefinition.
                                                              (line  54)
* keywords (Module attribute):           Module.              (line  45)
* keywords (Node attribute):             Node.                (line  41)
* keywords (TestReport attribute):       TestReport.          (line  27)
* kwargs (Mark attribute):               Mark.                (line  16)
* kwargs (MarkDecorator property):       MarkDecorator.       (line  50)
* LineMatcher (class in pytest):         pytester.            (line 509)
* list (WarningsRecorder property):      recwarn.             (line  28)
* listchain() (Node method):             Node.                (line 107)
* listextrakeywords() (Node method):     Node.                (line 157)
* list_name_plugin() (PytestPluginManager method): PytestPluginManager.
                                                              (line 109)
* list_plugin_distinfo() (PytestPluginManager method): PytestPluginManager.
                                                              (line 113)
* load_setuptools_entrypoints() (PytestPluginManager method): PytestPluginManager.
                                                              (line 118)
* location (TestReport attribute):       TestReport.          (line  19)
* LogCaptureFixture (class in pytest):   caplog.              (line  23)
* log_auto_indent; configuration value:  Configuration Options.
                                                              (line 209)
* log_cli; configuration value:          Configuration Options.
                                                              (line 236)
* log_cli_date_format; configuration value: Configuration Options.
                                                              (line 244)
* log_cli_format; configuration value:   Configuration Options.
                                                              (line 254)
* log_cli_level; configuration value:    Configuration Options.
                                                              (line 264)
* log_date_format; configuration value:  Configuration Options.
                                                              (line 274)
* log_file; configuration value:         Configuration Options.
                                                              (line 284)
* log_file_date_format; configuration value: Configuration Options.
                                                              (line 295)
* log_file_format; configuration value:  Configuration Options.
                                                              (line 305)
* log_file_level; configuration value:   Configuration Options.
                                                              (line 315)
* log_format; configuration value:       Configuration Options.
                                                              (line 326)
* log_level; configuration value:        Configuration Options.
                                                              (line 336)
* longrepr (CollectReport attribute):    CollectReport.       (line  22)
* longrepr (TestReport attribute):       TestReport.          (line  36)
* longreprtext (CollectReport property): CollectReport.       (line  89)
* longreprtext (TestReport property):    TestReport.          (line 116)
* main() (in module pytest):             pytest main.         (line   6)
* makeconftest() (Pytester method):      pytester.            (line  91)
* makefile() (Pytester method):          pytester.            (line  60)
* makeini() (Pytester method):           pytester.            (line  95)
* makepyfile() (Pytester method):        pytester.            (line 109)
* makepyprojecttoml() (Pytester method): pytester.            (line 103)
* maketxtfile() (Pytester method):       pytester.            (line 125)
* make_hook_recorder() (Pytester method): pytester.           (line  50)
* Mark (class in pytest):                Mark.                (line   6)
* MarkDecorator (class in pytest):       MarkDecorator.       (line   6)
* markers; configuration value:          Configuration Options.
                                                              (line 347)
* MarkGenerator (class in pytest):       MarkGenerator.       (line   6)
* match() (ExceptionInfo method):        ExceptionInfo.       (line 111)
* matchreport() (HookRecorder method):   pytester.            (line 612)
* messages (LogCaptureFixture property): caplog.              (line  69)
* Metafunc (class in pytest):            Metafunc.            (line   6)
* minversion; configuration value:       Configuration Options.
                                                              (line 368)
* mkdir() (Cache method):                config cache.        (line  20)
* mkdir() (Pytester method):             pytester.            (line 148)
* mkpydir() (Pytester method):           pytester.            (line 152)
* mktemp() (TempdirFactory method):      tmpdir_factory.      (line  19)
* mktemp() (TempPathFactory method):     tmp_path_factory.    (line  16)
* Module (class in pytest):              Module.              (line   6)
* module (FixtureRequest property):      request.             (line  53)
* module (Metafunc attribute):           Metafunc.            (line  24)
* MonkeyPatch (class in pytest):         monkeypatch.         (line  43)
* monkeypatch() (in module _pytest.monkeypatch): monkeypatch. (line   8)
* monkeypatch; fixture:                  doctest_namespace.   (line  21)
* name (Class attribute):                Class.               (line  22)
* name (Collector attribute):            Collector.           (line  33)
* name (File attribute):                 File.                (line  14)
* name (FSCollector attribute):          FSCollector.         (line  20)
* name (Function attribute):             Function.            (line  80)
* name (FunctionDefinition attribute):   FunctionDefinition.  (line  17)
* name (Item attribute):                 Item.                (line  21)
* name (Mark attribute):                 Mark.                (line   8)
* name (MarkDecorator property):         MarkDecorator.       (line  42)
* name (Module attribute):               Module.              (line  17)
* name (Node attribute):                 Node.                (line  20)
* name (Session attribute):              Session.             (line  54)
* Node (class in _pytest.nodes):         Node.                (line   6)
* node (FixtureRequest property):        request.             (line  33)
* nodeid (CollectReport attribute):      CollectReport.       (line  14)
* nodeid (Node property):                Node.                (line 103)
* nodeid (TestReport attribute):         TestReport.          (line  15)
* norecursedirs; configuration value:    Configuration Options.
                                                              (line 376)
* NO_COLOR:                              Features<4>.         (line   6)
* no_fnmatch_line() (LineMatcher method): pytester.           (line 577)
* no_re_match_line() (LineMatcher method): pytester.          (line 585)
* NO_TESTS_COLLECTED (ExitCode attribute): ExitCode.          (line  34)
* OK (ExitCode attribute):               ExitCode.            (line  14)
* option (Config attribute):             Config.              (line  51)
* OptionGroup (class in pytest):         OptionGroup.         (line   6)
* originalname (Function attribute):     Function.            (line  45)
* outcome (CollectReport attribute):     CollectReport.       (line  18)
* outcome (TestReport attribute):        TestReport.          (line  32)
* outlines (RunResult attribute):        pytester.            (line 453)
* own_markers (File attribute):          File.                (line  46)
* own_markers (FSCollector attribute):   FSCollector.         (line  47)
* own_markers (FunctionDefinition attribute): FunctionDefinition.
                                                              (line  58)
* own_markers (Module attribute):        Module.              (line  49)
* own_markers (Node attribute):          Node.                (line  45)
* param() (in module pytest):            pytest param.        (line   6)
* parametrize() (Metafunc method):       Metafunc.            (line  40)
* parent (Class attribute):              Class.               (line  26)
* parent (Collector attribute):          Collector.           (line  37)
* parent (File attribute):               File.                (line  18)
* parent (FSCollector attribute):        FSCollector.         (line  24)
* parent (Function attribute):           Function.            (line  84)
* parent (FunctionDefinition attribute): FunctionDefinition.  (line  21)
* parent (Item attribute):               Item.                (line  25)
* parent (Module attribute):             Module.              (line  21)
* parent (Node attribute):               Node.                (line  24)
* parent (Session attribute):            Session.             (line  58)
* parseconfig() (Pytester method):       pytester.            (line 271)
* parseconfigure() (Pytester method):    pytester.            (line 284)
* parseoutcomes() (RunResult method):    pytester.            (line 476)
* Parser (class in pytest):              Parser.              (line   6)
* parse_hookimpl_opts() (PytestPluginManager method): PytestPluginManager.
                                                              (line  19)
* parse_hookspec_opts() (PytestPluginManager method): PytestPluginManager.
                                                              (line  21)
* parse_known_and_unknown_args() (Parser method): Parser.     (line  53)
* parse_known_args() (Parser method):    Parser.              (line  48)
* parse_summary_nouns() (RunResult class method): pytester.   (line 488)
* passed (CollectReport property):       CollectReport.       (line  96)
* passed (TestReport property):          TestReport.          (line 123)
* path (Class attribute):                Class.               (line  38)
* path (Collector attribute):            Collector.           (line  49)
* path (File attribute):                 File.                (line  30)
* path (FixtureRequest property):        request.             (line  57)
* path (FSCollector attribute):          FSCollector.         (line  10)
* path (Function attribute):             Function.            (line  96)
* path (FunctionDefinition attribute):   FunctionDefinition.  (line  33)
* path (Item attribute):                 Item.                (line  37)
* path (Module attribute):               Module.              (line  33)
* path (Node attribute):                 Node.                (line  36)
* path (Pytester property):              pytester.            (line  45)
* path (Session attribute):              Session.             (line  70)
* perform_collect() (Session method):    Session.             (line  28)
* pluginmanager (Config attribute):      Config.              (line  65)
* plugins (Config.InvocationParams attribute): Config.        (line  40)
* pop() (WarningsRecorder method):       recwarn.             (line  32)
* popen() (Pytester method):             pytester.            (line 354)
* PytestAssertRewriteWarning (class in pytest): Warnings.     (line  15)
* PytestCacheWarning (class in pytest):  Warnings.            (line  21)
* PytestCollectionWarning (class in pytest): Warnings.        (line  27)
* pytestconfig() (in module _pytest.fixtures): pytestconfig.  (line   6)
* pytestconfig; fixture:                 monkeypatch.         (line 181)
* PytestConfigWarning (class in pytest): Warnings.            (line  34)
* PytestDeprecationWarning (class in pytest): Warnings.       (line  40)
* Pytester (class in pytest):            pytester.            (line  19)
* Pytester.TimeoutExpired:               pytester.            (line  43)
* pytester; fixture:                     pytestconfig.        (line  16)
* PytestExperimentalApiWarning (class in pytest): Warnings.   (line  47)
* pytestmark; global variable interpreted by pytest: Global Variables.
                                                              (line  42)
* PytestPluginManager (class in pytest): PytestPluginManager. (line   6)
* PytestUnhandledCoroutineWarning (class in pytest): Warnings.
                                                              (line  56)
* PytestUnhandledThreadExceptionWarning (class in pytest): Warnings.
                                                              (line  85)
* PytestUnknownMarkWarning (class in pytest): Warnings.       (line  66)
* PytestUnraisableExceptionWarning (class in pytest): Warnings.
                                                              (line  75)
* PytestWarning (class in pytest):       Warnings.            (line   9)
* pytest_addhooks() (in module _pytest.hookspec): Initialization hooks.
                                                              (line  45)
* pytest_addhooks; hook:                 Initialization hooks.
                                                              (line  45)
* pytest_addoption() (in module _pytest.hookspec): Initialization hooks.
                                                              (line   8)
* pytest_addoption; hook:                Initialization hooks.
                                                              (line   8)
* pytest_assertion_pass() (in module _pytest.hookspec): Reporting hooks.
                                                              (line 236)
* pytest_assertion_pass; hook:           Reporting hooks.     (line 236)
* pytest_assertrepr_compare() (in module _pytest.hookspec): Reporting hooks.
                                                              (line 222)
* pytest_assertrepr_compare; hook:       Reporting hooks.     (line 222)
* pytest_cmdline_main() (in module _pytest.hookspec): Bootstrapping hooks.
                                                              (line  69)
* pytest_cmdline_main; hook:             Bootstrapping hooks. (line  69)
* pytest_cmdline_parse() (in module _pytest.hookspec): Bootstrapping hooks.
                                                              (line  49)
* pytest_cmdline_parse; hook:            Bootstrapping hooks. (line  49)
* pytest_cmdline_preparse() (in module _pytest.hookspec): Bootstrapping hooks.
                                                              (line  29)
* pytest_cmdline_preparse; hook:         Bootstrapping hooks. (line  29)
* pytest_collection() (in module _pytest.hookspec): Collection hooks.
                                                              (line   8)
* pytest_collection; hook:               Collection hooks.    (line   8)
* pytest_collection_finish() (in module _pytest.hookspec): Collection hooks.
                                                              (line 199)
* pytest_collection_modifyitems() (in module _pytest.hookspec): Collection hooks.
                                                              (line 178)
* pytest_collection_modifyitems; hook:   Collection hooks.    (line 178)
* pytest_collectreport() (in module _pytest.hookspec): Reporting hooks.
                                                              (line  24)
* pytest_collectreport; hook:            Reporting hooks.     (line  24)
* pytest_collectstart() (in module _pytest.hookspec): Reporting hooks.
                                                              (line   8)
* pytest_collectstart; hook:             Reporting hooks.     (line   8)
* pytest_collect_file() (in module _pytest.hookspec): Collection hooks.
                                                              (line  73)
* pytest_collect_file; hook:             Collection hooks.    (line  73)
* pytest_configure() (in module _pytest.hookspec): Initialization hooks.
                                                              (line  56)
* pytest_configure; hook:                Initialization hooks.
                                                              (line  56)
* PYTEST_CURRENT_TEST:                   PYTEST_CURRENT_TEST. (line   6)
* PYTEST_CURRENT_TEST <1>:               PYTEST_CURRENT_TEST environment variable.
                                                              (line  12)
* pytest_deselected() (in module _pytest.hookspec): Reporting hooks.
                                                              (line  28)
* pytest_deselected; hook:               Reporting hooks.     (line  28)
* pytest_enter_pdb() (in module _pytest.hookspec): Debugging/Interaction hooks.
                                                              (line  36)
* pytest_enter_pdb; hook:                Debugging/Interaction hooks.
                                                              (line  36)
* pytest_exception_interact() (in module _pytest.hookspec): Debugging/Interaction hooks.
                                                              (line  20)
* pytest_exception_interact; hook:       Debugging/Interaction hooks.
                                                              (line  20)
* pytest_fixture_post_finalizer() (in module _pytest.hookspec): Reporting hooks.
                                                              (line 171)
* pytest_fixture_post_finalizer; hook:   Reporting hooks.     (line 171)
* pytest_fixture_setup() (in module _pytest.hookspec): Reporting hooks.
                                                              (line 153)
* pytest_fixture_setup; hook:            Reporting hooks.     (line 153)
* pytest_generate_tests() (in module _pytest.hookspec): Collection hooks.
                                                              (line 126)
* pytest_generate_tests; hook:           Collection hooks.    (line 126)
* pytest_ignore_collect() (in module _pytest.hookspec): Collection hooks.
                                                              (line  55)
* pytest_ignore_collect; hook:           Collection hooks.    (line  55)
* pytest_internalerror() (in module _pytest.hookspec): Debugging/Interaction hooks.
                                                              (line   9)
* pytest_internalerror; hook:            Debugging/Interaction hooks.
                                                              (line   9)
* pytest_itemcollected() (in module _pytest.hookspec): Reporting hooks.
                                                              (line  20)
* pytest_itemcollected; hook:            Reporting hooks.     (line  20)
* pytest_keyboard_interrupt() (in module _pytest.hookspec): Debugging/Interaction hooks.
                                                              (line  16)
* pytest_keyboard_interrupt; hook:       Debugging/Interaction hooks.
                                                              (line  16)
* pytest_leave_pdb() (in module _pytest.hookspec): Debugging/Interaction hooks.
                                                              (line  51)
* pytest_leave_pdb; hook:                Debugging/Interaction hooks.
                                                              (line  51)
* pytest_load_initial_conftests() (in module _pytest.hookspec): Bootstrapping hooks.
                                                              (line   9)
* pytest_load_initial_conftests; hook:   Bootstrapping hooks. (line   9)
* pytest_make_collect_report() (in module _pytest.hookspec): Reporting hooks.
                                                              (line  12)
* pytest_make_collect_report; hook:      Reporting hooks.     (line  12)
* pytest_make_parametrize_id() (in module _pytest.hookspec): Collection hooks.
                                                              (line 130)
* pytest_make_parametrize_id; hook:      Collection hooks.    (line 130)
* pytest_markeval_namespace() (in module _pytest.hookspec): Collection hooks.
                                                              (line 154)
* pytest_markeval_namespace; hook:       Collection hooks.    (line 154)
* PYTEST_PLUGINS:                        Plugin discovery order at tool startup.
                                                              (line  22)
* pytest_plugins; global variable interpreted by pytest: Global Variables.
                                                              (line  29)
* pytest_plugin_registered() (in module _pytest.hookspec): Initialization hooks.
                                                              (line 103)
* pytest_plugin_registered; hook:        Initialization hooks.
                                                              (line 103)
* pytest_pycollect_makeitem() (in module _pytest.hookspec): Collection hooks.
                                                              (line 118)
* pytest_pycollect_makeitem; hook:       Collection hooks.    (line 118)
* pytest_pycollect_makemodule() (in module _pytest.hookspec): Collection hooks.
                                                              (line  90)
* pytest_pycollect_makemodule; hook:     Collection hooks.    (line  90)
* pytest_pyfunc_call() (in module _pytest.hookspec): Test running runtest hooks.
                                                              (line 179)
* pytest_pyfunc_call; hook:              Test running runtest hooks.
                                                              (line 179)
* pytest_report_collectionfinish() (in module _pytest.hookspec): Reporting hooks.
                                                              (line  61)
* pytest_report_collectionfinish; hook:  Reporting hooks.     (line  61)
* pytest_report_from_serializable() (in module _pytest.hookspec): Reporting hooks.
                                                              (line 129)
* pytest_report_from_serializable; hook: Reporting hooks.     (line 129)
* pytest_report_header() (in module _pytest.hookspec): Reporting hooks.
                                                              (line  34)
* pytest_report_header; hook:            Reporting hooks.     (line  34)
* pytest_report_teststatus() (in module _pytest.hookspec): Reporting hooks.
                                                              (line  94)
* pytest_report_teststatus; hook:        Reporting hooks.     (line  94)
* pytest_report_to_serializable() (in module _pytest.hookspec): Reporting hooks.
                                                              (line 124)
* pytest_report_to_serializable; hook:   Reporting hooks.     (line 124)
* pytest_runtestloop() (in module _pytest.hookspec): Test running runtest hooks.
                                                              (line   8)
* pytest_runtestloop; hook:              Test running runtest hooks.
                                                              (line   8)
* pytest_runtest_call() (in module _pytest.hookspec): Test running runtest hooks.
                                                              (line 136)
* pytest_runtest_call; hook:             Test running runtest hooks.
                                                              (line 136)
* pytest_runtest_logfinish() (in module _pytest.hookspec): Test running runtest hooks.
                                                              (line 111)
* pytest_runtest_logfinish; hook:        Test running runtest hooks.
                                                              (line 111)
* pytest_runtest_logreport() (in module _pytest.hookspec): Reporting hooks.
                                                              (line 212)
* pytest_runtest_logreport; hook:        Reporting hooks.     (line 212)
* pytest_runtest_logstart() (in module _pytest.hookspec): Test running runtest hooks.
                                                              (line  95)
* pytest_runtest_logstart; hook:         Test running runtest hooks.
                                                              (line  95)
* pytest_runtest_makereport() (in module _pytest.hookspec): Test running runtest hooks.
                                                              (line 158)
* pytest_runtest_makereport; hook:       Test running runtest hooks.
                                                              (line 158)
* pytest_runtest_protocol() (in module _pytest.hookspec): Test running runtest hooks.
                                                              (line  31)
* pytest_runtest_protocol; hook:         Test running runtest hooks.
                                                              (line  31)
* pytest_runtest_setup() (in module _pytest.hookspec): Test running runtest hooks.
                                                              (line 127)
* pytest_runtest_setup; hook:            Test running runtest hooks.
                                                              (line 127)
* pytest_runtest_teardown() (in module _pytest.hookspec): Test running runtest hooks.
                                                              (line 142)
* pytest_runtest_teardown; hook:         Test running runtest hooks.
                                                              (line 142)
* pytest_sessionfinish() (in module _pytest.hookspec): Initialization hooks.
                                                              (line  89)
* pytest_sessionfinish; hook:            Initialization hooks.
                                                              (line  89)
* pytest_sessionstart() (in module _pytest.hookspec): Initialization hooks.
                                                              (line  80)
* pytest_sessionstart; hook:             Initialization hooks.
                                                              (line  80)
* pytest_terminal_summary() (in module _pytest.hookspec): Reporting hooks.
                                                              (line 134)
* pytest_terminal_summary; hook:         Reporting hooks.     (line 134)
* PYTEST_THEME:                          Syntax highlighting theme customization.
                                                              (line   9)
* PYTEST_THEME <1>:                      Environment Variables.
                                                              (line  43)
* PYTEST_THEME <2>:                      Features.            (line  12)
* PYTEST_THEME_MODE:                     Syntax highlighting theme customization.
                                                              (line  11)
* PYTEST_THEME_MODE <1>:                 Features.            (line  13)
* pytest_unconfigure() (in module _pytest.hookspec): Initialization hooks.
                                                              (line  72)
* pytest_unconfigure; hook:              Initialization hooks.
                                                              (line  72)
* pytest_warning_recorded() (in module _pytest.hookspec): Reporting hooks.
                                                              (line 177)
* pytest_warning_recorded; hook:         Reporting hooks.     (line 177)
* Python Enhancement Proposals; PEP 235: Bug Fixes<40>.       (line  12)
* Python Enhancement Proposals; PEP 302: Assertion Rewriting. (line   9)
* Python Enhancement Proposals; PEP 302 <1>: 2 8 0 2015-09-18.
                                                              (line  75)
* Python Enhancement Proposals; PEP 302 <2>: 2 5 0 2013-12-12.
                                                              (line 103)
* Python Enhancement Proposals; PEP 415: Features<29>.        (line  51)
* Python Enhancement Proposals; PEP 420: 2 5 0 2013-12-12.    (line  43)
* Python Enhancement Proposals; PEP 479: 3 0 7 2017-03-14.    (line  27)
* Python Enhancement Proposals; PEP 506: DeprecationWarning and PendingDeprecationWarning.
                                                              (line  39)
* Python Enhancement Proposals; PEP 506#recommended-filter-settings-for-test-runners: Features<23>.
                                                              (line  17)
* Python Enhancement Proposals; PEP 552: Trivial/Internal Changes<5>.
                                                              (line  10)
* Python Enhancement Proposals; PEP 565: DeprecationWarning and PendingDeprecationWarning.
                                                              (line   8)
* python;PYTHONWARNINGS:                 DeprecationWarning and PendingDeprecationWarning.
                                                              (line  36)
* PYTHONPATH:                            Configuration Options.
                                                              (line 468)
* PYTHONPATH <1>:                        Bug Fixes<4>.        (line  30)
* pythonpath; configuration value:       Configuration Options.
                                                              (line 464)
* PYTHONTRACEMALLOC:                     Resource Warnings.   (line  10)
* python_classes; configuration value:   Configuration Options.
                                                              (line 409)
* python_files; configuration value:     Configuration Options.
                                                              (line 425)
* python_functions; configuration value: Configuration Options.
                                                              (line 445)
* raiseerror() (FixtureRequest method):  request.             (line  86)
* raises() (in module pytest):           pytest raises.       (line   8)
* readouterr() (CaptureFixture method):  capsys.              (line  30)
* RecordedHookCall (class in pytest):    pytester.            (line 618)
* records (LogCaptureFixture property):  caplog.              (line  55)
* record_property() (in module _pytest.junitxml): record_property.
                                                              (line   8)
* record_property; fixture:              pytester.            (line 627)
* record_testsuite_property() (in module _pytest.junitxml): record_testsuite_property.
                                                              (line   8)
* record_testsuite_property; fixture:    record_property.     (line  22)
* record_tuples (LogCaptureFixture property): caplog.         (line  59)
* recwarn() (in module _pytest.recwarn): recwarn.             (line   8)
* recwarn; fixture:                      record_testsuite_property.
                                                              (line  27)
* register() (PytestPluginManager method): PytestPluginManager.
                                                              (line  23)
* register_assert_rewrite() (in module pytest): pytest register_assert_rewrite.
                                                              (line   8)
* reportinfo() (Item method):            Item.                (line  79)
* repr_failure() (Collector method):     Collector.           (line  24)
* repr_failure() (Function method):      Function.            (line  66)
* repr_failure() (Node method):          Node.                (line 173)
* request; fixture:                      recwarn.             (line  39)
* required_plugins; configuration value: Configuration Options.
                                                              (line 476)
* result (CallInfo property):            CallInfo.            (line  35)
* result (CollectReport attribute):      CollectReport.       (line  28)
* ret (RunResult attribute):             pytester.            (line 449)
* re_match_lines() (LineMatcher method): pytester.            (line 559)
* re_match_lines_random() (LineMatcher method): pytester.     (line 531)
* rootpath (Config property):            Config.              (line  81)
* run() (Pytester method):               pytester.            (line 364)
* runitem() (Pytester method):           pytester.            (line 204)
* runpytest() (Pytester method):         pytester.            (line 266)
* runpytest_inprocess() (Pytester method): pytester.          (line 261)
* runpytest_subprocess() (Pytester method): pytester.         (line 408)
* runpython() (Pytester method):         pytester.            (line 400)
* runpython_c() (Pytester method):       pytester.            (line 404)
* RunResult (class in pytest):           pytester.            (line 445)
* runtest() (Function method):           Function.            (line  62)
* runtest() (FunctionDefinition method): FunctionDefinition.  (line  13)
* runtest() (Item method):               Item.                (line  49)
* scope (FixtureDef property):           FixtureDef.          (line  12)
* scope (FixtureRequest property):       request.             (line  24)
* sections (CollectReport attribute):    CollectReport.       (line  32)
* sections (TestReport attribute):       TestReport.          (line  51)
* session (Class attribute):             Class.               (line  34)
* Session (class in pytest):             Session.             (line   6)
* session (Collector attribute):         Collector.           (line  45)
* session (File attribute):              File.                (line  26)
* session (FixtureRequest property):     request.             (line  65)
* session (FSCollector attribute):       FSCollector.         (line  32)
* session (Function attribute):          Function.            (line  92)
* session (FunctionDefinition attribute): FunctionDefinition. (line  29)
* session (Item attribute):              Item.                (line  33)
* session (Module attribute):            Module.              (line  29)
* session (Node attribute):              Node.                (line  32)
* session (Session attribute):           Session.             (line  66)
* Session.Failed:                        Session.             (line  16)
* Session.Interrupted:                   Session.             (line  10)
* set() (Cache method):                  config cache.        (line  53)
* setattr() (MonkeyPatch method):        monkeypatch.         (line  76)
* setdefault() (Stash method):           Stash.               (line  52)
* setenv() (MonkeyPatch method):         monkeypatch.         (line 138)
* setitem() (MonkeyPatch method):        monkeypatch.         (line 127)
* setup() (FunctionDefinition method):   FunctionDefinition.  (line  38)
* set_blocked() (PytestPluginManager method): PytestPluginManager.
                                                              (line 136)
* set_level() (LogCaptureFixture method): caplog.             (line  92)
* skip() (in module pytest):             pytest skip.         (line   6)
* skipped (CollectReport property):      CollectReport.       (line 100)
* skipped (TestReport property):         TestReport.          (line 127)
* spawn() (Pytester method):             pytester.            (line 439)
* spawn_pytest() (Pytester method):      pytester.            (line 430)
* start (CallInfo attribute):            CallInfo.            (line  15)
* startpath (Session property):          Session.             (line  22)
* Stash (class in pytest):               Stash.               (line   6)
* stash (Config attribute):              Config.              (line  73)
* stash (Node attribute):                Node.                (line  53)
* StashKey (class in pytest):            Stash.               (line  71)
* stderr (RunResult attribute):          pytester.            (line 468)
* stdout (RunResult attribute):          pytester.            (line 461)
* stop (CallInfo attribute):             CallInfo.            (line  20)
* str() (LineMatcher method):            pytester.            (line 594)
* subset_hook_caller() (PytestPluginManager method): PytestPluginManager.
                                                              (line 141)
* syspathinsert() (Pytester method):     pytester.            (line 141)
* syspath_prepend() (MonkeyPatch method): monkeypatch.        (line 153)
* tb (ExceptionInfo property):           ExceptionInfo.       (line  51)
* TempdirFactory (class in pytest):      tmpdir_factory.      (line  10)
* TempPathFactory (class in pytest):     tmp_path_factory.    (line   9)
* testdir; fixture:                      request.             (line 102)
* testpaths; configuration value:        Configuration Options.
                                                              (line 487)
* TestReport (class in pytest):          TestReport.          (line   6)
* TESTS_FAILED (ExitCode attribute):     ExitCode.            (line  18)
* text (LogCaptureFixture property):     caplog.              (line  51)
* tmpdir() (in module _pytest.legacypath.LegacyTmpdirPlugin): tmpdir.
                                                              (line   8)
* tmpdir; fixture:                       tmp_path_factory.    (line  41)
* tmpdir_factory; fixture:               tmpdir.              (line  24)
* tmp_path() (in module _pytest.tmpdir): tmp_path.            (line   9)
* tmp_path; fixture:                     testdir.             (line 170)
* tmp_path_factory; fixture:             tmp_path.            (line  21)
* traceback (ExceptionInfo property):    ExceptionInfo.       (line  59)
* type (ExceptionInfo property):         ExceptionInfo.       (line  43)
* typename (ExceptionInfo property):     ExceptionInfo.       (line  55)
* undo() (MonkeyPatch method):           monkeypatch.         (line 163)
* unregister() (PytestPluginManager method): PytestPluginManager.
                                                              (line 147)
* UsageError (class in pytest):          Exceptions.          (line   6)
* USAGE_ERROR (ExitCode attribute):      ExitCode.            (line  30)
* usefixtures; configuration value:      Configuration Options.
                                                              (line 503)
* user_properties (FunctionDefinition attribute): FunctionDefinition.
                                                              (line  49)
* user_properties (Item attribute):      Item.                (line  15)
* user_properties (TestReport attribute): TestReport.         (line  46)
* value (ExceptionInfo property):        ExceptionInfo.       (line  47)
* warn() (Node method):                  Node.                (line  79)
* WarningsRecorder (class in pytest):    recwarn.             (line  16)
* warns() (in module pytest):            pytest warns.        (line   8)
* when (CallInfo attribute):             CallInfo.            (line  29)
* when (TestReport attribute):           TestReport.          (line  42)
* with_args() (MarkDecorator method):    MarkDecorator.       (line  54)
* xfail() (in module pytest):            pytest xfail.        (line   6)
* xfail_strict; configuration value:     Configuration Options.
                                                              (line 513)

                                                             



Tag Table:
Node: Top428
Ref: contents doc728
Ref: 0728
Node: Get Started54165
Ref: getting-started doc54257
Ref: 154257
Ref: getting-started get-started54257
Ref: 254257
Ref: getting-started id154257
Ref: 354257
Ref: getting-started getstarted54286
Ref: 454286
Node: Install pytest54530
Ref: getting-started install-pytest54623
Ref: 554623
Ref: getting-started installation54623
Ref: 654623
Node: Create your first test54893
Ref: getting-started create-your-first-test55013
Ref: 755013
Ref: getting-started simpletest55013
Ref: 855013
Ref: Create your first test-Footnote-156624
Ref: Create your first test-Footnote-256693
Node: Run multiple tests56766
Ref: getting-started run-multiple-tests56913
Ref: 956913
Node: Assert that a certain exception is raised57145
Ref: getting-started assert-that-a-certain-exception-is-raised57301
Ref: b57301
Node: Group multiple tests in a class57952
Ref: getting-started group-multiple-tests-in-a-class58147
Ref: d58147
Node: Request a unique temporary directory for functional tests61543
Ref: getting-started request-a-unique-temporary-directory-for-functional-tests61713
Ref: e61713
Node: Continue reading63473
Ref: getting-started continue-reading63603
Ref: 1163603
Node: How to invoke pytest64313
Ref: how-to/usage doc64445
Ref: 1764445
Ref: how-to/usage how-to-invoke-pytest64445
Ref: 1864445
Ref: how-to/usage usage64445
Ref: 1264445
Node: Specifying which tests to run65182
Ref: how-to/usage select-tests65335
Ref: 1b65335
Ref: how-to/usage specifying-which-tests-to-run65335
Ref: 1c65335
Ref: how-to/usage nodeids65981
Ref: 1d65981
Node: Getting help on version option names environment variables66768
Ref: how-to/usage getting-help-on-version-option-names-environment-variables66963
Ref: 1e66963
Node: Profiling test execution duration67302
Ref: how-to/usage durations67495
Ref: 1f67495
Ref: how-to/usage profiling-test-execution-duration67495
Ref: 2067495
Node: Managing loading of plugins67835
Ref: how-to/usage managing-loading-of-plugins67998
Ref: 2167998
Node: Early loading plugins68121
Ref: how-to/usage early-loading-plugins68232
Ref: 2268232
Ref: Early loading plugins-Footnote-168860
Node: Disabling plugins68905
Ref: how-to/usage disabling-plugins69016
Ref: 2369016
Node: Other ways of calling pytest69355
Ref: how-to/usage invoke-other69476
Ref: 1a69476
Ref: how-to/usage other-ways-of-calling-pytest69476
Ref: 2469476
Node: Calling pytest through python -m pytest69633
Ref: how-to/usage calling-pytest-through-python-m-pytest69777
Ref: 2569777
Ref: how-to/usage invoke-python69777
Ref: 2669777
Node: Calling pytest from Python code70169
Ref: how-to/usage calling-pytest-from-python-code70313
Ref: 2770313
Ref: how-to/usage pytest-main-usage70313
Ref: 2870313
Ref: Calling pytest from Python code-Footnote-171691
Node: How to write and report assertions in tests71760
Ref: how-to/assert doc71900
Ref: 2971900
Ref: how-to/assert assert71900
Ref: 2a71900
Ref: how-to/assert how-to-write-and-report-assertions-in-tests71900
Ref: 2b71900
Node: Asserting with the assert statement72263
Ref: how-to/assert assert-with-the-assert-statement72423
Ref: 2c72423
Ref: how-to/assert asserting-with-the-assert-statement72423
Ref: 2d72423
Node: Assertions about expected exceptions74459
Ref: how-to/assert assertions-about-expected-exceptions74662
Ref: 3074662
Ref: how-to/assert assertraises74662
Ref: c74662
Node: Assertions about expected warnings77074
Ref: how-to/assert assertions-about-expected-warnings77285
Ref: 3377285
Ref: how-to/assert assertwarns77285
Ref: 3477285
Node: Making use of context-sensitive comparisons77447
Ref: how-to/assert making-use-of-context-sensitive-comparisons77673
Ref: 3677673
Ref: how-to/assert newreport77673
Ref: 3777673
Node: Defining your own explanation for failed assertions79476
Ref: how-to/assert defining-your-own-explanation-for-failed-assertions79699
Ref: 3879699
Ref: how-to/assert assert-details82046
Ref: 2f82046
Node: Assertion introspection details82047
Ref: how-to/assert assert-introspection82218
Ref: 3b82218
Ref: how-to/assert assertion-introspection-details82218
Ref: 3c82218
Ref: Assertion introspection details-Footnote-183119
Node: Assertion rewriting caches files on disk83208
Ref: how-to/assert assertion-rewriting-caches-files-on-disk83351
Ref: 3e83351
Node: Disabling assert rewriting84041
Ref: how-to/assert disabling-assert-rewriting84184
Ref: 3f84184
Node: How to use fixtures84720
Ref: how-to/fixtures doc84882
Ref: 4084882
Ref: how-to/fixtures how-to-fixtures84882
Ref: 4184882
Ref: how-to/fixtures how-to-use-fixtures84882
Ref: 4284882
Node: “Requesting” fixtures85962
Ref: how-to/fixtures requesting-fixtures86105
Ref: 4586105
Node: Quick example86899
Ref: how-to/fixtures quick-example87018
Ref: 4687018
Node: Fixtures can request other fixtures88495
Ref: how-to/fixtures fixtures-can-request-other-fixtures88644
Ref: 4788644
Node: Fixtures are reusable90097
Ref: how-to/fixtures fixtures-are-reusable90291
Ref: 4890291
Node: A test/fixture can request more than one fixture at a time92273
Ref: how-to/fixtures a-test-fixture-can-request-more-than-one-fixture-at-a-time92506
Ref: 4992506
Node: Fixtures can be requested more than once per test return values are cached93400
Ref: how-to/fixtures fixtures-can-be-requested-more-than-once-per-test-return-values-are-cached93603
Ref: 4a93603
Ref: how-to/fixtures autouse95060
Ref: 4b95060
Node: Autouse fixtures fixtures you don’t have to request95062
Ref: how-to/fixtures autouse-fixtures95279
Ref: 4c95279
Ref: how-to/fixtures autouse-fixtures-fixtures-you-don-t-have-to-request95279
Ref: 4d95279
Node: Scope sharing fixtures across classes modules packages or session96697
Ref: how-to/fixtures scope-sharing-fixtures-across-classes-modules-packages-or-session96930
Ref: 4e96930
Ref: how-to/fixtures smtpshared96930
Ref: 4f96930
Node: Fixture scopes100925
Ref: how-to/fixtures fixture-scopes101063
Ref: 51101063
Node: Dynamic scope101866
Ref: how-to/fixtures dynamic-scope102004
Ref: 52102004
Ref: how-to/fixtures id1102004
Ref: 53102004
Node: Teardown/Cleanup AKA Fixture finalization102974
Ref: how-to/fixtures finalization103168
Ref: 54103168
Ref: how-to/fixtures teardown-cleanup-aka-fixture-finalization103168
Ref: 55103168
Node: 1 yield fixtures recommended103811
Ref: how-to/fixtures yield-fixtures103954
Ref: 56103954
Ref: how-to/fixtures yield-fixtures-recommended103954
Ref: 57103954
Node: Handling errors for yield fixture107106
Ref: how-to/fixtures handling-errors-for-yield-fixture107204
Ref: 59107204
Node: 2 Adding finalizers directly107580
Ref: how-to/fixtures adding-finalizers-directly107723
Ref: 5a107723
Node: Note on finalizer order110135
Ref: how-to/fixtures note-on-finalizer-order110223
Ref: 5c110223
Node: Safe teardowns112205
Ref: how-to/fixtures id2112375
Ref: 5d112375
Ref: how-to/fixtures safe-teardowns112375
Ref: 58112375
Node: Safe fixture structure114195
Ref: how-to/fixtures id3114268
Ref: 5e114268
Ref: how-to/fixtures safe-fixture-structure114268
Ref: 5f114268
Ref: Safe fixture structure-Footnote-1117869
Ref: Safe fixture structure-Footnote-2117930
Node: Running multiple assert statements safely117984
Ref: how-to/fixtures running-multiple-assert-statements-safely118164
Ref: 60118164
Node: Fixtures can introspect the requesting test context122491
Ref: how-to/fixtures fixtures-can-introspect-the-requesting-test-context122695
Ref: 61122695
Ref: how-to/fixtures request-context122695
Ref: 5b122695
Node: Using markers to pass data to fixtures125183
Ref: how-to/fixtures using-markers125367
Ref: 63125367
Ref: how-to/fixtures using-markers-to-pass-data-to-fixtures125367
Ref: 64125367
Node: Factories as fixtures126057
Ref: how-to/fixtures factories-as-fixtures126212
Ref: 65126212
Ref: how-to/fixtures fixture-factory126212
Ref: 66126212
Node: Parametrizing fixtures127675
Ref: how-to/fixtures fixture-parametrize127830
Ref: 67127830
Ref: how-to/fixtures parametrizing-fixtures127830
Ref: 68127830
Node: Using marks with parametrized fixtures134512
Ref: how-to/fixtures fixture-parametrize-marks134695
Ref: 69134695
Ref: how-to/fixtures using-marks-with-parametrized-fixtures134695
Ref: 6a134695
Node: Modularity using fixtures from a fixture function135941
Ref: how-to/fixtures interdependent-fixtures136150
Ref: 6d136150
Ref: how-to/fixtures modularity-using-fixtures-from-a-fixture-function136150
Ref: 6e136150
Node: Automatic grouping of tests by fixture instances138436
Ref: how-to/fixtures automatic-grouping-of-tests-by-fixture-instances138659
Ref: 6f138659
Ref: how-to/fixtures automatic-per-resource-grouping138659
Ref: 70138659
Node: Use fixtures in classes and modules with usefixtures142196
Ref: how-to/fixtures use-fixtures-in-classes-and-modules-with-usefixtures142407
Ref: 71142407
Ref: how-to/fixtures usefixtures142407
Ref: 72142407
Ref: Use fixtures in classes and modules with usefixtures-Footnote-1144991
Ref: Use fixtures in classes and modules with usefixtures-Footnote-2145063
Node: Overriding fixtures on various levels145120
Ref: how-to/fixtures override-fixtures145317
Ref: 74145317
Ref: how-to/fixtures overriding-fixtures-on-various-levels145317
Ref: 75145317
Node: Override a fixture on a folder conftest level145883
Ref: how-to/fixtures override-a-fixture-on-a-folder-conftest-level146052
Ref: 76146052
Node: Override a fixture on a test module level147272
Ref: how-to/fixtures override-a-fixture-on-a-test-module-level147501
Ref: 77147501
Node: Override a fixture with direct test parametrization148594
Ref: how-to/fixtures override-a-fixture-with-direct-test-parametrization148850
Ref: 78148850
Node: Override a parametrized fixture with non-parametrized one and vice versa150088
Ref: how-to/fixtures override-a-parametrized-fixture-with-non-parametrized-one-and-vice-versa150294
Ref: 79150294
Node: Using fixtures from other projects152102
Ref: how-to/fixtures using-fixtures-from-other-projects152238
Ref: 7a152238
Node: How to mark test functions with attributes153536
Ref: how-to/mark doc153701
Ref: 7d153701
Ref: how-to/mark how-to-mark-test-functions-with-attributes153701
Ref: 7e153701
Ref: how-to/mark mark153701
Ref: 14153701
Node: Registering marks155065
Ref: how-to/mark registering-marks155201
Ref: 87155201
Node: Raising errors on unknown marks156159
Ref: how-to/mark raising-errors-on-unknown-marks156295
Ref: 8a156295
Ref: how-to/mark unknown-marks156295
Ref: 8b156295
Ref: how-to/parametrize test-generators157146
Ref: 8c157146
Ref: how-to/parametrize parametrizing-tests157146
Ref: 8d157146
Ref: how-to/parametrize parametrized-test-functions157146
Ref: 8e157146
Ref: how-to/parametrize parametrize157146
Ref: 8f157146
Node: How to parametrize fixtures and test functions157147
Ref: how-to/parametrize doc157344
Ref: 90157344
Ref: how-to/parametrize how-to-parametrize-fixtures-and-test-functions157344
Ref: 91157344
Ref: how-to/parametrize parametrize-basics157344
Ref: 92157344
Ref: how-to/parametrize parametrizemark157842
Ref: 84157842
Node: @pytest mark parametrize parametrizing test functions158023
Ref: how-to/parametrize pytest-mark-parametrize158203
Ref: 6c158203
Ref: how-to/parametrize pytest-mark-parametrize-parametrizing-test-functions158203
Ref: 94158203
Node: Basic pytest_generate_tests example163643
Ref: how-to/parametrize basic-pytest-generate-tests-example163845
Ref: 97163845
Ref: how-to/parametrize pytest-generate-tests163845
Ref: 93163845
Node: More examples167213
Ref: how-to/parametrize more-examples167353
Ref: 98167353
Ref: how-to/tmp_path tmp-path-handling167478
Ref: f167478
Node: How to use temporary directories and files in tests167480
Ref: how-to/tmp_path doc167683
Ref: 9a167683
Ref: how-to/tmp_path how-to-use-temporary-directories-and-files-in-tests167683
Ref: 9b167683
Ref: how-to/tmp_path tmp-path167683
Ref: 9c167683
Node: The tmp_path fixture167944
Ref: how-to/tmp_path the-tmp-path-fixture168089
Ref: 9d168089
Ref: The tmp_path fixture-Footnote-1169977
Node: The tmp_path_factory fixture170045
Ref: how-to/tmp_path the-tmp-path-factory-fixture170237
Ref: 9f170237
Ref: how-to/tmp_path tmp-path-factory-example170237
Ref: a0170237
Ref: how-to/tmp_path tmpdir-and-tmpdir-factory171170
Ref: a2171170
Node: The tmpdir and tmpdir_factory fixtures171172
Ref: how-to/tmp_path the-tmpdir-and-tmpdir-factory-fixtures171380
Ref: a3171380
Ref: how-to/tmp_path tmpdir171380
Ref: a4171380
Ref: The tmpdir and tmpdir_factory fixtures-Footnote-1171883
Ref: The tmpdir and tmpdir_factory fixtures-Footnote-2171937
Node: The default base temporary directory172005
Ref: how-to/tmp_path base-temporary-directory172176
Ref: 9e172176
Ref: how-to/tmp_path the-default-base-temporary-directory172176
Ref: a7172176
Node: How to monkeypatch/mock modules and environments173217
Ref: how-to/monkeypatch doc173393
Ref: a8173393
Ref: how-to/monkeypatch how-to-monkeypatch-mock-modules-and-environments173393
Ref: a9173393
Ref: how-to/monkeypatch monkeypatching173393
Ref: aa173393
Ref: how-to/monkeypatch py-path-local173393
Ref: ab173393
Ref: How to monkeypatch/mock modules and environments-Footnote-1176736
Ref: How to monkeypatch/mock modules and environments-Footnote-2176822
Node: Monkeypatching functions176914
Ref: how-to/monkeypatch monkeypatch-blog-post177085
Ref: b5177085
Ref: how-to/monkeypatch monkeypatching-functions177085
Ref: b6177085
Node: Monkeypatching returned objects building mock classes178599
Ref: how-to/monkeypatch monkeypatching-returned-objects-building-mock-classes178848
Ref: b7178848
Node: Global patch example preventing “requests” from remote operations182487
Ref: how-to/monkeypatch global-patch-example-preventing-requests-from-remote-operations182748
Ref: b8182748
Ref: Global patch example preventing “requests” from remote operations-Footnote-1184360
Node: Monkeypatching environment variables184417
Ref: how-to/monkeypatch monkeypatching-environment-variables184652
Ref: b9184652
Node: Monkeypatching dictionaries186801
Ref: how-to/monkeypatch monkeypatching-dictionaries186980
Ref: ba186980
Node: API Reference190217
Ref: how-to/monkeypatch api-reference190351
Ref: bb190351
Node: How to run doctests190444
Ref: how-to/doctest doc190632
Ref: bd190632
Ref: how-to/doctest doctest190632
Ref: be190632
Ref: how-to/doctest how-to-run-doctests190632
Ref: bf190632
Ref: How to run doctests-Footnote-1192856
Node: Encoding192926
Ref: how-to/doctest encoding193026
Ref: c0193026
Node: Using ‘doctest’ options193286
Ref: how-to/doctest id1193414
Ref: c1193414
Ref: how-to/doctest using-doctest-options193414
Ref: c2193414
Ref: Using ‘doctest’ options-Footnote-1195576
Ref: Using ‘doctest’ options-Footnote-2195646
Node: Continue on failure195730
Ref: how-to/doctest continue-on-failure195863
Ref: c4195863
Node: Output format196117
Ref: how-to/doctest output-format196247
Ref: c5196247
Ref: Output format-Footnote-1196844
Ref: Output format-Footnote-2196921
Ref: Output format-Footnote-3196998
Ref: Output format-Footnote-4197075
Node: pytest-specific features197165
Ref: how-to/doctest pytest-specific-features197288
Ref: c6197288
Node: Using fixtures197682
Ref: how-to/doctest using-fixtures197797
Ref: c7197797
Node: ‘doctest_namespace’ fixture198386
Ref: how-to/doctest doctest-namespace198524
Ref: c9198524
Ref: how-to/doctest doctest-namespace-fixture198524
Ref: ca198524
Node: Skipping tests199595
Ref: how-to/doctest skipping-tests199710
Ref: cb199710
Ref: Skipping tests-Footnote-1201204
Node: Alternatives201272
Ref: how-to/doctest alternatives201373
Ref: ce201373
Ref: how-to/cache cache-provider201968
Ref: cf201968
Ref: Alternatives-Footnote-1202005
Ref: Alternatives-Footnote-2202059
Node: How to re-run failed tests and maintain state between test runs202096
Ref: how-to/cache doc202257
Ref: d0202257
Ref: how-to/cache cache202257
Ref: d1202257
Ref: how-to/cache how-to-re-run-failed-tests-and-maintain-state-between-test-runs202257
Ref: d2202257
Node: Usage202637
Ref: how-to/cache usage202792
Ref: d3202792
Node: Rerunning only failures or failures first203569
Ref: how-to/cache rerunning-only-failures-or-failures-first203778
Ref: d6203778
Ref: how-to/cache config-cache208193
Ref: d4208193
Node: Behavior when no tests failed in the last run208392
Ref: how-to/cache behavior-when-no-tests-failed-in-the-last-run208623
Ref: d7208623
Node: The new config cache object209160
Ref: how-to/cache the-new-config-cache-object209374
Ref: d8209374
Node: Inspecting Cache content211688
Ref: how-to/cache inspecting-cache-content211879
Ref: db211879
Node: Clearing Cache content213250
Ref: how-to/cache clearing-cache-content213422
Ref: dc213422
Node: Stepwise213754
Ref: how-to/cache cache-stepwise213893
Ref: dd213893
Ref: how-to/cache stepwise213893
Ref: de213893
Node: How to manage logging214590
Ref: how-to/logging doc214767
Ref: df214767
Ref: how-to/logging how-to-manage-logging214767
Ref: e0214767
Ref: how-to/logging logging214767
Ref: e1214767
Node: caplog fixture216747
Ref: how-to/logging caplog-fixture216837
Ref: e2216837
Node: Live Logs219904
Ref: how-to/logging id1220021
Ref: e4220021
Ref: how-to/logging live-logs220021
Ref: e5220021
Ref: Live Logs-Footnote-1222051
Ref: Live Logs-Footnote-2222113
Node: Customizing Colors222175
Ref: how-to/logging customizing-colors222291
Ref: e7222291
Ref: how-to/logging log-colors222291
Ref: e8222291
Node: Release notes223117
Ref: how-to/logging log-release-notes223258
Ref: e9223258
Ref: how-to/logging release-notes223258
Ref: ea223258
Ref: Release notes-Footnote-1223746
Node: Incompatible changes in pytest 3 4223796
Ref: how-to/logging incompatible-changes-in-pytest-3-4223910
Ref: eb223910
Ref: how-to/logging log-changes-3-4223910
Ref: ec223910
Ref: Incompatible changes in pytest 3 4-Footnote-1225258
Node: How to capture stdout/stderr output225315
Ref: how-to/capture-stdout-stderr doc225452
Ref: ee225452
Ref: how-to/capture-stdout-stderr captures225452
Ref: ef225452
Ref: how-to/capture-stdout-stderr how-to-capture-stdout-stderr-output225452
Ref: f0225452
Node: Default stdout/stderr/stdin capturing behaviour225738
Ref: how-to/capture-stdout-stderr default-stdout-stderr-stdin-capturing-behaviour225914
Ref: f1225914
Node: Setting capturing methods or disabling capturing226699
Ref: how-to/capture-stdout-stderr capture-method226920
Ref: f2226920
Ref: how-to/capture-stdout-stderr setting-capturing-methods-or-disabling-capturing226920
Ref: f3226920
Ref: how-to/capture-stdout-stderr disable-capturing227764
Ref: f4227764
Node: Using print statements for debugging228225
Ref: how-to/capture-stdout-stderr printdebugging228445
Ref: f5228445
Ref: how-to/capture-stdout-stderr using-print-statements-for-debugging228445
Ref: f6228445
Node: Accessing captured output from a test function229904
Ref: how-to/capture-stdout-stderr accessing-captured-output-from-a-test-function230067
Ref: f7230067
Node: How to capture warnings232318
Ref: how-to/capture-warnings doc232498
Ref: f8232498
Ref: how-to/capture-warnings how-to-capture-warnings232498
Ref: f9232498
Ref: how-to/capture-warnings warnings232498
Ref: fa232498
Node: Controlling warnings234209
Ref: how-to/capture-warnings controlling-warnings234325
Ref: fb234325
Ref: how-to/capture-warnings id1234325
Ref: fc234325
Ref: Controlling warnings-Footnote-1236488
Ref: Controlling warnings-Footnote-2236559
Ref: Controlling warnings-Footnote-3236624
Node: @pytest mark filterwarnings236695
Ref: how-to/capture-warnings filterwarnings236846
Ref: 80236846
Ref: how-to/capture-warnings pytest-mark-filterwarnings236846
Ref: fd236846
Ref: @pytest mark filterwarnings-Footnote-1237946
Node: Disabling warnings summary237998
Ref: how-to/capture-warnings disabling-warnings-summary238163
Ref: fe238163
Ref: how-to/capture-warnings pytest-warnings238163
Ref: ff238163
Node: Disabling warning capture entirely238383
Ref: how-to/capture-warnings disabling-warning-capture-entirely238569
Ref: 100238569
Node: DeprecationWarning and PendingDeprecationWarning238944
Ref: how-to/capture-warnings deprecation-warnings239148
Ref: 101239148
Ref: how-to/capture-warnings deprecationwarning-and-pendingdeprecationwarning239148
Ref: 102239148
Ref: how-to/capture-warnings ensuring-a-function-triggers-a-deprecation-warning240874
Ref: 106240874
Ref: DeprecationWarning and PendingDeprecationWarning-Footnote-1240911
Ref: DeprecationWarning and PendingDeprecationWarning-Footnote-2240953
Ref: DeprecationWarning and PendingDeprecationWarning-Footnote-3241029
Ref: DeprecationWarning and PendingDeprecationWarning-Footnote-4241071
Ref: DeprecationWarning and PendingDeprecationWarning-Footnote-5241150
Node: Ensuring code triggers a deprecation warning241207
Ref: how-to/capture-warnings ensuring-code-triggers-a-deprecation-warning241419
Ref: 107241419
Ref: how-to/capture-warnings ensuring-function-triggers241419
Ref: 108241419
Ref: how-to/capture-warnings asserting-warnings241932
Ref: 109241932
Ref: how-to/capture-warnings assertwarnings241932
Ref: 10a241932
Ref: how-to/capture-warnings asserting-warnings-with-the-warns-function241932
Ref: 10b241932
Node: Asserting warnings with the warns function241934
Ref: how-to/capture-warnings id2242116
Ref: 10c242116
Ref: how-to/capture-warnings warns242116
Ref: 35242116
Ref: how-to/capture-warnings recording-warnings244136
Ref: 10d244136
Node: Recording warnings244138
Ref: how-to/capture-warnings id3244317
Ref: 10e244317
Ref: how-to/capture-warnings recwarn244317
Ref: 105244317
Node: Additional use cases of warnings in tests245648
Ref: how-to/capture-warnings additional-use-cases-of-warnings-in-tests245808
Ref: 110245808
Ref: how-to/capture-warnings warns-use-cases245808
Ref: 111245808
Node: Custom failure messages246775
Ref: how-to/capture-warnings custom-failure-messages246941
Ref: 112246941
Ref: how-to/capture-warnings id4246941
Ref: 113246941
Node: Internal pytest warnings247483
Ref: how-to/capture-warnings internal-pytest-warnings247625
Ref: 115247625
Ref: how-to/capture-warnings internal-warnings247625
Ref: 116247625
Node: Resource Warnings248948
Ref: how-to/capture-warnings id5249058
Ref: 11a249058
Ref: how-to/capture-warnings resource-warnings249058
Ref: 11b249058
Ref: how-to/skipping skip-and-xfail249535
Ref: 11c249535
Ref: Resource Warnings-Footnote-1249573
Ref: Resource Warnings-Footnote-2249647
Ref: Resource Warnings-Footnote-3249726
Ref: Resource Warnings-Footnote-4249805
Ref: Resource Warnings-Footnote-5249884
Node: How to use skip and xfail to deal with tests that cannot succeed249939
Ref: how-to/skipping doc250114
Ref: 11d250114
Ref: how-to/skipping how-to-use-skip-and-xfail-to-deal-with-tests-that-cannot-succeed250114
Ref: 11e250114
Ref: how-to/skipping skipping250114
Ref: 11f250114
Ref: how-to/skipping skipif251626
Ref: 82251626
Ref: how-to/skipping skip251626
Ref: 81251626
Node: Skipping test functions251794
Ref: how-to/skipping condition-booleans251972
Ref: 121251972
Ref: how-to/skipping skipping-test-functions251972
Ref: 122251972
Node: skipif253122
Ref: how-to/skipping id1253241
Ref: 124253241
Node: Skip all test functions of a class or module254724
Ref: how-to/skipping skip-all-test-functions-of-a-class-or-module254881
Ref: 127254881
Node: Skipping files or directories255673
Ref: how-to/skipping skipping-files-or-directories255863
Ref: 128255863
Ref: how-to/skipping whole-class-or-module-level255863
Ref: 129255863
Node: Skipping on a missing import dependency256264
Ref: how-to/skipping skipping-on-a-missing-import-dependency256417
Ref: 12b256417
Node: Summary257001
Ref: how-to/skipping summary257116
Ref: 12d257116
Node: XFail mark test functions as expected to fail257612
Ref: how-to/skipping xfail257826
Ref: 83257826
Ref: how-to/skipping xfail-mark-test-functions-as-expected-to-fail257826
Ref: 12e257826
Node: condition parameter259285
Ref: how-to/skipping condition-parameter259411
Ref: 130259411
Node: reason parameter259826
Ref: how-to/skipping reason-parameter259977
Ref: 131259977
Node: raises parameter260211
Ref: how-to/skipping raises-parameter260356
Ref: 132260356
Node: run parameter260768
Ref: how-to/skipping run-parameter260913
Ref: 133260913
Node: strict parameter261287
Ref: how-to/skipping strict-parameter261430
Ref: 134261430
Ref: how-to/skipping xfail-strict-tutorial261430
Ref: 135261430
Node: Ignoring xfail261972
Ref: how-to/skipping ignoring-xfail262110
Ref: 136262110
Node: Examples262385
Ref: how-to/skipping examples262498
Ref: 137262498
Node: Skip/xfail with parametrize264164
Ref: how-to/skipping id2264346
Ref: 138264346
Ref: how-to/skipping skip-xfail-with-parametrize264346
Ref: 139264346
Ref: how-to/plugins external-plugins265073
Ref: 13a265073
Ref: how-to/plugins extplugins265073
Ref: 13b265073
Node: How to install and use plugins265074
Ref: how-to/plugins doc265241
Ref: 13c265241
Ref: how-to/plugins how-to-install-and-use-plugins265241
Ref: 13d265241
Ref: how-to/plugins using-plugins265241
Ref: 13e265241
Ref: How to install and use plugins-Footnote-1267178
Ref: How to install and use plugins-Footnote-2267226
Ref: How to install and use plugins-Footnote-3267266
Ref: How to install and use plugins-Footnote-4267315
Ref: How to install and use plugins-Footnote-5267350
Ref: How to install and use plugins-Footnote-6267395
Ref: How to install and use plugins-Footnote-7267442
Ref: How to install and use plugins-Footnote-8267493
Ref: How to install and use plugins-Footnote-9267538
Ref: How to install and use plugins-Footnote-10267587
Ref: How to install and use plugins-Footnote-11267634
Ref: How to install and use plugins-Footnote-12267683
Ref: How to install and use plugins-Footnote-13267732
Ref: How to install and use plugins-Footnote-14267778
Node: Requiring/Loading plugins in a test module or conftest file267822
Ref: how-to/plugins available-installable-plugins267993
Ref: 141267993
Ref: how-to/plugins requiring-loading-plugins-in-a-test-module-or-conftest-file267993
Ref: 142267993
Node: Finding out which plugins are active268685
Ref: how-to/plugins finding-out-which-plugins-are-active268910
Ref: 144268910
Ref: how-to/plugins findpluginname268910
Ref: 145268910
Node: Deactivating / unregistering a plugin by name269282
Ref: how-to/plugins cmdunregister269439
Ref: d5269439
Ref: how-to/plugins deactivating-unregistering-a-plugin-by-name269439
Ref: 147269439
Ref: how-to/writing_plugins plugins270124
Ref: 15270124
Node: Writing plugins270126
Ref: how-to/writing_plugins doc270251
Ref: 148270251
Ref: how-to/writing_plugins builtin-plugins270251
Ref: 149270251
Ref: how-to/writing_plugins id1270251
Ref: 14a270251
Ref: how-to/writing_plugins writing-plugins270251
Ref: 13f270251
Node: Plugin discovery order at tool startup271922
Ref: how-to/writing_plugins plugin-discovery-order-at-tool-startup272060
Ref: 14f272060
Ref: how-to/writing_plugins pluginorder272060
Ref: 150272060
Ref: how-to/writing_plugins conftest-py-plugins273669
Ref: 146273669
Ref: how-to/writing_plugins localplugin273669
Ref: 152273669
Node: conftest py local per-directory plugins273670
Ref: how-to/writing_plugins conftest-py-local-per-directory-plugins273840
Ref: 153273840
Ref: how-to/writing_plugins local-conftest-plugins273840
Ref: 14b273840
Node: Writing your own plugin275545
Ref: how-to/writing_plugins writing-your-own-plugin275717
Ref: 155275717
Ref: how-to/writing_plugins setuptools-entry-points276669
Ref: 7b276669
Ref: Writing your own plugin-Footnote-1276707
Ref: Writing your own plugin-Footnote-2276772
Node: Making your plugin installable by others276820
Ref: how-to/writing_plugins making-your-plugin-installable-by-others276972
Ref: 158276972
Ref: how-to/writing_plugins pip-installable-plugins276972
Ref: 14c276972
Ref: Making your plugin installable by others-Footnote-1278285
Ref: Making your plugin installable by others-Footnote-2278341
Node: Assertion Rewriting278379
Ref: how-to/writing_plugins assertion-rewriting278570
Ref: 3d278570
Ref: how-to/writing_plugins id2278570
Ref: 159278570
Ref: Assertion Rewriting-Footnote-1281178
Ref: Assertion Rewriting-Footnote-2281220
Node: Requiring/Loading plugins in a test module or conftest file<2>281288
Ref: how-to/writing_plugins requiring-loading-plugins-in-a-test-module-or-conftest-file281471
Ref: 15a281471
Ref: how-to/writing_plugins requiring-plugins-in-non-root-conftests282210
Ref: 143282210
Node: Accessing another plugin by name283532
Ref: how-to/writing_plugins accessing-another-plugin-by-name283722
Ref: 15c283722
Node: Registering custom markers284084
Ref: how-to/writing_plugins registering-custom-markers284227
Ref: 15d284227
Ref: how-to/writing_plugins registering-markers284227
Ref: 89284227
Node: Testing plugins284790
Ref: how-to/writing_plugins testing-plugins284892
Ref: 15e284892
Node: Writing hook functions288842
Ref: how-to/writing_hook_functions doc288982
Ref: 161288982
Ref: how-to/writing_hook_functions writing-hook-functions288982
Ref: 162288982
Ref: how-to/writing_hook_functions writinghooks288982
Ref: 14d288982
Node: hook function validation and execution289464
Ref: how-to/writing_hook_functions hook-function-validation-and-execution289611
Ref: 163289611
Ref: how-to/writing_hook_functions validation289611
Ref: 164289611
Node: firstresult stop at first non-None result291020
Ref: how-to/writing_hook_functions firstresult291216
Ref: 165291216
Ref: how-to/writing_hook_functions firstresult-stop-at-first-non-none-result291216
Ref: 166291216
Node: hookwrapper executing around other hooks291734
Ref: how-to/writing_hook_functions hookwrapper291929
Ref: 167291929
Ref: how-to/writing_hook_functions hookwrapper-executing-around-other-hooks291929
Ref: 168291929
Ref: hookwrapper executing around other hooks-Footnote-1293503
Node: Hook function ordering / call example293575
Ref: how-to/writing_hook_functions hook-function-ordering-call-example293748
Ref: 169293748
Ref: how-to/writing_hook_functions plugin-hookorder293748
Ref: 16a293748
Node: Declaring new hooks295614
Ref: how-to/writing_hook_functions declaring-new-hooks295778
Ref: 16b295778
Ref: Declaring new hooks-Footnote-1298570
Ref: Declaring new hooks-Footnote-2298619
Ref: Declaring new hooks-Footnote-3298735
Node: Using hooks in pytest_addoption298786
Ref: how-to/writing_hook_functions addoptionhooks298958
Ref: 16d298958
Ref: how-to/writing_hook_functions using-hooks-in-pytest-addoption298958
Ref: 16e298958
Node: Optionally using hooks from 3rd party plugins300417
Ref: how-to/writing_hook_functions optionally-using-hooks-from-3rd-party-plugins300613
Ref: 16f300613
Node: Storing data on items across hook functions301624
Ref: how-to/writing_hook_functions plugin-stash301780
Ref: 170301780
Ref: how-to/writing_hook_functions storing-data-on-items-across-hook-functions301780
Ref: 171301780
Node: How to use pytest with an existing test suite302977
Ref: how-to/existingtestsuite doc303145
Ref: 176303145
Ref: how-to/existingtestsuite existingtestsuite303145
Ref: 13303145
Ref: how-to/existingtestsuite how-to-use-pytest-with-an-existing-test-suite303145
Ref: 177303145
Node: Running an existing test suite with pytest303538
Ref: how-to/existingtestsuite running-an-existing-test-suite-with-pytest303662
Ref: 179303662
Ref: how-to/unittest unittest-testcase304549
Ref: 17b304549
Node: How to use unittest-based tests with pytest304551
Ref: how-to/unittest doc304730
Ref: 17c304730
Ref: how-to/unittest how-to-use-unittest-based-tests-with-pytest304730
Ref: 17d304730
Ref: how-to/unittest unittest304730
Ref: 17e304730
Ref: How to use unittest-based tests with pytest-Footnote-1306110
Ref: How to use unittest-based tests with pytest-Footnote-2306175
Ref: How to use unittest-based tests with pytest-Footnote-3306229
Node: Benefits out of the box306306
Ref: how-to/unittest benefits-out-of-the-box306465
Ref: 17f306465
Ref: Benefits out of the box-Footnote-1307195
Ref: Benefits out of the box-Footnote-2307242
Node: pytest features in unittest TestCase subclasses307292
Ref: how-to/unittest pytest-features-in-unittest-testcase-subclasses307528
Ref: 181307528
Node: Mixing pytest fixtures into unittest TestCase subclasses using marks308196
Ref: how-to/unittest mixing-fixtures308460
Ref: 182308460
Ref: how-to/unittest mixing-pytest-fixtures-into-unittest-testcase-subclasses-using-marks308460
Ref: 183308460
Node: Using autouse fixtures and accessing other fixtures312381
Ref: how-to/unittest using-autouse-fixtures-and-accessing-other-fixtures312589
Ref: 184312589
Ref: how-to/unittest pdb-unittest-note315095
Ref: 180315095
Node: How to run tests written for nose315675
Ref: how-to/nose doc315844
Ref: 186315844
Ref: how-to/nose how-to-run-tests-written-for-nose315844
Ref: 187315844
Ref: how-to/nose noseintegration315844
Ref: 178315844
Ref: How to run tests written for nose-Footnote-1316153
Node: Usage<2>316200
Ref: how-to/nose nosestyle316308
Ref: 188316308
Ref: how-to/nose usage316308
Ref: 189316308
Node: Supported nose Idioms316573
Ref: how-to/nose supported-nose-idioms316723
Ref: 18a316723
Node: Unsupported idioms / known issues317000
Ref: how-to/nose unsupported-idioms-known-issues317171
Ref: 18b317171
Ref: Unsupported idioms / known issues-Footnote-1319244
Ref: Unsupported idioms / known issues-Footnote-2319300
Ref: Unsupported idioms / known issues-Footnote-3319356
Node: Migrating from nose to pytest319448
Ref: how-to/nose migrating-from-nose-to-pytest319589
Ref: 18c319589
Ref: how-to/xunit_setup classic-xunit319936
Ref: 18d319936
Ref: Migrating from nose to pytest-Footnote-1319974
Node: How to implement xunit-style set-up320024
Ref: how-to/xunit_setup doc320179
Ref: 18e320179
Ref: how-to/xunit_setup how-to-implement-xunit-style-set-up320179
Ref: 18f320179
Ref: how-to/xunit_setup nose320179
Ref: 190320179
Ref: how-to/xunit_setup xunitsetup320179
Ref: 191320179
Node: Module level setup/teardown321114
Ref: how-to/xunit_setup module-level-setup-teardown321248
Ref: 192321248
Node: Class level setup/teardown321816
Ref: how-to/xunit_setup class-level-setup-teardown321999
Ref: 193321999
Node: Method and function level setup/teardown322513
Ref: how-to/xunit_setup method-and-function-level-setup-teardown322660
Ref: 194322660
Node: How to set up bash completion324350
Ref: how-to/bash-completion doc324490
Ref: 195324490
Ref: how-to/bash-completion bash-completion324490
Ref: 196324490
Ref: how-to/bash-completion how-to-set-up-bash-completion324490
Ref: 197324490
Ref: reference/fixtures reference-fixtures325186
Ref: 44325186
Ref: reference/fixtures fixture325186
Ref: d9325186
Ref: reference/fixtures fixtures325186
Ref: 10325186
Ref: reference/fixtures pytest-fixture325186
Ref: 198325186
Node: Fixtures reference325187
Ref: reference/fixtures doc325303
Ref: 199325303
Ref: reference/fixtures fixtures-reference325303
Ref: 19a325303
Ref: reference/fixtures id1325303
Ref: 19b325303
Node: Built-in fixtures325534
Ref: reference/fixtures built-in-fixtures325635
Ref: 19c325635
Ref: reference/fixtures dependency-injection325635
Ref: 19d325635
Ref: reference/fixtures conftest-py327873
Ref: 3a327873
Ref: Built-in fixtures-Footnote-1327910
Ref: Built-in fixtures-Footnote-2327978
Node: Fixture availability328046
Ref: reference/fixtures conftest328183
Ref: 1ae328183
Ref: reference/fixtures fixture-availability328183
Ref: 1af328183
Node: conftest py sharing fixtures across multiple files330363
Ref: reference/fixtures conftest-py-sharing-fixtures-across-multiple-files330512
Ref: 1b2330512
Node: Fixtures from third-party plugins333498
Ref: reference/fixtures fixtures-from-third-party-plugins333647
Ref: 1b3333647
Node: Fixture instantiation order335787
Ref: reference/fixtures fixture-instantiation-order335898
Ref: 1b4335898
Ref: reference/fixtures fixture-order335898
Ref: 1b1335898
Node: Higher-scoped fixtures are executed first336814
Ref: reference/fixtures higher-scoped-fixtures-are-executed-first336984
Ref: 1b5336984
Node: Fixtures of the same order execute based on dependencies338165
Ref: reference/fixtures fixtures-of-the-same-order-execute-based-on-dependencies338398
Ref: 1b6338398
Node: Autouse fixtures are executed first within their scope341224
Ref: reference/fixtures autouse-fixtures-are-executed-first-within-their-scope341407
Ref: 1b7341407
Ref: reference/fixtures autouse-order341407
Ref: 1b0341407
Node: Plugin List346330
Ref: reference/plugin_list doc346430
Ref: 1b8346430
Ref: reference/plugin_list id1346430
Ref: 1b9346430
Ref: reference/plugin_list plugin-list346430
Ref: 140346430
Ref: Plugin List-Footnote-11280988
Ref: Plugin List-Footnote-21281039
Ref: Plugin List-Footnote-31281087
Ref: Plugin List-Footnote-41281139
Ref: Plugin List-Footnote-51281192
Ref: Plugin List-Footnote-61281237
Ref: Plugin List-Footnote-71281297
Ref: Plugin List-Footnote-81281344
Ref: Plugin List-Footnote-91281395
Ref: Plugin List-Footnote-101281440
Ref: Plugin List-Footnote-111281491
Ref: Plugin List-Footnote-121281541
Ref: Plugin List-Footnote-131281598
Ref: Plugin List-Footnote-141281648
Ref: Plugin List-Footnote-151281703
Ref: Plugin List-Footnote-161281756
Ref: Plugin List-Footnote-171281806
Ref: Plugin List-Footnote-181281862
Ref: Plugin List-Footnote-191281912
Ref: Plugin List-Footnote-201281963
Ref: Plugin List-Footnote-211282020
Ref: Plugin List-Footnote-221282078
Ref: Plugin List-Footnote-231282138
Ref: Plugin List-Footnote-241282191
Ref: Plugin List-Footnote-251282254
Ref: Plugin List-Footnote-261282306
Ref: Plugin List-Footnote-271282356
Ref: Plugin List-Footnote-281282403
Ref: Plugin List-Footnote-291282454
Ref: Plugin List-Footnote-301282504
Ref: Plugin List-Footnote-311282563
Ref: Plugin List-Footnote-321282629
Ref: Plugin List-Footnote-331282685
Ref: Plugin List-Footnote-341282735
Ref: Plugin List-Footnote-351282783
Ref: Plugin List-Footnote-361282834
Ref: Plugin List-Footnote-371282880
Ref: Plugin List-Footnote-381282933
Ref: Plugin List-Footnote-391282979
Ref: Plugin List-Footnote-401283030
Ref: Plugin List-Footnote-411283083
Ref: Plugin List-Footnote-421283135
Ref: Plugin List-Footnote-431283184
Ref: Plugin List-Footnote-441283240
Ref: Plugin List-Footnote-451283288
Ref: Plugin List-Footnote-461283340
Ref: Plugin List-Footnote-471283394
Ref: Plugin List-Footnote-481283444
Ref: Plugin List-Footnote-491283498
Ref: Plugin List-Footnote-501283551
Ref: Plugin List-Footnote-511283604
Ref: Plugin List-Footnote-521283659
Ref: Plugin List-Footnote-531283708
Ref: Plugin List-Footnote-541283758
Ref: Plugin List-Footnote-551283819
Ref: Plugin List-Footnote-561283870
Ref: Plugin List-Footnote-571283920
Ref: Plugin List-Footnote-581283977
Ref: Plugin List-Footnote-591284035
Ref: Plugin List-Footnote-601284085
Ref: Plugin List-Footnote-611284147
Ref: Plugin List-Footnote-621284215
Ref: Plugin List-Footnote-631284271
Ref: Plugin List-Footnote-641284330
Ref: Plugin List-Footnote-651284379
Ref: Plugin List-Footnote-661284428
Ref: Plugin List-Footnote-671284477
Ref: Plugin List-Footnote-681284527
Ref: Plugin List-Footnote-691284582
Ref: Plugin List-Footnote-701284635
Ref: Plugin List-Footnote-711284686
Ref: Plugin List-Footnote-721284745
Ref: Plugin List-Footnote-731284796
Ref: Plugin List-Footnote-741284848
Ref: Plugin List-Footnote-751284894
Ref: Plugin List-Footnote-761284947
Ref: Plugin List-Footnote-771284993
Ref: Plugin List-Footnote-781285048
Ref: Plugin List-Footnote-791285105
Ref: Plugin List-Footnote-801285154
Ref: Plugin List-Footnote-811285205
Ref: Plugin List-Footnote-821285251
Ref: Plugin List-Footnote-831285302
Ref: Plugin List-Footnote-841285351
Ref: Plugin List-Footnote-851285406
Ref: Plugin List-Footnote-861285456
Ref: Plugin List-Footnote-871285511
Ref: Plugin List-Footnote-881285563
Ref: Plugin List-Footnote-891285610
Ref: Plugin List-Footnote-901285658
Ref: Plugin List-Footnote-911285710
Ref: Plugin List-Footnote-921285763
Ref: Plugin List-Footnote-931285816
Ref: Plugin List-Footnote-941285872
Ref: Plugin List-Footnote-951285920
Ref: Plugin List-Footnote-961285976
Ref: Plugin List-Footnote-971286024
Ref: Plugin List-Footnote-981286074
Ref: Plugin List-Footnote-991286123
Ref: Plugin List-Footnote-1001286174
Ref: Plugin List-Footnote-1011286225
Ref: Plugin List-Footnote-1021286273
Ref: Plugin List-Footnote-1031286322
Ref: Plugin List-Footnote-1041286375
Ref: Plugin List-Footnote-1051286423
Ref: Plugin List-Footnote-1061286474
Ref: Plugin List-Footnote-1071286527
Ref: Plugin List-Footnote-1081286584
Ref: Plugin List-Footnote-1091286637
Ref: Plugin List-Footnote-1101286688
Ref: Plugin List-Footnote-1111286748
Ref: Plugin List-Footnote-1121286810
Ref: Plugin List-Footnote-1131286857
Ref: Plugin List-Footnote-1141286912
Ref: Plugin List-Footnote-1151286964
Ref: Plugin List-Footnote-1161287025
Ref: Plugin List-Footnote-1171287078
Ref: Plugin List-Footnote-1181287135
Ref: Plugin List-Footnote-1191287184
Ref: Plugin List-Footnote-1201287233
Ref: Plugin List-Footnote-1211287289
Ref: Plugin List-Footnote-1221287340
Ref: Plugin List-Footnote-1231287389
Ref: Plugin List-Footnote-1241287446
Ref: Plugin List-Footnote-1251287504
Ref: Plugin List-Footnote-1261287554
Ref: Plugin List-Footnote-1271287624
Ref: Plugin List-Footnote-1281287684
Ref: Plugin List-Footnote-1291287733
Ref: Plugin List-Footnote-1301287786
Ref: Plugin List-Footnote-1311287838
Ref: Plugin List-Footnote-1321287894
Ref: Plugin List-Footnote-1331287944
Ref: Plugin List-Footnote-1341287998
Ref: Plugin List-Footnote-1351288049
Ref: Plugin List-Footnote-1361288104
Ref: Plugin List-Footnote-1371288161
Ref: Plugin List-Footnote-1381288215
Ref: Plugin List-Footnote-1391288264
Ref: Plugin List-Footnote-1401288313
Ref: Plugin List-Footnote-1411288366
Ref: Plugin List-Footnote-1421288419
Ref: Plugin List-Footnote-1431288476
Ref: Plugin List-Footnote-1441288530
Ref: Plugin List-Footnote-1451288585
Ref: Plugin List-Footnote-1461288637
Ref: Plugin List-Footnote-1471288687
Ref: Plugin List-Footnote-1481288739
Ref: Plugin List-Footnote-1491288804
Ref: Plugin List-Footnote-1501288873
Ref: Plugin List-Footnote-1511288921
Ref: Plugin List-Footnote-1521288972
Ref: Plugin List-Footnote-1531289020
Ref: Plugin List-Footnote-1541289069
Ref: Plugin List-Footnote-1551289125
Ref: Plugin List-Footnote-1561289173
Ref: Plugin List-Footnote-1571289222
Ref: Plugin List-Footnote-1581289283
Ref: Plugin List-Footnote-1591289335
Ref: Plugin List-Footnote-1601289384
Ref: Plugin List-Footnote-1611289438
Ref: Plugin List-Footnote-1621289494
Ref: Plugin List-Footnote-1631289545
Ref: Plugin List-Footnote-1641289596
Ref: Plugin List-Footnote-1651289650
Ref: Plugin List-Footnote-1661289703
Ref: Plugin List-Footnote-1671289764
Ref: Plugin List-Footnote-1681289826
Ref: Plugin List-Footnote-1691289879
Ref: Plugin List-Footnote-1701289932
Ref: Plugin List-Footnote-1711289985
Ref: Plugin List-Footnote-1721290043
Ref: Plugin List-Footnote-1731290097
Ref: Plugin List-Footnote-1741290147
Ref: Plugin List-Footnote-1751290208
Ref: Plugin List-Footnote-1761290267
Ref: Plugin List-Footnote-1771290317
Ref: Plugin List-Footnote-1781290370
Ref: Plugin List-Footnote-1791290428
Ref: Plugin List-Footnote-1801290480
Ref: Plugin List-Footnote-1811290531
Ref: Plugin List-Footnote-1821290585
Ref: Plugin List-Footnote-1831290634
Ref: Plugin List-Footnote-1841290681
Ref: Plugin List-Footnote-1851290730
Ref: Plugin List-Footnote-1861290782
Ref: Plugin List-Footnote-1871290842
Ref: Plugin List-Footnote-1881290897
Ref: Plugin List-Footnote-1891290944
Ref: Plugin List-Footnote-1901290996
Ref: Plugin List-Footnote-1911291045
Ref: Plugin List-Footnote-1921291093
Ref: Plugin List-Footnote-1931291142
Ref: Plugin List-Footnote-1941291192
Ref: Plugin List-Footnote-1951291243
Ref: Plugin List-Footnote-1961291290
Ref: Plugin List-Footnote-1971291344
Ref: Plugin List-Footnote-1981291393
Ref: Plugin List-Footnote-1991291448
Ref: Plugin List-Footnote-2001291510
Ref: Plugin List-Footnote-2011291570
Ref: Plugin List-Footnote-2021291627
Ref: Plugin List-Footnote-2031291684
Ref: Plugin List-Footnote-2041291745
Ref: Plugin List-Footnote-2051291795
Ref: Plugin List-Footnote-2061291853
Ref: Plugin List-Footnote-2071291903
Ref: Plugin List-Footnote-2081291951
Ref: Plugin List-Footnote-2091291999
Ref: Plugin List-Footnote-2101292053
Ref: Plugin List-Footnote-2111292104
Ref: Plugin List-Footnote-2121292159
Ref: Plugin List-Footnote-2131292213
Ref: Plugin List-Footnote-2141292271
Ref: Plugin List-Footnote-2151292324
Ref: Plugin List-Footnote-2161292377
Ref: Plugin List-Footnote-2171292433
Ref: Plugin List-Footnote-2181292492
Ref: Plugin List-Footnote-2191292546
Ref: Plugin List-Footnote-2201292602
Ref: Plugin List-Footnote-2211292653
Ref: Plugin List-Footnote-2221292708
Ref: Plugin List-Footnote-2231292760
Ref: Plugin List-Footnote-2241292806
Ref: Plugin List-Footnote-2251292860
Ref: Plugin List-Footnote-2261292913
Ref: Plugin List-Footnote-2271292968
Ref: Plugin List-Footnote-2281293027
Ref: Plugin List-Footnote-2291293079
Ref: Plugin List-Footnote-2301293140
Ref: Plugin List-Footnote-2311293196
Ref: Plugin List-Footnote-2321293247
Ref: Plugin List-Footnote-2331293296
Ref: Plugin List-Footnote-2341293351
Ref: Plugin List-Footnote-2351293405
Ref: Plugin List-Footnote-2361293456
Ref: Plugin List-Footnote-2371293509
Ref: Plugin List-Footnote-2381293561
Ref: Plugin List-Footnote-2391293616
Ref: Plugin List-Footnote-2401293672
Ref: Plugin List-Footnote-2411293720
Ref: Plugin List-Footnote-2421293771
Ref: Plugin List-Footnote-2431293820
Ref: Plugin List-Footnote-2441293873
Ref: Plugin List-Footnote-2451293921
Ref: Plugin List-Footnote-2461293978
Ref: Plugin List-Footnote-2471294029
Ref: Plugin List-Footnote-2481294087
Ref: Plugin List-Footnote-2491294138
Ref: Plugin List-Footnote-2501294188
Ref: Plugin List-Footnote-2511294244
Ref: Plugin List-Footnote-2521294297
Ref: Plugin List-Footnote-2531294359
Ref: Plugin List-Footnote-2541294418
Ref: Plugin List-Footnote-2551294475
Ref: Plugin List-Footnote-2561294535
Ref: Plugin List-Footnote-2571294595
Ref: Plugin List-Footnote-2581294650
Ref: Plugin List-Footnote-2591294709
Ref: Plugin List-Footnote-2601294768
Ref: Plugin List-Footnote-2611294823
Ref: Plugin List-Footnote-2621294888
Ref: Plugin List-Footnote-2631294944
Ref: Plugin List-Footnote-2641295003
Ref: Plugin List-Footnote-2651295061
Ref: Plugin List-Footnote-2661295124
Ref: Plugin List-Footnote-2671295177
Ref: Plugin List-Footnote-2681295237
Ref: Plugin List-Footnote-2691295306
Ref: Plugin List-Footnote-2701295353
Ref: Plugin List-Footnote-2711295405
Ref: Plugin List-Footnote-2721295455
Ref: Plugin List-Footnote-2731295505
Ref: Plugin List-Footnote-2741295571
Ref: Plugin List-Footnote-2751295627
Ref: Plugin List-Footnote-2761295678
Ref: Plugin List-Footnote-2771295736
Ref: Plugin List-Footnote-2781295789
Ref: Plugin List-Footnote-2791295848
Ref: Plugin List-Footnote-2801295911
Ref: Plugin List-Footnote-2811295978
Ref: Plugin List-Footnote-2821296036
Ref: Plugin List-Footnote-2831296097
Ref: Plugin List-Footnote-2841296150
Ref: Plugin List-Footnote-2851296218
Ref: Plugin List-Footnote-2861296276
Ref: Plugin List-Footnote-2871296341
Ref: Plugin List-Footnote-2881296397
Ref: Plugin List-Footnote-2891296445
Ref: Plugin List-Footnote-2901296497
Ref: Plugin List-Footnote-2911296555
Ref: Plugin List-Footnote-2921296623
Ref: Plugin List-Footnote-2931296681
Ref: Plugin List-Footnote-2941296736
Ref: Plugin List-Footnote-2951296787
Ref: Plugin List-Footnote-2961296839
Ref: Plugin List-Footnote-2971296889
Ref: Plugin List-Footnote-2981296936
Ref: Plugin List-Footnote-2991296988
Ref: Plugin List-Footnote-3001297046
Ref: Plugin List-Footnote-3011297098
Ref: Plugin List-Footnote-3021297151
Ref: Plugin List-Footnote-3031297212
Ref: Plugin List-Footnote-3041297265
Ref: Plugin List-Footnote-3051297321
Ref: Plugin List-Footnote-3061297373
Ref: Plugin List-Footnote-3071297431
Ref: Plugin List-Footnote-3081297483
Ref: Plugin List-Footnote-3091297534
Ref: Plugin List-Footnote-3101297586
Ref: Plugin List-Footnote-3111297641
Ref: Plugin List-Footnote-3121297698
Ref: Plugin List-Footnote-3131297745
Ref: Plugin List-Footnote-3141297793
Ref: Plugin List-Footnote-3151297850
Ref: Plugin List-Footnote-3161297902
Ref: Plugin List-Footnote-3171297951
Ref: Plugin List-Footnote-3181298007
Ref: Plugin List-Footnote-3191298056
Ref: Plugin List-Footnote-3201298108
Ref: Plugin List-Footnote-3211298168
Ref: Plugin List-Footnote-3221298224
Ref: Plugin List-Footnote-3231298281
Ref: Plugin List-Footnote-3241298338
Ref: Plugin List-Footnote-3251298397
Ref: Plugin List-Footnote-3261298460
Ref: Plugin List-Footnote-3271298511
Ref: Plugin List-Footnote-3281298560
Ref: Plugin List-Footnote-3291298616
Ref: Plugin List-Footnote-3301298667
Ref: Plugin List-Footnote-3311298717
Ref: Plugin List-Footnote-3321298772
Ref: Plugin List-Footnote-3331298828
Ref: Plugin List-Footnote-3341298875
Ref: Plugin List-Footnote-3351298927
Ref: Plugin List-Footnote-3361298979
Ref: Plugin List-Footnote-3371299029
Ref: Plugin List-Footnote-3381299080
Ref: Plugin List-Footnote-3391299132
Ref: Plugin List-Footnote-3401299185
Ref: Plugin List-Footnote-3411299244
Ref: Plugin List-Footnote-3421299291
Ref: Plugin List-Footnote-3431299343
Ref: Plugin List-Footnote-3441299397
Ref: Plugin List-Footnote-3451299449
Ref: Plugin List-Footnote-3461299498
Ref: Plugin List-Footnote-3471299553
Ref: Plugin List-Footnote-3481299613
Ref: Plugin List-Footnote-3491299667
Ref: Plugin List-Footnote-3501299726
Ref: Plugin List-Footnote-3511299776
Ref: Plugin List-Footnote-3521299828
Ref: Plugin List-Footnote-3531299879
Ref: Plugin List-Footnote-3541299934
Ref: Plugin List-Footnote-3551299986
Ref: Plugin List-Footnote-3561300041
Ref: Plugin List-Footnote-3571300095
Ref: Plugin List-Footnote-3581300156
Ref: Plugin List-Footnote-3591300215
Ref: Plugin List-Footnote-3601300265
Ref: Plugin List-Footnote-3611300316
Ref: Plugin List-Footnote-3621300370
Ref: Plugin List-Footnote-3631300433
Ref: Plugin List-Footnote-3641300493
Ref: Plugin List-Footnote-3651300554
Ref: Plugin List-Footnote-3661300614
Ref: Plugin List-Footnote-3671300667
Ref: Plugin List-Footnote-3681300716
Ref: Plugin List-Footnote-3691300766
Ref: Plugin List-Footnote-3701300823
Ref: Plugin List-Footnote-3711300874
Ref: Plugin List-Footnote-3721300925
Ref: Plugin List-Footnote-3731300981
Ref: Plugin List-Footnote-3741301032
Ref: Plugin List-Footnote-3751301086
Ref: Plugin List-Footnote-3761301142
Ref: Plugin List-Footnote-3771301197
Ref: Plugin List-Footnote-3781301248
Ref: Plugin List-Footnote-3791301299
Ref: Plugin List-Footnote-3801301351
Ref: Plugin List-Footnote-3811301405
Ref: Plugin List-Footnote-3821301460
Ref: Plugin List-Footnote-3831301521
Ref: Plugin List-Footnote-3841301582
Ref: Plugin List-Footnote-3851301640
Ref: Plugin List-Footnote-3861301691
Ref: Plugin List-Footnote-3871301749
Ref: Plugin List-Footnote-3881301806
Ref: Plugin List-Footnote-3891301864
Ref: Plugin List-Footnote-3901301921
Ref: Plugin List-Footnote-3911301978
Ref: Plugin List-Footnote-3921302030
Ref: Plugin List-Footnote-3931302087
Ref: Plugin List-Footnote-3941302148
Ref: Plugin List-Footnote-3951302198
Ref: Plugin List-Footnote-3961302253
Ref: Plugin List-Footnote-3971302306
Ref: Plugin List-Footnote-3981302361
Ref: Plugin List-Footnote-3991302411
Ref: Plugin List-Footnote-4001302465
Ref: Plugin List-Footnote-4011302514
Ref: Plugin List-Footnote-4021302570
Ref: Plugin List-Footnote-4031302630
Ref: Plugin List-Footnote-4041302703
Ref: Plugin List-Footnote-4051302753
Ref: Plugin List-Footnote-4061302802
Ref: Plugin List-Footnote-4071302851
Ref: Plugin List-Footnote-4081302904
Ref: Plugin List-Footnote-4091302969
Ref: Plugin List-Footnote-4101303034
Ref: Plugin List-Footnote-4111303087
Ref: Plugin List-Footnote-4121303142
Ref: Plugin List-Footnote-4131303198
Ref: Plugin List-Footnote-4141303250
Ref: Plugin List-Footnote-4151303302
Ref: Plugin List-Footnote-4161303349
Ref: Plugin List-Footnote-4171303399
Ref: Plugin List-Footnote-4181303446
Ref: Plugin List-Footnote-4191303505
Ref: Plugin List-Footnote-4201303551
Ref: Plugin List-Footnote-4211303599
Ref: Plugin List-Footnote-4221303649
Ref: Plugin List-Footnote-4231303700
Ref: Plugin List-Footnote-4241303756
Ref: Plugin List-Footnote-4251303814
Ref: Plugin List-Footnote-4261303864
Ref: Plugin List-Footnote-4271303911
Ref: Plugin List-Footnote-4281303961
Ref: Plugin List-Footnote-4291304017
Ref: Plugin List-Footnote-4301304067
Ref: Plugin List-Footnote-4311304144
Ref: Plugin List-Footnote-4321304201
Ref: Plugin List-Footnote-4331304254
Ref: Plugin List-Footnote-4341304311
Ref: Plugin List-Footnote-4351304369
Ref: Plugin List-Footnote-4361304419
Ref: Plugin List-Footnote-4371304474
Ref: Plugin List-Footnote-4381304532
Ref: Plugin List-Footnote-4391304585
Ref: Plugin List-Footnote-4401304634
Ref: Plugin List-Footnote-4411304682
Ref: Plugin List-Footnote-4421304736
Ref: Plugin List-Footnote-4431304787
Ref: Plugin List-Footnote-4441304841
Ref: Plugin List-Footnote-4451304896
Ref: Plugin List-Footnote-4461304946
Ref: Plugin List-Footnote-4471304997
Ref: Plugin List-Footnote-4481305058
Ref: Plugin List-Footnote-4491305114
Ref: Plugin List-Footnote-4501305166
Ref: Plugin List-Footnote-4511305223
Ref: Plugin List-Footnote-4521305280
Ref: Plugin List-Footnote-4531305354
Ref: Plugin List-Footnote-4541305403
Ref: Plugin List-Footnote-4551305453
Ref: Plugin List-Footnote-4561305505
Ref: Plugin List-Footnote-4571305565
Ref: Plugin List-Footnote-4581305616
Ref: Plugin List-Footnote-4591305664
Ref: Plugin List-Footnote-4601305716
Ref: Plugin List-Footnote-4611305771
Ref: Plugin List-Footnote-4621305834
Ref: Plugin List-Footnote-4631305892
Ref: Plugin List-Footnote-4641305949
Ref: Plugin List-Footnote-4651306011
Ref: Plugin List-Footnote-4661306066
Ref: Plugin List-Footnote-4671306114
Ref: Plugin List-Footnote-4681306165
Ref: Plugin List-Footnote-4691306220
Ref: Plugin List-Footnote-4701306273
Ref: Plugin List-Footnote-4711306327
Ref: Plugin List-Footnote-4721306376
Ref: Plugin List-Footnote-4731306434
Ref: Plugin List-Footnote-4741306481
Ref: Plugin List-Footnote-4751306531
Ref: Plugin List-Footnote-4761306582
Ref: Plugin List-Footnote-4771306632
Ref: Plugin List-Footnote-4781306682
Ref: Plugin List-Footnote-4791306732
Ref: Plugin List-Footnote-4801306780
Ref: Plugin List-Footnote-4811306834
Ref: Plugin List-Footnote-4821306890
Ref: Plugin List-Footnote-4831306944
Ref: Plugin List-Footnote-4841306999
Ref: Plugin List-Footnote-4851307051
Ref: Plugin List-Footnote-4861307109
Ref: Plugin List-Footnote-4871307169
Ref: Plugin List-Footnote-4881307227
Ref: Plugin List-Footnote-4891307274
Ref: Plugin List-Footnote-4901307325
Ref: Plugin List-Footnote-4911307387
Ref: Plugin List-Footnote-4921307442
Ref: Plugin List-Footnote-4931307498
Ref: Plugin List-Footnote-4941307549
Ref: Plugin List-Footnote-4951307598
Ref: Plugin List-Footnote-4961307651
Ref: Plugin List-Footnote-4971307705
Ref: Plugin List-Footnote-4981307760
Ref: Plugin List-Footnote-4991307820
Ref: Plugin List-Footnote-5001307875
Ref: Plugin List-Footnote-5011307935
Ref: Plugin List-Footnote-5021307986
Ref: Plugin List-Footnote-5031308037
Ref: Plugin List-Footnote-5041308085
Ref: Plugin List-Footnote-5051308134
Ref: Plugin List-Footnote-5061308183
Ref: Plugin List-Footnote-5071308237
Ref: Plugin List-Footnote-5081308283
Ref: Plugin List-Footnote-5091308337
Ref: Plugin List-Footnote-5101308386
Ref: Plugin List-Footnote-5111308437
Ref: Plugin List-Footnote-5121308485
Ref: Plugin List-Footnote-5131308533
Ref: Plugin List-Footnote-5141308586
Ref: Plugin List-Footnote-5151308639
Ref: Plugin List-Footnote-5161308687
Ref: Plugin List-Footnote-5171308735
Ref: Plugin List-Footnote-5181308792
Ref: Plugin List-Footnote-5191308844
Ref: Plugin List-Footnote-5201308899
Ref: Plugin List-Footnote-5211308948
Ref: Plugin List-Footnote-5221309002
Ref: Plugin List-Footnote-5231309050
Ref: Plugin List-Footnote-5241309098
Ref: Plugin List-Footnote-5251309146
Ref: Plugin List-Footnote-5261309195
Ref: Plugin List-Footnote-5271309245
Ref: Plugin List-Footnote-5281309302
Ref: Plugin List-Footnote-5291309359
Ref: Plugin List-Footnote-5301309409
Ref: Plugin List-Footnote-5311309457
Ref: Plugin List-Footnote-5321309511
Ref: Plugin List-Footnote-5331309560
Ref: Plugin List-Footnote-5341309616
Ref: Plugin List-Footnote-5351309664
Ref: Plugin List-Footnote-5361309719
Ref: Plugin List-Footnote-5371309768
Ref: Plugin List-Footnote-5381309817
Ref: Plugin List-Footnote-5391309872
Ref: Plugin List-Footnote-5401309922
Ref: Plugin List-Footnote-5411309975
Ref: Plugin List-Footnote-5421310023
Ref: Plugin List-Footnote-5431310073
Ref: Plugin List-Footnote-5441310130
Ref: Plugin List-Footnote-5451310191
Ref: Plugin List-Footnote-5461310239
Ref: Plugin List-Footnote-5471310291
Ref: Plugin List-Footnote-5481310339
Ref: Plugin List-Footnote-5491310387
Ref: Plugin List-Footnote-5501310445
Ref: Plugin List-Footnote-5511310500
Ref: Plugin List-Footnote-5521310554
Ref: Plugin List-Footnote-5531310606
Ref: Plugin List-Footnote-5541310656
Ref: Plugin List-Footnote-5551310703
Ref: Plugin List-Footnote-5561310754
Ref: Plugin List-Footnote-5571310804
Ref: Plugin List-Footnote-5581310855
Ref: Plugin List-Footnote-5591310905
Ref: Plugin List-Footnote-5601310956
Ref: Plugin List-Footnote-5611311010
Ref: Plugin List-Footnote-5621311060
Ref: Plugin List-Footnote-5631311108
Ref: Plugin List-Footnote-5641311155
Ref: Plugin List-Footnote-5651311212
Ref: Plugin List-Footnote-5661311267
Ref: Plugin List-Footnote-5671311319
Ref: Plugin List-Footnote-5681311376
Ref: Plugin List-Footnote-5691311435
Ref: Plugin List-Footnote-5701311495
Ref: Plugin List-Footnote-5711311553
Ref: Plugin List-Footnote-5721311608
Ref: Plugin List-Footnote-5731311657
Ref: Plugin List-Footnote-5741311708
Ref: Plugin List-Footnote-5751311762
Ref: Plugin List-Footnote-5761311816
Ref: Plugin List-Footnote-5771311866
Ref: Plugin List-Footnote-5781311922
Ref: Plugin List-Footnote-5791311972
Ref: Plugin List-Footnote-5801312018
Ref: Plugin List-Footnote-5811312071
Ref: Plugin List-Footnote-5821312122
Ref: Plugin List-Footnote-5831312172
Ref: Plugin List-Footnote-5841312220
Ref: Plugin List-Footnote-5851312273
Ref: Plugin List-Footnote-5861312321
Ref: Plugin List-Footnote-5871312372
Ref: Plugin List-Footnote-5881312425
Ref: Plugin List-Footnote-5891312477
Ref: Plugin List-Footnote-5901312528
Ref: Plugin List-Footnote-5911312579
Ref: Plugin List-Footnote-5921312632
Ref: Plugin List-Footnote-5931312692
Ref: Plugin List-Footnote-5941312738
Ref: Plugin List-Footnote-5951312787
Ref: Plugin List-Footnote-5961312835
Ref: Plugin List-Footnote-5971312887
Ref: Plugin List-Footnote-5981312945
Ref: Plugin List-Footnote-5991313000
Ref: Plugin List-Footnote-6001313051
Ref: Plugin List-Footnote-6011313104
Ref: Plugin List-Footnote-6021313162
Ref: Plugin List-Footnote-6031313217
Ref: Plugin List-Footnote-6041313272
Ref: Plugin List-Footnote-6051313328
Ref: Plugin List-Footnote-6061313383
Ref: Plugin List-Footnote-6071313438
Ref: Plugin List-Footnote-6081313490
Ref: Plugin List-Footnote-6091313539
Ref: Plugin List-Footnote-6101313590
Ref: Plugin List-Footnote-6111313641
Ref: Plugin List-Footnote-6121313695
Ref: Plugin List-Footnote-6131313749
Ref: Plugin List-Footnote-6141313797
Ref: Plugin List-Footnote-6151313846
Ref: Plugin List-Footnote-6161313892
Ref: Plugin List-Footnote-6171313939
Ref: Plugin List-Footnote-6181313986
Ref: Plugin List-Footnote-6191314035
Ref: Plugin List-Footnote-6201314090
Ref: Plugin List-Footnote-6211314143
Ref: Plugin List-Footnote-6221314195
Ref: Plugin List-Footnote-6231314253
Ref: Plugin List-Footnote-6241314318
Ref: Plugin List-Footnote-6251314369
Ref: Plugin List-Footnote-6261314417
Ref: Plugin List-Footnote-6271314466
Ref: Plugin List-Footnote-6281314522
Ref: Plugin List-Footnote-6291314583
Ref: Plugin List-Footnote-6301314639
Ref: Plugin List-Footnote-6311314688
Ref: Plugin List-Footnote-6321314738
Ref: Plugin List-Footnote-6331314785
Ref: Plugin List-Footnote-6341314836
Ref: Plugin List-Footnote-6351314897
Ref: Plugin List-Footnote-6361314952
Ref: Plugin List-Footnote-6371315001
Ref: Plugin List-Footnote-6381315057
Ref: Plugin List-Footnote-6391315106
Ref: Plugin List-Footnote-6401315161
Ref: Plugin List-Footnote-6411315214
Ref: Plugin List-Footnote-6421315262
Ref: Plugin List-Footnote-6431315322
Ref: Plugin List-Footnote-6441315371
Ref: Plugin List-Footnote-6451315423
Ref: Plugin List-Footnote-6461315472
Ref: Plugin List-Footnote-6471315525
Ref: Plugin List-Footnote-6481315575
Ref: Plugin List-Footnote-6491315631
Ref: Plugin List-Footnote-6501315683
Ref: Plugin List-Footnote-6511315741
Ref: Plugin List-Footnote-6521315791
Ref: Plugin List-Footnote-6531315840
Ref: Plugin List-Footnote-6541315897
Ref: Plugin List-Footnote-6551315947
Ref: Plugin List-Footnote-6561315995
Ref: Plugin List-Footnote-6571316052
Ref: Plugin List-Footnote-6581316100
Ref: Plugin List-Footnote-6591316146
Ref: Plugin List-Footnote-6601316194
Ref: Plugin List-Footnote-6611316241
Ref: Plugin List-Footnote-6621316294
Ref: Plugin List-Footnote-6631316351
Ref: Plugin List-Footnote-6641316402
Ref: Plugin List-Footnote-6651316454
Ref: Plugin List-Footnote-6661316506
Ref: Plugin List-Footnote-6671316564
Ref: Plugin List-Footnote-6681316621
Ref: Plugin List-Footnote-6691316670
Ref: Plugin List-Footnote-6701316722
Ref: Plugin List-Footnote-6711316775
Ref: Plugin List-Footnote-6721316823
Ref: Plugin List-Footnote-6731316872
Ref: Plugin List-Footnote-6741316920
Ref: Plugin List-Footnote-6751316978
Ref: Plugin List-Footnote-6761317030
Ref: Plugin List-Footnote-6771317085
Ref: Plugin List-Footnote-6781317134
Ref: Plugin List-Footnote-6791317186
Ref: Plugin List-Footnote-6801317245
Ref: Plugin List-Footnote-6811317306
Ref: Plugin List-Footnote-6821317362
Ref: Plugin List-Footnote-6831317413
Ref: Plugin List-Footnote-6841317461
Ref: Plugin List-Footnote-6851317515
Ref: Plugin List-Footnote-6861317571
Ref: Plugin List-Footnote-6871317622
Ref: Plugin List-Footnote-6881317669
Ref: Plugin List-Footnote-6891317718
Ref: Plugin List-Footnote-6901317768
Ref: Plugin List-Footnote-6911317816
Ref: Plugin List-Footnote-6921317867
Ref: Plugin List-Footnote-6931317915
Ref: Plugin List-Footnote-6941317970
Ref: Plugin List-Footnote-6951318025
Ref: Plugin List-Footnote-6961318071
Ref: Plugin List-Footnote-6971318120
Ref: Plugin List-Footnote-6981318174
Ref: Plugin List-Footnote-6991318224
Ref: Plugin List-Footnote-7001318278
Ref: Plugin List-Footnote-7011318329
Ref: Plugin List-Footnote-7021318378
Ref: Plugin List-Footnote-7031318427
Ref: Plugin List-Footnote-7041318477
Ref: Plugin List-Footnote-7051318529
Ref: Plugin List-Footnote-7061318581
Ref: Plugin List-Footnote-7071318641
Ref: Plugin List-Footnote-7081318689
Ref: Plugin List-Footnote-7091318741
Ref: Plugin List-Footnote-7101318795
Ref: Plugin List-Footnote-7111318850
Ref: Plugin List-Footnote-7121318913
Ref: Plugin List-Footnote-7131318974
Ref: Plugin List-Footnote-7141319021
Ref: Plugin List-Footnote-7151319079
Ref: Plugin List-Footnote-7161319127
Ref: Plugin List-Footnote-7171319176
Ref: Plugin List-Footnote-7181319228
Ref: Plugin List-Footnote-7191319285
Ref: Plugin List-Footnote-7201319345
Ref: Plugin List-Footnote-7211319396
Ref: Plugin List-Footnote-7221319447
Ref: Plugin List-Footnote-7231319494
Ref: Plugin List-Footnote-7241319546
Ref: Plugin List-Footnote-7251319593
Ref: Plugin List-Footnote-7261319644
Ref: Plugin List-Footnote-7271319696
Ref: Plugin List-Footnote-7281319750
Ref: Plugin List-Footnote-7291319799
Ref: Plugin List-Footnote-7301319866
Ref: Plugin List-Footnote-7311319925
Ref: Plugin List-Footnote-7321319974
Ref: Plugin List-Footnote-7331320023
Ref: Plugin List-Footnote-7341320075
Ref: Plugin List-Footnote-7351320128
Ref: Plugin List-Footnote-7361320180
Ref: Plugin List-Footnote-7371320234
Ref: Plugin List-Footnote-7381320300
Ref: Plugin List-Footnote-7391320351
Ref: Plugin List-Footnote-7401320400
Ref: Plugin List-Footnote-7411320453
Ref: Plugin List-Footnote-7421320502
Ref: Plugin List-Footnote-7431320550
Ref: Plugin List-Footnote-7441320602
Ref: Plugin List-Footnote-7451320653
Ref: Plugin List-Footnote-7461320708
Ref: Plugin List-Footnote-7471320757
Ref: Plugin List-Footnote-7481320811
Ref: Plugin List-Footnote-7491320861
Ref: Plugin List-Footnote-7501320923
Ref: Plugin List-Footnote-7511320974
Ref: Plugin List-Footnote-7521321022
Ref: Plugin List-Footnote-7531321082
Ref: Plugin List-Footnote-7541321135
Ref: Plugin List-Footnote-7551321182
Ref: Plugin List-Footnote-7561321233
Ref: Plugin List-Footnote-7571321291
Ref: Plugin List-Footnote-7581321342
Ref: Plugin List-Footnote-7591321396
Ref: Plugin List-Footnote-7601321450
Ref: Plugin List-Footnote-7611321501
Ref: Plugin List-Footnote-7621321551
Ref: Plugin List-Footnote-7631321602
Ref: Plugin List-Footnote-7641321650
Ref: Plugin List-Footnote-7651321697
Ref: Plugin List-Footnote-7661321743
Ref: Plugin List-Footnote-7671321789
Ref: Plugin List-Footnote-7681321839
Ref: Plugin List-Footnote-7691321893
Ref: Plugin List-Footnote-7701321947
Ref: Plugin List-Footnote-7711321999
Ref: Plugin List-Footnote-7721322047
Ref: Plugin List-Footnote-7731322095
Ref: Plugin List-Footnote-7741322143
Ref: Plugin List-Footnote-7751322213
Ref: Plugin List-Footnote-7761322263
Ref: Plugin List-Footnote-7771322319
Ref: Plugin List-Footnote-7781322369
Ref: Plugin List-Footnote-7791322419
Ref: Plugin List-Footnote-7801322471
Ref: Plugin List-Footnote-7811322525
Ref: Plugin List-Footnote-7821322579
Ref: Plugin List-Footnote-7831322635
Ref: Plugin List-Footnote-7841322685
Ref: Plugin List-Footnote-7851322734
Ref: Plugin List-Footnote-7861322787
Ref: Plugin List-Footnote-7871322841
Ref: Plugin List-Footnote-7881322890
Ref: Plugin List-Footnote-7891322943
Ref: Plugin List-Footnote-7901322994
Ref: Plugin List-Footnote-7911323041
Ref: Plugin List-Footnote-7921323104
Ref: Plugin List-Footnote-7931323164
Ref: Plugin List-Footnote-7941323219
Ref: Plugin List-Footnote-7951323270
Ref: Plugin List-Footnote-7961323328
Ref: Plugin List-Footnote-7971323379
Ref: Plugin List-Footnote-7981323431
Ref: Plugin List-Footnote-7991323485
Ref: Plugin List-Footnote-8001323544
Ref: Plugin List-Footnote-8011323609
Ref: Plugin List-Footnote-8021323660
Ref: Plugin List-Footnote-8031323710
Ref: Plugin List-Footnote-8041323760
Ref: Plugin List-Footnote-8051323815
Ref: Plugin List-Footnote-8061323865
Ref: Plugin List-Footnote-8071323917
Ref: Plugin List-Footnote-8081323975
Ref: Plugin List-Footnote-8091324030
Ref: Plugin List-Footnote-8101324083
Ref: Plugin List-Footnote-8111324136
Ref: Plugin List-Footnote-8121324189
Ref: Plugin List-Footnote-8131324250
Ref: Plugin List-Footnote-8141324306
Ref: Plugin List-Footnote-8151324354
Ref: Plugin List-Footnote-8161324406
Ref: Plugin List-Footnote-8171324465
Ref: Plugin List-Footnote-8181324525
Ref: Plugin List-Footnote-8191324577
Ref: Plugin List-Footnote-8201324628
Ref: Plugin List-Footnote-8211324677
Ref: Plugin List-Footnote-8221324734
Ref: Plugin List-Footnote-8231324800
Ref: Plugin List-Footnote-8241324862
Ref: Plugin List-Footnote-8251324914
Ref: Plugin List-Footnote-8261324971
Ref: Plugin List-Footnote-8271325027
Ref: Plugin List-Footnote-8281325080
Ref: Plugin List-Footnote-8291325132
Ref: Plugin List-Footnote-8301325184
Ref: Plugin List-Footnote-8311325237
Ref: Plugin List-Footnote-8321325286
Ref: Plugin List-Footnote-8331325337
Ref: Plugin List-Footnote-8341325385
Ref: Plugin List-Footnote-8351325442
Ref: Plugin List-Footnote-8361325491
Ref: Plugin List-Footnote-8371325540
Ref: Plugin List-Footnote-8381325587
Ref: Plugin List-Footnote-8391325636
Ref: Plugin List-Footnote-8401325690
Ref: Plugin List-Footnote-8411325740
Ref: Plugin List-Footnote-8421325787
Ref: Plugin List-Footnote-8431325834
Ref: Plugin List-Footnote-8441325880
Ref: Plugin List-Footnote-8451325927
Ref: Plugin List-Footnote-8461325982
Ref: Plugin List-Footnote-8471326035
Ref: Plugin List-Footnote-8481326085
Ref: Plugin List-Footnote-8491326143
Ref: Plugin List-Footnote-8501326200
Ref: Plugin List-Footnote-8511326253
Ref: Plugin List-Footnote-8521326301
Ref: Plugin List-Footnote-8531326360
Ref: Plugin List-Footnote-8541326418
Ref: Plugin List-Footnote-8551326481
Ref: Plugin List-Footnote-8561326545
Ref: Plugin List-Footnote-8571326594
Ref: Plugin List-Footnote-8581326644
Ref: Plugin List-Footnote-8591326693
Ref: Plugin List-Footnote-8601326742
Ref: Plugin List-Footnote-8611326794
Ref: Plugin List-Footnote-8621326844
Ref: Plugin List-Footnote-8631326899
Ref: Plugin List-Footnote-8641326949
Ref: Plugin List-Footnote-8651327001
Ref: Plugin List-Footnote-8661327057
Ref: Plugin List-Footnote-8671327118
Ref: Plugin List-Footnote-8681327176
Ref: Plugin List-Footnote-8691327230
Ref: Plugin List-Footnote-8701327280
Ref: Plugin List-Footnote-8711327339
Ref: Plugin List-Footnote-8721327393
Ref: Plugin List-Footnote-8731327444
Ref: Plugin List-Footnote-8741327496
Ref: Plugin List-Footnote-8751327552
Ref: Plugin List-Footnote-8761327621
Ref: Plugin List-Footnote-8771327680
Ref: Plugin List-Footnote-8781327734
Ref: Plugin List-Footnote-8791327783
Ref: Plugin List-Footnote-8801327838
Ref: Plugin List-Footnote-8811327887
Ref: Plugin List-Footnote-8821327946
Ref: Plugin List-Footnote-8831327996
Ref: Plugin List-Footnote-8841328048
Ref: Plugin List-Footnote-8851328101
Ref: Plugin List-Footnote-8861328151
Ref: Plugin List-Footnote-8871328211
Ref: Plugin List-Footnote-8881328268
Ref: Plugin List-Footnote-8891328327
Ref: Plugin List-Footnote-8901328390
Ref: Plugin List-Footnote-8911328446
Ref: Plugin List-Footnote-8921328497
Ref: Plugin List-Footnote-8931328547
Ref: Plugin List-Footnote-8941328600
Ref: Plugin List-Footnote-8951328649
Ref: Plugin List-Footnote-8961328697
Ref: Plugin List-Footnote-8971328753
Ref: Plugin List-Footnote-8981328805
Ref: Plugin List-Footnote-8991328854
Ref: Plugin List-Footnote-9001328902
Ref: Plugin List-Footnote-9011328951
Ref: Plugin List-Footnote-9021329001
Ref: Plugin List-Footnote-9031329053
Ref: Plugin List-Footnote-9041329107
Ref: Plugin List-Footnote-9051329164
Ref: Plugin List-Footnote-9061329214
Ref: Plugin List-Footnote-9071329268
Ref: Plugin List-Footnote-9081329327
Ref: Plugin List-Footnote-9091329379
Ref: Plugin List-Footnote-9101329427
Ref: Plugin List-Footnote-9111329477
Ref: Plugin List-Footnote-9121329525
Ref: Plugin List-Footnote-9131329580
Ref: Plugin List-Footnote-9141329629
Ref: Plugin List-Footnote-9151329680
Ref: Plugin List-Footnote-9161329728
Ref: Plugin List-Footnote-9171329779
Ref: Plugin List-Footnote-9181329828
Ref: Plugin List-Footnote-9191329878
Ref: Plugin List-Footnote-9201329931
Ref: Plugin List-Footnote-9211329983
Ref: Plugin List-Footnote-9221330036
Ref: Plugin List-Footnote-9231330085
Ref: Plugin List-Footnote-9241330136
Ref: Plugin List-Footnote-9251330191
Ref: Plugin List-Footnote-9261330255
Ref: Plugin List-Footnote-9271330311
Ref: Plugin List-Footnote-9281330377
Ref: Plugin List-Footnote-9291330431
Ref: Plugin List-Footnote-9301330481
Ref: Plugin List-Footnote-9311330535
Ref: Plugin List-Footnote-9321330594
Ref: Plugin List-Footnote-9331330650
Ref: Plugin List-Footnote-9341330703
Ref: Plugin List-Footnote-9351330755
Ref: Plugin List-Footnote-9361330802
Ref: Plugin List-Footnote-9371330856
Ref: Plugin List-Footnote-9381330906
Ref: Plugin List-Footnote-9391330963
Ref: Plugin List-Footnote-9401331012
Ref: Plugin List-Footnote-9411331064
Ref: Plugin List-Footnote-9421331111
Ref: Plugin List-Footnote-9431331159
Ref: Plugin List-Footnote-9441331209
Ref: Plugin List-Footnote-9451331262
Ref: Plugin List-Footnote-9461331315
Ref: Plugin List-Footnote-9471331363
Ref: Plugin List-Footnote-9481331418
Ref: Plugin List-Footnote-9491331467
Ref: Plugin List-Footnote-9501331521
Ref: Plugin List-Footnote-9511331576
Ref: Plugin List-Footnote-9521331628
Ref: Plugin List-Footnote-9531331679
Ref: Plugin List-Footnote-9541331728
Ref: Plugin List-Footnote-9551331787
Ref: Plugin List-Footnote-9561331842
Ref: Plugin List-Footnote-9571331889
Ref: Plugin List-Footnote-9581331940
Ref: Plugin List-Footnote-9591332001
Ref: Plugin List-Footnote-9601332063
Ref: Plugin List-Footnote-9611332116
Ref: Plugin List-Footnote-9621332168
Ref: Plugin List-Footnote-9631332215
Ref: Plugin List-Footnote-9641332263
Ref: Plugin List-Footnote-9651332313
Ref: Plugin List-Footnote-9661332367
Ref: Plugin List-Footnote-9671332428
Ref: Plugin List-Footnote-9681332480
Ref: Plugin List-Footnote-9691332531
Ref: Plugin List-Footnote-9701332585
Ref: Plugin List-Footnote-9711332638
Ref: Plugin List-Footnote-9721332699
Ref: Plugin List-Footnote-9731332751
Ref: Plugin List-Footnote-9741332805
Ref: Plugin List-Footnote-9751332862
Ref: Plugin List-Footnote-9761332913
Ref: Plugin List-Footnote-9771332970
Ref: Plugin List-Footnote-9781333025
Ref: Plugin List-Footnote-9791333078
Ref: Plugin List-Footnote-9801333138
Ref: Plugin List-Footnote-9811333189
Ref: Plugin List-Footnote-9821333243
Ref: Plugin List-Footnote-9831333309
Ref: Plugin List-Footnote-9841333363
Ref: Plugin List-Footnote-9851333417
Ref: Plugin List-Footnote-9861333469
Ref: Plugin List-Footnote-9871333522
Ref: Plugin List-Footnote-9881333578
Ref: Plugin List-Footnote-9891333641
Ref: Plugin List-Footnote-9901333702
Ref: Plugin List-Footnote-9911333761
Ref: Plugin List-Footnote-9921333817
Ref: Plugin List-Footnote-9931333880
Ref: Plugin List-Footnote-9941333935
Ref: Plugin List-Footnote-9951333994
Ref: Plugin List-Footnote-9961334055
Ref: Plugin List-Footnote-9971334109
Ref: Plugin List-Footnote-9981334167
Ref: Plugin List-Footnote-9991334220
Ref: Plugin List-Footnote-10001334273
Ref: Plugin List-Footnote-10011334328
Ref: Plugin List-Footnote-10021334380
Ref: Plugin List-Footnote-10031334430
Ref: Plugin List-Footnote-10041334482
Ref: Plugin List-Footnote-10051334534
Ref: Plugin List-Footnote-10061334589
Ref: Plugin List-Footnote-10071334638
Ref: Plugin List-Footnote-10081334689
Ref: Plugin List-Footnote-10091334741
Ref: Plugin List-Footnote-10101334794
Ref: Plugin List-Footnote-10111334844
Ref: Plugin List-Footnote-10121334900
Ref: Plugin List-Footnote-10131334955
Ref: Plugin List-Footnote-10141335012
Ref: Plugin List-Footnote-10151335070
Ref: Plugin List-Footnote-10161335119
Ref: Plugin List-Footnote-10171335177
Ref: Plugin List-Footnote-10181335227
Ref: Plugin List-Footnote-10191335281
Ref: Plugin List-Footnote-10201335331
Ref: Plugin List-Footnote-10211335384
Ref: Plugin List-Footnote-10221335433
Ref: Plugin List-Footnote-10231335484
Ref: Plugin List-Footnote-10241335537
Ref: Plugin List-Footnote-10251335589
Ref: Plugin List-Footnote-10261335639
Ref: Plugin List-Footnote-10271335691
Ref: Plugin List-Footnote-10281335744
Ref: Plugin List-Footnote-10291335801
Ref: Plugin List-Footnote-10301335855
Ref: Plugin List-Footnote-10311335905
Ref: Plugin List-Footnote-10321335955
Ref: Plugin List-Footnote-10331336012
Ref: Plugin List-Footnote-10341336068
Ref: Plugin List-Footnote-10351336119
Ref: Plugin List-Footnote-10361336170
Ref: Plugin List-Footnote-10371336224
Ref: Plugin List-Footnote-10381336273
Ref: Plugin List-Footnote-10391336325
Ref: Plugin List-Footnote-10401336378
Ref: Plugin List-Footnote-10411336426
Ref: Plugin List-Footnote-10421336477
Ref: Plugin List-Footnote-10431336525
Ref: Plugin List-Footnote-10441336603
Ref: Plugin List-Footnote-10451336655
Ref: Plugin List-Footnote-10461336711
Ref: Plugin List-Footnote-10471336770
Ref: Plugin List-Footnote-10481336827
Ref: Plugin List-Footnote-10491336878
Ref: Plugin List-Footnote-10501336932
Ref: Plugin List-Footnote-10511336979
Ref: Plugin List-Footnote-10521337034
Ref: Plugin List-Footnote-10531337108
Ref: Plugin List-Footnote-10541337168
Ref: Plugin List-Footnote-10551337221
Ref: Plugin List-Footnote-10561337275
Ref: Plugin List-Footnote-10571337328
Ref: Plugin List-Footnote-10581337386
Ref: Plugin List-Footnote-10591337436
Ref: Plugin List-Footnote-10601337488
Ref: Plugin List-Footnote-10611337541
Ref: Plugin List-Footnote-10621337595
Ref: Plugin List-Footnote-10631337647
Ref: Plugin List-Footnote-10641337695
Ref: Plugin List-Footnote-10651337758
Ref: Plugin List-Footnote-10661337812
Ref: Plugin List-Footnote-10671337861
Ref: Plugin List-Footnote-10681337909
Ref: Plugin List-Footnote-10691337973
Ref: Plugin List-Footnote-10701338023
Ref: Plugin List-Footnote-10711338078
Ref: Plugin List-Footnote-10721338126
Ref: Plugin List-Footnote-10731338181
Ref: Plugin List-Footnote-10741338237
Ref: Plugin List-Footnote-10751338285
Ref: Plugin List-Footnote-10761338332
Ref: Plugin List-Footnote-10771338382
Ref: Plugin List-Footnote-10781338440
Ref: Plugin List-Footnote-10791338489
Ref: Plugin List-Footnote-10801338539
Ref: Plugin List-Footnote-10811338591
Ref: Plugin List-Footnote-10821338639
Ref: Plugin List-Footnote-10831338693
Ref: Plugin List-Footnote-10841338744
Ref: Plugin List-Footnote-10851338798
Ref: Plugin List-Footnote-10861338854
Ref: Plugin List-Footnote-10871338916
Ref: Plugin List-Footnote-10881338970
Ref: Plugin List-Footnote-10891339023
Ref: Plugin List-Footnote-10901339079
Ref: Plugin List-Footnote-10911339132
Ref: Plugin List-Footnote-10921339182
Ref: Plugin List-Footnote-10931339252
Ref: Plugin List-Footnote-10941339309
Ref: Plugin List-Footnote-10951339367
Ref: Plugin List-Footnote-10961339421
Ref: Plugin List-Footnote-10971339472
Ref: Plugin List-Footnote-10981339521
Ref: Plugin List-Footnote-10991339570
Ref: Plugin List-Footnote-11001339620
Ref: Plugin List-Footnote-11011339673
Ref: Plugin List-Footnote-11021339722
Ref: Plugin List-Footnote-11031339775
Ref: Plugin List-Footnote-11041339831
Ref: Plugin List-Footnote-11051339883
Ref: Plugin List-Footnote-11061339932
Ref: Plugin List-Footnote-11071339981
Ref: Plugin List-Footnote-11081340034
Ref: Plugin List-Footnote-11091340087
Ref: Plugin List-Footnote-11101340136
Ref: Plugin List-Footnote-11111340186
Ref: Plugin List-Footnote-11121340236
Ref: Plugin List-Footnote-11131340284
Ref: Plugin List-Footnote-11141340332
Ref: Plugin List-Footnote-11151340383
Ref: Plugin List-Footnote-11161340431
Ref: Plugin List-Footnote-11171340485
Ref: Plugin List-Footnote-11181340536
Node: Configuration1340586
Ref: reference/customize doc1340684
Ref: 1ba1340684
Ref: reference/customize configuration1340684
Ref: 1bb1340684
Node: Command line options and configuration file settings1341005
Ref: reference/customize command-line-options-and-configuration-file-settings1341142
Ref: 1bc1341142
Node: Configuration file formats1341550
Ref: reference/customize config-file-formats1341745
Ref: 1bd1341745
Ref: reference/customize configuration-file-formats1341745
Ref: 1be1341745
Node: pytest ini1342135
Ref: reference/customize pytest-ini1342231
Ref: 1c01342231
Node: pyproject toml1342554
Ref: reference/customize pyproject-toml1342666
Ref: 1c11342666
Node: tox ini1343498
Ref: reference/customize tox-ini1343609
Ref: 1c21343609
Ref: tox ini-Footnote-11343964
Node: setup cfg1343999
Ref: reference/customize setup-cfg1344087
Ref: 1c31344087
Ref: reference/customize rootdir1344806
Ref: 1c41344806
Ref: setup cfg-Footnote-11344843
Node: Initialization determining rootdir and configfile1344903
Ref: reference/customize configfiles1345080
Ref: 1c51345080
Ref: reference/customize initialization-determining-rootdir-and-configfile1345080
Ref: 1c61345080
Node: Finding the rootdir1346554
Ref: reference/customize finding-the-rootdir1346659
Ref: 1c81346659
Ref: reference/customize how-to-change-command-line-options-defaults1350485
Ref: 1201350485
Ref: Finding the rootdir-Footnote-11350522
Ref: Finding the rootdir-Footnote-21350590
Node: Builtin configuration file options1350647
Ref: reference/customize adding-default-options1350837
Ref: 1cb1350837
Ref: reference/customize builtin-configuration-file-options1350837
Ref: 1cc1350837
Node: Syntax highlighting theme customization1350996
Ref: reference/customize syntax-highlighting-theme-customization1351128
Ref: 1cd1351128
Ref: Syntax highlighting theme customization-Footnote-11351498
Node: API Reference<2>1351540
Ref: reference/reference doc1351644
Ref: 1d01351644
Ref: reference/reference api-reference1351644
Ref: 1d11351644
Ref: reference/reference id11351644
Ref: 1d21351644
Node: Constants1351944
Ref: reference/reference constants1352024
Ref: 1d31352024
Node: pytest __version__1352153
Ref: reference/reference pytest-version1352246
Ref: 1d41352246
Node: pytest version_tuple1352406
Ref: reference/reference pytest-version-tuple1352499
Ref: 1d51352499
Ref: reference/reference version-tuple1352499
Ref: 1d61352499
Node: Functions1352845
Ref: reference/reference functions1352939
Ref: 1d71352939
Node: pytest approx1353456
Ref: reference/reference pytest-approx1353535
Ref: 1d81353535
Ref: reference/reference pytest approx1353578
Ref: c31353578
Ref: pytest approx-Footnote-11362059
Ref: pytest approx-Footnote-21362124
Ref: pytest approx-Footnote-31362217
Ref: pytest approx-Footnote-41362294
Ref: pytest approx-Footnote-51362387
Ref: pytest approx-Footnote-61362456
Ref: pytest approx-Footnote-71362524
Node: pytest fail1362597
Ref: reference/reference pytest-fail1362696
Ref: 1d91362696
Ref: reference/reference pytest fail1362829
Ref: 1141362829
Ref: pytest fail-Footnote-11363432
Ref: pytest fail-Footnote-21363492
Ref: pytest fail-Footnote-31363554
Ref: pytest fail-Footnote-41363624
Node: pytest skip1363684
Ref: reference/reference pytest-skip1363789
Ref: 1da1363789
Ref: reference/reference pytest skip1363828
Ref: cc1363828
Ref: pytest skip-Footnote-11365003
Ref: pytest skip-Footnote-21365063
Ref: pytest skip-Footnote-31365125
Ref: pytest skip-Footnote-41365195
Ref: pytest skip-Footnote-51365255
Node: pytest importorskip1365323
Ref: reference/reference pytest-importorskip1365429
Ref: 1db1365429
Ref: reference/reference pytest-importorskip-ref1365429
Ref: 12c1365429
Ref: reference/reference pytest importorskip1365484
Ref: 1dc1365484
Ref: pytest importorskip-Footnote-11366317
Ref: pytest importorskip-Footnote-21366377
Ref: pytest importorskip-Footnote-31366437
Ref: pytest importorskip-Footnote-41366497
Node: pytest xfail1366562
Ref: reference/reference pytest-xfail1366668
Ref: 1dd1366668
Ref: reference/reference pytest xfail1366709
Ref: cd1366709
Node: pytest exit1367126
Ref: reference/reference pytest-exit1367224
Ref: 1de1367224
Ref: reference/reference pytest exit1367263
Ref: 1df1367263
Ref: pytest exit-Footnote-11367883
Ref: pytest exit-Footnote-21367943
Ref: pytest exit-Footnote-31368013
Ref: pytest exit-Footnote-41368074
Ref: pytest exit-Footnote-51368144
Node: pytest main1368204
Ref: reference/reference pytest-main1368302
Ref: 1e01368302
Ref: reference/reference pytest main1368341
Ref: 1e11368341
Ref: pytest main-Footnote-11368982
Ref: pytest main-Footnote-21369052
Ref: pytest main-Footnote-31369119
Ref: pytest main-Footnote-41369185
Ref: pytest main-Footnote-51369245
Ref: pytest main-Footnote-61369307
Ref: pytest main-Footnote-71369367
Ref: pytest main-Footnote-81369437
Ref: pytest main-Footnote-91369507
Ref: pytest main-Footnote-101369574
Ref: pytest main-Footnote-111369635
Ref: pytest main-Footnote-121369700
Ref: pytest main-Footnote-131369768
Node: pytest param1369830
Ref: reference/reference pytest-param1369930
Ref: 1e31369930
Ref: reference/reference pytest param1369971
Ref: 6b1369971
Ref: pytest param-Footnote-11370791
Ref: pytest param-Footnote-21370855
Node: pytest raises1370915
Ref: reference/reference pytest-raises1371026
Ref: 1e51371026
Ref: reference/reference pytest raises1371133
Ref: 311371133
Ref: pytest raises-Footnote-11376138
Ref: pytest raises-Footnote-21376198
Ref: pytest raises-Footnote-31376258
Ref: pytest raises-Footnote-41376318
Node: pytest deprecated_call1376386
Ref: reference/reference pytest-deprecated-call1376515
Ref: 1e71376515
Ref: reference/reference pytest deprecated_call1376652
Ref: 1041376652
Node: pytest register_assert_rewrite1377831
Ref: reference/reference pytest-register-assert-rewrite1377959
Ref: 1e81377959
Ref: reference/reference pytest register_assert_rewrite1378086
Ref: 15b1378086
Ref: pytest register_assert_rewrite-Footnote-11378607
Node: pytest warns1378675
Ref: reference/reference pytest-warns1378803
Ref: 1e91378803
Ref: reference/reference pytest warns1378918
Ref: 1031378918
Node: pytest freeze_includes1380710
Ref: reference/reference pytest-freeze-includes1380799
Ref: 1ea1380799
Ref: reference/reference pytest freeze_includes1380907
Ref: 1ec1380907
Node: Marks1381035
Ref: reference/reference marks1381128
Ref: 1ed1381128
Ref: reference/reference marks-ref1381128
Ref: 7f1381128
Node: pytest mark filterwarnings1381590
Ref: reference/reference pytest-mark-filterwarnings1381690
Ref: 1ee1381690
Ref: reference/reference pytest-mark-filterwarnings-ref1381690
Ref: 1ef1381690
Ref: reference/reference pytest mark filterwarnings1381858
Ref: 1f01381858
Ref: pytest mark filterwarnings-Footnote-11382497
Ref: pytest mark filterwarnings-Footnote-21382557
Node: pytest mark parametrize1382628
Ref: reference/reference pytest-mark-parametrize1382753
Ref: 1e41382753
Ref: reference/reference pytest-mark-parametrize-ref1382753
Ref: 951382753
Node: pytest mark skip1382982
Ref: reference/reference pytest-mark-skip1383099
Ref: 1f21383099
Ref: reference/reference pytest-mark-skip-ref1383099
Ref: 1231383099
Ref: reference/reference pytest mark skip1383239
Ref: 1f31383239
Ref: pytest mark skip-Footnote-11383418
Node: pytest mark skipif1383478
Ref: reference/reference pytest-mark-skipif1383595
Ref: 1f41383595
Ref: reference/reference pytest-mark-skipif-ref1383595
Ref: 1261383595
Ref: reference/reference pytest mark skipif1383752
Ref: 1f51383752
Ref: pytest mark skipif-Footnote-11384116
Ref: pytest mark skipif-Footnote-21384178
Ref: pytest mark skipif-Footnote-31384238
Node: pytest mark usefixtures1384298
Ref: reference/reference pytest-mark-usefixtures1384416
Ref: 1f61384416
Ref: reference/reference pytest-mark-usefixtures-ref1384416
Ref: 1f71384416
Ref: reference/reference pytest mark usefixtures1384616
Ref: 1f81384616
Node: pytest mark xfail1385020
Ref: reference/reference pytest-mark-xfail1385132
Ref: 1f91385132
Ref: reference/reference pytest-mark-xfail-ref1385132
Ref: 12f1385132
Ref: reference/reference pytest mark xfail1385308
Ref: 1fa1385308
Ref: pytest mark xfail-Footnote-11387197
Ref: pytest mark xfail-Footnote-21387259
Ref: pytest mark xfail-Footnote-31387319
Ref: pytest mark xfail-Footnote-41387379
Ref: pytest mark xfail-Footnote-51387447
Ref: pytest mark xfail-Footnote-61387509
Node: Custom marks1387571
Ref: reference/reference custom-marks1387651
Ref: 1fb1387651
Node: Fixtures1388641
Ref: reference/reference fixtures1388730
Ref: 1ff1388730
Ref: reference/reference fixtures-api1388730
Ref: 19e1388730
Node: @pytest fixture1389656
Ref: reference/reference pytest-fixture1389730
Ref: 2001389730
Ref: reference/reference pytest-fixture-api1389730
Ref: 19f1389730
Ref: reference/reference pytest fixture1389777
Ref: 501389777
Node: capfd1392999
Ref: reference/reference capfd1393093
Ref: 2011393093
Ref: reference/reference std-fixture-capfd1393093
Ref: 1a01393093
Ref: reference/reference pytest capture capfd1393184
Ref: 2021393184
Node: capfdbinary1393728
Ref: reference/reference capfdbinary1393813
Ref: 2041393813
Ref: reference/reference std-fixture-capfdbinary1393813
Ref: 1a11393813
Ref: reference/reference pytest capture capfdbinary1393916
Ref: 2051393916
Node: caplog1394482
Ref: reference/reference caplog1394568
Ref: 2061394568
Ref: reference/reference std-fixture-caplog1394568
Ref: 1a21394568
Ref: reference/reference pytest logging caplog1394647
Ref: 2071394647
Ref: reference/reference pytest LogCaptureFixture1395262
Ref: e31395262
Ref: reference/reference pytest LogCaptureFixture handler1395356
Ref: 2081395356
Ref: reference/reference pytest LogCaptureFixture get_records1395502
Ref: 2091395502
Ref: reference/reference pytest LogCaptureFixture text1395940
Ref: 20a1395940
Ref: reference/reference pytest LogCaptureFixture records1396008
Ref: 20b1396008
Ref: reference/reference pytest LogCaptureFixture record_tuples1396095
Ref: 20c1396095
Ref: reference/reference pytest LogCaptureFixture messages1396389
Ref: 20d1396389
Ref: reference/reference pytest LogCaptureFixture clear1397145
Ref: 20e1397145
Ref: reference/reference pytest LogCaptureFixture set_level1397240
Ref: 20f1397240
Ref: reference/reference pytest LogCaptureFixture at_level1397714
Ref: 2101397714
Ref: caplog-Footnote-11398169
Ref: caplog-Footnote-21398229
Ref: caplog-Footnote-31398302
Ref: caplog-Footnote-41398362
Ref: caplog-Footnote-51398428
Ref: caplog-Footnote-61398501
Ref: caplog-Footnote-71398567
Ref: caplog-Footnote-81398634
Ref: caplog-Footnote-91398694
Ref: caplog-Footnote-101398755
Ref: caplog-Footnote-111398816
Ref: caplog-Footnote-121398883
Ref: caplog-Footnote-131398944
Ref: caplog-Footnote-141399018
Ref: caplog-Footnote-151399080
Ref: caplog-Footnote-161399141
Ref: caplog-Footnote-171399203
Node: capsys1399264
Ref: reference/reference capsys1399351
Ref: 2111399351
Ref: reference/reference std-fixture-capsys1399351
Ref: 1a31399351
Ref: reference/reference pytest capture capsys1399444
Ref: 2121399444
Ref: reference/reference pytest CaptureFixture1399977
Ref: 2031399977
Ref: reference/reference pytest CaptureFixture readouterr1400138
Ref: 2131400138
Ref: reference/reference pytest CaptureFixture disabled1400427
Ref: 2141400427
Node: capsysbinary1400538
Ref: reference/reference capsysbinary1400631
Ref: 2151400631
Ref: reference/reference std-fixture-capsysbinary1400631
Ref: 1a41400631
Ref: reference/reference pytest capture capsysbinary1400736
Ref: 2161400736
Node: config cache1401298
Ref: reference/reference config-cache1401402
Ref: 2171401402
Ref: reference/reference std-fixture-cache1401402
Ref: da1401402
Ref: reference/reference pytest Cache1401934
Ref: 2181401934
Ref: reference/reference pytest Cache mkdir1401964
Ref: 2191401964
Ref: reference/reference pytest Cache get1402512
Ref: 21a1402512
Ref: reference/reference pytest Cache set1403032
Ref: 21b1403032
Ref: config cache-Footnote-11403519
Ref: config cache-Footnote-21403583
Ref: config cache-Footnote-31403643
Ref: config cache-Footnote-41403703
Ref: config cache-Footnote-51403763
Node: doctest_namespace1403827
Ref: reference/reference doctest-namespace1403930
Ref: 21c1403930
Ref: reference/reference std-fixture-doctest_namespace1403930
Ref: 1a51403930
Ref: reference/reference pytest doctest doctest_namespace1404029
Ref: 21d1404029
Ref: doctest_namespace-Footnote-11404483
Node: monkeypatch1404544
Ref: reference/reference monkeypatch1404647
Ref: 21e1404647
Ref: reference/reference std-fixture-monkeypatch1404647
Ref: 1a61404647
Ref: reference/reference pytest monkeypatch monkeypatch1404763
Ref: 21f1404763
Ref: reference/reference pytest MonkeyPatch1405907
Ref: bc1405907
Ref: reference/reference pytest MonkeyPatch context1406350
Ref: b41406350
Ref: reference/reference pytest MonkeyPatch setattr1407021
Ref: ac1407021
Ref: reference/reference pytest MonkeyPatch delattr1408537
Ref: ad1408537
Ref: reference/reference pytest MonkeyPatch setitem1408955
Ref: ae1408955
Ref: reference/reference pytest MonkeyPatch delitem1409053
Ref: af1409053
Ref: reference/reference pytest MonkeyPatch setenv1409249
Ref: b01409249
Ref: reference/reference pytest MonkeyPatch delenv1409544
Ref: b11409544
Ref: reference/reference pytest MonkeyPatch syspath_prepend1409744
Ref: b21409744
Ref: reference/reference pytest MonkeyPatch chdir1409859
Ref: b31409859
Ref: reference/reference pytest MonkeyPatch undo1410011
Ref: 2201410011
Ref: monkeypatch-Footnote-11410783
Ref: monkeypatch-Footnote-21410844
Ref: monkeypatch-Footnote-31410911
Ref: monkeypatch-Footnote-41410984
Ref: monkeypatch-Footnote-51411041
Ref: monkeypatch-Footnote-61411101
Ref: monkeypatch-Footnote-71411174
Ref: monkeypatch-Footnote-81411251
Ref: monkeypatch-Footnote-91411334
Node: pytestconfig1411416
Ref: reference/reference pytestconfig1411510
Ref: 2211411510
Ref: reference/reference std-fixture-pytestconfig1411510
Ref: 1a71411510
Ref: reference/reference pytest fixtures pytestconfig1411553
Ref: 2221411553
Node: pytester1411812
Ref: reference/reference pytester1411910
Ref: 2231411910
Ref: reference/reference std-fixture-pytester1411910
Ref: 2241411910
Ref: reference/reference pytest Pytester1412321
Ref: 15f1412321
Ref: reference/reference pytest Pytester TimeoutExpired1413205
Ref: 2271413205
Ref: reference/reference pytest Pytester path1413241
Ref: 2281413241
Ref: reference/reference pytest Pytester make_hook_recorder1413364
Ref: 2291413364
Ref: reference/reference pytest Pytester chdir1413487
Ref: 22b1413487
Ref: reference/reference pytest Pytester makefile1413616
Ref: 22c1413616
Ref: reference/reference pytest Pytester makeconftest1414667
Ref: 22d1414667
Ref: reference/reference pytest Pytester makeini1414773
Ref: 22e1414773
Ref: reference/reference pytest Pytester getinicfg1414871
Ref: 22f1414871
Ref: reference/reference pytest Pytester makepyprojecttoml1414975
Ref: 2301414975
Ref: reference/reference pytest Pytester makepyfile1415121
Ref: 2311415121
Ref: reference/reference pytest Pytester maketxtfile1415761
Ref: 2321415761
Ref: reference/reference pytest Pytester syspathinsert1416410
Ref: 2331416410
Ref: reference/reference pytest Pytester mkdir1416624
Ref: 2341416624
Ref: reference/reference pytest Pytester mkpydir1416695
Ref: 2351416695
Ref: reference/reference pytest Pytester copy_example1416899
Ref: 2361416899
Ref: reference/reference pytest Pytester getnode1417195
Ref: 2371417195
Ref: reference/reference pytest Pytester getpathnode1417580
Ref: 2391417580
Ref: reference/reference pytest Pytester genitems1417927
Ref: 23a1417927
Ref: reference/reference pytest Pytester runitem1418143
Ref: 23b1418143
Ref: reference/reference pytest Pytester inline_runsource1418487
Ref: 23c1418487
Ref: reference/reference pytest Pytester inline_genitems1418974
Ref: 23d1418974
Ref: reference/reference pytest Pytester inline_run1419331
Ref: 23e1419331
Ref: reference/reference pytest Pytester runpytest_inprocess1420343
Ref: 23f1420343
Ref: reference/reference pytest Pytester runpytest1420529
Ref: 2261420529
Ref: reference/reference pytest Pytester parseconfig1420725
Ref: 2251420725
Ref: reference/reference pytest Pytester parseconfigure1421218
Ref: 2381421218
Ref: reference/reference pytest Pytester getitem1421460
Ref: 2401421460
Ref: reference/reference pytest Pytester getitems1422037
Ref: 2411422037
Ref: reference/reference pytest Pytester getmodulecol1422298
Ref: 2421422298
Ref: reference/reference pytest Pytester collect_by_name1423109
Ref: 2431423109
Ref: reference/reference pytest Pytester popen1423571
Ref: 2451423571
Ref: reference/reference pytest Pytester run1423889
Ref: 2461423889
Ref: reference/reference pytest Pytester runpython1425439
Ref: 2471425439
Ref: reference/reference pytest Pytester runpython_c1425544
Ref: 2481425544
Ref: reference/reference pytest Pytester runpytest_subprocess1425626
Ref: 2491425626
Ref: reference/reference pytest Pytester spawn_pytest1426549
Ref: 24a1426549
Ref: reference/reference pytest Pytester spawn1426797
Ref: 24b1426797
Ref: reference/reference pytest RunResult1426930
Ref: 1601426930
Ref: reference/reference pytest RunResult ret1427028
Ref: 24c1427028
Ref: reference/reference pytest RunResult outlines1427124
Ref: 24d1427124
Ref: reference/reference pytest RunResult errlines1427201
Ref: 24e1427201
Ref: reference/reference pytest RunResult stdout1427278
Ref: 24f1427278
Ref: reference/reference pytest RunResult stderr1427494
Ref: 2531427494
Ref: reference/reference pytest RunResult duration1427568
Ref: 2541427568
Ref: reference/reference pytest RunResult parseoutcomes1427630
Ref: 2551427630
Ref: reference/reference pytest RunResult parse_summary_nouns1428029
Ref: 2561428029
Ref: reference/reference pytest RunResult assert_outcomes1428387
Ref: 2571428387
Ref: reference/reference pytest LineMatcher1428789
Ref: 2501428789
Ref: reference/reference pytest LineMatcher __str__1429047
Ref: 2511429047
Ref: reference/reference pytest LineMatcher fnmatch_lines_random1429210
Ref: 2591429210
Ref: reference/reference pytest LineMatcher re_match_lines_random1429355
Ref: 25a1429355
Ref: reference/reference pytest LineMatcher get_lines_after1429494
Ref: 25b1429494
Ref: reference/reference pytest LineMatcher fnmatch_lines1429657
Ref: 2521429657
Ref: reference/reference pytest LineMatcher re_match_lines1430248
Ref: 25c1430248
Ref: reference/reference pytest LineMatcher no_fnmatch_line1430827
Ref: 25d1430827
Ref: reference/reference pytest LineMatcher no_re_match_line1431047
Ref: 25e1431047
Ref: reference/reference pytest LineMatcher str1431282
Ref: 2581431282
Ref: reference/reference pytest HookRecorder1431351
Ref: 22a1431351
Ref: reference/reference pytest HookRecorder getcalls1431617
Ref: 25f1431617
Ref: reference/reference pytest HookRecorder matchreport1431737
Ref: 2601431737
Ref: reference/reference pytest RecordedHookCall1431948
Ref: 2611431948
Ref: pytester-Footnote-11432318
Ref: pytester-Footnote-21432386
Ref: pytester-Footnote-31432446
Ref: pytester-Footnote-41432506
Ref: pytester-Footnote-51432566
Ref: pytester-Footnote-61432647
Ref: pytester-Footnote-71432707
Ref: pytester-Footnote-81432775
Ref: pytester-Footnote-91432837
Ref: pytester-Footnote-101432897
Ref: pytester-Footnote-111432960
Ref: pytester-Footnote-121433021
Ref: pytester-Footnote-131433082
Ref: pytester-Footnote-141433150
Ref: pytester-Footnote-151433211
Ref: pytester-Footnote-161433274
Ref: pytester-Footnote-171433335
Ref: pytester-Footnote-181433398
Ref: pytester-Footnote-191433466
Ref: pytester-Footnote-201433527
Ref: pytester-Footnote-211433590
Ref: pytester-Footnote-221433651
Ref: pytester-Footnote-231433712
Ref: pytester-Footnote-241433780
Ref: pytester-Footnote-251433841
Ref: pytester-Footnote-261433904
Ref: pytester-Footnote-271433965
Ref: pytester-Footnote-281434028
Ref: pytester-Footnote-291434089
Ref: pytester-Footnote-301434166
Ref: pytester-Footnote-311434243
Ref: pytester-Footnote-321434320
Ref: pytester-Footnote-331434388
Ref: pytester-Footnote-341434449
Ref: pytester-Footnote-351434512
Ref: pytester-Footnote-361434573
Ref: pytester-Footnote-371434650
Ref: pytester-Footnote-381434711
Ref: pytester-Footnote-391434782
Ref: pytester-Footnote-401434846
Ref: pytester-Footnote-411434914
Ref: pytester-Footnote-421434977
Ref: pytester-Footnote-431435042
Ref: pytester-Footnote-441435108
Ref: pytester-Footnote-451435170
Ref: pytester-Footnote-461435247
Ref: pytester-Footnote-471435310
Ref: pytester-Footnote-481435387
Ref: pytester-Footnote-491435464
Ref: pytester-Footnote-501435532
Ref: pytester-Footnote-511435593
Ref: pytester-Footnote-521435656
Ref: pytester-Footnote-531435717
Ref: pytester-Footnote-541435788
Ref: pytester-Footnote-551435852
Ref: pytester-Footnote-561435920
Ref: pytester-Footnote-571435982
Ref: pytester-Footnote-581436054
Ref: pytester-Footnote-591436114
Ref: pytester-Footnote-601436186
Ref: pytester-Footnote-611436257
Ref: pytester-Footnote-621436318
Ref: pytester-Footnote-631436381
Ref: pytester-Footnote-641436441
Ref: pytester-Footnote-651436512
Ref: pytester-Footnote-661436573
Ref: pytester-Footnote-671436636
Ref: pytester-Footnote-681436697
Node: record_property1436758
Ref: reference/reference record-property1436869
Ref: 2621436869
Ref: reference/reference std-fixture-record_property1436869
Ref: 1a81436869
Ref: reference/reference pytest junitxml record_property1436959
Ref: 2631436959
Node: record_testsuite_property1437372
Ref: reference/reference record-testsuite-property1437482
Ref: 2641437482
Ref: reference/reference std-fixture-record_testsuite_property1437482
Ref: 1a91437482
Ref: reference/reference pytest junitxml record_testsuite_property1437602
Ref: 2651437602
Ref: record_testsuite_property-Footnote-11438423
Ref: record_testsuite_property-Footnote-21438474
Node: recwarn1438531
Ref: reference/reference recwarn1438633
Ref: 2661438633
Ref: reference/reference std-fixture-recwarn1438633
Ref: 1aa1438633
Ref: reference/reference pytest recwarn recwarn1438738
Ref: 2671438738
Ref: reference/reference pytest WarningsRecorder1438996
Ref: 10f1438996
Ref: reference/reference pytest WarningsRecorder list1439387
Ref: 2681439387
Ref: reference/reference pytest WarningsRecorder pop1439479
Ref: 2691439479
Ref: reference/reference pytest WarningsRecorder clear1439599
Ref: 26a1439599
Ref: recwarn-Footnote-11439710
Node: request1439776
Ref: reference/reference request1439860
Ref: 26b1439860
Ref: reference/reference std-fixture-request1439860
Ref: 1ab1439860
Ref: reference/reference pytest FixtureRequest1440100
Ref: 621440100
Ref: reference/reference pytest FixtureRequest fixturename1440357
Ref: 26d1440357
Ref: reference/reference pytest FixtureRequest scope1440473
Ref: 26e1440473
Ref: reference/reference pytest FixtureRequest fixturenames1440626
Ref: 26f1440626
Ref: reference/reference pytest FixtureRequest node1440733
Ref: 2701440733
Ref: reference/reference pytest FixtureRequest config1440832
Ref: 2711440832
Ref: reference/reference pytest FixtureRequest function1440944
Ref: 2721440944
Ref: reference/reference pytest FixtureRequest cls1441046
Ref: 2731441046
Ref: reference/reference pytest FixtureRequest instance1441140
Ref: 2741441140
Ref: reference/reference pytest FixtureRequest module1441241
Ref: 2751441241
Ref: reference/reference pytest FixtureRequest path1441339
Ref: 2761441339
Ref: reference/reference pytest FixtureRequest keywords1441428
Ref: 2771441428
Ref: reference/reference pytest FixtureRequest session1441556
Ref: 2781441556
Ref: reference/reference pytest FixtureRequest addfinalizer1441639
Ref: 2791441639
Ref: reference/reference pytest FixtureRequest applymarker1441823
Ref: 27a1441823
Ref: reference/reference pytest FixtureRequest raiseerror1442261
Ref: 27c1442261
Ref: reference/reference pytest FixtureRequest getfixturevalue1442358
Ref: 27d1442358
Ref: request-Footnote-11442871
Ref: request-Footnote-21442941
Ref: request-Footnote-31443001
Ref: request-Footnote-41443067
Ref: request-Footnote-51443127
Ref: request-Footnote-61443195
Ref: request-Footnote-71443272
Ref: request-Footnote-81443332
Ref: request-Footnote-91443397
Ref: request-Footnote-101443464
Node: testdir1443525
Ref: reference/reference std-fixture-testdir1443610
Ref: 1ac1443610
Ref: reference/reference testdir1443610
Ref: 27e1443610
Node: tmp_path1447756
Ref: reference/reference std-fixture-tmp_path1447850
Ref: 1851447850
Ref: reference/reference tmp-path1447850
Ref: 27f1447850
Ref: reference/reference pytest tmpdir tmp_path1447965
Ref: 2801447965
Ref: tmp_path-Footnote-11448524
Node: tmp_path_factory1448592
Ref: reference/reference std-fixture-tmp_path_factory1448685
Ref: 1ad1448685
Ref: reference/reference tmp-path-factory1448685
Ref: 2811448685
Ref: reference/reference tmp-path-factory-factory-api1448791
Ref: a11448791
Ref: reference/reference pytest TempPathFactory1448863
Ref: 2821448863
Ref: reference/reference pytest TempPathFactory mktemp1449064
Ref: 2831449064
Ref: reference/reference pytest TempPathFactory getbasetemp1449763
Ref: 2841449763
Ref: tmp_path_factory-Footnote-11449903
Ref: tmp_path_factory-Footnote-21449963
Ref: tmp_path_factory-Footnote-31450025
Node: tmpdir1450093
Ref: reference/reference std-fixture-tmpdir1450192
Ref: a51450192
Ref: reference/reference tmpdir1450192
Ref: 2851450192
Ref: reference/reference pytest legacypath LegacyTmpdirPlugin tmpdir1450290
Ref: 2861450290
Ref: tmpdir-Footnote-11450981
Node: tmpdir_factory1451035
Ref: reference/reference std-fixture-tmpdir_factory1451109
Ref: a61451109
Ref: reference/reference tmpdir-factory1451109
Ref: 2871451109
Ref: reference/reference pytest TempdirFactory1451291
Ref: 2881451291
Ref: reference/reference pytest TempdirFactory mktemp1451583
Ref: 2891451583
Ref: reference/reference pytest TempdirFactory getbasetemp1451742
Ref: 28a1451742
Node: Hooks1451888
Ref: reference/reference hook-reference1451979
Ref: 14e1451979
Ref: reference/reference hooks1451979
Ref: 28b1451979
Node: Bootstrapping hooks1452344
Ref: reference/reference bootstrapping-hooks1452434
Ref: 28c1452434
Ref: reference/reference std-hook-pytest_load_initial_conftests1452588
Ref: 28d1452588
Ref: reference/reference pytest hookspec pytest_load_initial_conftests1452588
Ref: 28e1452588
Ref: reference/reference std-hook-pytest_cmdline_preparse1453201
Ref: 2901453201
Ref: reference/reference pytest hookspec pytest_cmdline_preparse1453201
Ref: 2911453201
Ref: reference/reference std-hook-pytest_cmdline_parse1453830
Ref: 2921453830
Ref: reference/reference pytest hookspec pytest_cmdline_parse1453830
Ref: 2931453830
Ref: reference/reference std-hook-pytest_cmdline_main1454496
Ref: 2941454496
Ref: reference/reference pytest hookspec pytest_cmdline_main1454496
Ref: 2951454496
Ref: Bootstrapping hooks-Footnote-11454922
Ref: Bootstrapping hooks-Footnote-21454982
Ref: Bootstrapping hooks-Footnote-31455042
Node: Initialization hooks1455102
Ref: reference/reference id21455217
Ref: 2961455217
Ref: reference/reference initialization-hooks1455217
Ref: 881455217
Ref: reference/reference std-hook-pytest_addoption1455344
Ref: 2971455344
Ref: reference/reference pytest hookspec pytest_addoption1455344
Ref: 2981455344
Ref: reference/reference std-hook-pytest_addhooks1456806
Ref: 29d1456806
Ref: reference/reference pytest hookspec pytest_addhooks1456806
Ref: 29e1456806
Ref: reference/reference std-hook-pytest_configure1457187
Ref: 29f1457187
Ref: reference/reference pytest hookspec pytest_configure1457187
Ref: 2a01457187
Ref: reference/reference std-hook-pytest_unconfigure1457675
Ref: 2a11457675
Ref: reference/reference pytest hookspec pytest_unconfigure1457675
Ref: 2a21457675
Ref: reference/reference std-hook-pytest_sessionstart1457856
Ref: 2a31457856
Ref: reference/reference pytest hookspec pytest_sessionstart1457856
Ref: 2a41457856
Ref: reference/reference std-hook-pytest_sessionfinish1458130
Ref: 2a51458130
Ref: reference/reference pytest hookspec pytest_sessionfinish1458130
Ref: 2a61458130
Ref: reference/reference std-hook-pytest_plugin_registered1458507
Ref: 2a71458507
Ref: reference/reference pytest hookspec pytest_plugin_registered1458507
Ref: 2a81458507
Ref: Initialization hooks-Footnote-11458918
Node: Collection hooks1458979
Ref: reference/reference collection-hooks1459101
Ref: 2a91459101
Ref: reference/reference std-hook-pytest_collection1459228
Ref: 2aa1459228
Ref: reference/reference pytest hookspec pytest_collection1459228
Ref: 2ab1459228
Ref: reference/reference std-hook-pytest_ignore_collect1460796
Ref: 2ac1460796
Ref: reference/reference pytest hookspec pytest_ignore_collect1460796
Ref: 2ad1460796
Ref: reference/reference std-hook-pytest_collect_file1461523
Ref: 2ae1461523
Ref: reference/reference pytest hookspec pytest_collect_file1461523
Ref: 2af1461523
Ref: reference/reference std-hook-pytest_pycollect_makemodule1462086
Ref: 2b01462086
Ref: reference/reference pytest hookspec pytest_pycollect_makemodule1462086
Ref: 2b11462086
Ref: reference/reference std-hook-pytest_pycollect_makeitem1463053
Ref: 2b21463053
Ref: reference/reference pytest hookspec pytest_pycollect_makeitem1463053
Ref: 2b31463053
Ref: reference/reference std-hook-pytest_generate_tests1463303
Ref: 2b41463303
Ref: reference/reference pytest hookspec pytest_generate_tests1463303
Ref: 2b51463303
Ref: reference/reference std-hook-pytest_make_parametrize_id1463416
Ref: 2b61463416
Ref: reference/reference pytest hookspec pytest_make_parametrize_id1463416
Ref: 2b71463416
Ref: reference/reference std-hook-pytest_markeval_namespace1464147
Ref: 2b81464147
Ref: reference/reference pytest hookspec pytest_markeval_namespace1464147
Ref: 2b91464147
Ref: reference/reference std-hook-pytest_collection_modifyitems1464846
Ref: 2ba1464846
Ref: reference/reference pytest hookspec pytest_collection_modifyitems1464846
Ref: 2bb1464846
Ref: reference/reference pytest hookspec pytest_collection_finish1465515
Ref: 2bc1465515
Ref: Collection hooks-Footnote-11465762
Ref: Collection hooks-Footnote-21465830
Ref: Collection hooks-Footnote-31465898
Ref: Collection hooks-Footnote-41465966
Ref: Collection hooks-Footnote-51466034
Ref: Collection hooks-Footnote-61466102
Ref: Collection hooks-Footnote-71466166
Ref: Collection hooks-Footnote-81466226
Ref: Collection hooks-Footnote-91466292
Ref: Collection hooks-Footnote-101466352
Node: Test running runtest hooks1466418
Ref: reference/reference test-running-runtest-hooks1466535
Ref: 2bd1466535
Ref: reference/reference std-hook-pytest_runtestloop1466677
Ref: 2be1466677
Ref: reference/reference pytest hookspec pytest_runtestloop1466677
Ref: 2bf1466677
Ref: reference/reference std-hook-pytest_runtest_protocol1467551
Ref: 2c01467551
Ref: reference/reference pytest hookspec pytest_runtest_protocol1467551
Ref: 2c11467551
Ref: reference/reference std-hook-pytest_runtest_logstart1469686
Ref: 2c21469686
Ref: reference/reference pytest hookspec pytest_runtest_logstart1469686
Ref: 2c31469686
Ref: reference/reference std-hook-pytest_runtest_logfinish1470173
Ref: 2c41470173
Ref: reference/reference pytest hookspec pytest_runtest_logfinish1470173
Ref: 2c51470173
Ref: reference/reference std-hook-pytest_runtest_setup1470662
Ref: 2c61470662
Ref: reference/reference pytest hookspec pytest_runtest_setup1470662
Ref: 2c71470662
Ref: reference/reference std-hook-pytest_runtest_call1471006
Ref: 2c81471006
Ref: reference/reference pytest hookspec pytest_runtest_call1471006
Ref: 2c91471006
Ref: reference/reference std-hook-pytest_runtest_teardown1471170
Ref: 2ca1471170
Ref: reference/reference pytest hookspec pytest_runtest_teardown1471170
Ref: 2cb1471170
Ref: reference/reference std-hook-pytest_runtest_makereport1471873
Ref: 2cc1471873
Ref: reference/reference pytest hookspec pytest_runtest_makereport1471873
Ref: 2cd1471873
Ref: reference/reference std-hook-pytest_pyfunc_call1472676
Ref: 2d01472676
Ref: reference/reference pytest hookspec pytest_pyfunc_call1472676
Ref: 2d11472676
Ref: Test running runtest hooks-Footnote-11472898
Ref: Test running runtest hooks-Footnote-21472958
Ref: Test running runtest hooks-Footnote-31473025
Ref: Test running runtest hooks-Footnote-41473085
Ref: Test running runtest hooks-Footnote-51473155
Ref: Test running runtest hooks-Footnote-61473216
Ref: Test running runtest hooks-Footnote-71473276
Ref: Test running runtest hooks-Footnote-81473336
Ref: Test running runtest hooks-Footnote-91473403
Ref: Test running runtest hooks-Footnote-101473463
Ref: Test running runtest hooks-Footnote-111473534
Ref: Test running runtest hooks-Footnote-121473596
Ref: Test running runtest hooks-Footnote-131473657
Node: Reporting hooks1473728
Ref: reference/reference reporting-hooks1473856
Ref: 2d21473856
Ref: reference/reference std-hook-pytest_collectstart1473937
Ref: 2d31473937
Ref: reference/reference pytest hookspec pytest_collectstart1473937
Ref: 2d41473937
Ref: reference/reference std-hook-pytest_make_collect_report1474019
Ref: 2d51474019
Ref: reference/reference pytest hookspec pytest_make_collect_report1474019
Ref: 2d61474019
Ref: reference/reference std-hook-pytest_itemcollected1474265
Ref: 2d91474265
Ref: reference/reference pytest hookspec pytest_itemcollected1474265
Ref: 2da1474265
Ref: reference/reference std-hook-pytest_collectreport1474345
Ref: 2db1474345
Ref: reference/reference pytest hookspec pytest_collectreport1474345
Ref: 2dc1474345
Ref: reference/reference std-hook-pytest_deselected1474427
Ref: 2dd1474427
Ref: reference/reference pytest hookspec pytest_deselected1474427
Ref: 2de1474427
Ref: reference/reference std-hook-pytest_report_header1474562
Ref: 2df1474562
Ref: reference/reference pytest hookspec pytest_report_header1474562
Ref: 2e01474562
Ref: reference/reference std-hook-pytest_report_collectionfinish1475602
Ref: 2e11475602
Ref: reference/reference pytest hookspec pytest_report_collectionfinish1475602
Ref: 2e21475602
Ref: reference/reference std-hook-pytest_report_teststatus1476756
Ref: 2e31476756
Ref: reference/reference pytest hookspec pytest_report_teststatus1476756
Ref: 2e41476756
Ref: reference/reference std-hook-pytest_report_to_serializable1477899
Ref: 2e51477899
Ref: reference/reference pytest hookspec pytest_report_to_serializable1477899
Ref: 2e61477899
Ref: reference/reference std-hook-pytest_report_from_serializable1478089
Ref: 2e71478089
Ref: reference/reference pytest hookspec pytest_report_from_serializable1478089
Ref: 2e81478089
Ref: reference/reference std-hook-pytest_terminal_summary1478255
Ref: 2e91478255
Ref: reference/reference pytest hookspec pytest_terminal_summary1478255
Ref: 2ea1478255
Ref: reference/reference std-hook-pytest_fixture_setup1478792
Ref: 2eb1478792
Ref: reference/reference pytest hookspec pytest_fixture_setup1478792
Ref: 2ec1478792
Ref: reference/reference std-hook-pytest_fixture_post_finalizer1479357
Ref: 2ed1479357
Ref: reference/reference pytest hookspec pytest_fixture_post_finalizer1479357
Ref: 2ee1479357
Ref: reference/reference std-hook-pytest_warning_recorded1479594
Ref: 2ef1479594
Ref: reference/reference pytest hookspec pytest_warning_recorded1479594
Ref: 2f01479594
Ref: reference/reference std-hook-pytest_runtest_logreport1480805
Ref: 2f11480805
Ref: reference/reference pytest hookspec pytest_runtest_logreport1480805
Ref: 2f21480805
Ref: reference/reference std-hook-pytest_assertrepr_compare1481097
Ref: 2f31481097
Ref: reference/reference pytest hookspec pytest_assertrepr_compare1481097
Ref: 2f41481097
Ref: reference/reference std-hook-pytest_assertion_pass1481637
Ref: 2f51481637
Ref: reference/reference pytest hookspec pytest_assertion_pass1481637
Ref: 2f61481637
Ref: Reporting hooks-Footnote-11482735
Ref: Reporting hooks-Footnote-21482803
Ref: Reporting hooks-Footnote-31482873
Ref: Reporting hooks-Footnote-41482941
Ref: Reporting hooks-Footnote-51483008
Ref: Reporting hooks-Footnote-61483069
Ref: Reporting hooks-Footnote-71483139
Ref: Reporting hooks-Footnote-81483203
Ref: Reporting hooks-Footnote-91483281
Ref: Reporting hooks-Footnote-101483341
Ref: Reporting hooks-Footnote-111483402
Ref: Reporting hooks-Footnote-121483465
Ref: Reporting hooks-Footnote-131483527
Ref: Reporting hooks-Footnote-141483588
Node: Debugging/Interaction hooks1483649
Ref: reference/reference debugging-interaction-hooks1483742
Ref: 2f71483742
Ref: reference/reference std-hook-pytest_internalerror1483906
Ref: 2f81483906
Ref: reference/reference pytest hookspec pytest_internalerror1483906
Ref: 2f91483906
Ref: reference/reference std-hook-pytest_keyboard_interrupt1484113
Ref: 2fa1484113
Ref: reference/reference pytest hookspec pytest_keyboard_interrupt1484113
Ref: 2fb1484113
Ref: reference/reference std-hook-pytest_exception_interact1484201
Ref: 2fc1484201
Ref: reference/reference pytest hookspec pytest_exception_interact1484201
Ref: 2fd1484201
Ref: reference/reference std-hook-pytest_enter_pdb1484774
Ref: 2fe1484774
Ref: reference/reference pytest hookspec pytest_enter_pdb1484774
Ref: 2ff1484774
Ref: reference/reference std-hook-pytest_leave_pdb1485135
Ref: 3001485135
Ref: reference/reference pytest hookspec pytest_leave_pdb1485135
Ref: 3011485135
Ref: Debugging/Interaction hooks-Footnote-11485576
Ref: Debugging/Interaction hooks-Footnote-21485635
Node: Objects1485694
Ref: reference/reference objects1485793
Ref: 3021485793
Node: CallInfo1486274
Ref: reference/reference callinfo1486340
Ref: 3031486340
Ref: reference/reference pytest CallInfo1486373
Ref: 2cf1486373
Ref: reference/reference pytest CallInfo excinfo1486460
Ref: 3041486460
Ref: reference/reference pytest CallInfo start1486622
Ref: 3051486622
Ref: reference/reference pytest CallInfo stop1486747
Ref: 3061486747
Ref: reference/reference pytest CallInfo duration1486869
Ref: 3071486869
Ref: reference/reference pytest CallInfo when1486951
Ref: 3081486951
Ref: reference/reference pytest CallInfo result1487147
Ref: 3091487147
Ref: reference/reference pytest CallInfo from_call1487298
Ref: 30a1487298
Ref: CallInfo-Footnote-11488254
Ref: CallInfo-Footnote-21488324
Ref: CallInfo-Footnote-31488396
Ref: CallInfo-Footnote-41488459
Ref: CallInfo-Footnote-51488522
Ref: CallInfo-Footnote-61488585
Ref: CallInfo-Footnote-71488655
Ref: CallInfo-Footnote-81488722
Ref: CallInfo-Footnote-91488788
Ref: CallInfo-Footnote-101488860
Ref: CallInfo-Footnote-111488928
Ref: CallInfo-Footnote-121488995
Node: Class1489068
Ref: reference/reference class1489152
Ref: 30b1489152
Ref: reference/reference pytest Class1489179
Ref: 1741489179
Ref: reference/reference pytest Class from_parent1489262
Ref: 30c1489262
Ref: reference/reference pytest Class collect1489388
Ref: 30d1489388
Ref: reference/reference pytest Class name1489513
Ref: 30e1489513
Ref: reference/reference pytest Class parent1489601
Ref: 30f1489601
Ref: reference/reference pytest Class config1489667
Ref: 3101489667
Ref: reference/reference pytest Class session1489751
Ref: 3111489751
Ref: reference/reference pytest Class path1489832
Ref: 3121489832
Ref: reference/reference pytest Class fspath1489951
Ref: 3131489951
Node: Collector1490280
Ref: reference/reference collector1490369
Ref: 3151490369
Ref: reference/reference pytest Collector1490404
Ref: 2441490404
Ref: reference/reference pytest Collector CollectError1490556
Ref: 3171490556
Ref: reference/reference pytest Collector collect1490687
Ref: 2d71490687
Ref: reference/reference pytest Collector repr_failure1490812
Ref: 3181490812
Ref: reference/reference pytest Collector name1491071
Ref: 3191491071
Ref: reference/reference pytest Collector parent1491159
Ref: 31a1491159
Ref: reference/reference pytest Collector config1491225
Ref: 31b1491225
Ref: reference/reference pytest Collector session1491309
Ref: 31c1491309
Ref: reference/reference pytest Collector path1491390
Ref: 31d1491390
Ref: reference/reference pytest Collector fspath1491512
Ref: 31e1491512
Ref: Collector-Footnote-11491877
Ref: Collector-Footnote-21491945
Ref: Collector-Footnote-31492017
Node: CollectReport1492085
Ref: reference/reference collectreport1492175
Ref: 31f1492175
Ref: reference/reference pytest CollectReport1492218
Ref: 2d81492218
Ref: reference/reference pytest CollectReport nodeid1492372
Ref: 3201492372
Ref: reference/reference pytest CollectReport outcome1492449
Ref: 3211492449
Ref: reference/reference pytest CollectReport longrepr1492600
Ref: 3221492600
Ref: reference/reference pytest CollectReport result1492824
Ref: 3231492824
Ref: reference/reference pytest CollectReport sections1492905
Ref: 3241492905
Ref: reference/reference pytest CollectReport caplog1493271
Ref: 3251493271
Ref: reference/reference pytest CollectReport capstderr1493405
Ref: 3261493405
Ref: reference/reference pytest CollectReport capstdout1493545
Ref: 3271493545
Ref: reference/reference pytest CollectReport count_towards_summary1493685
Ref: 3281493685
Ref: reference/reference pytest CollectReport failed1494078
Ref: 3291494078
Ref: reference/reference pytest CollectReport fspath1494157
Ref: 32a1494157
Ref: reference/reference pytest CollectReport head_line1494256
Ref: 32b1494256
Ref: reference/reference pytest CollectReport longreprtext1494753
Ref: 32c1494753
Ref: reference/reference pytest CollectReport passed1494929
Ref: 32d1494929
Ref: reference/reference pytest CollectReport skipped1495008
Ref: 32e1495008
Ref: CollectReport-Footnote-11495125
Ref: CollectReport-Footnote-21495185
Ref: CollectReport-Footnote-31495252
Ref: CollectReport-Footnote-41495314
Ref: CollectReport-Footnote-51495386
Ref: CollectReport-Footnote-61495453
Ref: CollectReport-Footnote-71495513
Ref: CollectReport-Footnote-81495574
Ref: CollectReport-Footnote-91495634
Ref: CollectReport-Footnote-101495694
Ref: CollectReport-Footnote-111495761
Ref: CollectReport-Footnote-121495829
Ref: CollectReport-Footnote-131495890
Ref: CollectReport-Footnote-141495951
Ref: CollectReport-Footnote-151496012
Ref: CollectReport-Footnote-161496073
Ref: CollectReport-Footnote-171496134
Ref: CollectReport-Footnote-181496197
Ref: CollectReport-Footnote-191496260
Ref: CollectReport-Footnote-201496321
Ref: CollectReport-Footnote-211496392
Ref: CollectReport-Footnote-221496453
Ref: CollectReport-Footnote-231496514
Ref: CollectReport-Footnote-241496577
Node: Config1496640
Ref: reference/reference config1496734
Ref: 32f1496734
Ref: reference/reference pytest Config1496763
Ref: 391496763
Ref: reference/reference pytest Config InvocationParams1497157
Ref: 3301497157
Ref: reference/reference pytest Config InvocationParams args1497678
Ref: 3311497678
Ref: reference/reference pytest Config InvocationParams plugins1497829
Ref: 3321497829
Ref: reference/reference pytest Config InvocationParams dir1498010
Ref: 3331498010
Ref: reference/reference pytest Config option1498144
Ref: 3341498144
Ref: reference/reference pytest Config invocation_params1498268
Ref: 3351498268
Ref: reference/reference pytest Config pluginmanager1498411
Ref: 3361498411
Ref: reference/reference pytest Config stash1498585
Ref: 3371498585
Ref: reference/reference pytest Config rootpath1498746
Ref: 1c91498746
Ref: reference/reference pytest Config inipath1498898
Ref: 1ca1498898
Ref: reference/reference pytest Config add_cleanup1499076
Ref: 3391499076
Ref: reference/reference pytest Config fromdictargs1499247
Ref: 33a1499247
Ref: reference/reference pytest Config issue_config_time_warning1499358
Ref: 33b1499358
Ref: reference/reference pytest Config addinivalue_line1500053
Ref: 33c1500053
Ref: reference/reference pytest Config getini1500287
Ref: 29c1500287
Ref: reference/reference pytest Config getoption1500560
Ref: 29b1500560
Ref: reference/reference pytest Config getvalue1501105
Ref: 33d1501105
Ref: reference/reference pytest Config getvalueorskip1501198
Ref: 33e1501198
Ref: Config-Footnote-11501342
Ref: Config-Footnote-21501409
Ref: Config-Footnote-31501469
Ref: Config-Footnote-41501539
Ref: Config-Footnote-51501609
Ref: Config-Footnote-61501676
Ref: Config-Footnote-71501736
Ref: Config-Footnote-81501800
Ref: Config-Footnote-91501868
Ref: Config-Footnote-101501944
Ref: Config-Footnote-111502013
Ref: Config-Footnote-121502082
Ref: Config-Footnote-131502153
Ref: Config-Footnote-141502222
Ref: Config-Footnote-151502291
Ref: Config-Footnote-161502358
Ref: Config-Footnote-171502420
Ref: Config-Footnote-181502481
Node: ExceptionInfo1502544
Ref: reference/reference exceptioninfo1502633
Ref: 33f1502633
Ref: reference/reference pytest ExceptionInfo1502676
Ref: 321502676
Ref: reference/reference pytest ExceptionInfo from_exc_info1502800
Ref: 3401502800
Ref: reference/reference pytest ExceptionInfo from_current1503230
Ref: 3411503230
Ref: reference/reference pytest ExceptionInfo for_later1503649
Ref: 3421503649
Ref: reference/reference pytest ExceptionInfo fill_unfilled1503737
Ref: 3431503737
Ref: reference/reference pytest ExceptionInfo type1503854
Ref: 3441503854
Ref: reference/reference pytest ExceptionInfo value1503923
Ref: 3451503923
Ref: reference/reference pytest ExceptionInfo tb1503984
Ref: 3461503984
Ref: reference/reference pytest ExceptionInfo typename1504065
Ref: 3471504065
Ref: reference/reference pytest ExceptionInfo traceback1504145
Ref: 3481504145
Ref: reference/reference pytest ExceptionInfo exconly1504212
Ref: 3491504212
Ref: reference/reference pytest ExceptionInfo errisinstance1504553
Ref: 34a1504553
Ref: reference/reference pytest ExceptionInfo getrepr1504726
Ref: 34b1504726
Ref: reference/reference pytest ExceptionInfo match1505980
Ref: 34c1505980
Ref: ExceptionInfo-Footnote-11506298
Ref: ExceptionInfo-Footnote-21506368
Ref: ExceptionInfo-Footnote-31506428
Ref: ExceptionInfo-Footnote-41506498
Ref: ExceptionInfo-Footnote-51506558
Ref: ExceptionInfo-Footnote-61506624
Ref: ExceptionInfo-Footnote-71506697
Ref: ExceptionInfo-Footnote-81506757
Ref: ExceptionInfo-Footnote-91506819
Ref: ExceptionInfo-Footnote-101506879
Ref: ExceptionInfo-Footnote-111506942
Ref: ExceptionInfo-Footnote-121507005
Ref: ExceptionInfo-Footnote-131507068
Ref: ExceptionInfo-Footnote-141507131
Ref: ExceptionInfo-Footnote-151507194
Node: ExitCode1507255
Ref: reference/reference exitcode1507342
Ref: 34d1507342
Ref: reference/reference pytest ExitCode1507375
Ref: 1e21507375
Ref: reference/reference pytest ExitCode OK1507559
Ref: 34e1507559
Ref: reference/reference pytest ExitCode TESTS_FAILED1507612
Ref: 34f1507612
Ref: reference/reference pytest ExitCode INTERRUPTED1507675
Ref: 3501507675
Ref: reference/reference pytest ExitCode INTERNAL_ERROR1507747
Ref: 3511507747
Ref: reference/reference pytest ExitCode USAGE_ERROR1507832
Ref: 3521507832
Ref: reference/reference pytest ExitCode NO_TESTS_COLLECTED1507900
Ref: 3531507900
Node: File1507985
Ref: reference/reference file1508069
Ref: 3541508069
Ref: reference/reference pytest File1508094
Ref: 3551508094
Ref: reference/reference pytest File name1508247
Ref: 3581508247
Ref: reference/reference pytest File parent1508335
Ref: 3591508335
Ref: reference/reference pytest File config1508401
Ref: 35a1508401
Ref: reference/reference pytest File session1508485
Ref: 35b1508485
Ref: reference/reference pytest File path1508566
Ref: 35c1508566
Ref: reference/reference pytest File fspath1508688
Ref: 35d1508688
Ref: reference/reference pytest File keywords1509017
Ref: 35e1509017
Ref: reference/reference pytest File own_markers1509137
Ref: 35f1509137
Ref: reference/reference pytest File extra_keyword_matches1509251
Ref: 3601509251
Ref: File-Footnote-11509409
Ref: File-Footnote-21509477
Ref: File-Footnote-31509554
Ref: File-Footnote-41509614
Ref: File-Footnote-51509679
Ref: File-Footnote-61509745
Ref: File-Footnote-71509810
Node: FixtureDef1509870
Ref: reference/reference fixturedef1509957
Ref: 3611509957
Ref: reference/reference pytest fixtures FixtureDef1509994
Ref: 3621509994
Ref: reference/reference pytest fixtures FixtureDef scope1510117
Ref: 3631510117
Ref: FixtureDef-Footnote-11510306
Node: FSCollector1510375
Ref: reference/reference fscollector1510466
Ref: 3641510466
Ref: reference/reference pytest nodes FSCollector1510507
Ref: 3561510507
Ref: reference/reference pytest nodes FSCollector path1510566
Ref: 3651510566
Ref: reference/reference pytest nodes FSCollector from_parent1510688
Ref: 3661510688
Ref: reference/reference pytest nodes FSCollector name1510822
Ref: 3671510822
Ref: reference/reference pytest nodes FSCollector parent1510910
Ref: 3681510910
Ref: reference/reference pytest nodes FSCollector config1510976
Ref: 3691510976
Ref: reference/reference pytest nodes FSCollector session1511060
Ref: 36a1511060
Ref: reference/reference pytest nodes FSCollector fspath1511141
Ref: 36b1511141
Ref: reference/reference pytest nodes FSCollector keywords1511465
Ref: 36c1511465
Ref: reference/reference pytest nodes FSCollector own_markers1511585
Ref: 36d1511585
Ref: reference/reference pytest nodes FSCollector extra_keyword_matches1511699
Ref: 36e1511699
Ref: FSCollector-Footnote-11511857
Ref: FSCollector-Footnote-21511925
Ref: FSCollector-Footnote-31512002
Ref: FSCollector-Footnote-41512062
Ref: FSCollector-Footnote-51512127
Ref: FSCollector-Footnote-61512193
Ref: FSCollector-Footnote-71512258
Node: Function1512318
Ref: reference/reference function1512417
Ref: 36f1512417
Ref: reference/reference pytest Function1512452
Ref: 3701512452
Ref: reference/reference pytest Function originalname1513835
Ref: 3711513835
Ref: reference/reference pytest Function from_parent1514179
Ref: 3721514179
Ref: reference/reference pytest Function function1514271
Ref: 3731514271
Ref: reference/reference pytest Function runtest1514352
Ref: 3741514352
Ref: reference/reference pytest Function repr_failure1514430
Ref: 3751514430
Ref: reference/reference pytest Function name1514789
Ref: 3761514789
Ref: reference/reference pytest Function parent1514877
Ref: 3771514877
Ref: reference/reference pytest Function config1514943
Ref: 3781514943
Ref: reference/reference pytest Function session1515027
Ref: 3791515027
Ref: reference/reference pytest Function path1515108
Ref: 37a1515108
Ref: reference/reference pytest Function fspath1515227
Ref: 37b1515227
Ref: Function-Footnote-11515592
Node: FunctionDefinition1515664
Ref: reference/reference functiondefinition1515756
Ref: 37c1515756
Ref: reference/reference pytest python FunctionDefinition1515811
Ref: 37d1515811
Ref: reference/reference pytest python FunctionDefinition runtest1516019
Ref: 37e1516019
Ref: reference/reference pytest python FunctionDefinition name1516097
Ref: 37f1516097
Ref: reference/reference pytest python FunctionDefinition parent1516185
Ref: 3801516185
Ref: reference/reference pytest python FunctionDefinition config1516251
Ref: 3811516251
Ref: reference/reference pytest python FunctionDefinition session1516335
Ref: 3821516335
Ref: reference/reference pytest python FunctionDefinition path1516416
Ref: 3831516416
Ref: reference/reference pytest python FunctionDefinition setup1516535
Ref: 3841516535
Ref: reference/reference pytest python FunctionDefinition fspath1516611
Ref: 3851516611
Ref: reference/reference pytest python FunctionDefinition user_properties1516935
Ref: 3861516935
Ref: reference/reference pytest python FunctionDefinition keywords1517106
Ref: 3871517106
Ref: reference/reference pytest python FunctionDefinition own_markers1517220
Ref: 3881517220
Ref: reference/reference pytest python FunctionDefinition extra_keyword_matches1517331
Ref: 3891517331
Ref: FunctionDefinition-Footnote-11517486
Ref: FunctionDefinition-Footnote-21517546
Ref: FunctionDefinition-Footnote-31517610
Ref: FunctionDefinition-Footnote-41517670
Node: Item1517730
Ref: reference/reference item1517827
Ref: 38a1517827
Ref: reference/reference pytest Item1517854
Ref: 1721517854
Ref: reference/reference pytest Item user_properties1518027
Ref: 38b1518027
Ref: reference/reference pytest Item name1518219
Ref: 38c1518219
Ref: reference/reference pytest Item parent1518307
Ref: 38d1518307
Ref: reference/reference pytest Item config1518373
Ref: 38e1518373
Ref: reference/reference pytest Item session1518457
Ref: 38f1518457
Ref: reference/reference pytest Item path1518538
Ref: 3901518538
Ref: reference/reference pytest Item fspath1518660
Ref: 3911518660
Ref: reference/reference pytest Item runtest1518989
Ref: 3921518989
Ref: reference/reference pytest Item add_report_section1519200
Ref: 3931519200
Ref: reference/reference pytest Item reportinfo1519880
Ref: 3141519880
Ref: Item-Footnote-11520350
Ref: Item-Footnote-21520416
Ref: Item-Footnote-31520483
Ref: Item-Footnote-41520543
Ref: Item-Footnote-51520607
Ref: Item-Footnote-61520675
Ref: Item-Footnote-71520735
Ref: Item-Footnote-81520795
Node: MarkDecorator1520855
Ref: reference/reference markdecorator1520947
Ref: 3941520947
Ref: reference/reference pytest MarkDecorator1520992
Ref: 27b1520992
Ref: reference/reference pytest MarkDecorator name1522474
Ref: 3951522474
Ref: reference/reference pytest MarkDecorator args1522539
Ref: 3961522539
Ref: reference/reference pytest MarkDecorator kwargs1522619
Ref: 3971522619
Ref: reference/reference pytest MarkDecorator with_args1522708
Ref: 3981522708
Ref: MarkDecorator-Footnote-11522978
Ref: MarkDecorator-Footnote-21523038
Ref: MarkDecorator-Footnote-31523105
Ref: MarkDecorator-Footnote-41523170
Ref: MarkDecorator-Footnote-51523239
Ref: MarkDecorator-Footnote-61523299
Node: MarkGenerator1523364
Ref: reference/reference markgenerator1523456
Ref: 3991523456
Ref: reference/reference pytest MarkGenerator1523501
Ref: 39a1523501
Node: Mark1523843
Ref: reference/reference mark1523930
Ref: 39b1523930
Ref: reference/reference pytest Mark1523957
Ref: 1fc1523957
Ref: reference/reference pytest Mark name1523986
Ref: 39c1523986
Ref: reference/reference pytest Mark args1524049
Ref: 39d1524049
Ref: reference/reference pytest Mark kwargs1524153
Ref: 39e1524153
Ref: reference/reference pytest Mark combined_with1524261
Ref: 39f1524261
Ref: Mark-Footnote-11524625
Ref: Mark-Footnote-21524685
Ref: Mark-Footnote-31524752
Ref: Mark-Footnote-41524817
Ref: Mark-Footnote-51524886
Ref: Mark-Footnote-61524946
Node: Metafunc1525011
Ref: reference/reference metafunc1525091
Ref: 3a01525091
Ref: reference/reference pytest Metafunc1525126
Ref: 3a11525126
Ref: reference/reference pytest Metafunc definition1525411
Ref: 3a21525411
Ref: reference/reference pytest Metafunc config1525535
Ref: 3a31525535
Ref: reference/reference pytest Metafunc module1525652
Ref: 3a41525652
Ref: reference/reference pytest Metafunc function1525748
Ref: 3a51525748
Ref: reference/reference pytest Metafunc fixturenames1525822
Ref: 3a61525822
Ref: reference/reference pytest Metafunc cls1525919
Ref: 3a71525919
Ref: reference/reference pytest Metafunc parametrize1526021
Ref: 1f11526021
Ref: Metafunc-Footnote-11529970
Ref: Metafunc-Footnote-21530037
Ref: Metafunc-Footnote-31530097
Ref: Metafunc-Footnote-41530163
Ref: Metafunc-Footnote-51530223
Ref: Metafunc-Footnote-61530290
Ref: Metafunc-Footnote-71530350
Ref: Metafunc-Footnote-81530420
Ref: Metafunc-Footnote-91530487
Ref: Metafunc-Footnote-101530557
Ref: Metafunc-Footnote-111530622
Ref: Metafunc-Footnote-121530687
Ref: Metafunc-Footnote-131530755
Ref: Metafunc-Footnote-141530818
Ref: Metafunc-Footnote-151530889
Ref: Metafunc-Footnote-161530950
Ref: Metafunc-Footnote-171531021
Ref: Metafunc-Footnote-181531089
Ref: Metafunc-Footnote-191531160
Ref: Metafunc-Footnote-201531231
Ref: Metafunc-Footnote-211531296
Ref: Metafunc-Footnote-221531367
Ref: Metafunc-Footnote-231531433
Ref: Metafunc-Footnote-241531504
Node: Module1531569
Ref: reference/reference module1531649
Ref: 3a81531649
Ref: reference/reference pytest Module1531680
Ref: 3a91531680
Ref: reference/reference pytest Module collect1531795
Ref: 3aa1531795
Ref: reference/reference pytest Module name1531920
Ref: 3ab1531920
Ref: reference/reference pytest Module parent1532008
Ref: 3ac1532008
Ref: reference/reference pytest Module config1532074
Ref: 3ad1532074
Ref: reference/reference pytest Module session1532158
Ref: 3ae1532158
Ref: reference/reference pytest Module path1532239
Ref: 3af1532239
Ref: reference/reference pytest Module fspath1532358
Ref: 3b01532358
Ref: reference/reference pytest Module keywords1532687
Ref: 3b11532687
Ref: reference/reference pytest Module own_markers1532801
Ref: 3b21532801
Ref: reference/reference pytest Module extra_keyword_matches1532912
Ref: 3b31532912
Ref: Module-Footnote-11533067
Ref: Module-Footnote-21533127
Node: Node1533187
Ref: reference/reference node1533265
Ref: 3b41533265
Ref: reference/reference pytest nodes Node1533292
Ref: 3161533292
Ref: reference/reference pytest nodes Node fspath1533463
Ref: 3b51533463
Ref: reference/reference pytest nodes Node name1533787
Ref: 3b71533787
Ref: reference/reference pytest nodes Node parent1533875
Ref: 3b81533875
Ref: reference/reference pytest nodes Node config1533941
Ref: 3b91533941
Ref: reference/reference pytest nodes Node session1534025
Ref: 3ba1534025
Ref: reference/reference pytest nodes Node path1534106
Ref: 3b61534106
Ref: reference/reference pytest nodes Node keywords1534228
Ref: 3bb1534228
Ref: reference/reference pytest nodes Node own_markers1534348
Ref: 3bc1534348
Ref: reference/reference pytest nodes Node extra_keyword_matches1534462
Ref: 3bd1534462
Ref: reference/reference pytest nodes Node stash1534584
Ref: 1731534584
Ref: reference/reference pytest nodes Node from_parent1534743
Ref: 3be1534743
Ref: reference/reference pytest nodes Node ihook1535173
Ref: 3bf1535173
Ref: reference/reference pytest nodes Node warn1535265
Ref: 3c01535265
Ref: reference/reference pytest nodes Node nodeid1535934
Ref: 3c21535934
Ref: reference/reference pytest nodes Node listchain1536041
Ref: 3c31536041
Ref: reference/reference pytest nodes Node add_marker1536185
Ref: 3c41536185
Ref: reference/reference pytest nodes Node iter_markers1536399
Ref: 1fd1536399
Ref: reference/reference pytest nodes Node iter_markers_with_node1536628
Ref: 1fe1536628
Ref: reference/reference pytest nodes Node get_closest_marker1537029
Ref: 3c51537029
Ref: reference/reference pytest nodes Node listextrakeywords1537467
Ref: 3c61537467
Ref: reference/reference pytest nodes Node addfinalizer1537577
Ref: 3c71537577
Ref: reference/reference pytest nodes Node getparent1537815
Ref: 3c81537815
Ref: reference/reference pytest nodes Node repr_failure1537953
Ref: 3c91537953
Ref: Node-Footnote-11538361
Ref: Node-Footnote-21538429
Ref: Node-Footnote-31538506
Ref: Node-Footnote-41538566
Ref: Node-Footnote-51538631
Ref: Node-Footnote-61538697
Ref: Node-Footnote-71538762
Ref: Node-Footnote-81538822
Ref: Node-Footnote-91538888
Ref: Node-Footnote-101538957
Ref: Node-Footnote-111539024
Ref: Node-Footnote-121539085
Ref: Node-Footnote-131539148
Ref: Node-Footnote-141539219
Ref: Node-Footnote-151539280
Ref: Node-Footnote-161539351
Ref: Node-Footnote-171539412
Ref: Node-Footnote-181539483
Ref: Node-Footnote-191539551
Node: Parser1539624
Ref: reference/reference parser1539707
Ref: 3ca1539707
Ref: reference/reference pytest Parser1539738
Ref: 28f1539738
Ref: reference/reference pytest Parser getgroup1539982
Ref: 3cb1539982
Ref: reference/reference pytest Parser addoption1540509
Ref: 2991540509
Ref: reference/reference pytest Parser parse_known_args1541052
Ref: 3cc1541052
Ref: reference/reference pytest Parser parse_known_and_unknown_args1541203
Ref: 3cd1541203
Ref: reference/reference pytest Parser addini1541403
Ref: 29a1541403
Ref: Parser-Footnote-11542438
Ref: Parser-Footnote-21542492
Node: OptionGroup1542560
Ref: reference/reference optiongroup1542658
Ref: 3ce1542658
Ref: reference/reference pytest OptionGroup1542699
Ref: 3cf1542699
Ref: reference/reference pytest OptionGroup addoption1542774
Ref: 3d01542774
Node: PytestPluginManager1543195
Ref: reference/reference pytestpluginmanager1543294
Ref: 3d11543294
Ref: reference/reference pytest PytestPluginManager1543351
Ref: 16c1543351
Ref: reference/reference pytest PytestPluginManager parse_hookimpl_opts1543743
Ref: 3d21543743
Ref: reference/reference pytest PytestPluginManager parse_hookspec_opts1543796
Ref: 3d31543796
Ref: reference/reference pytest PytestPluginManager register1543858
Ref: 3d41543858
Ref: reference/reference pytest PytestPluginManager getplugin1544099
Ref: 3d51544099
Ref: reference/reference pytest PytestPluginManager hasplugin1544134
Ref: 3d61544134
Ref: reference/reference pytest PytestPluginManager import_plugin1544239
Ref: 3d71544239
Ref: reference/reference pytest PytestPluginManager add_hookcall_monitoring1544474
Ref: 3d81544474
Ref: reference/reference pytest PytestPluginManager add_hookspecs1545160
Ref: 3d91545160
Ref: reference/reference pytest PytestPluginManager check_pending1545380
Ref: 3da1545380
Ref: reference/reference pytest PytestPluginManager enable_tracing1545585
Ref: 3db1545585
Ref: reference/reference pytest PytestPluginManager get_canonical_name1545690
Ref: 3dc1545690
Ref: reference/reference pytest PytestPluginManager get_hookcallers1546028
Ref: 3dd1546028
Ref: reference/reference pytest PytestPluginManager get_name1546129
Ref: 3de1546129
Ref: reference/reference pytest PytestPluginManager get_plugin1546243
Ref: 3df1546243
Ref: reference/reference pytest PytestPluginManager get_plugins1546340
Ref: 3e01546340
Ref: reference/reference pytest PytestPluginManager has_plugin1546422
Ref: 3e11546422
Ref: reference/reference pytest PytestPluginManager is_blocked1546534
Ref: 3e21546534
Ref: reference/reference pytest PytestPluginManager is_registered1546636
Ref: 3e31546636
Ref: reference/reference pytest PytestPluginManager list_name_plugin1546743
Ref: 3e41546743
Ref: reference/reference pytest PytestPluginManager list_plugin_distinfo1546826
Ref: 3e51546826
Ref: reference/reference pytest PytestPluginManager load_setuptools_entrypoints1546966
Ref: 3e61546966
Ref: reference/reference pytest PytestPluginManager set_blocked1547420
Ref: 3e71547420
Ref: reference/reference pytest PytestPluginManager subset_hook_caller1547551
Ref: 3e81547551
Ref: reference/reference pytest PytestPluginManager unregister1547793
Ref: 3e91547793
Ref: PytestPluginManager-Footnote-11548005
Ref: PytestPluginManager-Footnote-21548094
Ref: PytestPluginManager-Footnote-31548163
Ref: PytestPluginManager-Footnote-41548255
Ref: PytestPluginManager-Footnote-51548315
Ref: PytestPluginManager-Footnote-61548375
Node: Session1548436
Ref: reference/reference session1548534
Ref: 3ea1548534
Ref: reference/reference pytest Session1548567
Ref: 1751548567
Ref: reference/reference pytest Session Interrupted1548636
Ref: 3eb1548636
Ref: reference/reference pytest Session Failed1548762
Ref: 3ec1548762
Ref: reference/reference pytest Session startpath1548867
Ref: 3ed1548867
Ref: reference/reference pytest Session perform_collect1548990
Ref: 3ee1548990
Ref: reference/reference pytest Session collect1549976
Ref: 3ef1549976
Ref: reference/reference pytest Session name1550112
Ref: 3f01550112
Ref: reference/reference pytest Session parent1550200
Ref: 3f11550200
Ref: reference/reference pytest Session config1550266
Ref: 3f21550266
Ref: reference/reference pytest Session session1550350
Ref: 3f31550350
Ref: reference/reference pytest Session path1550431
Ref: 3f41550431
Ref: Session-Footnote-11550586
Ref: Session-Footnote-21550663
Ref: Session-Footnote-31550731
Node: TestReport1550799
Ref: reference/reference testreport1550885
Ref: 3f51550885
Ref: reference/reference pytest TestReport1550924
Ref: 2ce1550924
Ref: reference/reference pytest TestReport nodeid1551134
Ref: 3f61551134
Ref: reference/reference pytest TestReport location1551211
Ref: 3f71551211
Ref: reference/reference pytest TestReport keywords1551551
Ref: 3f81551551
Ref: reference/reference pytest TestReport outcome1551700
Ref: 3f91551700
Ref: reference/reference pytest TestReport longrepr1551851
Ref: 3fa1551851
Ref: reference/reference pytest TestReport when1552081
Ref: 3fb1552081
Ref: reference/reference pytest TestReport user_properties1552215
Ref: 3fc1552215
Ref: reference/reference pytest TestReport sections1552371
Ref: 3fd1552371
Ref: reference/reference pytest TestReport duration1552737
Ref: 3fe1552737
Ref: reference/reference pytest TestReport from_item_and_call1552813
Ref: 3ff1552813
Ref: reference/reference pytest TestReport caplog1552949
Ref: 4001552949
Ref: reference/reference pytest TestReport capstderr1553083
Ref: 4011553083
Ref: reference/reference pytest TestReport capstdout1553223
Ref: 4021553223
Ref: reference/reference pytest TestReport count_towards_summary1553363
Ref: 4031553363
Ref: reference/reference pytest TestReport failed1553756
Ref: 4041553756
Ref: reference/reference pytest TestReport fspath1553835
Ref: 4051553835
Ref: reference/reference pytest TestReport head_line1553934
Ref: 4061553934
Ref: reference/reference pytest TestReport longreprtext1554431
Ref: 4071554431
Ref: reference/reference pytest TestReport passed1554607
Ref: 4081554607
Ref: reference/reference pytest TestReport skipped1554686
Ref: 4091554686
Ref: TestReport-Footnote-11554803
Ref: TestReport-Footnote-21554863
Ref: TestReport-Footnote-31554933
Ref: TestReport-Footnote-41555000
Ref: TestReport-Footnote-51555060
Ref: TestReport-Footnote-61555130
Ref: TestReport-Footnote-71555191
Ref: TestReport-Footnote-81555251
Ref: TestReport-Footnote-91555318
Ref: TestReport-Footnote-101555380
Ref: TestReport-Footnote-111555453
Ref: TestReport-Footnote-121555521
Ref: TestReport-Footnote-131555582
Ref: TestReport-Footnote-141555644
Ref: TestReport-Footnote-151555705
Ref: TestReport-Footnote-161555766
Ref: TestReport-Footnote-171555837
Ref: TestReport-Footnote-181555898
Ref: TestReport-Footnote-191555965
Ref: TestReport-Footnote-201556033
Ref: TestReport-Footnote-211556094
Ref: TestReport-Footnote-221556155
Ref: TestReport-Footnote-231556216
Ref: TestReport-Footnote-241556277
Ref: TestReport-Footnote-251556338
Ref: TestReport-Footnote-261556401
Ref: TestReport-Footnote-271556464
Ref: TestReport-Footnote-281556525
Ref: TestReport-Footnote-291556596
Ref: TestReport-Footnote-301556657
Ref: TestReport-Footnote-311556718
Ref: TestReport-Footnote-321556781
Node: _Result1556844
Ref: reference/reference result1556928
Ref: 40a1556928
Ref: _Result-Footnote-11557115
Node: Stash1557207
Ref: reference/reference stash1557272
Ref: 40b1557272
Ref: reference/reference pytest Stash1557301
Ref: 3381557301
Ref: reference/reference pytest Stash __setitem__1558302
Ref: 40d1558302
Ref: reference/reference pytest Stash __getitem__1558377
Ref: 40e1558377
Ref: reference/reference pytest Stash get1558512
Ref: 40f1558512
Ref: reference/reference pytest Stash setdefault1558643
Ref: 4101558643
Ref: reference/reference pytest Stash __delitem__1558810
Ref: 4111558810
Ref: reference/reference pytest Stash __contains__1558948
Ref: 4121558948
Ref: reference/reference pytest Stash __len__1559024
Ref: 4131559024
Ref: reference/reference pytest StashKey1559106
Ref: 40c1559106
Ref: Stash-Footnote-11559427
Node: Global Variables1559496
Ref: reference/reference global-variables1559611
Ref: 4141559611
Ref: reference/reference globalvar-collect_ignore1559771
Ref: 4151559771
Ref: reference/reference globalvar-collect_ignore_glob1560088
Ref: 4161560088
Ref: reference/reference globalvar-pytest_plugins1560441
Ref: 7c1560441
Ref: reference/reference globalvar-pytestmark1560900
Ref: 731560900
Ref: Global Variables-Footnote-11561415
Ref: Global Variables-Footnote-21561483
Node: Environment Variables1561545
Ref: reference/reference environment-variables1561663
Ref: 4181561663
Ref: reference/reference envvar-PYTEST_ADDOPTS1561789
Ref: 4191561789
Ref: reference/reference envvar-PYTEST_CURRENT_TEST1562044
Ref: 41a1562044
Ref: reference/reference envvar-PYTEST_DEBUG1562310
Ref: 41c1562310
Ref: reference/reference envvar-PYTEST_DISABLE_PLUGIN_AUTOLOAD1562410
Ref: 41d1562410
Ref: reference/reference envvar-PYTEST_PLUGINS1562590
Ref: 1511562590
Ref: reference/reference envvar-PYTEST_THEME1562758
Ref: 1ce1562758
Ref: reference/reference envvar-PYTEST_THEME_MODE1562851
Ref: 1cf1562851
Ref: reference/reference envvar-PY_COLORS1562971
Ref: 41e1562971
Ref: reference/reference envvar-NO_COLOR1563198
Ref: 41f1563198
Ref: reference/reference envvar-FORCE_COLOR1563492
Ref: 4201563492
Ref: Environment Variables-Footnote-11563718
Ref: Environment Variables-Footnote-21563760
Node: Exceptions1563790
Ref: reference/reference exceptions1563900
Ref: 4211563900
Ref: reference/reference pytest UsageError1563933
Ref: 4221563933
Ref: Exceptions-Footnote-11564073
Node: Warnings1564141
Ref: reference/reference warnings1564251
Ref: 4231564251
Ref: reference/reference warnings-ref1564251
Ref: 1191564251
Ref: reference/reference pytest PytestWarning1564375
Ref: 3c11564375
Ref: reference/reference pytest PytestAssertRewriteWarning1564482
Ref: 4241564482
Ref: reference/reference pytest PytestCacheWarning1564619
Ref: 4251564619
Ref: reference/reference pytest PytestCollectionWarning1564754
Ref: 4261564754
Ref: reference/reference pytest PytestConfigWarning1564921
Ref: 4271564921
Ref: reference/reference pytest PytestDeprecationWarning1565040
Ref: 4281565040
Ref: reference/reference pytest PytestExperimentalApiWarning1565218
Ref: 4291565218
Ref: reference/reference pytest PytestUnhandledCoroutineWarning1565476
Ref: 42a1565476
Ref: reference/reference pytest PytestUnknownMarkWarning1565786
Ref: 42b1565786
Ref: reference/reference pytest PytestUnraisableExceptionWarning1565993
Ref: 42c1565993
Ref: reference/reference pytest PytestUnhandledThreadExceptionWarning1566281
Ref: 42d1566281
Ref: Warnings-Footnote-11566611
Ref: Warnings-Footnote-21566681
Ref: Warnings-Footnote-31566759
Ref: Warnings-Footnote-41566831
Ref: Warnings-Footnote-51566905
Node: Configuration Options1566979
Ref: reference/reference configuration-options1567097
Ref: 42e1567097
Ref: reference/reference ini-options-ref1567097
Ref: 1bf1567097
Ref: reference/reference confval-addopts1568083
Ref: 1c71568083
Ref: reference/reference confval-cache_dir1568561
Ref: 42f1568561
Ref: reference/reference confval-console_output_style1569114
Ref: 4301569114
Ref: reference/reference confval-doctest_encoding1569723
Ref: 4311569723
Ref: reference/reference confval-doctest_optionflags1569882
Ref: 4321569882
Ref: reference/reference confval-empty_parameter_set_mark1570053
Ref: 961570053
Ref: reference/reference confval-faulthandler_timeout1570757
Ref: 4331570757
Ref: reference/reference confval-filterwarnings1571196
Ref: 4341571196
Ref: reference/reference confval-junit_duration_report1571772
Ref: 4351571772
Ref: reference/reference confval-junit_family1572201
Ref: 4361572201
Ref: reference/reference confval-junit_logging1572763
Ref: 4371572763
Ref: reference/reference confval-junit_log_passing_tests1573520
Ref: 4381573520
Ref: reference/reference confval-junit_suite_name1573828
Ref: 4391573828
Ref: reference/reference confval-log_auto_indent1574062
Ref: 43a1574062
Ref: reference/reference confval-log_cli1575027
Ref: e61575027
Ref: reference/reference confval-log_cli_date_format1575228
Ref: 43b1575228
Ref: reference/reference confval-log_cli_format1575510
Ref: 43c1575510
Ref: reference/reference confval-log_cli_level1575774
Ref: 43d1575774
Ref: reference/reference confval-log_date_format1576065
Ref: 43e1576065
Ref: reference/reference confval-log_file1576354
Ref: 43f1576354
Ref: reference/reference confval-log_file_date_format1576693
Ref: 4401576693
Ref: reference/reference confval-log_file_format1576993
Ref: 4411576993
Ref: reference/reference confval-log_file_level1577297
Ref: 4421577297
Ref: reference/reference confval-log_format1577611
Ref: 4431577611
Ref: reference/reference confval-log_level1577883
Ref: ed1577883
Ref: reference/reference confval-markers1578186
Ref: 4441578186
Ref: reference/reference confval-minversion1578966
Ref: 4451578966
Ref: reference/reference confval-norecursedirs1579192
Ref: 4461579192
Ref: reference/reference confval-python_classes1580801
Ref: 1171580801
Ref: reference/reference confval-python_files1581475
Ref: c81581475
Ref: reference/reference confval-python_functions1582031
Ref: 4471582031
Ref: reference/reference confval-pythonpath1582786
Ref: 4491582786
Ref: reference/reference confval-required_plugins1583291
Ref: 44a1583291
Ref: reference/reference confval-testpaths1583753
Ref: 44b1583753
Ref: reference/reference confval-usefixtures1584440
Ref: 44c1584440
Ref: reference/reference confval-xfail_strict1584726
Ref: 44d1584726
Ref: Configuration Options-Footnote-11585047
Ref: Configuration Options-Footnote-21585104
Ref: Configuration Options-Footnote-31585199
Ref: Configuration Options-Footnote-41585343
Ref: Configuration Options-Footnote-51585409
Ref: Configuration Options-Footnote-61585479
Ref: Configuration Options-Footnote-71585545
Ref: Configuration Options-Footnote-81585611
Ref: Configuration Options-Footnote-91585681
Ref: Configuration Options-Footnote-101585751
Ref: Configuration Options-Footnote-111585812
Node: Command-line Flags1585884
Ref: reference/reference command-line-flags1585985
Ref: 191585985
Ref: reference/reference id31585985
Ref: 44e1585985
Node: Anatomy of a test1603132
Ref: explanation/anatomy doc1603237
Ref: 44f1603237
Ref: explanation/anatomy anatomy-of-a-test1603237
Ref: 4501603237
Ref: explanation/anatomy test-anatomy1603237
Ref: 4511603237
Node: About fixtures1605425
Ref: explanation/fixtures doc1605540
Ref: 4521605540
Ref: explanation/fixtures about-fixtures1605540
Ref: 431605540
Ref: explanation/fixtures id11605540
Ref: 4531605540
Node: What fixtures are1605911
Ref: explanation/fixtures what-fixtures-are1606042
Ref: 4541606042
Ref: What fixtures are-Footnote-11607769
Node: Improvements over xUnit-style setup/teardown functions1607829
Ref: explanation/fixtures improvements-over-xunit-style-setup-teardown-functions1607983
Ref: 4551607983
Node: Fixture errors1609265
Ref: explanation/fixtures fixture-errors1609419
Ref: 4561609419
Node: Sharing test data1611113
Ref: explanation/fixtures sharing-test-data1611241
Ref: 4571611241
Ref: Sharing test data-Footnote-11611749
Ref: Sharing test data-Footnote-21611798
Node: A note about fixture cleanup1611849
Ref: explanation/fixtures a-note-about-fixture-cleanup1611954
Ref: 4581611954
Ref: explanation/fixtures fixtures-signal-cleanup1611954
Ref: 4591611954
Ref: A note about fixture cleanup-Footnote-11612712
Ref: A note about fixture cleanup-Footnote-21612781
Ref: A note about fixture cleanup-Footnote-31612849
Ref: A note about fixture cleanup-Footnote-41612926
Node: Good Integration Practices1613007
Ref: explanation/goodpractices doc1613116
Ref: 45a1613116
Ref: explanation/goodpractices good-integration-practices1613116
Ref: 45b1613116
Ref: explanation/goodpractices goodpractices1613116
Ref: 161613116
Node: Install package with pip1613338
Ref: explanation/goodpractices install-package-with-pip1613471
Ref: 45c1613471
Ref: explanation/goodpractices test-discovery1614358
Ref: a1614358
Ref: Install package with pip-Footnote-11614396
Ref: Install package with pip-Footnote-21614460
Ref: Install package with pip-Footnote-31614499
Node: Conventions for Python test discovery1614577
Ref: explanation/goodpractices conventions-for-python-test-discovery1614756
Ref: 45d1614756
Ref: explanation/goodpractices python-test-discovery1614756
Ref: 45e1614756
Node: Choosing a test layout / import rules1615872
Ref: explanation/goodpractices choosing-a-test-layout-import-rules1616030
Ref: 4611616030
Node: Tests outside application code1616276
Ref: explanation/goodpractices tests-outside-application-code1616422
Ref: 4621616422
Ref: explanation/goodpractices src-layout1617932
Ref: 4661617932
Ref: Tests outside application code-Footnote-11618383
Node: Tests as part of application code1618460
Ref: explanation/goodpractices blog-post1618638
Ref: 4671618638
Ref: explanation/goodpractices tests-as-part-of-application-code1618638
Ref: 4681618638
Ref: explanation/goodpractices test-package-name1619904
Ref: 45f1619904
Node: Choosing an import mode1621277
Ref: explanation/goodpractices choosing-an-import-mode1621416
Ref: 4691621416
Ref: explanation/goodpractices which-import-mode1621416
Ref: 4651621416
Node: tox1623261
Ref: explanation/goodpractices tox1623407
Ref: 46a1623407
Ref: explanation/goodpractices use-tox1623407
Ref: 17a1623407
Ref: tox-Footnote-11623928
Ref: tox-Footnote-21623974
Node: Do not run via setuptools1624029
Ref: explanation/goodpractices do-not-run-via-setuptools1624129
Ref: 46b1624129
Ref: Do not run via setuptools-Footnote-11624798
Ref: Do not run via setuptools-Footnote-21624869
Ref: Do not run via setuptools-Footnote-31624924
Node: Flaky tests1624978
Ref: explanation/flaky doc1625121
Ref: 46c1625121
Ref: explanation/flaky flaky-tests1625121
Ref: 46d1625121
Node: Why flaky tests are a problem1625613
Ref: explanation/flaky why-flaky-tests-are-a-problem1625720
Ref: 46e1625720
Node: Potential root causes1626280
Ref: explanation/flaky potential-root-causes1626411
Ref: 46f1626411
Node: System state1626521
Ref: explanation/flaky system-state1626623
Ref: 4701626623
Node: Overly strict assertion1627451
Ref: explanation/flaky overly-strict-assertion1627553
Ref: 4711627553
Node: Pytest features1627762
Ref: explanation/flaky pytest-features1627888
Ref: 4721627888
Node: Xfail strict1627994
Ref: explanation/flaky xfail-strict1628086
Ref: 4731628086
Node: PYTEST_CURRENT_TEST1628366
Ref: explanation/flaky pytest-current-test1628474
Ref: 4741628474
Node: Plugins1628697
Ref: explanation/flaky plugins1628784
Ref: 4751628784
Ref: Plugins-Footnote-11629392
Ref: Plugins-Footnote-21629429
Ref: Plugins-Footnote-31629483
Ref: Plugins-Footnote-41629559
Ref: Plugins-Footnote-51629618
Ref: Plugins-Footnote-61629664
Ref: Plugins-Footnote-71629718
Node: Other general strategies1629772
Ref: explanation/flaky other-general-strategies1629885
Ref: 4761629885
Node: Split up test suites1630094
Ref: explanation/flaky split-up-test-suites1630211
Ref: 4771630211
Node: Video/screenshot on failure1630646
Ref: explanation/flaky video-screenshot-on-failure1630798
Ref: 4781630798
Ref: Video/screenshot on failure-Footnote-11631149
Node: Delete or rewrite the test1631246
Ref: explanation/flaky delete-or-rewrite-the-test1631388
Ref: 4791631388
Node: Quarantine1631659
Ref: explanation/flaky quarantine1631804
Ref: 47a1631804
Ref: Quarantine-Footnote-11631965
Node: CI tools that rerun on failure1632038
Ref: explanation/flaky ci-tools-that-rerun-on-failure1632148
Ref: 47b1632148
Ref: CI tools that rerun on failure-Footnote-11632418
Node: Research1632543
Ref: explanation/flaky research1632650
Ref: 47c1632650
Ref: Research-Footnote-11633644
Ref: Research-Footnote-21633700
Ref: Research-Footnote-31633780
Node: Resources1633832
Ref: explanation/flaky resources1633906
Ref: 47d1633906
Ref: Resources-Footnote-11634794
Ref: Resources-Footnote-21634856
Ref: Resources-Footnote-31634936
Ref: Resources-Footnote-41634986
Ref: Resources-Footnote-51635019
Ref: Resources-Footnote-61635054
Ref: Resources-Footnote-71635151
Ref: Resources-Footnote-81635256
Ref: Resources-Footnote-91635342
Node: pytest import mechanisms and sys path/PYTHONPATH1635430
Ref: explanation/pythonpath doc1635580
Ref: 47e1635580
Ref: explanation/pythonpath pytest-import-mechanisms-and-sys-path-pythonpath1635580
Ref: 47f1635580
Ref: explanation/pythonpath pythonpath1635580
Ref: 1541635580
Node: Import modes1635818
Ref: explanation/pythonpath id11635965
Ref: 4801635965
Ref: explanation/pythonpath import-modes1635965
Ref: 4641635965
Ref: Import modes-Footnote-11638615
Ref: Import modes-Footnote-21638675
Ref: Import modes-Footnote-31638735
Ref: Import modes-Footnote-41638801
Ref: Import modes-Footnote-51638864
Ref: Import modes-Footnote-61638924
Ref: Import modes-Footnote-71638987
Ref: Import modes-Footnote-81639061
Ref: Import modes-Footnote-91639121
Node: prepend and append import modes scenarios1639181
Ref: explanation/pythonpath prepend-and-append-import-modes-scenarios1639376
Ref: 4811639376
Node: Test modules / conftest py files inside packages1639933
Ref: explanation/pythonpath test-modules-conftest-py-files-inside-packages1640111
Ref: 4821640111
Node: Standalone test modules / conftest py files1641353
Ref: explanation/pythonpath standalone-test-modules-conftest-py-files1641531
Ref: 4831641531
Node: Invoking pytest versus python -m pytest1642471
Ref: explanation/pythonpath invoking-pytest-versus-python-m-pytest1642645
Ref: 4841642645
Ref: explanation/pythonpath pytest-vs-python-m-pytest1642645
Ref: 4631642645
Node: Examples and customization tricks1643043
Ref: example/index doc1643212
Ref: 4851643212
Ref: example/index examples1643212
Ref: 4861643212
Ref: example/index examples-and-customization-tricks1643212
Ref: 4871643212
Ref: Examples and customization tricks-Footnote-11644544
Node: Demo of Python failure reports with pytest1644593
Ref: example/reportingdemo doc1644741
Ref: 48a1644741
Ref: example/reportingdemo demo-of-python-failure-reports-with-pytest1644741
Ref: 48b1644741
Ref: example/reportingdemo tbreportdemo1644741
Ref: 2e1644741
Node: Basic patterns and examples1672693
Ref: example/simple doc1672869
Ref: 48c1672869
Ref: example/simple basic-patterns-and-examples1672869
Ref: 48d1672869
Node: How to change command line options defaults1673701
Ref: example/simple how-to-change-command-line-options-defaults1673891
Ref: 48e1673891
Node: Pass different values to a test function depending on command line options1675007
Ref: example/simple pass-different-values-to-a-test-function-depending-on-command-line-options1675245
Ref: 48f1675245
Ref: example/simple request-example1675245
Ref: 26c1675245
Node: Dynamically adding command line options1679534
Ref: example/simple dynamically-adding-command-line-options1679787
Ref: 4901679787
Ref: Dynamically adding command line options-Footnote-11680878
Node: Control skipping of tests according to command line option1680925
Ref: example/simple control-skipping-of-tests-according-to-command-line-option1681145
Ref: 4911681145
Ref: example/simple excontrolskip1681145
Ref: 4921681145
Node: Writing well integrated assertion helpers1683401
Ref: example/simple tracebackhide1683624
Ref: 4931683624
Ref: example/simple writing-well-integrated-assertion-helpers1683624
Ref: 4941683624
Node: Detect if running from within a pytest run1685795
Ref: example/simple detect-if-running-from-within-a-pytest-run1685993
Ref: 4951685993
Node: Adding info to test report header1686732
Ref: example/simple adding-info-to-test-report-header1686912
Ref: 4961686912
Node: Profiling test duration1688765
Ref: example/simple profiling-test-duration1688935
Ref: 4971688935
Node: Incremental testing - test steps1690072
Ref: example/simple incremental-testing-test-steps1690248
Ref: 4981690248
Node: Package/Directory-level fixtures setups1694446
Ref: example/simple package-directory-level-fixtures-setups1694635
Ref: 4991694635
Node: Post-process test reports / failures1699054
Ref: example/simple post-process-test-reports-failures1699263
Ref: 49a1699263
Node: Making test result information available in fixtures1702079
Ref: example/simple making-test-result-information-available-in-fixtures1702289
Ref: 49b1702289
Node: PYTEST_CURRENT_TEST environment variable1705332
Ref: example/simple pytest-current-test-env1705521
Ref: 41b1705521
Ref: example/simple pytest-current-test-environment-variable1705521
Ref: 49c1705521
Ref: PYTEST_CURRENT_TEST environment variable-Footnote-11707153
Node: Freezing pytest1707194
Ref: example/simple freezing-pytest1707322
Ref: 1eb1707322
Ref: example/simple id11707322
Ref: 49d1707322
Ref: Freezing pytest-Footnote-11709448
Node: Parametrizing tests1709491
Ref: example/parametrize doc1709652
Ref: 49e1709652
Ref: example/parametrize parametrizing-tests1709652
Ref: 49f1709652
Ref: example/parametrize paramexamples1709652
Ref: 991709652
Node: Generating parameters combinations depending on command line1710524
Ref: example/parametrize generating-parameters-combinations-depending-on-command-line1710679
Ref: 4a01710679
Node: Different options for test IDs1712568
Ref: example/parametrize different-options-for-test-ids1712767
Ref: 4a11712767
Node: A quick port of “testscenarios”1716260
Ref: example/parametrize a-quick-port-of-testscenarios1716444
Ref: 4a21716444
Ref: A quick port of “testscenarios”-Footnote-11718924
Node: Deferring the setup of parametrized resources1718972
Ref: example/parametrize deferring-the-setup-of-parametrized-resources1719150
Ref: 4a31719150
Node: Indirect parametrization1722200
Ref: example/parametrize indirect-parametrization1722381
Ref: 4a41722381
Node: Apply indirect on particular arguments1722994
Ref: example/parametrize apply-indirect-on-particular-arguments1723188
Ref: 4a51723188
Node: Parametrizing test methods through per-class configuration1724759
Ref: example/parametrize parametrizing-test-methods-through-per-class-configuration1724976
Ref: 4a61724976
Ref: Parametrizing test methods through per-class configuration-Footnote-11726951
Node: Indirect parametrization with multiple fixtures1727028
Ref: example/parametrize indirect-parametrization-with-multiple-fixtures1727267
Ref: 4a71727267
Node: Indirect parametrization of optional implementations/imports1730787
Ref: example/parametrize indirect-parametrization-of-optional-implementations-imports1731021
Ref: 4a81731021
Node: Set marks or test ID for individual parametrized test1733374
Ref: example/parametrize set-marks-or-test-id-for-individual-parametrized-test1733594
Ref: 4a91733594
Node: Parametrizing conditional raising1735826
Ref: example/parametrize id11735977
Ref: 4aa1735977
Ref: example/parametrize parametrizing-conditional-raising1735977
Ref: 1e61735977
Node: Working with custom markers1736973
Ref: example/markers doc1737162
Ref: 4ab1737162
Ref: example/markers mark-examples1737162
Ref: 861737162
Ref: example/markers working-with-custom-markers1737162
Ref: 4ac1737162
Node: Marking test functions and selecting them for a run1737865
Ref: example/markers mark-run1738027
Ref: 851738027
Ref: example/markers marking-test-functions-and-selecting-them-for-a-run1738027
Ref: 4ad1738027
Node: Selecting tests based on their node ID1739846
Ref: example/markers selecting-tests-based-on-their-node-id1740066
Ref: 4ae1740066
Ref: example/markers node-id1741996
Ref: 4af1741996
Node: Using -k expr to select tests based on their name1742626
Ref: example/markers using-k-expr-to-select-tests-based-on-their-name1742814
Ref: 4b01742814
Node: Registering markers1745555
Ref: example/markers registering-markers1745737
Ref: 4b11745737
Node: Marking whole classes or modules1748998
Ref: example/markers marking-whole-classes-or-modules1749178
Ref: 4b31749178
Ref: example/markers scoped-marking1749178
Ref: 4171749178
Node: Marking individual tests when using parametrize1750128
Ref: example/markers id11750347
Ref: 4b41750347
Ref: example/markers marking-individual-tests-when-using-parametrize1750347
Ref: 4b51750347
Node: Custom marker and command line option to control test runs1751101
Ref: example/markers adding-a-custom-marker-from-a-plugin1751324
Ref: 4b21751324
Ref: example/markers custom-marker-and-command-line-option-to-control-test-runs1751324
Ref: 4b61751324
Node: Passing a callable to custom markers1755881
Ref: example/markers passing-a-callable-to-custom-markers1756108
Ref: 4b71756108
Ref: example/markers passing-callables-to-custom-markers1756108
Ref: 4b81756108
Node: Reading markers which were set from multiple places1757693
Ref: example/markers reading-markers-which-were-set-from-multiple-places1757905
Ref: 4b91757905
Node: Marking platform specific tests with pytest1759113
Ref: example/markers marking-platform-specific-tests-with-pytest1759337
Ref: 4ba1759337
Node: Automatically adding markers based on test names1761890
Ref: example/markers automatically-adding-markers-based-on-test-names1762054
Ref: 4bb1762054
Node: A session-fixture which can look at all collected tests1765507
Ref: example/special doc1765716
Ref: 4bc1765716
Ref: example/special a-session-fixture-which-can-look-at-all-collected-tests1765716
Ref: 4bd1765716
Node: Changing standard Python test discovery1767728
Ref: example/pythoncollection doc1767939
Ref: 4601767939
Ref: example/pythoncollection changing-standard-python-test-discovery1767939
Ref: 4be1767939
Node: Ignore paths during test collection1768367
Ref: example/pythoncollection ignore-paths-during-test-collection1768524
Ref: 4bf1768524
Node: Deselect tests during test collection1770320
Ref: example/pythoncollection deselect-tests-during-test-collection1770537
Ref: 4c01770537
Node: Keeping duplicate paths specified from command line1771079
Ref: example/pythoncollection keeping-duplicate-paths-specified-from-command-line1771289
Ref: 4c11771289
Node: Changing directory recursion1772057
Ref: example/pythoncollection changing-directory-recursion1772257
Ref: 4c21772257
Node: Changing naming conventions1772682
Ref: example/pythoncollection change-naming-conventions1772880
Ref: 4481772880
Ref: example/pythoncollection changing-naming-conventions1772880
Ref: 4c31772880
Node: Interpreting cmdline arguments as Python packages1774690
Ref: example/pythoncollection interpreting-cmdline-arguments-as-python-packages1774889
Ref: 4c41774889
Node: Finding out what is collected1775674
Ref: example/pythoncollection finding-out-what-is-collected1775873
Ref: 4c51775873
Node: Customizing test collection1776554
Ref: example/pythoncollection customizing-test-collection1776695
Ref: 12a1776695
Ref: example/pythoncollection id11776695
Ref: 4c61776695
Node: Working with non-python tests1779288
Ref: example/nonpython doc1779435
Ref: 4c71779435
Ref: example/nonpython non-python-tests1779435
Ref: 3571779435
Ref: example/nonpython working-with-non-python-tests1779435
Ref: 4c81779435
Node: A basic example for specifying tests in Yaml files1779571
Ref: example/nonpython a-basic-example-for-specifying-tests-in-yaml-files1779687
Ref: 4c91779687
Ref: example/nonpython yaml-plugin1779687
Ref: 1561779687
Ref: A basic example for specifying tests in Yaml files-Footnote-11784926
Ref: A basic example for specifying tests in Yaml files-Footnote-21785007
Node: Backwards Compatibility Policy1785048
Ref: backwards-compatibility doc1785176
Ref: 4ca1785176
Ref: backwards-compatibility backwards-compatibility1785176
Ref: 1181785176
Ref: backwards-compatibility backwards-compatibility-policy1785176
Ref: 4cb1785176
Ref: Backwards Compatibility Policy-Footnote-11788916
Ref: Backwards Compatibility Policy-Footnote-21788972
Ref: Backwards Compatibility Policy-Footnote-31789028
Node: History1789084
Ref: backwards-compatibility history1789201
Ref: 4cc1789201
Node: Focus primary on smooth transition - stance pre 6 01789344
Ref: backwards-compatibility focus-primary-on-smooth-transition-stance-pre-6-01789439
Ref: 4cd1789439
Node: Deprecation Roadmap1791427
Ref: backwards-compatibility deprecation-roadmap1791534
Ref: 4ce1791534
Ref: Deprecation Roadmap-Footnote-11791869
Ref: Deprecation Roadmap-Footnote-21791958
Node: Python version support1792028
Ref: backwards-compatibility python-version-support1792140
Ref: 4d01792140
Node: Deprecations and Removals1792670
Ref: deprecations doc1792803
Ref: 4d11792803
Ref: deprecations deprecations1792803
Ref: 4cf1792803
Ref: deprecations deprecations-and-removals1792803
Ref: 4d21792803
Node: Deprecated Features1793165
Ref: deprecations deprecated-features1793271
Ref: 4d31793271
Node: The pytest Instance collector1794620
Ref: deprecations instance-collector-deprecation1794778
Ref: 4d41794778
Ref: deprecations the-pytest-instance-collector1794778
Ref: 4d51794778
Node: fspath argument for Node constructors replaced with pathlib Path1795555
Ref: deprecations fspath-argument-for-node-constructors-replaced-with-pathlib-path1795782
Ref: 4d61795782
Ref: deprecations node-ctor-fspath-deprecation1795782
Ref: 4d71795782
Ref: fspath argument for Node constructors replaced with pathlib Path-Footnote-11797581
Ref: fspath argument for Node constructors replaced with pathlib Path-Footnote-21797651
Ref: fspath argument for Node constructors replaced with pathlib Path-Footnote-31797719
Ref: fspath argument for Node constructors replaced with pathlib Path-Footnote-41797756
Node: py path local arguments for hooks replaced with pathlib Path1797813
Ref: deprecations legacy-path-hooks-deprecated1798049
Ref: 4d91798049
Ref: deprecations py-path-local-arguments-for-hooks-replaced-with-pathlib-path1798049
Ref: 4da1798049
Ref: py path local arguments for hooks replaced with pathlib Path-Footnote-11799630
Ref: py path local arguments for hooks replaced with pathlib Path-Footnote-21799700
Ref: py path local arguments for hooks replaced with pathlib Path-Footnote-31799737
Node: Directly constructing internal classes1799794
Ref: deprecations directly-constructing-internal-classes1800020
Ref: 4db1800020
Node: Passing msg= to pytest skip pytest fail or pytest exit1800735
Ref: deprecations cmdline-preparse-deprecated1800946
Ref: 4dc1800946
Ref: deprecations passing-msg-to-pytest-skip-pytest-fail-or-pytest-exit1800946
Ref: 4dd1800946
Node: Implementing the pytest_cmdline_preparse hook1801880
Ref: deprecations implementing-the-pytest-cmdline-preparse-hook1802113
Ref: 4de1802113
Node: Diamond inheritance between pytest Collector and pytest Item1802662
Ref: deprecations diamond-inheritance-between-pytest-collector-and-pytest-item1802907
Ref: 4df1802907
Ref: deprecations diamond-inheritance-deprecated1802907
Ref: 4e01802907
Ref: Diamond inheritance between pytest Collector and pytest Item-Footnote-11803607
Node: Constructors of custom pytest Node subclasses should take **kwargs1803671
Ref: deprecations constructors-of-custom-pytest-node-subclasses-should-take-kwargs1803915
Ref: 4e11803915
Ref: deprecations uncooperative-constructors-deprecated1803915
Ref: 4d81803915
Node: Backward compatibilities in Parser addoption1805023
Ref: deprecations backward-compatibilities-in-parser-addoption1805230
Ref: 4e21805230
Node: Using pytest warns None1805703
Ref: deprecations using-pytest-warns-none1805886
Ref: 4e31805886
Node: Returning non-None value in test functions1806295
Ref: deprecations returning-non-none-value-in-test-functions1806466
Ref: 4e41806466
Node: The --strict command-line option1807486
Ref: deprecations the-strict-command-line-option1807670
Ref: 4e51807670
Node: The yield_fixture function/decorator1808173
Ref: deprecations the-yield-fixture-function-decorator1808306
Ref: 4e61808306
Node: Removed Features1808590
Ref: deprecations removed-features1808696
Ref: 4e71808696
Node: The pytest collect module1810417
Ref: deprecations the-pytest-collect-module1810536
Ref: 4e81810536
Node: The pytest_warning_captured hook1810810
Ref: deprecations the-pytest-warning-captured-hook1810971
Ref: 4e91810971
Node: The pytest _fillfuncargs function1811327
Ref: deprecations the-pytest-fillfuncargs-function1811498
Ref: 4ea1811498
Node: --no-print-logs command-line option1811921
Ref: deprecations no-print-logs-command-line-option1812083
Ref: 4eb1812083
Node: Result log --result-log1812596
Ref: deprecations result-log-result-log1812754
Ref: 4ec1812754
Ref: deprecations resultlog-deprecated1812754
Ref: 4ed1812754
Ref: Result log --result-log-Footnote-11813482
Node: pytest_collect_directory hook1813537
Ref: deprecations pytest-collect-directory-hook1813683
Ref: 4ee1813683
Node: TerminalReporter writer1813989
Ref: deprecations terminalreporter-writer1814161
Ref: 4ef1814161
Node: junit_family default value change to “xunit2”1814616
Ref: deprecations junit-family-changed-default-value1814804
Ref: 4f01814804
Ref: deprecations junit-family-default-value-change-to-xunit21814804
Ref: 4f11814804
Ref: junit_family default value change to “xunit2”-Footnote-11816146
Ref: junit_family default value change to “xunit2”-Footnote-21816178
Ref: junit_family default value change to “xunit2”-Footnote-31816219
Node: Node Construction changed to Node from_parent1816287
Ref: deprecations node-construction-changed-to-node-from-parent1816493
Ref: 4f21816493
Node: pytest fixture arguments are keyword only1817514
Ref: deprecations pytest-fixture-arguments-are-keyword-only1817706
Ref: 4f31817706
Node: funcargnames alias for fixturenames1817952
Ref: deprecations funcargnames-alias-for-fixturenames1818119
Ref: 4f41818119
Node: pytest config global1818737
Ref: deprecations pytest-config-global1818899
Ref: 4f51818899
Ref: deprecations pytest-config-global-deprecated1818899
Ref: 4f61818899
Node: "message" parameter of pytest raises1819323
Ref: deprecations message-parameter-of-pytest-raises1819501
Ref: 4f71819501
Ref: deprecations raises-message-deprecated1819501
Ref: 4f81819501
Ref: "message" parameter of pytest raises-Footnote-11820579
Node: raises / warns with a string as the second argument1820636
Ref: deprecations raises-warns-exec1820826
Ref: 4f91820826
Ref: deprecations raises-warns-with-a-string-as-the-second-argument1820826
Ref: 4fa1820826
Node: Using Class in custom Collectors1821637
Ref: deprecations using-class-in-custom-collectors1821823
Ref: 4fb1821823
Node: marks in pytest mark parametrize1822357
Ref: deprecations marks-in-pytest-mark-parametrize1822515
Ref: 4fc1822515
Ref: deprecations marks-in-pytest-parametrize-deprecated1822515
Ref: 4fd1822515
Node: pytest_funcarg__ prefix1823680
Ref: deprecations pytest-funcarg-prefix1823841
Ref: 4fe1823841
Ref: deprecations pytest-funcarg-prefix-deprecated1823841
Ref: 4ff1823841
Node: [pytest] section in setup cfg files1824217
Ref: deprecations pytest-section-in-setup-cfg-files1824362
Ref: 5001824362
Node: Metafunc addcall1824616
Ref: deprecations metafunc-addcall1824750
Ref: 5011824750
Ref: deprecations metafunc-addcall-deprecated1824750
Ref: 5021824750
Node: cached_setup1825227
Ref: deprecations cached-setup1825372
Ref: 5031825372
Ref: deprecations cached-setup-deprecated1825372
Ref: 5041825372
Node: pytest_plugins in non-top-level conftest files1826036
Ref: deprecations pytest-plugins-in-non-top-level-conftest-files1826190
Ref: 5051826190
Ref: deprecations pytest-plugins-in-non-top-level-conftest-files-deprecated1826190
Ref: 5061826190
Node: Config warn and Node warn1826607
Ref: deprecations config-warn-and-node-warn1826768
Ref: 5071826768
Ref: deprecations config-warn-and-node-warn-deprecated1826768
Ref: 5081826768
Node: record_xml_property1827658
Ref: deprecations record-xml-property1827815
Ref: 5091827815
Ref: deprecations record-xml-property-deprecated1827815
Ref: 50a1827815
Node: Passing command-line string to pytest main1828311
Ref: deprecations passing-command-line-string-to-pytest-main1828468
Ref: 50b1828468
Ref: deprecations passing-command-line-string-to-pytest-main-deprecated1828468
Ref: 50c1828468
Node: Calling fixtures directly1828984
Ref: deprecations calling-fixtures-directly1829133
Ref: 50d1829133
Ref: deprecations calling-fixtures-directly-deprecated1829133
Ref: 50e1829133
Node: yield tests1830340
Ref: deprecations yield-tests1830485
Ref: 50f1830485
Ref: deprecations yield-tests-deprecated1830485
Ref: 5101830485
Node: Internal classes accessed through Node1831159
Ref: deprecations internal-classes-accessed-through-node1831294
Ref: 5111831294
Ref: deprecations internal-classes-accessed-through-node-deprecated1831294
Ref: 5121831294
Node: Node get_marker1831856
Ref: deprecations node-get-marker1832001
Ref: 5131832001
Node: somefunction markname1832262
Ref: deprecations somefunction-markname1832385
Ref: 5161832385
Node: pytest_namespace1832670
Ref: deprecations pytest-namespace1832769
Ref: 5171832769
Ref: deprecations pytest-namespace-deprecated1832769
Ref: 5181832769
Node: Contribution getting started1833519
Ref: contributing doc1833647
Ref: 5191833647
Ref: contributing contributing1833647
Ref: 51a1833647
Ref: contributing contribution-getting-started1833647
Ref: 51b1833647
Node: Feature requests and feedback1834138
Ref: contributing feature-requests-and-feedback1834252
Ref: 51c1834252
Ref: contributing submitfeedback1834252
Ref: 51d1834252
Ref: Feature requests and feedback-Footnote-11834677
Node: Report bugs1834729
Ref: contributing report-bugs1834860
Ref: 51e1834860
Ref: contributing reportbugs1834860
Ref: 51f1834860
Ref: Report bugs-Footnote-11835463
Node: Fix bugs1835515
Ref: contributing fix-bugs1835635
Ref: 5201835635
Ref: contributing fixbugs1835635
Ref: 5211835635
Ref: Fix bugs-Footnote-11836089
Ref: Fix bugs-Footnote-21836153
Node: Implement features1836222
Ref: contributing implement-features1836350
Ref: 5221836350
Ref: contributing writeplugins1836350
Ref: 5231836350
Ref: Implement features-Footnote-11836573
Node: Write documentation1836645
Ref: contributing write-documentation1836797
Ref: 5241836797
Ref: Write documentation-Footnote-11838588
Ref: Write documentation-Footnote-21838664
Node: Submitting Plugins to pytest-dev1838742
Ref: contributing submitplugin1838899
Ref: 1571838899
Ref: contributing submitting-plugins-to-pytest-dev1838899
Ref: 5251838899
Ref: contributing pull-requests1841496
Ref: 5261841496
Ref: Submitting Plugins to pytest-dev-Footnote-11841534
Ref: Submitting Plugins to pytest-dev-Footnote-21841572
Ref: Submitting Plugins to pytest-dev-Footnote-31841632
Ref: Submitting Plugins to pytest-dev-Footnote-41841714
Ref: Submitting Plugins to pytest-dev-Footnote-51841749
Node: Preparing Pull Requests1841785
Ref: contributing id11841951
Ref: 5271841951
Ref: contributing preparing-pull-requests1841951
Ref: 5281841951
Node: Short version1842073
Ref: contributing short-version1842167
Ref: 5291842167
Ref: Short version-Footnote-11843035
Ref: Short version-Footnote-21843066
Node: Long version1843103
Ref: contributing long-version1843219
Ref: 52a1843219
Ref: Long version-Footnote-11847370
Ref: Long version-Footnote-21847421
Ref: Long version-Footnote-31847483
Ref: Long version-Footnote-41847528
Ref: Long version-Footnote-51847557
Node: Writing Tests1847588
Ref: contributing writing-tests1847682
Ref: 52b1847682
Ref: Writing Tests-Footnote-11849021
Node: Joining the Development Team1849098
Ref: contributing joining-the-development-team1849280
Ref: 52c1849280
Node: Backporting bug fixes for the next patch release1849960
Ref: contributing backporting-bug-fixes-for-the-next-patch-release1850144
Ref: 52d1850144
Node: Who does the backporting1851673
Ref: contributing who-does-the-backporting1851782
Ref: 52e1851782
Node: Handling stale issues/PRs1852954
Ref: contributing handling-stale-issues-prs1853124
Ref: 52f1853124
Node: When to close1854281
Ref: contributing when-to-close1854386
Ref: 5301854386
Node: Closing pull requests1855073
Ref: contributing closing-pull-requests1855178
Ref: 5311855178
Node: Closing Issues1856482
Ref: contributing closing-issues1856595
Ref: 5321856595
Ref: Closing Issues-Footnote-11857251
Node: Development Guide1857409
Ref: development_guide doc1857519
Ref: 5331857519
Ref: development_guide development-guide1857519
Ref: 5341857519
Ref: Development Guide-Footnote-11857722
Node: Sponsor1857791
Ref: sponsor doc1857894
Ref: 5351857894
Ref: sponsor sponsor1857894
Ref: 5361857894
Node: OpenCollective1858402
Ref: sponsor opencollective1858460
Ref: 5371858460
Ref: OpenCollective-Footnote-11858884
Ref: OpenCollective-Footnote-21858919
Node: pytest for enterprise1858961
Ref: tidelift doc1859054
Ref: 5381859054
Ref: tidelift pytest-collective1859054
Ref: 5391859054
Ref: tidelift pytest-for-enterprise1859054
Ref: 53a1859054
Ref: pytest for enterprise-Footnote-11861667
Ref: pytest for enterprise-Footnote-21861696
Ref: pytest for enterprise-Footnote-31861822
Node: License1861947
Ref: license doc1862049
Ref: 53b1862049
Ref: license id11862049
Ref: 53c1862049
Ref: license license1862049
Ref: 53d1862049
Ref: license tidelift1862049
Ref: 53e1862049
Ref: contact contact-channels1863341
Ref: 53f1863341
Ref: License-Footnote-11863378
Node: Contact channels1863441
Ref: contact doc1863532
Ref: 5401863532
Ref: contact contact1863532
Ref: 4881863532
Ref: contact id11863532
Ref: 5411863532
Ref: contact mit1863532
Ref: 5421863532
Ref: contact get-an-account1864624
Ref: 5431864624
Ref: contact py-dev1864624
Ref: 5441864624
Ref: contact development-mailing-list1864624
Ref: 5451864624
Ref: Contact channels-Footnote-11864661
Ref: Contact channels-Footnote-21864713
Ref: Contact channels-Footnote-31864770
Ref: Contact channels-Footnote-41864816
Ref: Contact channels-Footnote-51864865
Ref: Contact channels-Footnote-61864923
Ref: Contact channels-Footnote-71864982
Ref: Contact channels-Footnote-81865026
Ref: Contact channels-Footnote-91865066
Ref: Contact channels-Footnote-101865116
Node: History<2>1865146
Ref: history doc1865246
Ref: 5461865246
Ref: history history1865246
Ref: 5471865246
Ref: history pytest-commit-at-python-org-mailing-list1865246
Ref: 5481865246
Ref: History<2>-Footnote-11871157
Ref: History<2>-Footnote-21871251
Ref: History<2>-Footnote-31871288
Ref: History<2>-Footnote-41871318
Ref: History<2>-Footnote-51871397
Ref: History<2>-Footnote-61871430
Ref: History<2>-Footnote-71871503
Ref: History<2>-Footnote-81871598
Ref: History<2>-Footnote-91871693
Ref: History<2>-Footnote-101871791
Ref: History<2>-Footnote-111871828
Ref: History<2>-Footnote-121871933
Ref: History<2>-Footnote-131871988
Ref: History<2>-Footnote-141872068
Ref: History<2>-Footnote-151872164
Ref: History<2>-Footnote-161872260
Ref: History<2>-Footnote-171872320
Ref: History<2>-Footnote-181872402
Ref: History<2>-Footnote-191872515
Ref: History<2>-Footnote-201872614
Ref: History<2>-Footnote-211872719
Ref: History<2>-Footnote-221872836
Ref: History<2>-Footnote-231872926
Node: Historical Notes1873007
Ref: historical-notes doc1873110
Ref: 54a1873110
Ref: historical-notes historical-notes1873110
Ref: 54b1873110
Node: Marker revamp and iteration1874028
Ref: historical-notes marker-revamp1874154
Ref: 5141874154
Ref: historical-notes marker-revamp-and-iteration1874154
Ref: 54c1874154
Node: Updating code1875895
Ref: historical-notes update-marker-code1875995
Ref: 5151875995
Ref: historical-notes updating-code1875995
Ref: 54d1875995
Ref: Updating code-Footnote-11877668
Node: Related issues1877724
Ref: historical-notes related-issues1877824
Ref: 54e1877824
Ref: Related issues-Footnote-11879182
Ref: Related issues-Footnote-21879238
Ref: Related issues-Footnote-31879294
Ref: Related issues-Footnote-41879351
Ref: Related issues-Footnote-51879407
Ref: Related issues-Footnote-61879464
Ref: Related issues-Footnote-71879521
Ref: Related issues-Footnote-81879578
Ref: Related issues-Footnote-91879635
Ref: Related issues-Footnote-101879691
Ref: Related issues-Footnote-111879749
Ref: Related issues-Footnote-121879807
Ref: Related issues-Footnote-131879864
Node: cache plugin integrated into the core1879920
Ref: historical-notes cache-plugin-integrated-into-the-core1880084
Ref: 54f1880084
Node: funcargs and pytest_funcarg__1880468
Ref: historical-notes funcargs-and-pytest-funcarg1880636
Ref: 5501880636
Ref: historical-notes historical-funcargs-and-pytest-funcargs1880636
Ref: 5511880636
Node: @pytest yield_fixture decorator1880992
Ref: historical-notes pytest-yield-fixture-decorator1881151
Ref: 5521881151
Node: [pytest] header in setup cfg1881535
Ref: historical-notes pytest-header-in-setup-cfg1881718
Ref: 5531881718
Node: Applying marks to @pytest mark parametrize parameters1882099
Ref: historical-notes applying-marks-to-pytest-mark-parametrize-parameters1882301
Ref: 5541882301
Node: @pytest mark parametrize argument names as a tuple1882996
Ref: historical-notes pytest-mark-parametrize-argument-names-as-a-tuple1883207
Ref: 5551883207
Node: setup is now an “autouse fixture”1883582
Ref: historical-notes setup-is-now-an-autouse-fixture1883781
Ref: 5561883781
Node: Conditions as strings instead of booleans1884126
Ref: historical-notes conditions-as-strings-instead-of-booleans1884291
Ref: 5571884291
Ref: historical-notes string-conditions1884291
Ref: 1251884291
Node: pytest set_trace1886530
Ref: historical-notes pytest-set-trace1886681
Ref: 5581886681
Node: “compat” properties1887098
Ref: historical-notes compat-properties1887199
Ref: 5591887199
Node: Talks and Tutorials1887580
Ref: talks doc1887694
Ref: 55a1887694
Ref: talks talks-and-tutorials1887694
Ref: 55b1887694
Node: Books1887789
Ref: talks books1887882
Ref: 55c1887882
Ref: Books-Footnote-11888143
Ref: Books-Footnote-21888217
Ref: Books-Footnote-31888287
Node: Talks and blog postings1888376
Ref: talks talks-and-blog-postings1888469
Ref: 55d1888469
Ref: Talks and blog postings-Footnote-11891708
Ref: Talks and blog postings-Footnote-21891760
Ref: Talks and blog postings-Footnote-31891805
Ref: Talks and blog postings-Footnote-41891849
Ref: Talks and blog postings-Footnote-51891977
Ref: Talks and blog postings-Footnote-61892029
Ref: Talks and blog postings-Footnote-71892103
Ref: Talks and blog postings-Footnote-81892172
Ref: Talks and blog postings-Footnote-91892221
Ref: Talks and blog postings-Footnote-101892273
Ref: Talks and blog postings-Footnote-111892408
Ref: Talks and blog postings-Footnote-121892460
Ref: Talks and blog postings-Footnote-131892513
Ref: Talks and blog postings-Footnote-141892566
Ref: Talks and blog postings-Footnote-151892619
Ref: Talks and blog postings-Footnote-161892672
Ref: Talks and blog postings-Footnote-171892725
Ref: Talks and blog postings-Footnote-181892778
Ref: Talks and blog postings-Footnote-191892831
Ref: Talks and blog postings-Footnote-201892884
Ref: Talks and blog postings-Footnote-211892961
Ref: Talks and blog postings-Footnote-221893014
Ref: Talks and blog postings-Footnote-231893067
Ref: Talks and blog postings-Footnote-241893120
Ref: Talks and blog postings-Footnote-251893173
Ref: Talks and blog postings-Footnote-261893255
Ref: Talks and blog postings-Footnote-271893320
Ref: Talks and blog postings-Footnote-281893373
Ref: Talks and blog postings-Footnote-291893454
Ref: Talks and blog postings-Footnote-301893495
Ref: Talks and blog postings-Footnote-311893548
Ref: Talks and blog postings-Footnote-321893641
Ref: Talks and blog postings-Footnote-331893667
Ref: Talks and blog postings-Footnote-341893709
Ref: Talks and blog postings-Footnote-351893803
Ref: Talks and blog postings-Footnote-361893894
Ref: Talks and blog postings-Footnote-371893995
Ref: Talks and blog postings-Footnote-381894085
Ref: Talks and blog postings-Footnote-391894188
Ref: Talks and blog postings-Footnote-401894282
Node: Release announcements1894304
Ref: announce/index doc1894411
Ref: 55e1894411
Ref: announce/index release-announcements1894411
Ref: 55f1894411
Ref: announce/index test-generators-and-cached-setup1894411
Ref: 5601894411
Node: pytest-7 1 31901336
Ref: announce/release-7 1 3 doc1901427
Ref: 5611901427
Ref: announce/release-7 1 3 pytest-7-1-31901427
Ref: 5621901427
Node: pytest-7 1 21902019
Ref: announce/release-7 1 2 doc1902131
Ref: 5631902131
Ref: announce/release-7 1 2 pytest-7-1-21902131
Ref: 5641902131
Node: pytest-7 1 11902634
Ref: announce/release-7 1 1 doc1902746
Ref: 5651902746
Ref: announce/release-7 1 1 pytest-7-1-11902746
Ref: 5661902746
Node: pytest-7 1 01903139
Ref: announce/release-7 1 0 doc1903251
Ref: 5671903251
Ref: announce/release-7 1 0 pytest-7-1-01903251
Ref: 5681903251
Node: pytest-7 0 11904281
Ref: announce/release-7 0 1 doc1904393
Ref: 5691904393
Ref: announce/release-7 0 1 pytest-7-0-11904393
Ref: 56a1904393
Node: pytest-7 0 01904829
Ref: announce/release-7 0 0 doc1904944
Ref: 56b1904944
Ref: announce/release-7 0 0 pytest-7-0-01904944
Ref: 56c1904944
Node: pytest-7 0 0rc11906465
Ref: announce/release-7 0 0rc1 doc1906580
Ref: 56d1906580
Ref: announce/release-7 0 0rc1 pytest-7-0-0rc11906580
Ref: 56e1906580
Node: pytest-6 2 51908298
Ref: announce/release-6 2 5 doc1908413
Ref: 56f1908413
Ref: announce/release-6 2 5 pytest-6-2-51908413
Ref: 5701908413
Node: pytest-6 2 41909069
Ref: announce/release-6 2 4 doc1909181
Ref: 5711909181
Ref: announce/release-6 2 4 pytest-6-2-41909181
Ref: 5721909181
Node: pytest-6 2 31909661
Ref: announce/release-6 2 3 doc1909773
Ref: 5731909773
Ref: announce/release-6 2 3 pytest-6-2-31909773
Ref: 5741909773
Node: pytest-6 2 21910189
Ref: announce/release-6 2 2 doc1910301
Ref: 5751910301
Ref: announce/release-6 2 2 pytest-6-2-21910301
Ref: 5761910301
Node: pytest-6 2 11910755
Ref: announce/release-6 2 1 doc1910867
Ref: 5771910867
Ref: announce/release-6 2 1 pytest-6-2-11910867
Ref: 5781910867
Node: pytest-6 2 01911306
Ref: announce/release-6 2 0 doc1911418
Ref: 5791911418
Ref: announce/release-6 2 0 pytest-6-2-01911418
Ref: 57a1911418
Node: pytest-6 1 21913072
Ref: announce/release-6 1 2 doc1913184
Ref: 57b1913184
Ref: announce/release-6 1 2 pytest-6-1-21913184
Ref: 57c1913184
Node: pytest-6 1 11913672
Ref: announce/release-6 1 1 doc1913784
Ref: 57d1913784
Ref: announce/release-6 1 1 pytest-6-1-11913784
Ref: 57e1913784
Node: pytest-6 1 01914179
Ref: announce/release-6 1 0 doc1914291
Ref: 57f1914291
Ref: announce/release-6 1 0 pytest-6-1-01914291
Ref: 5801914291
Node: pytest-6 0 21915269
Ref: announce/release-6 0 2 doc1915381
Ref: 5811915381
Ref: announce/release-6 0 2 pytest-6-0-21915381
Ref: 5821915381
Node: pytest-6 0 11915797
Ref: announce/release-6 0 1 doc1915909
Ref: 5831915909
Ref: announce/release-6 0 1 pytest-6-0-11915909
Ref: 5841915909
Node: pytest-6 0 01916363
Ref: announce/release-6 0 0 doc1916478
Ref: 5851916478
Ref: announce/release-6 0 0 pytest-6-0-01916478
Ref: 5861916478
Node: pytest-6 0 0rc11917433
Ref: announce/release-6 0 0rc1 doc1917548
Ref: 5871917548
Ref: announce/release-6 0 0rc1 pytest-6-0-0rc11917548
Ref: 5881917548
Node: pytest-5 4 31918934
Ref: announce/release-5 4 3 doc1919049
Ref: 5891919049
Ref: announce/release-5 4 3 pytest-5-4-31919049
Ref: 58a1919049
Node: pytest-5 4 21919512
Ref: announce/release-5 4 2 doc1919624
Ref: 58b1919624
Ref: announce/release-5 4 2 pytest-5-4-21919624
Ref: 58c1919624
Node: pytest-5 4 11920115
Ref: announce/release-5 4 1 doc1920227
Ref: 58d1920227
Ref: announce/release-5 4 1 pytest-5-4-11920227
Ref: 58e1920227
Node: pytest-5 4 01920634
Ref: announce/release-5 4 0 doc1920746
Ref: 58f1920746
Ref: announce/release-5 4 0 pytest-5-4-01920746
Ref: 5901920746
Node: pytest-5 3 51922071
Ref: announce/release-5 3 5 doc1922183
Ref: 5911922183
Ref: announce/release-5 3 5 pytest-5-3-51922183
Ref: 5921922183
Node: pytest-5 3 41922606
Ref: announce/release-5 3 4 doc1922718
Ref: 5931922718
Ref: announce/release-5 3 4 pytest-5-3-41922718
Ref: 5941922718
Node: pytest-5 3 31923162
Ref: announce/release-5 3 3 doc1923274
Ref: 5951923274
Ref: announce/release-5 3 3 pytest-5-3-31923274
Ref: 5961923274
Node: pytest-5 3 21923917
Ref: announce/release-5 3 2 doc1924029
Ref: 5971924029
Ref: announce/release-5 3 2 pytest-5-3-21924029
Ref: 5981924029
Node: pytest-5 3 11924606
Ref: announce/release-5 3 1 doc1924718
Ref: 5991924718
Ref: announce/release-5 3 1 pytest-5-3-11924718
Ref: 59a1924718
Node: pytest-5 3 01925299
Ref: announce/release-5 3 0 doc1925411
Ref: 59b1925411
Ref: announce/release-5 3 0 pytest-5-3-01925411
Ref: 59c1925411
Node: pytest-5 2 41926420
Ref: announce/release-5 2 4 doc1926532
Ref: 59d1926532
Ref: announce/release-5 2 4 pytest-5-2-41926532
Ref: 59e1926532
Node: pytest-5 2 31927014
Ref: announce/release-5 2 3 doc1927126
Ref: 59f1927126
Ref: announce/release-5 2 3 pytest-5-2-31927126
Ref: 5a01927126
Node: pytest-5 2 21927735
Ref: announce/release-5 2 2 doc1927847
Ref: 5a11927847
Ref: announce/release-5 2 2 pytest-5-2-21927847
Ref: 5a21927847
Node: pytest-5 2 11928490
Ref: announce/release-5 2 1 doc1928602
Ref: 5a31928602
Ref: announce/release-5 2 1 pytest-5-2-11928602
Ref: 5a41928602
Node: pytest-5 2 01929113
Ref: announce/release-5 2 0 doc1929225
Ref: 5a51929225
Ref: announce/release-5 2 0 pytest-5-2-01929225
Ref: 5a61929225
Node: pytest-5 1 31930067
Ref: announce/release-5 1 3 doc1930179
Ref: 5a71930179
Ref: announce/release-5 1 3 pytest-5-1-31930179
Ref: 5a81930179
Node: pytest-5 1 21930682
Ref: announce/release-5 1 2 doc1930794
Ref: 5a91930794
Ref: announce/release-5 1 2 pytest-5-1-21930794
Ref: 5aa1930794
Node: pytest-5 1 11931310
Ref: announce/release-5 1 1 doc1931422
Ref: 5ab1931422
Ref: announce/release-5 1 1 pytest-5-1-11931422
Ref: 5ac1931422
Node: pytest-5 1 01931958
Ref: announce/release-5 1 0 doc1932070
Ref: 5ad1932070
Ref: announce/release-5 1 0 pytest-5-1-01932070
Ref: 5ae1932070
Node: pytest-5 0 11933317
Ref: announce/release-5 0 1 doc1933429
Ref: 5af1933429
Ref: announce/release-5 0 1 pytest-5-0-11933429
Ref: 5b01933429
Node: pytest-5 0 01933988
Ref: announce/release-5 0 0 doc1934100
Ref: 5b11934100
Ref: announce/release-5 0 0 pytest-5-0-01934100
Ref: 5b21934100
Node: pytest-4 6 91935156
Ref: announce/release-4 6 9 doc1935268
Ref: 5b31935268
Ref: announce/release-4 6 9 pytest-4-6-91935268
Ref: 5b41935268
Node: pytest-4 6 81935724
Ref: announce/release-4 6 8 doc1935836
Ref: 5b51935836
Ref: announce/release-4 6 8 pytest-4-6-81935836
Ref: 5b61935836
Node: pytest-4 6 71936281
Ref: announce/release-4 6 7 doc1936393
Ref: 5b71936393
Ref: announce/release-4 6 7 pytest-4-6-71936393
Ref: 5b81936393
Node: pytest-4 6 61936820
Ref: announce/release-4 6 6 doc1936932
Ref: 5b91936932
Ref: announce/release-4 6 6 pytest-4-6-61936932
Ref: 5ba1936932
Node: pytest-4 6 51937381
Ref: announce/release-4 6 5 doc1937493
Ref: 5bb1937493
Ref: announce/release-4 6 5 pytest-4-6-51937493
Ref: 5bc1937493
Node: pytest-4 6 41937964
Ref: announce/release-4 6 4 doc1938076
Ref: 5bd1938076
Ref: announce/release-4 6 4 pytest-4-6-41938076
Ref: 5be1938076
Node: pytest-4 6 31938572
Ref: announce/release-4 6 3 doc1938684
Ref: 5bf1938684
Ref: announce/release-4 6 3 pytest-4-6-31938684
Ref: 5c01938684
Node: pytest-4 6 21939151
Ref: announce/release-4 6 2 doc1939263
Ref: 5c11939263
Ref: announce/release-4 6 2 pytest-4-6-21939263
Ref: 5c21939263
Node: pytest-4 6 11939671
Ref: announce/release-4 6 1 doc1939783
Ref: 5c31939783
Ref: announce/release-4 6 1 pytest-4-6-11939783
Ref: 5c41939783
Node: pytest-4 6 01940212
Ref: announce/release-4 6 0 doc1940324
Ref: 5c51940324
Ref: announce/release-4 6 0 pytest-4-6-01940324
Ref: 5c61940324
Node: pytest-4 5 01941326
Ref: announce/release-4 5 0 doc1941438
Ref: 5c71941438
Ref: announce/release-4 5 0 pytest-4-5-01941438
Ref: 5c81941438
Node: pytest-4 4 21942275
Ref: announce/release-4 4 2 doc1942387
Ref: 5c91942387
Ref: announce/release-4 4 2 pytest-4-4-21942387
Ref: 5ca1942387
Node: pytest-4 4 11943087
Ref: announce/release-4 4 1 doc1943199
Ref: 5cb1943199
Ref: announce/release-4 4 1 pytest-4-4-11943199
Ref: 5cc1943199
Node: pytest-4 4 01943648
Ref: announce/release-4 4 0 doc1943760
Ref: 5cd1943760
Ref: announce/release-4 4 0 pytest-4-4-01943760
Ref: 5ce1943760
Node: pytest-4 3 11944678
Ref: announce/release-4 3 1 doc1944790
Ref: 5cf1944790
Ref: announce/release-4 3 1 pytest-4-3-11944790
Ref: 5d01944790
Node: pytest-4 3 01945402
Ref: announce/release-4 3 0 doc1945514
Ref: 5d11945514
Ref: announce/release-4 3 0 pytest-4-3-01945514
Ref: 5d21945514
Node: pytest-4 2 11946395
Ref: announce/release-4 2 1 doc1946507
Ref: 5d31946507
Ref: announce/release-4 2 1 pytest-4-2-11946507
Ref: 5d41946507
Node: pytest-4 2 01947168
Ref: announce/release-4 2 0 doc1947280
Ref: 5d51947280
Ref: announce/release-4 2 0 pytest-4-2-01947280
Ref: 5d61947280
Node: pytest-4 1 11948173
Ref: announce/release-4 1 1 doc1948285
Ref: 5d71948285
Ref: announce/release-4 1 1 pytest-4-1-11948285
Ref: 5d81948285
Node: pytest-4 1 01948872
Ref: announce/release-4 1 0 doc1948984
Ref: 5d91948984
Ref: announce/release-4 1 0 pytest-4-1-01948984
Ref: 5da1948984
Node: pytest-4 0 21949999
Ref: announce/release-4 0 2 doc1950111
Ref: 5db1950111
Ref: announce/release-4 0 2 pytest-4-0-21950111
Ref: 5dc1950111
Node: pytest-4 0 11950640
Ref: announce/release-4 0 1 doc1950752
Ref: 5dd1950752
Ref: announce/release-4 0 1 pytest-4-0-11950752
Ref: 5de1950752
Node: pytest-4 0 01951260
Ref: announce/release-4 0 0 doc1951373
Ref: 5df1951373
Ref: announce/release-4 0 0 pytest-4-0-01951373
Ref: 5e01951373
Node: pytest-3 10 11952117
Ref: announce/release-3 10 1 doc1952231
Ref: 5e11952231
Ref: announce/release-3 10 1 pytest-3-10-11952231
Ref: 5e21952231
Node: pytest-3 10 01952766
Ref: announce/release-3 10 0 doc1952880
Ref: 5e31952880
Ref: announce/release-3 10 0 pytest-3-10-01952880
Ref: 5e41952880
Node: pytest-3 9 31953915
Ref: announce/release-3 9 3 doc1954028
Ref: 5e51954028
Ref: announce/release-3 9 3 pytest-3-9-31954028
Ref: 5e61954028
Node: pytest-3 9 21954560
Ref: announce/release-3 9 2 doc1954672
Ref: 5e71954672
Ref: announce/release-3 9 2 pytest-3-9-21954672
Ref: 5e81954672
Node: pytest-3 9 11955181
Ref: announce/release-3 9 1 doc1955293
Ref: 5e91955293
Ref: announce/release-3 9 1 pytest-3-9-11955293
Ref: 5ea1955293
Node: pytest-3 9 01955744
Ref: announce/release-3 9 0 doc1955856
Ref: 5eb1955856
Ref: announce/release-3 9 0 pytest-3-9-01955856
Ref: 5ec1955856
Node: pytest-3 8 21956867
Ref: announce/release-3 8 2 doc1956979
Ref: 5ed1956979
Ref: announce/release-3 8 2 pytest-3-8-21956979
Ref: 5ee1956979
Node: pytest-3 8 11957600
Ref: announce/release-3 8 1 doc1957712
Ref: 5ef1957712
Ref: announce/release-3 8 1 pytest-3-8-11957712
Ref: 5f01957712
Node: pytest-3 8 01958269
Ref: announce/release-3 8 0 doc1958381
Ref: 5f11958381
Ref: announce/release-3 8 0 pytest-3-8-01958381
Ref: 5f21958381
Node: pytest-3 7 41959277
Ref: announce/release-3 7 4 doc1959389
Ref: 5f31959389
Ref: announce/release-3 7 4 pytest-3-7-41959389
Ref: 5f41959389
Node: pytest-3 7 31959875
Ref: announce/release-3 7 3 doc1959987
Ref: 5f51959987
Ref: announce/release-3 7 3 pytest-3-7-31959987
Ref: 5f61959987
Node: pytest-3 7 21960676
Ref: announce/release-3 7 2 doc1960788
Ref: 5f71960788
Ref: announce/release-3 7 2 pytest-3-7-21960788
Ref: 5f81960788
Node: pytest-3 7 11961334
Ref: announce/release-3 7 1 doc1961446
Ref: 5f91961446
Ref: announce/release-3 7 1 pytest-3-7-11961446
Ref: 5fa1961446
Node: pytest-3 7 01961917
Ref: announce/release-3 7 0 doc1962029
Ref: 5fb1962029
Ref: announce/release-3 7 0 pytest-3-7-01962029
Ref: 5fc1962029
Node: pytest-3 6 41962965
Ref: announce/release-3 6 4 doc1963077
Ref: 5fd1963077
Ref: announce/release-3 6 4 pytest-3-6-41963077
Ref: 5fe1963077
Node: pytest-3 6 31963600
Ref: announce/release-3 6 3 doc1963712
Ref: 5ff1963712
Ref: announce/release-3 6 3 pytest-3-6-31963712
Ref: 6001963712
Node: pytest-3 6 21964317
Ref: announce/release-3 6 2 doc1964429
Ref: 6011964429
Ref: announce/release-3 6 2 pytest-3-6-21964429
Ref: 6021964429
Node: pytest-3 6 11965078
Ref: announce/release-3 6 1 doc1965190
Ref: 6031965190
Ref: announce/release-3 6 1 pytest-3-6-11965190
Ref: 6041965190
Node: pytest-3 6 01965732
Ref: announce/release-3 6 0 doc1965844
Ref: 6051965844
Ref: announce/release-3 6 0 pytest-3-6-01965844
Ref: 6061965844
Node: pytest-3 5 11966782
Ref: announce/release-3 5 1 doc1966894
Ref: 6071966894
Ref: announce/release-3 5 1 pytest-3-5-11966894
Ref: 6081966894
Node: pytest-3 5 01967564
Ref: announce/release-3 5 0 doc1967676
Ref: 6091967676
Ref: announce/release-3 5 0 pytest-3-5-01967676
Ref: 60a1967676
Node: pytest-3 4 21968831
Ref: announce/release-3 4 2 doc1968943
Ref: 60b1968943
Ref: announce/release-3 4 2 pytest-3-4-21968943
Ref: 60c1968943
Node: pytest-3 4 11969547
Ref: announce/release-3 4 1 doc1969659
Ref: 60d1969659
Ref: announce/release-3 4 1 pytest-3-4-11969659
Ref: 60e1969659
Node: pytest-3 4 01970243
Ref: announce/release-3 4 0 doc1970355
Ref: 60f1970355
Ref: announce/release-3 4 0 pytest-3-4-01970355
Ref: 6101970355
Node: pytest-3 3 21971520
Ref: announce/release-3 3 2 doc1971632
Ref: 6111971632
Ref: announce/release-3 3 2 pytest-3-3-21971632
Ref: 6121971632
Node: pytest-3 3 11972261
Ref: announce/release-3 3 1 doc1972373
Ref: 6131972373
Ref: announce/release-3 3 1 pytest-3-3-11972373
Ref: 6141972373
Node: pytest-3 3 01972930
Ref: announce/release-3 3 0 doc1973042
Ref: 6151973042
Ref: announce/release-3 3 0 pytest-3-3-01973042
Ref: 6161973042
Node: pytest-3 2 51974162
Ref: announce/release-3 2 5 doc1974274
Ref: 6171974274
Ref: announce/release-3 2 5 pytest-3-2-51974274
Ref: 6181974274
Node: pytest-3 2 41974679
Ref: announce/release-3 2 4 doc1974791
Ref: 6191974791
Ref: announce/release-3 2 4 pytest-3-2-41974791
Ref: 61a1974791
Node: pytest-3 2 31975576
Ref: announce/release-3 2 3 doc1975688
Ref: 61b1975688
Ref: announce/release-3 2 3 pytest-3-2-31975688
Ref: 61c1975688
Node: pytest-3 2 21976187
Ref: announce/release-3 2 2 doc1976299
Ref: 61d1976299
Ref: announce/release-3 2 2 pytest-3-2-21976299
Ref: 61e1976299
Node: pytest-3 2 11976905
Ref: announce/release-3 2 1 doc1977017
Ref: 61f1977017
Ref: announce/release-3 2 1 pytest-3-2-11977017
Ref: 6201977017
Node: pytest-3 2 01977519
Ref: announce/release-3 2 0 doc1977631
Ref: 6211977631
Ref: announce/release-3 2 0 pytest-3-2-01977631
Ref: 6221977631
Node: pytest-3 1 31978746
Ref: announce/release-3 1 3 doc1978858
Ref: 6231978858
Ref: announce/release-3 1 3 pytest-3-1-31978858
Ref: 6241978858
Node: pytest-3 1 21979372
Ref: announce/release-3 1 2 doc1979484
Ref: 6251979484
Ref: announce/release-3 1 2 pytest-3-1-21979484
Ref: 6261979484
Node: pytest-3 1 11979989
Ref: announce/release-3 1 1 doc1980101
Ref: 6271980101
Ref: announce/release-3 1 1 pytest-3-1-11980101
Ref: 6281980101
Node: pytest-3 1 01980614
Ref: announce/release-3 1 0 doc1980726
Ref: 6291980726
Ref: announce/release-3 1 0 pytest-3-1-01980726
Ref: 62a1980726
Node: pytest-3 0 71982063
Ref: announce/release-3 0 7 doc1982175
Ref: 62b1982175
Ref: announce/release-3 0 7 pytest-3-0-71982175
Ref: 62c1982175
Node: pytest-3 0 61982907
Ref: announce/release-3 0 6 doc1983019
Ref: 62d1983019
Ref: announce/release-3 0 6 pytest-3-0-61983019
Ref: 62e1983019
Node: pytest-3 0 51983718
Ref: announce/release-3 0 5 doc1983830
Ref: 62f1983830
Ref: announce/release-3 0 5 pytest-3-0-51983830
Ref: 6301983830
Node: pytest-3 0 41984426
Ref: announce/release-3 0 4 doc1984538
Ref: 6311984538
Ref: announce/release-3 0 4 pytest-3-0-41984538
Ref: 6321984538
Node: pytest-3 0 31985219
Ref: announce/release-3 0 3 doc1985331
Ref: 6331985331
Ref: announce/release-3 0 3 pytest-3-0-31985331
Ref: 6341985331
Node: pytest-3 0 21985957
Ref: announce/release-3 0 2 doc1986069
Ref: 6351986069
Ref: announce/release-3 0 2 pytest-3-0-21986069
Ref: 6361986069
Node: pytest-3 0 11986634
Ref: announce/release-3 0 1 doc1986746
Ref: 6371986746
Ref: announce/release-3 0 1 pytest-3-0-11986746
Ref: 6381986746
Node: pytest-3 0 01987305
Ref: announce/release-3 0 0 doc1987446
Ref: 6391987446
Ref: announce/release-3 0 0 pytest-3-0-01987446
Ref: 63a1987446
Node: python testing sprint June 20th-26th 20161989113
Ref: announce/sprint2016 doc1989254
Ref: 63b1989254
Ref: announce/sprint2016 python-testing-sprint-june-20th-26th-20161989254
Ref: 63c1989254
Ref: python testing sprint June 20th-26th 2016-Footnote-11990611
Node: Participants1990660
Ref: announce/sprint2016 participants1990787
Ref: 63d1990787
Node: Sprint organisation schedule1991080
Ref: announce/sprint2016 sprint-organisation-schedule1991231
Ref: 63e1991231
Node: Money / funding1991657
Ref: announce/sprint2016 money-funding1991787
Ref: 63f1991787
Node: pytest-2 9 21992069
Ref: announce/release-2 9 2 doc1992210
Ref: 6401992210
Ref: announce/release-2 9 2 pytest-2-9-21992210
Ref: 6411992210
Node: 2 9 2 compared to 2 9 11992901
Ref: announce/release-2 9 2 compared-to-2-9-11992973
Ref: 6421992973
Ref: 2 9 2 compared to 2 9 1-Footnote-11994161
Ref: 2 9 2 compared to 2 9 1-Footnote-21994217
Ref: 2 9 2 compared to 2 9 1-Footnote-31994262
Ref: 2 9 2 compared to 2 9 1-Footnote-41994298
Ref: 2 9 2 compared to 2 9 1-Footnote-51994355
Ref: 2 9 2 compared to 2 9 1-Footnote-61994391
Ref: 2 9 2 compared to 2 9 1-Footnote-71994446
Ref: 2 9 2 compared to 2 9 1-Footnote-81994487
Ref: 2 9 2 compared to 2 9 1-Footnote-91994542
Ref: 2 9 2 compared to 2 9 1-Footnote-101994578
Ref: 2 9 2 compared to 2 9 1-Footnote-111994624
Ref: 2 9 2 compared to 2 9 1-Footnote-121994661
Node: pytest-2 9 11994699
Ref: announce/release-2 9 1 doc1994811
Ref: 6431994811
Ref: announce/release-2 9 1 pytest-2-9-11994811
Ref: 6441994811
Node: 2 9 1 compared to 2 9 01995469
Ref: announce/release-2 9 1 compared-to-2-9-01995541
Ref: 6451995541
Ref: 2 9 1 compared to 2 9 0-Footnote-11996525
Ref: 2 9 1 compared to 2 9 0-Footnote-21996563
Ref: 2 9 1 compared to 2 9 0-Footnote-31996620
Ref: 2 9 1 compared to 2 9 0-Footnote-41996658
Ref: 2 9 1 compared to 2 9 0-Footnote-51996714
Ref: 2 9 1 compared to 2 9 0-Footnote-61996750
Ref: 2 9 1 compared to 2 9 0-Footnote-71996805
Ref: 2 9 1 compared to 2 9 0-Footnote-81996861
Ref: 2 9 1 compared to 2 9 0-Footnote-91996897
Ref: 2 9 1 compared to 2 9 0-Footnote-101996935
Ref: 2 9 1 compared to 2 9 0-Footnote-111996993
Node: pytest-2 9 01997050
Ref: announce/release-2 9 0 doc1997162
Ref: 6461997162
Ref: announce/release-2 9 0 pytest-2-9-01997162
Ref: 6471997162
Node: 2 9 0 compared to 2 8 71997929
Ref: announce/release-2 9 0 compared-to-2-8-71998001
Ref: 6481998001
Ref: 2 9 0 compared to 2 8 7-Footnote-12002298
Ref: 2 9 0 compared to 2 8 7-Footnote-22002341
Ref: 2 9 0 compared to 2 8 7-Footnote-32002396
Ref: 2 9 0 compared to 2 8 7-Footnote-42002427
Ref: 2 9 0 compared to 2 8 7-Footnote-52002465
Ref: 2 9 0 compared to 2 8 7-Footnote-62002505
Ref: 2 9 0 compared to 2 8 7-Footnote-72002540
Ref: 2 9 0 compared to 2 8 7-Footnote-82002578
Ref: 2 9 0 compared to 2 8 7-Footnote-92002635
Ref: 2 9 0 compared to 2 8 7-Footnote-102002673
Ref: 2 9 0 compared to 2 8 7-Footnote-112002708
Ref: 2 9 0 compared to 2 8 7-Footnote-122002747
Ref: 2 9 0 compared to 2 8 7-Footnote-132002805
Ref: 2 9 0 compared to 2 8 7-Footnote-142002863
Ref: 2 9 0 compared to 2 8 7-Footnote-152002897
Ref: 2 9 0 compared to 2 8 7-Footnote-162002943
Ref: 2 9 0 compared to 2 8 7-Footnote-172003001
Ref: 2 9 0 compared to 2 8 7-Footnote-182003050
Ref: 2 9 0 compared to 2 8 7-Footnote-192003089
Ref: 2 9 0 compared to 2 8 7-Footnote-202003128
Ref: 2 9 0 compared to 2 8 7-Footnote-212003186
Ref: 2 9 0 compared to 2 8 7-Footnote-222003227
Ref: 2 9 0 compared to 2 8 7-Footnote-232003271
Ref: 2 9 0 compared to 2 8 7-Footnote-242003329
Ref: 2 9 0 compared to 2 8 7-Footnote-252003364
Ref: 2 9 0 compared to 2 8 7-Footnote-262003421
Ref: 2 9 0 compared to 2 8 7-Footnote-272003479
Ref: 2 9 0 compared to 2 8 7-Footnote-282003518
Ref: 2 9 0 compared to 2 8 7-Footnote-292003555
Ref: 2 9 0 compared to 2 8 7-Footnote-302003613
Ref: 2 9 0 compared to 2 8 7-Footnote-312003647
Ref: 2 9 0 compared to 2 8 7-Footnote-322003741
Ref: 2 9 0 compared to 2 8 7-Footnote-332003779
Node: pytest-2 8 72003837
Ref: announce/release-2 8 7 doc2003949
Ref: 6492003949
Ref: announce/release-2 8 7 pytest-2-8-72003949
Ref: 64a2003949
Ref: announce/release-2 8 7 traceback-style-docs2003949
Ref: 64b2003949
Node: 2 8 7 compared to 2 8 62004637
Ref: announce/release-2 8 7 compared-to-2-8-62004709
Ref: 64c2004709
Node: pytest-2 8 62004847
Ref: announce/release-2 8 6 doc2004959
Ref: 64d2004959
Ref: announce/release-2 8 6 pytest-2-8-62004959
Ref: 64e2004959
Node: 2 8 6 compared to 2 8 52005713
Ref: announce/release-2 8 6 compared-to-2-8-52005785
Ref: 64f2005785
Node: pytest-2 8 52007088
Ref: announce/release-2 8 5 doc2007200
Ref: 6502007200
Ref: announce/release-2 8 5 pytest-2-8-52007200
Ref: 6512007200
Node: 2 8 5 compared to 2 8 42007814
Ref: announce/release-2 8 5 compared-to-2-8-42007886
Ref: 6522007886
Node: pytest-2 8 42008521
Ref: announce/release-2 8 4 doc2008643
Ref: 6532008643
Ref: announce/release-2 8 4 pytest-2-8-42008643
Ref: 6542008643
Node: 2 8 4 compared to 2 8 32009309
Ref: announce/release-2 8 4 compared-to-2-8-32009381
Ref: 6552009381
Node: pytest-2 8 3 bug fixes2010244
Ref: announce/release-2 8 3 doc2010376
Ref: 6562010376
Ref: announce/release-2 8 3 pytest-2-8-3-bug-fixes2010376
Ref: 6572010376
Node: 2 8 3 compared to 2 8 22011143
Ref: announce/release-2 8 3 compared-to-2-8-22011225
Ref: 6582011225
Node: pytest-2 8 2 bug fixes2012343
Ref: announce/release-2 8 2 doc2012485
Ref: 6592012485
Ref: announce/release-2 8 2 pytest-2-8-2-bug-fixes2012485
Ref: 65a2012485
Node: 2 8 2 compared to 2 7 22013187
Ref: announce/release-2 8 2 compared-to-2-7-22013269
Ref: 65b2013269
Node: pytest-2 7 2 bug fixes2013982
Ref: announce/release-2 7 2 doc2014124
Ref: 65c2014124
Ref: announce/release-2 7 2 pytest-2-7-2-bug-fixes2014124
Ref: 65d2014124
Node: 2 7 2 compared to 2 7 12014854
Ref: announce/release-2 7 2 compared-to-2-7-12014936
Ref: 65e2014936
Node: pytest-2 7 1 bug fixes2016082
Ref: announce/release-2 7 1 doc2016248
Ref: 65f2016248
Ref: announce/release-2 7 1 pytest-2-7-1-bug-fixes2016248
Ref: 6602016248
Node: 2 7 1 compared to 2 7 02016901
Ref: announce/release-2 7 1 compared-to-2-7-02016983
Ref: 6612016983
Node: pytest-2 7 0 fixes features speed improvements2018447
Ref: announce/release-2 7 0 doc2018633
Ref: 6622018633
Ref: announce/release-2 7 0 pytest-2-7-0-fixes-features-speed-improvements2018633
Ref: 6632018633
Node: 2 7 0 compared to 2 6 42019388
Ref: announce/release-2 7 0 compared-to-2-6-42019494
Ref: 6642019494
Node: pytest-2 6 3 fixes and little improvements2022843
Ref: announce/release-2 6 3 doc2023020
Ref: 6652023020
Ref: announce/release-2 6 3 pytest-2-6-3-fixes-and-little-improvements2023020
Ref: 6662023020
Node: Changes 2 6 32023618
Ref: announce/release-2 6 3 changes-2-6-32023793
Ref: 6672023793
Node: pytest-2 6 2 few fixes and cx_freeze support2024932
Ref: announce/release-2 6 2 doc2025105
Ref: 6682025105
Ref: announce/release-2 6 2 pytest-2-6-2-few-fixes-and-cx-freeze-support2025105
Ref: 6692025105
Node: 2 6 22025833
Ref: announce/release-2 6 2 id12025919
Ref: 66a2025919
Node: pytest-2 6 1 fixes and new xfail feature2026807
Ref: announce/release-2 6 1 doc2026980
Ref: 66b2026980
Ref: announce/release-2 6 1 pytest-2-6-1-fixes-and-new-xfail-feature2026980
Ref: 66c2026980
Node: Changes 2 6 12027681
Ref: announce/release-2 6 1 changes-2-6-12027879
Ref: 66d2027879
Node: pytest-2 6 0 shorter tracebacks new warning system test runner compat2029265
Ref: announce/release-2 6 0 doc2029441
Ref: 66e2029441
Ref: announce/release-2 6 0 pytest-2-6-0-shorter-tracebacks-new-warning-system-test-runner-compat2029441
Ref: 66f2029441
Node: 2 6 02031063
Ref: announce/release-2 6 0 id12031174
Ref: 6702031174
Node: pytest-2 5 2 fixes2035735
Ref: announce/release-2 5 2 doc2035942
Ref: 6712035942
Ref: announce/release-2 5 2 pytest-2-5-2-fixes2035942
Ref: 6722035942
Node: 2 5 22036790
Ref: announce/release-2 5 2 id12036850
Ref: 6732036850
Node: pytest-2 5 1 fixes and new home page styling2037938
Ref: announce/release-2 5 1 doc2038120
Ref: 6742038120
Ref: announce/release-2 5 1 pytest-2-5-1-fixes-and-new-home-page-styling2038120
Ref: 6752038120
Node: 2 5 12039202
Ref: announce/release-2 5 1 id12039288
Ref: 6762039288
Node: pytest-2 5 0 now down to ZERO reported bugs!2039970
Ref: announce/release-2 5 0 doc2040186
Ref: 6772040186
Ref: announce/release-2 5 0 pytest-2-5-0-now-down-to-zero-reported-bugs2040186
Ref: 6782040186
Node: 2 5 02041736
Ref: announce/release-2 5 0 id12041822
Ref: 6792041822
Node: pytest-2 4 2 colorama on windows plugin/tmpdir fixes2047952
Ref: announce/release-2 4 2 doc2048179
Ref: 67a2048179
Ref: announce/release-2 4 2 pytest-2-4-2-colorama-on-windows-plugin-tmpdir-fixes2048179
Ref: 67b2048179
Node: pytest-2 4 1 fixing three regressions compared to 2 3 52049688
Ref: announce/release-2 4 1 doc2049924
Ref: 67c2049924
Ref: announce/release-2 4 1 pytest-2-4-1-fixing-three-regressions-compared-to-2-3-52049924
Ref: 67d2049924
Node: pytest-2 4 0 new fixture features/hooks and bug fixes2050845
Ref: announce/release-2 4 0 doc2051075
Ref: 67e2051075
Ref: announce/release-2 4 0 pytest-2-4-0-new-fixture-features-hooks-and-bug-fixes2051075
Ref: 67f2051075
Ref: pytest-2 4 0 new fixture features/hooks and bug fixes-Footnote-12053296
Ref: pytest-2 4 0 new fixture features/hooks and bug fixes-Footnote-22053350
Ref: pytest-2 4 0 new fixture features/hooks and bug fixes-Footnote-32053396
Node: Changes between 2 3 5 and 2 42053444
Ref: announce/release-2 4 0 changes-between-2-3-5-and-2-42053563
Ref: 6802053563
Node: pytest-2 3 5 bug fixes and little improvements2061092
Ref: announce/release-2 3 5 doc2061335
Ref: 6812061335
Ref: announce/release-2 3 5 pytest-2-3-5-bug-fixes-and-little-improvements2061335
Ref: 6822061335
Node: Changes between 2 3 4 and 2 3 52062535
Ref: announce/release-2 3 5 changes-between-2-3-4-and-2-3-52062649
Ref: 6832062649
Node: pytest-2 3 4 stabilization more flexible selection via “-k expr”2064973
Ref: announce/release-2 3 4 doc2065230
Ref: 6842065230
Ref: announce/release-2 3 4 pytest-2-3-4-stabilization-more-flexible-selection-via-k-expr2065230
Ref: 6852065230
Node: pytest-2 3 3 integration fixes py24 support */** shown in traceback2067034
Ref: announce/release-2 3 3 doc2067302
Ref: 6862067302
Ref: announce/release-2 3 3 pytest-2-3-3-integration-fixes-py24-support-shown-in-traceback2067302
Ref: 6872067302
Node: Changes between 2 3 2 and 2 3 32068305
Ref: announce/release-2 3 3 changes-between-2-3-2-and-2-3-32068440
Ref: 6882068440
Node: pytest-2 3 2 some fixes and more traceback-printing speed2069735
Ref: announce/release-2 3 2 doc2069985
Ref: 6892069985
Ref: announce/release-2 3 2 pytest-2-3-2-some-fixes-and-more-traceback-printing-speed2069985
Ref: 68a2069985
Node: Changes between 2 3 1 and 2 3 22070788
Ref: announce/release-2 3 2 changes-between-2-3-1-and-2-3-22070913
Ref: 68b2070913
Node: pytest-2 3 1 fix regression with factory functions2072088
Ref: announce/release-2 3 1 doc2072329
Ref: 68c2072329
Ref: announce/release-2 3 1 pytest-2-3-1-fix-regression-with-factory-functions2072329
Ref: 68d2072329
Node: Changes between 2 3 0 and 2 3 12073081
Ref: announce/release-2 3 1 changes-between-2-3-0-and-2-3-12073199
Ref: 68e2073199
Node: pytest-2 3 improved fixtures / better unittest integration2073702
Ref: announce/release-2 3 0 doc2073948
Ref: 68f2073948
Ref: announce/release-2 3 0 pytest-2-3-improved-fixtures-better-unittest-integration2073948
Ref: 6902073948
Node: Changes between 2 2 4 and 2 3 02076075
Ref: announce/release-2 3 0 changes-between-2-2-4-and-2-3-02076201
Ref: 6912076201
Node: pytest-2 2 4 bug fixes better junitxml/unittest/python3 compat2080037
Ref: announce/release-2 2 4 doc2080255
Ref: 6922080255
Ref: announce/release-2 2 4 pytest-2-2-4-bug-fixes-better-junitxml-unittest-python3-compat2080255
Ref: 6932080255
Node: Changes between 2 2 3 and 2 2 42080976
Ref: announce/release-2 2 4 changes-between-2-2-3-and-2-2-42081106
Ref: 6942081106
Node: pytest-2 2 2 bug fixes2081999
Ref: announce/release-2 2 2 doc2082199
Ref: 6952082199
Ref: announce/release-2 2 2 pytest-2-2-2-bug-fixes2082199
Ref: 6962082199
Node: Changes between 2 2 1 and 2 2 22082885
Ref: announce/release-2 2 2 changes-between-2-2-1-and-2-2-22082975
Ref: 6972082975
Node: pytest-2 2 1 bug fixes perfect teardowns2084040
Ref: announce/release-2 2 1 doc2084247
Ref: 6982084247
Ref: announce/release-2 2 1 pytest-2-2-1-bug-fixes-perfect-teardowns2084247
Ref: 6992084247
Node: Changes between 2 2 0 and 2 2 12084957
Ref: announce/release-2 2 1 changes-between-2-2-0-and-2-2-12085065
Ref: 69a2085065
Node: py test 2 2 0 test marking++ parametrization++ and duration profiling2086030
Ref: announce/release-2 2 0 doc2086249
Ref: 69b2086249
Ref: announce/release-2 2 0 py-test-2-2-0-test-marking-parametrization-and-duration-profiling2086249
Ref: 69c2086249
Node: notes on incompatibility2088473
Ref: announce/release-2 2 0 notes-on-incompatibility2088643
Ref: 69d2088643
Node: Changes between 2 1 3 and 2 2 02089420
Ref: announce/release-2 2 0 changes-between-2-1-3-and-2-2-02089590
Ref: 69e2089590
Node: py test 2 1 3 just some more fixes2091468
Ref: announce/release-2 1 3 doc2091691
Ref: 69f2091691
Ref: announce/release-2 1 3 py-test-2-1-3-just-some-more-fixes2091691
Ref: 6a02091691
Node: Changes between 2 1 2 and 2 1 32092562
Ref: announce/release-2 1 3 changes-between-2-1-2-and-2-1-32092664
Ref: 6a12092664
Node: py test 2 1 2 bug fixes and fixes for jython2093098
Ref: announce/release-2 1 2 doc2093310
Ref: 6a22093310
Ref: announce/release-2 1 2 py-test-2-1-2-bug-fixes-and-fixes-for-jython2093310
Ref: 6a32093310
Node: Changes between 2 1 1 and 2 1 22094167
Ref: announce/release-2 1 2 changes-between-2-1-1-and-2-1-22094279
Ref: 6a42094279
Node: py test 2 1 1 assertion fixes and improved junitxml output2094834
Ref: announce/release-2 1 1 doc2095060
Ref: 6a52095060
Ref: announce/release-2 1 1 py-test-2-1-1-assertion-fixes-and-improved-junitxml-output2095060
Ref: 6a62095060
Node: Changes between 2 1 0 and 2 1 12096058
Ref: announce/release-2 1 1 changes-between-2-1-0-and-2-1-12096184
Ref: 6a72096184
Node: py test 2 1 0 perfected assertions and bug fixes2096933
Ref: announce/release-2 1 0 doc2097152
Ref: 6a82097152
Ref: announce/release-2 1 0 py-test-2-1-0-perfected-assertions-and-bug-fixes2097152
Ref: 6a92097152
Node: Changes between 2 0 3 and 2 1 02098347
Ref: announce/release-2 1 0 changes-between-2-0-3-and-2-1-02098463
Ref: 6aa2098463
Node: py test 2 0 3 bug fixes and speed ups2099588
Ref: announce/release-2 0 3 doc2099814
Ref: 6ab2099814
Ref: announce/release-2 0 3 py-test-2-0-3-bug-fixes-and-speed-ups2099814
Ref: 6ac2099814
Node: Changes between 2 0 2 and 2 0 32100519
Ref: announce/release-2 0 3 changes-between-2-0-2-and-2-0-32100624
Ref: 6ad2100624
Node: py test 2 0 2 bug fixes improved xfail/skip expressions speed ups2101350
Ref: announce/release-2 0 2 doc2101551
Ref: 6ae2101551
Ref: announce/release-2 0 2 py-test-2-0-2-bug-fixes-improved-xfail-skip-expressions-speed-ups2101551
Ref: 6af2101551
Node: Changes between 2 0 1 and 2 0 22102383
Ref: announce/release-2 0 2 changes-between-2-0-1-and-2-0-22102516
Ref: 6b02102516
Node: py test 2 0 1 bug fixes2104730
Ref: announce/release-2 0 1 doc2104956
Ref: 6b12104956
Ref: announce/release-2 0 1 py-test-2-0-1-bug-fixes2104956
Ref: 6b22104956
Node: Changes between 2 0 0 and 2 0 12105709
Ref: announce/release-2 0 1 changes-between-2-0-0-and-2-0-12105800
Ref: 6b32105800
Node: py test 2 0 0 asserts++ unittest++ reporting++ config++ docs++2108388
Ref: announce/release-2 0 0 doc2108540
Ref: 6b42108540
Ref: announce/release-2 0 0 py-test-2-0-0-asserts-unittest-reporting-config-docs2108540
Ref: 6b52108540
Node: New Features2109763
Ref: announce/release-2 0 0 new-features2109888
Ref: 6b62109888
Node: Fixes2111212
Ref: announce/release-2 0 0 fixes2111361
Ref: 6b72111361
Node: Important Notes2112119
Ref: announce/release-2 0 0 important-notes2112277
Ref: 6b82112277
Node: Incompatible Removals2113246
Ref: announce/release-2 0 0 incompatible-removals2113390
Ref: 6b92113390
Node: Changelog2114854
Ref: changelog doc2114947
Ref: 6bb2114947
Ref: changelog changelog2114947
Ref: 6ba2114947
Ref: changelog id12114947
Ref: 6bc2114947
Ref: Changelog-Footnote-12123608
Node: pytest 7 1 3 2022-08-312123636
Ref: changelog pytest-7-1-3-2022-08-312123737
Ref: 6bd2123737
Node: Bug Fixes2123880
Ref: changelog bug-fixes2123980
Ref: 6be2123980
Ref: Bug Fixes-Footnote-12124949
Ref: Bug Fixes-Footnote-22125007
Ref: Bug Fixes-Footnote-32125065
Ref: Bug Fixes-Footnote-42125123
Ref: Bug Fixes-Footnote-52125173
Ref: Bug Fixes-Footnote-62125230
Ref: Bug Fixes-Footnote-72125287
Ref: Bug Fixes-Footnote-82125344
Ref: Bug Fixes-Footnote-92125401
Node: Improved Documentation2125458
Ref: changelog improved-documentation2125591
Ref: 6bf2125591
Ref: Improved Documentation-Footnote-12125803
Node: Trivial/Internal Changes2125860
Ref: changelog trivial-internal-changes2125975
Ref: 6c02125975
Ref: Trivial/Internal Changes-Footnote-12126167
Ref: Trivial/Internal Changes-Footnote-22126225
Node: pytest 7 1 2 2022-04-232126282
Ref: changelog pytest-7-1-2-2022-04-232126415
Ref: 6c12126415
Node: Bug Fixes<2>2126515
Ref: changelog id112126587
Ref: 6c22126587
Ref: Bug Fixes<2>-Footnote-12127155
Ref: Bug Fixes<2>-Footnote-22127212
Ref: Bug Fixes<2>-Footnote-32127269
Ref: Bug Fixes<2>-Footnote-42127326
Node: pytest 7 1 1 2022-03-172127383
Ref: changelog pytest-7-1-1-2022-03-172127516
Ref: 6c32127516
Node: Bug Fixes<3>2127616
Ref: changelog id162127688
Ref: 6c42127688
Ref: Bug Fixes<3>-Footnote-12127941
Node: pytest 7 1 0 2022-03-132127998
Ref: changelog pytest-7-1-0-2022-03-132128131
Ref: 6c52128131
Node: Breaking Changes2128269
Ref: changelog breaking-changes2128366
Ref: 6c62128366
Ref: Breaking Changes-Footnote-12129086
Ref: Breaking Changes-Footnote-22129143
Ref: Breaking Changes-Footnote-32129203
Ref: Breaking Changes-Footnote-42129260
Node: Improvements2129323
Ref: changelog improvements2129441
Ref: 6c72129441
Ref: Improvements-Footnote-12130913
Ref: Improvements-Footnote-22130970
Ref: Improvements-Footnote-32131027
Ref: Improvements-Footnote-42131084
Ref: Improvements-Footnote-52131141
Ref: Improvements-Footnote-62131215
Ref: Improvements-Footnote-72131294
Ref: Improvements-Footnote-82131351
Ref: Improvements-Footnote-92131408
Ref: Improvements-Footnote-102131476
Node: Bug Fixes<4>2131537
Ref: changelog id262131630
Ref: 6c82131630
Ref: Bug Fixes<4>-Footnote-12133232
Ref: Bug Fixes<4>-Footnote-22133289
Ref: Bug Fixes<4>-Footnote-32133363
Ref: Bug Fixes<4>-Footnote-42133420
Ref: Bug Fixes<4>-Footnote-52133475
Ref: Bug Fixes<4>-Footnote-62133532
Ref: Bug Fixes<4>-Footnote-72133589
Ref: Bug Fixes<4>-Footnote-82133660
Ref: Bug Fixes<4>-Footnote-92133717
Node: pytest 7 0 1 2022-02-112133774
Ref: changelog pytest-7-0-1-2022-02-112133907
Ref: 6c92133907
Node: Bug Fixes<5>2134007
Ref: changelog id332134079
Ref: 6ca2134079
Ref: Bug Fixes<5>-Footnote-12134913
Ref: Bug Fixes<5>-Footnote-22134970
Ref: Bug Fixes<5>-Footnote-32135027
Ref: Bug Fixes<5>-Footnote-42135084
Ref: Bug Fixes<5>-Footnote-52135141
Node: pytest 7 0 0 2022-02-032135198
Ref: changelog pytest-7-0-0-2022-02-032135334
Ref: 6cb2135334
Node: Deprecations2135655
Ref: changelog deprecations2135748
Ref: 6cc2135748
Ref: Deprecations-Footnote-12136294
Node: Bug Fixes<6>2136351
Ref: changelog id402136478
Ref: 6cd2136478
Ref: Bug Fixes<6>-Footnote-12136818
Ref: Bug Fixes<6>-Footnote-22136875
Node: Improved Documentation<2>2136932
Ref: changelog id432137074
Ref: 6ce2137074
Ref: Improved Documentation<2>-Footnote-12137493
Ref: Improved Documentation<2>-Footnote-22137550
Node: Trivial/Internal Changes<2>2137607
Ref: changelog id462137728
Ref: 6cf2137728
Ref: Trivial/Internal Changes<2>-Footnote-12137890
Node: pytest 7 0 0rc1 2021-12-062137947
Ref: changelog pytest-7-0-0rc1-2021-12-062138083
Ref: 6d02138083
Node: Breaking Changes<2>2138419
Ref: changelog id482138525
Ref: 6d12138525
Ref: Breaking Changes<2>-Footnote-12141527
Ref: Breaking Changes<2>-Footnote-22141584
Ref: Breaking Changes<2>-Footnote-32141641
Ref: Breaking Changes<2>-Footnote-42141698
Ref: Breaking Changes<2>-Footnote-52141747
Ref: Breaking Changes<2>-Footnote-62141802
Ref: Breaking Changes<2>-Footnote-72141861
Ref: Breaking Changes<2>-Footnote-82141918
Ref: Breaking Changes<2>-Footnote-92141975
Ref: Breaking Changes<2>-Footnote-102142032
Ref: Breaking Changes<2>-Footnote-112142090
Node: Deprecations<2>2142148
Ref: changelog id552142271
Ref: 6d22142271
Ref: Deprecations<2>-Footnote-12146437
Ref: Deprecations<2>-Footnote-22146494
Ref: Deprecations<2>-Footnote-32146531
Ref: Deprecations<2>-Footnote-42146588
Ref: Deprecations<2>-Footnote-52146645
Ref: Deprecations<2>-Footnote-62146702
Ref: Deprecations<2>-Footnote-72146776
Ref: Deprecations<2>-Footnote-82146850
Ref: Deprecations<2>-Footnote-92146924
Ref: Deprecations<2>-Footnote-102147008
Ref: Deprecations<2>-Footnote-112147079
Ref: Deprecations<2>-Footnote-122147137
Ref: Deprecations<2>-Footnote-132147195
Ref: Deprecations<2>-Footnote-142147253
Ref: Deprecations<2>-Footnote-152147311
Ref: Deprecations<2>-Footnote-162147369
Node: Features2147427
Ref: changelog features2147546
Ref: 6d32147546
Ref: Features-Footnote-12155208
Ref: Features-Footnote-22155265
Ref: Features-Footnote-32155322
Ref: Features-Footnote-42155379
Ref: Features-Footnote-52155447
Ref: Features-Footnote-62155515
Ref: Features-Footnote-72155572
Ref: Features-Footnote-82155629
Ref: Features-Footnote-92155692
Ref: Features-Footnote-102155760
Ref: Features-Footnote-112155840
Ref: Features-Footnote-122155898
Ref: Features-Footnote-132155936
Ref: Features-Footnote-142155994
Ref: Features-Footnote-152156052
Ref: Features-Footnote-162156090
Ref: Features-Footnote-172156148
Ref: Features-Footnote-182156206
Ref: Features-Footnote-192156278
Ref: Features-Footnote-202156336
Ref: Features-Footnote-212156394
Ref: Features-Footnote-222156452
Ref: Features-Footnote-232156510
Ref: Features-Footnote-242156568
Ref: Features-Footnote-252156626
Ref: Features-Footnote-262156687
Ref: Features-Footnote-272156745
Ref: Features-Footnote-282156803
Ref: Features-Footnote-292156861
Node: Improvements<2>2156922
Ref: changelog id822157038
Ref: 6d42157038
Ref: Improvements<2>-Footnote-12160251
Ref: Improvements<2>-Footnote-22160308
Ref: Improvements<2>-Footnote-32160365
Ref: Improvements<2>-Footnote-42160422
Ref: Improvements<2>-Footnote-52160479
Ref: Improvements<2>-Footnote-62160536
Ref: Improvements<2>-Footnote-72160622
Ref: Improvements<2>-Footnote-82160679
Ref: Improvements<2>-Footnote-92160736
Ref: Improvements<2>-Footnote-102160793
Ref: Improvements<2>-Footnote-112160851
Node: Bug Fixes<7>2160909
Ref: changelog id932161042
Ref: 6d52161042
Ref: Bug Fixes<7>-Footnote-12165006
Ref: Bug Fixes<7>-Footnote-22165063
Ref: Bug Fixes<7>-Footnote-32165120
Ref: Bug Fixes<7>-Footnote-42165177
Ref: Bug Fixes<7>-Footnote-52165234
Ref: Bug Fixes<7>-Footnote-62165315
Ref: Bug Fixes<7>-Footnote-72165372
Ref: Bug Fixes<7>-Footnote-82165429
Ref: Bug Fixes<7>-Footnote-92165486
Ref: Bug Fixes<7>-Footnote-102165543
Ref: Bug Fixes<7>-Footnote-112165601
Ref: Bug Fixes<7>-Footnote-122165659
Ref: Bug Fixes<7>-Footnote-132165717
Ref: Bug Fixes<7>-Footnote-142165775
Ref: Bug Fixes<7>-Footnote-152165833
Ref: Bug Fixes<7>-Footnote-162165891
Ref: Bug Fixes<7>-Footnote-172165949
Ref: Bug Fixes<7>-Footnote-182166007
Ref: Bug Fixes<7>-Footnote-192166065
Ref: Bug Fixes<7>-Footnote-202166123
Ref: Bug Fixes<7>-Footnote-212166146
Ref: Bug Fixes<7>-Footnote-222166204
Ref: Bug Fixes<7>-Footnote-232166262
Node: Improved Documentation<3>2166320
Ref: changelog id1152166465
Ref: 6d62166465
Ref: Improved Documentation<3>-Footnote-12167502
Ref: Improved Documentation<3>-Footnote-22167559
Ref: Improved Documentation<3>-Footnote-32167616
Ref: Improved Documentation<3>-Footnote-42167673
Ref: Improved Documentation<3>-Footnote-52167742
Ref: Improved Documentation<3>-Footnote-62167799
Ref: Improved Documentation<3>-Footnote-72167856
Ref: Improved Documentation<3>-Footnote-82167913
Node: Trivial/Internal Changes<3>2167970
Ref: changelog id1232168094
Ref: 6d72168094
Ref: Trivial/Internal Changes<3>-Footnote-12169805
Ref: Trivial/Internal Changes<3>-Footnote-22169862
Ref: Trivial/Internal Changes<3>-Footnote-32169919
Ref: Trivial/Internal Changes<3>-Footnote-42169976
Ref: Trivial/Internal Changes<3>-Footnote-52170033
Ref: Trivial/Internal Changes<3>-Footnote-62170090
Ref: Trivial/Internal Changes<3>-Footnote-72170147
Ref: Trivial/Internal Changes<3>-Footnote-82170204
Ref: Trivial/Internal Changes<3>-Footnote-92170261
Ref: Trivial/Internal Changes<3>-Footnote-102170318
Node: pytest 6 2 5 2021-08-292170376
Ref: changelog pytest-6-2-5-2021-08-292170512
Ref: 6d82170512
Node: Trivial/Internal Changes<4>2170642
Ref: changelog id1342170729
Ref: 6d92170729
Ref: Trivial/Internal Changes<4>-Footnote-12170957
Ref: Trivial/Internal Changes<4>-Footnote-22171014
Node: pytest 6 2 4 2021-05-042171071
Ref: changelog pytest-6-2-4-2021-05-042171204
Ref: 6da2171204
Node: Bug Fixes<8>2171304
Ref: changelog id1352171376
Ref: 6db2171376
Ref: Bug Fixes<8>-Footnote-12171511
Node: pytest 6 2 3 2021-04-032171568
Ref: changelog pytest-6-2-3-2021-04-032171701
Ref: 6dc2171701
Node: Bug Fixes<9>2171803
Ref: changelog id1362171875
Ref: 6dd2171875
Ref: Bug Fixes<9>-Footnote-12172620
Node: pytest 6 2 2 2021-01-252172677
Ref: changelog pytest-6-2-2-2021-01-252172810
Ref: 6de2172810
Node: Bug Fixes<10>2172913
Ref: changelog id1372172986
Ref: 6df2172986
Ref: Bug Fixes<10>-Footnote-12173358
Ref: Bug Fixes<10>-Footnote-22173415
Node: pytest 6 2 1 2020-12-152173472
Ref: changelog pytest-6-2-1-2020-12-152173605
Ref: 6e02173605
Node: Bug Fixes<11>2173708
Ref: changelog id1382173781
Ref: 6e12173781
Ref: Bug Fixes<11>-Footnote-12174742
Ref: Bug Fixes<11>-Footnote-22174799
Node: pytest 6 2 0 2020-12-122174856
Ref: changelog pytest-6-2-0-2020-12-122174989
Ref: 6e22174989
Node: Breaking Changes<3>2175334
Ref: changelog id1392175437
Ref: 6e32175437
Ref: Breaking Changes<3>-Footnote-12175583
Node: Deprecations<3>2175640
Ref: changelog id1402175763
Ref: 6e42175763
Ref: Deprecations<3>-Footnote-12177438
Ref: Deprecations<3>-Footnote-22177495
Ref: Deprecations<3>-Footnote-32177552
Node: Features<2>2177609
Ref: changelog id1412177728
Ref: 6e52177728
Ref: Features<2>-Footnote-12179623
Ref: Features<2>-Footnote-22179680
Ref: Features<2>-Footnote-32179737
Ref: Features<2>-Footnote-42179805
Ref: Features<2>-Footnote-52179873
Ref: Features<2>-Footnote-62179930
Node: Improvements<3>2179987
Ref: changelog id1422180104
Ref: 6e62180104
Ref: Improvements<3>-Footnote-12183130
Ref: Improvements<3>-Footnote-22183187
Ref: Improvements<3>-Footnote-32183244
Ref: Improvements<3>-Footnote-42183301
Ref: Improvements<3>-Footnote-52183358
Ref: Improvements<3>-Footnote-62183441
Ref: Improvements<3>-Footnote-72183498
Ref: Improvements<3>-Footnote-82183564
Ref: Improvements<3>-Footnote-92183621
Ref: Improvements<3>-Footnote-102183678
Ref: Improvements<3>-Footnote-112183747
Ref: Improvements<3>-Footnote-122183805
Ref: Improvements<3>-Footnote-132183863
Ref: Improvements<3>-Footnote-142183921
Ref: Improvements<3>-Footnote-152184013
Node: Bug Fixes<12>2184086
Ref: changelog id1432184217
Ref: 6e72184217
Ref: Bug Fixes<12>-Footnote-12185334
Ref: Bug Fixes<12>-Footnote-22185391
Ref: Bug Fixes<12>-Footnote-32185448
Ref: Bug Fixes<12>-Footnote-42185505
Ref: Bug Fixes<12>-Footnote-52185562
Ref: Bug Fixes<12>-Footnote-62185634
Ref: Bug Fixes<12>-Footnote-72185691
Ref: Bug Fixes<12>-Footnote-82185748
Node: Improved Documentation<4>2185805
Ref: changelog id1442185948
Ref: 6e82185948
Ref: Improved Documentation<4>-Footnote-12186490
Ref: Improved Documentation<4>-Footnote-22186547
Ref: Improved Documentation<4>-Footnote-32186604
Ref: Improved Documentation<4>-Footnote-42186661
Node: Trivial/Internal Changes<5>2186718
Ref: changelog id1452186839
Ref: 6e92186839
Ref: Trivial/Internal Changes<5>-Footnote-12187267
Ref: Trivial/Internal Changes<5>-Footnote-22187324
Ref: Trivial/Internal Changes<5>-Footnote-32187381
Node: pytest 6 1 2 2020-10-282187423
Ref: changelog pytest-6-1-2-2020-10-282187556
Ref: 6ea2187556
Node: Bug Fixes<13>2187712
Ref: changelog id1462187819
Ref: 6eb2187819
Ref: Bug Fixes<13>-Footnote-12188306
Ref: Bug Fixes<13>-Footnote-22188363
Node: Improved Documentation<5>2188420
Ref: changelog id1472188527
Ref: 6ec2188527
Ref: Improved Documentation<5>-Footnote-12188723
Node: pytest 6 1 1 2020-10-032188780
Ref: changelog pytest-6-1-1-2020-10-032188913
Ref: 6ed2188913
Node: Bug Fixes<14>2189016
Ref: changelog id1482189089
Ref: 6ee2189089
Ref: Bug Fixes<14>-Footnote-12189498
Ref: Bug Fixes<14>-Footnote-22189555
Node: pytest 6 1 0 2020-09-262189612
Ref: changelog pytest-6-1-0-2020-09-262189745
Ref: 6ef2189745
Node: Breaking Changes<4>2190090
Ref: changelog id1492190193
Ref: 6f02190193
Ref: Breaking Changes<4>-Footnote-12191493
Ref: Breaking Changes<4>-Footnote-22191550
Node: Deprecations<4>2191605
Ref: changelog id1502191728
Ref: 6f12191728
Ref: Deprecations<4>-Footnote-12193023
Ref: Deprecations<4>-Footnote-22193080
Ref: Deprecations<4>-Footnote-32193137
Ref: Deprecations<4>-Footnote-42193194
Ref: Deprecations<4>-Footnote-52193251
Node: Features<3>2193308
Ref: changelog id1512193427
Ref: 6f22193427
Ref: Features<3>-Footnote-12193729
Node: Improvements<4>2193786
Ref: changelog id1522193903
Ref: 6f32193903
Ref: Improvements<4>-Footnote-12195146
Ref: Improvements<4>-Footnote-22195203
Ref: Improvements<4>-Footnote-32195260
Ref: Improvements<4>-Footnote-42195317
Ref: Improvements<4>-Footnote-52195374
Ref: Improvements<4>-Footnote-62195431
Ref: Improvements<4>-Footnote-72195488
Ref: Improvements<4>-Footnote-82195556
Ref: Improvements<4>-Footnote-92195613
Node: Bug Fixes<15>2195680
Ref: changelog id1532195811
Ref: 6f42195811
Ref: Bug Fixes<15>-Footnote-12197196
Ref: Bug Fixes<15>-Footnote-22197253
Ref: Bug Fixes<15>-Footnote-32197310
Ref: Bug Fixes<15>-Footnote-42197367
Ref: Bug Fixes<15>-Footnote-52197424
Ref: Bug Fixes<15>-Footnote-62197481
Node: Improved Documentation<6>2197538
Ref: changelog id1542197681
Ref: 6f52197681
Ref: Improved Documentation<6>-Footnote-12197853
Node: Trivial/Internal Changes<6>2197910
Ref: changelog id1552198031
Ref: 6f62198031
Ref: Trivial/Internal Changes<6>-Footnote-12199169
Ref: Trivial/Internal Changes<6>-Footnote-22199226
Ref: Trivial/Internal Changes<6>-Footnote-32199283
Ref: Trivial/Internal Changes<6>-Footnote-42199340
Node: pytest 6 0 2 2020-09-042199397
Ref: changelog pytest-6-0-2-2020-09-042199530
Ref: 6f72199530
Node: Bug Fixes<16>2199633
Ref: changelog id1562199706
Ref: 6f82199706
Ref: Bug Fixes<16>-Footnote-12200353
Ref: Bug Fixes<16>-Footnote-22200410
Ref: Bug Fixes<16>-Footnote-32200467
Ref: Bug Fixes<16>-Footnote-42200524
Node: pytest 6 0 1 2020-07-302200581
Ref: changelog pytest-6-0-1-2020-07-302200714
Ref: 6f92200714
Node: Bug Fixes<17>2200817
Ref: changelog id1572200890
Ref: 6fa2200890
Ref: Bug Fixes<17>-Footnote-12201704
Ref: Bug Fixes<17>-Footnote-22201761
Ref: Bug Fixes<17>-Footnote-32201818
Ref: Bug Fixes<17>-Footnote-42201875
Node: pytest 6 0 0 2020-07-282201932
Ref: changelog pytest-6-0-0-2020-07-282202068
Ref: 6fb2202068
Node: Breaking Changes<5>2202474
Ref: changelog id1582202573
Ref: 6fc2202573
Ref: Breaking Changes<5>-Footnote-12203750
Ref: Breaking Changes<5>-Footnote-22203807
Ref: Breaking Changes<5>-Footnote-32203864
Node: Features<4>2203921
Ref: changelog id1592204044
Ref: 6fd2204044
Ref: Features<4>-Footnote-12204258
Node: Improvements<5>2204315
Ref: changelog id1602204432
Ref: 6fe2204432
Ref: Improvements<5>-Footnote-12204859
Ref: Improvements<5>-Footnote-22204916
Node: Bug Fixes<18>2204973
Ref: changelog id1612205104
Ref: 6ff2205104
Ref: Bug Fixes<18>-Footnote-12205677
Ref: Bug Fixes<18>-Footnote-22205734
Ref: Bug Fixes<18>-Footnote-32205791
Ref: Bug Fixes<18>-Footnote-42205848
Node: Improved Documentation<7>2205905
Ref: changelog id1622206048
Ref: 7002206048
Ref: Improved Documentation<7>-Footnote-12206335
Ref: Improved Documentation<7>-Footnote-22206392
Node: Trivial/Internal Changes<7>2206449
Ref: changelog id1632206570
Ref: 7012206570
Ref: Trivial/Internal Changes<7>-Footnote-12206766
Node: pytest 6 0 0rc1 2020-07-082206823
Ref: changelog pytest-6-0-0rc1-2020-07-082206959
Ref: 7022206959
Node: Breaking Changes<6>2207310
Ref: changelog id1642207416
Ref: 7032207416
Ref: Breaking Changes<6>-Footnote-12212735
Ref: Breaking Changes<6>-Footnote-22212792
Ref: Breaking Changes<6>-Footnote-32212849
Ref: Breaking Changes<6>-Footnote-42212904
Ref: Breaking Changes<6>-Footnote-52212961
Ref: Breaking Changes<6>-Footnote-62213018
Ref: Breaking Changes<6>-Footnote-72213075
Ref: Breaking Changes<6>-Footnote-82213132
Ref: Breaking Changes<6>-Footnote-92213194
Ref: Breaking Changes<6>-Footnote-102213251
Ref: Breaking Changes<6>-Footnote-112213309
Ref: Breaking Changes<6>-Footnote-122213367
Ref: Breaking Changes<6>-Footnote-132213425
Node: Deprecations<5>2213483
Ref: changelog id1652213609
Ref: 7042213609
Ref: Deprecations<5>-Footnote-12214071
Ref: Deprecations<5>-Footnote-22214128
Node: Features<5>2214185
Ref: changelog id1662214307
Ref: 7052214307
Ref: Features<5>-Footnote-12217803
Ref: Features<5>-Footnote-22217860
Ref: Features<5>-Footnote-32217917
Ref: Features<5>-Footnote-42217974
Ref: Features<5>-Footnote-52218031
Ref: Features<5>-Footnote-62218088
Ref: Features<5>-Footnote-72218145
Ref: Features<5>-Footnote-82218202
Ref: Features<5>-Footnote-92218276
Ref: Features<5>-Footnote-102218333
Node: Improvements<6>2218391
Ref: changelog id1672218511
Ref: 7062218511
Ref: Improvements<6>-Footnote-12222300
Ref: Improvements<6>-Footnote-22222357
Ref: Improvements<6>-Footnote-32222414
Ref: Improvements<6>-Footnote-42222471
Ref: Improvements<6>-Footnote-52222528
Ref: Improvements<6>-Footnote-62222585
Ref: Improvements<6>-Footnote-72222642
Ref: Improvements<6>-Footnote-82222699
Ref: Improvements<6>-Footnote-92222756
Ref: Improvements<6>-Footnote-102222813
Ref: Improvements<6>-Footnote-112222871
Ref: Improvements<6>-Footnote-122222929
Ref: Improvements<6>-Footnote-132222987
Ref: Improvements<6>-Footnote-142223045
Ref: Improvements<6>-Footnote-152223103
Node: Bug Fixes<19>2223161
Ref: changelog id1682223295
Ref: 7072223295
Ref: Bug Fixes<19>-Footnote-12227717
Ref: Bug Fixes<19>-Footnote-22227774
Ref: Bug Fixes<19>-Footnote-32227831
Ref: Bug Fixes<19>-Footnote-42227893
Ref: Bug Fixes<19>-Footnote-52227950
Ref: Bug Fixes<19>-Footnote-62228007
Ref: Bug Fixes<19>-Footnote-72228064
Ref: Bug Fixes<19>-Footnote-82228121
Ref: Bug Fixes<19>-Footnote-92228178
Ref: Bug Fixes<19>-Footnote-102228235
Ref: Bug Fixes<19>-Footnote-112228293
Ref: Bug Fixes<19>-Footnote-122228349
Ref: Bug Fixes<19>-Footnote-132228407
Ref: Bug Fixes<19>-Footnote-142228465
Ref: Bug Fixes<19>-Footnote-152228523
Ref: Bug Fixes<19>-Footnote-162228581
Ref: Bug Fixes<19>-Footnote-172228668
Ref: Bug Fixes<19>-Footnote-182228726
Ref: Bug Fixes<19>-Footnote-192228784
Ref: Bug Fixes<19>-Footnote-202228842
Ref: Bug Fixes<19>-Footnote-212228900
Ref: Bug Fixes<19>-Footnote-222228958
Ref: Bug Fixes<19>-Footnote-232229016
Ref: Bug Fixes<19>-Footnote-242229074
Ref: Bug Fixes<19>-Footnote-252229132
Ref: Bug Fixes<19>-Footnote-262229190
Ref: Bug Fixes<19>-Footnote-272229248
Ref: Bug Fixes<19>-Footnote-282229306
Ref: Bug Fixes<19>-Footnote-292229364
Ref: Bug Fixes<19>-Footnote-302229422
Ref: Bug Fixes<19>-Footnote-312229480
Ref: Bug Fixes<19>-Footnote-322229565
Ref: Bug Fixes<19>-Footnote-332229623
Ref: Bug Fixes<19>-Footnote-342229681
Node: Improved Documentation<8>2229739
Ref: changelog id1692229885
Ref: 7082229885
Ref: Improved Documentation<8>-Footnote-12230329
Ref: Improved Documentation<8>-Footnote-22230386
Ref: Improved Documentation<8>-Footnote-32230443
Node: Trivial/Internal Changes<8>2230500
Ref: changelog id1702230624
Ref: 7092230624
Ref: Trivial/Internal Changes<8>-Footnote-12231378
Ref: Trivial/Internal Changes<8>-Footnote-22231435
Ref: Trivial/Internal Changes<8>-Footnote-32231492
Ref: Trivial/Internal Changes<8>-Footnote-42231549
Ref: Trivial/Internal Changes<8>-Footnote-52231593
Ref: Trivial/Internal Changes<8>-Footnote-62231650
Ref: Trivial/Internal Changes<8>-Footnote-72231707
Node: pytest 5 4 3 2020-06-022231764
Ref: changelog pytest-5-4-3-2020-06-022231900
Ref: 70a2231900
Node: Bug Fixes<20>2232003
Ref: changelog id1712232076
Ref: 70b2232076
Ref: Bug Fixes<20>-Footnote-12232807
Ref: Bug Fixes<20>-Footnote-22232864
Ref: Bug Fixes<20>-Footnote-32232921
Ref: Bug Fixes<20>-Footnote-42232978
Ref: Bug Fixes<20>-Footnote-52233035
Node: pytest 5 4 2 2020-05-082233092
Ref: changelog pytest-5-4-2-2020-05-082233225
Ref: 70c2233225
Node: Bug Fixes<21>2233328
Ref: changelog id1722233401
Ref: 70d2233401
Ref: Bug Fixes<21>-Footnote-12234554
Ref: Bug Fixes<21>-Footnote-22234611
Ref: Bug Fixes<21>-Footnote-32234668
Ref: Bug Fixes<21>-Footnote-42234725
Ref: Bug Fixes<21>-Footnote-52234782
Ref: Bug Fixes<21>-Footnote-62234839
Ref: Bug Fixes<21>-Footnote-72234896
Ref: Bug Fixes<21>-Footnote-82234953
Ref: Bug Fixes<21>-Footnote-92235010
Ref: Bug Fixes<21>-Footnote-102235067
Node: pytest 5 4 1 2020-03-132235125
Ref: changelog pytest-5-4-1-2020-03-132235258
Ref: 70e2235258
Node: Bug Fixes<22>2235361
Ref: changelog id1732235434
Ref: 70f2235434
Ref: Bug Fixes<22>-Footnote-12236037
Ref: Bug Fixes<22>-Footnote-22236094
Ref: Bug Fixes<22>-Footnote-32236149
Node: pytest 5 4 0 2020-03-122236206
Ref: changelog pytest-5-4-0-2020-03-122236339
Ref: 7102236339
Node: Breaking Changes<7>2236684
Ref: changelog id1742236787
Ref: 7112236787
Ref: Breaking Changes<7>-Footnote-12238095
Ref: Breaking Changes<7>-Footnote-22238152
Ref: Breaking Changes<7>-Footnote-32238209
Ref: Breaking Changes<7>-Footnote-42238266
Ref: Breaking Changes<7>-Footnote-52238323
Node: Deprecations<6>2238380
Ref: changelog id1752238503
Ref: 7122238503
Ref: Deprecations<6>-Footnote-12240152
Ref: Deprecations<6>-Footnote-22240209
Ref: Deprecations<6>-Footnote-32240265
Ref: Deprecations<6>-Footnote-42240322
Node: Features<6>2240379
Ref: changelog id1762240498
Ref: 7132240498
Ref: Features<6>-Footnote-12241504
Ref: Features<6>-Footnote-22241561
Ref: Features<6>-Footnote-32241618
Ref: Features<6>-Footnote-42241675
Ref: Features<6>-Footnote-52241732
Node: Improvements<7>2241789
Ref: changelog id1772241906
Ref: 7142241906
Ref: Improvements<7>-Footnote-12243602
Ref: Improvements<7>-Footnote-22243659
Ref: Improvements<7>-Footnote-32243715
Ref: Improvements<7>-Footnote-42243772
Ref: Improvements<7>-Footnote-52243829
Ref: Improvements<7>-Footnote-62243886
Ref: Improvements<7>-Footnote-72243943
Ref: Improvements<7>-Footnote-82244000
Ref: Improvements<7>-Footnote-92244057
Ref: Improvements<7>-Footnote-102244114
Ref: Improvements<7>-Footnote-112244172
Ref: Improvements<7>-Footnote-122244230
Node: Bug Fixes<23>2244287
Ref: changelog id1782244418
Ref: 7152244418
Ref: Bug Fixes<23>-Footnote-12247505
Ref: Bug Fixes<23>-Footnote-22247561
Ref: Bug Fixes<23>-Footnote-32247618
Ref: Bug Fixes<23>-Footnote-42247675
Ref: Bug Fixes<23>-Footnote-52247732
Ref: Bug Fixes<23>-Footnote-62247789
Ref: Bug Fixes<23>-Footnote-72247846
Ref: Bug Fixes<23>-Footnote-82247903
Ref: Bug Fixes<23>-Footnote-92247960
Ref: Bug Fixes<23>-Footnote-102248017
Ref: Bug Fixes<23>-Footnote-112248075
Ref: Bug Fixes<23>-Footnote-122248138
Ref: Bug Fixes<23>-Footnote-132248196
Ref: Bug Fixes<23>-Footnote-142248254
Ref: Bug Fixes<23>-Footnote-152248312
Ref: Bug Fixes<23>-Footnote-162248370
Ref: Bug Fixes<23>-Footnote-172248428
Ref: Bug Fixes<23>-Footnote-182248486
Ref: Bug Fixes<23>-Footnote-192248544
Ref: Bug Fixes<23>-Footnote-202248602
Node: Improved Documentation<9>2248660
Ref: changelog id1792248803
Ref: 7162248803
Ref: Improved Documentation<9>-Footnote-12249048
Ref: Improved Documentation<9>-Footnote-22249105
Node: Trivial/Internal Changes<9>2249162
Ref: changelog id1802249283
Ref: 7172249283
Ref: Trivial/Internal Changes<9>-Footnote-12249476
Node: pytest 5 3 5 2020-01-292249533
Ref: changelog pytest-5-3-5-2020-01-292249666
Ref: 7182249666
Node: Bug Fixes<24>2249769
Ref: changelog id1812249842
Ref: 7192249842
Ref: Bug Fixes<24>-Footnote-12250024
Node: pytest 5 3 4 2020-01-202250081
Ref: changelog pytest-5-3-4-2020-01-202250214
Ref: 71a2250214
Node: Bug Fixes<25>2250317
Ref: changelog id1822250390
Ref: 71b2250390
Ref: Bug Fixes<25>-Footnote-12250707
Ref: Bug Fixes<25>-Footnote-22250764
Node: pytest 5 3 3 2020-01-162250821
Ref: changelog pytest-5-3-3-2020-01-162250954
Ref: 71c2250954
Node: Bug Fixes<26>2251115
Ref: changelog id1832251225
Ref: 71d2251225
Ref: Bug Fixes<26>-Footnote-12251929
Ref: Bug Fixes<26>-Footnote-22251986
Ref: Bug Fixes<26>-Footnote-32252043
Ref: Bug Fixes<26>-Footnote-42252100
Node: Trivial/Internal Changes<10>2252157
Ref: changelog id1842252267
Ref: 71e2252267
Ref: Trivial/Internal Changes<10>-Footnote-12252444
Node: pytest 5 3 2 2019-12-132252501
Ref: changelog pytest-5-3-2-2019-12-132252634
Ref: 71f2252634
Node: Improvements<8>2252770
Ref: changelog id1852252867
Ref: 7202252867
Ref: Improvements<8>-Footnote-12253165
Node: Bug Fixes<27>2253222
Ref: changelog id1862253319
Ref: 7212253319
Ref: Bug Fixes<27>-Footnote-12253824
Ref: Bug Fixes<27>-Footnote-22253881
Ref: Bug Fixes<27>-Footnote-32253938
Node: pytest 5 3 1 2019-11-252253995
Ref: changelog pytest-5-3-1-2019-11-252254128
Ref: 7222254128
Node: Improvements<9>2254264
Ref: changelog id1872254361
Ref: 7232254361
Ref: Improvements<9>-Footnote-12254690
Ref: Improvements<9>-Footnote-22254747
Node: Bug Fixes<28>2254804
Ref: changelog id1882254901
Ref: 7242254901
Ref: Bug Fixes<28>-Footnote-12255543
Ref: Bug Fixes<28>-Footnote-22255600
Ref: Bug Fixes<28>-Footnote-32255657
Ref: Bug Fixes<28>-Footnote-42255723
Ref: Bug Fixes<28>-Footnote-52255766
Ref: Bug Fixes<28>-Footnote-62255823
Ref: Bug Fixes<28>-Footnote-72255880
Ref: Bug Fixes<28>-Footnote-82255950
Ref: Bug Fixes<28>-Footnote-92256015
Node: pytest 5 3 0 2019-11-192256081
Ref: changelog pytest-5-3-0-2019-11-192256214
Ref: 7252256214
Node: Deprecations<7>2256467
Ref: changelog id1892256562
Ref: 7262256562
Ref: Deprecations<7>-Footnote-12257155
Node: Features<7>2257212
Ref: changelog id1902257332
Ref: 7272257332
Ref: Features<7>-Footnote-12260309
Ref: Features<7>-Footnote-22260366
Ref: Features<7>-Footnote-32260421
Ref: Features<7>-Footnote-42260478
Ref: Features<7>-Footnote-52260548
Ref: Features<7>-Footnote-62260605
Ref: Features<7>-Footnote-72260672
Ref: Features<7>-Footnote-82260729
Ref: Features<7>-Footnote-92260788
Ref: Features<7>-Footnote-102260845
Node: Improvements<10>2260903
Ref: changelog id1912261021
Ref: 7282261021
Ref: Improvements<10>-Footnote-12264307
Ref: Improvements<10>-Footnote-22264364
Ref: Improvements<10>-Footnote-32264421
Ref: Improvements<10>-Footnote-42264478
Ref: Improvements<10>-Footnote-52264535
Ref: Improvements<10>-Footnote-62264592
Ref: Improvements<10>-Footnote-72264649
Ref: Improvements<10>-Footnote-82264706
Ref: Improvements<10>-Footnote-92264763
Ref: Improvements<10>-Footnote-102264820
Ref: Improvements<10>-Footnote-112264878
Ref: Improvements<10>-Footnote-122264936
Ref: Improvements<10>-Footnote-132264994
Ref: Improvements<10>-Footnote-142265052
Ref: Improvements<10>-Footnote-152265110
Ref: Improvements<10>-Footnote-162265168
Ref: Improvements<10>-Footnote-172265226
Ref: Improvements<10>-Footnote-182265284
Node: Bug Fixes<29>2265342
Ref: changelog id1922265477
Ref: 7292265477
Ref: Bug Fixes<29>-Footnote-12266338
Ref: Bug Fixes<29>-Footnote-22266395
Ref: Bug Fixes<29>-Footnote-32266452
Ref: Bug Fixes<29>-Footnote-42266509
Ref: Bug Fixes<29>-Footnote-52266566
Ref: Bug Fixes<29>-Footnote-62266623
Node: Trivial/Internal Changes<11>2266680
Ref: changelog id1932266790
Ref: 72a2266790
Ref: Trivial/Internal Changes<11>-Footnote-12267062
Node: pytest 5 2 4 2019-11-152267119
Ref: changelog pytest-5-2-4-2019-11-152267252
Ref: 72b2267252
Node: Bug Fixes<30>2267355
Ref: changelog id1942267428
Ref: 72c2267428
Ref: Bug Fixes<30>-Footnote-12267740
Ref: Bug Fixes<30>-Footnote-22267797
Node: pytest 5 2 3 2019-11-142267854
Ref: changelog pytest-5-2-3-2019-11-142267987
Ref: 72d2267987
Node: Bug Fixes<31>2268090
Ref: changelog id1952268163
Ref: 72e2268163
Ref: Bug Fixes<31>-Footnote-12268599
Ref: Bug Fixes<31>-Footnote-22268656
Ref: Bug Fixes<31>-Footnote-32268713
Node: pytest 5 2 2 2019-10-242268770
Ref: changelog pytest-5-2-2-2019-10-242268903
Ref: 72f2268903
Node: Bug Fixes<32>2269006
Ref: changelog id1962269079
Ref: 7302269079
Ref: Bug Fixes<32>-Footnote-12269730
Ref: Bug Fixes<32>-Footnote-22269787
Ref: Bug Fixes<32>-Footnote-32269844
Ref: Bug Fixes<32>-Footnote-42269901
Node: pytest 5 2 1 2019-10-062269958
Ref: changelog pytest-5-2-1-2019-10-062270091
Ref: 7312270091
Node: Bug Fixes<33>2270194
Ref: changelog id1972270267
Ref: 7322270267
Ref: Bug Fixes<33>-Footnote-12270439
Node: pytest 5 2 0 2019-09-282270496
Ref: changelog pytest-5-2-0-2019-09-282270629
Ref: 7332270629
Node: Deprecations<8>2270848
Ref: changelog id1982270943
Ref: 7342270943
Ref: Deprecations<8>-Footnote-12271168
Node: Features<8>2271225
Ref: changelog id1992271342
Ref: 7352271342
Ref: Features<8>-Footnote-12271822
Ref: Features<8>-Footnote-22271879
Node: Bug Fixes<34>2271936
Ref: changelog id2002272066
Ref: 7362272066
Ref: Bug Fixes<34>-Footnote-12272357
Ref: Bug Fixes<34>-Footnote-22272414
Node: Trivial/Internal Changes<12>2272471
Ref: changelog id2012272581
Ref: 7372272581
Ref: Trivial/Internal Changes<12>-Footnote-12272793
Node: pytest 5 1 3 2019-09-182272850
Ref: changelog pytest-5-1-3-2019-09-182272983
Ref: 7382272983
Node: Bug Fixes<35>2273086
Ref: changelog id2022273159
Ref: 7392273159
Ref: Bug Fixes<35>-Footnote-12273515
Ref: Bug Fixes<35>-Footnote-22273572
Ref: Bug Fixes<35>-Footnote-32273629
Node: pytest 5 1 2 2019-08-302273686
Ref: changelog pytest-5-1-2-2019-08-302273819
Ref: 73a2273819
Node: Bug Fixes<36>2273922
Ref: changelog id2032273995
Ref: 73b2273995
Ref: Bug Fixes<36>-Footnote-12274962
Ref: Bug Fixes<36>-Footnote-22275019
Ref: Bug Fixes<36>-Footnote-32275075
Ref: Bug Fixes<36>-Footnote-42275132
Ref: Bug Fixes<36>-Footnote-52275189
Node: pytest 5 1 1 2019-08-202275246
Ref: changelog pytest-5-1-1-2019-08-202275379
Ref: 73c2275379
Node: Bug Fixes<37>2275482
Ref: changelog id2042275555
Ref: 73d2275555
Ref: Bug Fixes<37>-Footnote-12275726
Node: pytest 5 1 0 2019-08-152275783
Ref: changelog pytest-5-1-0-2019-08-152275916
Ref: 73e2275916
Node: Removals2276203
Ref: changelog removals2276291
Ref: 73f2276291
Ref: Removals-Footnote-12278479
Ref: Removals-Footnote-22278536
Ref: Removals-Footnote-32278593
Ref: Removals-Footnote-42278637
Ref: Removals-Footnote-52278693
Node: Features<9>2278750
Ref: changelog id2052278863
Ref: 7402278863
Ref: Features<9>-Footnote-12279279
Ref: Features<9>-Footnote-22279336
Ref: Features<9>-Footnote-32279393
Node: Improvements<11>2279437
Ref: changelog id2062279555
Ref: 7412279555
Ref: Improvements<11>-Footnote-12279938
Ref: Improvements<11>-Footnote-22279995
Node: Bug Fixes<38>2280052
Ref: changelog id2072280185
Ref: 7422280185
Ref: Bug Fixes<38>-Footnote-12282062
Ref: Bug Fixes<38>-Footnote-22282119
Ref: Bug Fixes<38>-Footnote-32282176
Ref: Bug Fixes<38>-Footnote-42282233
Ref: Bug Fixes<38>-Footnote-52282290
Ref: Bug Fixes<38>-Footnote-62282347
Ref: Bug Fixes<38>-Footnote-72282404
Ref: Bug Fixes<38>-Footnote-82282461
Ref: Bug Fixes<38>-Footnote-92282518
Ref: Bug Fixes<38>-Footnote-102282575
Ref: Bug Fixes<38>-Footnote-112282633
Node: Improved Documentation<10>2282691
Ref: changelog id2082282836
Ref: 7432282836
Ref: Improved Documentation<10>-Footnote-12283003
Node: Trivial/Internal Changes<13>2283060
Ref: changelog id2092283183
Ref: 7442283183
Ref: Trivial/Internal Changes<13>-Footnote-12284015
Ref: Trivial/Internal Changes<13>-Footnote-22284072
Ref: Trivial/Internal Changes<13>-Footnote-32284129
Ref: Trivial/Internal Changes<13>-Footnote-42284186
Ref: Trivial/Internal Changes<13>-Footnote-52284243
Node: pytest 5 0 1 2019-07-042284300
Ref: changelog pytest-5-0-1-2019-07-042284433
Ref: 7452284433
Node: Bug Fixes<39>2284590
Ref: changelog id2102284698
Ref: 7462284698
Ref: Bug Fixes<39>-Footnote-12285079
Ref: Bug Fixes<39>-Footnote-22285136
Ref: Bug Fixes<39>-Footnote-32285193
Node: Improved Documentation<11>2285250
Ref: changelog id2112285358
Ref: 7472285358
Ref: Improved Documentation<11>-Footnote-12285559
Node: pytest 5 0 0 2019-06-282285616
Ref: changelog pytest-5-0-0-2019-06-282285750
Ref: 7482285750
Node: Important2286005
Ref: changelog important2286094
Ref: 7492286094
Ref: Important-Footnote-12286274
Node: Removals<2>2286342
Ref: changelog id2122286455
Ref: 74a2286455
Ref: Removals<2>-Footnote-12288449
Ref: Removals<2>-Footnote-22288506
Ref: Removals<2>-Footnote-32288563
Ref: Removals<2>-Footnote-42288620
Ref: Removals<2>-Footnote-52288677
Ref: Removals<2>-Footnote-62288734
Ref: Removals<2>-Footnote-72288791
Node: Deprecations<9>2288848
Ref: changelog id2132288964
Ref: 74b2288964
Ref: Deprecations<9>-Footnote-12289406
Ref: Deprecations<9>-Footnote-22289463
Node: Features<10>2289519
Ref: changelog id2142289637
Ref: 74c2289637
Ref: Features<10>-Footnote-12291087
Ref: Features<10>-Footnote-22291144
Ref: Features<10>-Footnote-32291201
Ref: Features<10>-Footnote-42291282
Ref: Features<10>-Footnote-52291340
Ref: Features<10>-Footnote-62291397
Node: Bug Fixes<40>2291454
Ref: changelog id2152291583
Ref: 74d2291583
Ref: Bug Fixes<40>-Footnote-12294613
Ref: Bug Fixes<40>-Footnote-22294670
Ref: Bug Fixes<40>-Footnote-32294727
Ref: Bug Fixes<40>-Footnote-42294784
Ref: Bug Fixes<40>-Footnote-52294826
Ref: Bug Fixes<40>-Footnote-62294883
Ref: Bug Fixes<40>-Footnote-72294940
Ref: Bug Fixes<40>-Footnote-82294997
Ref: Bug Fixes<40>-Footnote-92295054
Ref: Bug Fixes<40>-Footnote-102295111
Ref: Bug Fixes<40>-Footnote-112295169
Ref: Bug Fixes<40>-Footnote-122295227
Ref: Bug Fixes<40>-Footnote-132295285
Ref: Bug Fixes<40>-Footnote-142295343
Ref: Bug Fixes<40>-Footnote-152295399
Ref: Bug Fixes<40>-Footnote-162295457
Ref: Bug Fixes<40>-Footnote-172295515
Ref: Bug Fixes<40>-Footnote-182295573
Ref: Bug Fixes<40>-Footnote-192295631
Ref: Bug Fixes<40>-Footnote-202295689
Ref: Bug Fixes<40>-Footnote-212295747
Ref: Bug Fixes<40>-Footnote-222295805
Node: Improved Documentation<12>2295863
Ref: changelog id2162295971
Ref: 74e2295971
Ref: Improved Documentation<12>-Footnote-12296241
Ref: Improved Documentation<12>-Footnote-22296298
Node: pytest 4 6 11 2020-06-042296355
Ref: changelog pytest-4-6-11-2020-06-042296490
Ref: 74f2296490
Node: Bug Fixes<41>2296595
Ref: changelog id2172296669
Ref: 7502296669
Ref: Bug Fixes<41>-Footnote-12297541
Ref: Bug Fixes<41>-Footnote-22297598
Node: pytest 4 6 10 2020-05-082297655
Ref: changelog pytest-4-6-10-2020-05-082297790
Ref: 7512297790
Node: Features<11>2297951
Ref: changelog id2182298061
Ref: 7522298061
Ref: Features<11>-Footnote-12298564
Ref: Features<11>-Footnote-22298621
Node: Trivial/Internal Changes<14>2298720
Ref: changelog id2192298830
Ref: 7532298830
Ref: Trivial/Internal Changes<14>-Footnote-12299023
Node: pytest 4 6 9 2020-01-042299080
Ref: changelog pytest-4-6-9-2020-01-042299214
Ref: 7542299214
Node: Bug Fixes<42>2299317
Ref: changelog id2202299390
Ref: 7552299390
Ref: Bug Fixes<42>-Footnote-12299602
Node: pytest 4 6 8 2019-12-192299659
Ref: changelog pytest-4-6-8-2019-12-192299792
Ref: 7562299792
Node: Features<12>2299979
Ref: changelog id2212300073
Ref: 7572300073
Ref: Features<12>-Footnote-12300241
Node: Bug Fixes<43>2300298
Ref: changelog id2222300429
Ref: 7582300429
Ref: Bug Fixes<43>-Footnote-12300633
Node: Trivial/Internal Changes<15>2300690
Ref: changelog id2232300800
Ref: 7592300800
Ref: Trivial/Internal Changes<15>-Footnote-12301045
Node: pytest 4 6 7 2019-12-052301102
Ref: changelog pytest-4-6-7-2019-12-052301235
Ref: 75a2301235
Node: Bug Fixes<44>2301338
Ref: changelog id2242301411
Ref: 75b2301411
Ref: Bug Fixes<44>-Footnote-12301906
Ref: Bug Fixes<44>-Footnote-22301963
Node: pytest 4 6 6 2019-10-112302020
Ref: changelog pytest-4-6-6-2019-10-112302153
Ref: 75c2302153
Node: Bug Fixes<45>2302314
Ref: changelog id2252302424
Ref: 75d2302424
Ref: Bug Fixes<45>-Footnote-12302988
Ref: Bug Fixes<45>-Footnote-22303045
Ref: Bug Fixes<45>-Footnote-32303102
Ref: Bug Fixes<45>-Footnote-42303159
Node: Trivial/Internal Changes<16>2303216
Ref: changelog id2262303326
Ref: 75e2303326
Ref: Trivial/Internal Changes<16>-Footnote-12303549
Node: pytest 4 6 5 2019-08-052303606
Ref: changelog pytest-4-6-5-2019-08-052303739
Ref: 75f2303739
Node: Bug Fixes<46>2303842
Ref: changelog id2272303915
Ref: 7602303915
Ref: Bug Fixes<46>-Footnote-12304656
Ref: Bug Fixes<46>-Footnote-22304713
Ref: Bug Fixes<46>-Footnote-32304770
Ref: Bug Fixes<46>-Footnote-42304827
Ref: Bug Fixes<46>-Footnote-52304884
Node: pytest 4 6 4 2019-06-282304941
Ref: changelog pytest-4-6-4-2019-06-282305074
Ref: 7612305074
Node: Bug Fixes<47>2305177
Ref: changelog id2282305250
Ref: 7622305250
Ref: Bug Fixes<47>-Footnote-12305843
Ref: Bug Fixes<47>-Footnote-22305900
Ref: Bug Fixes<47>-Footnote-32305957
Ref: Bug Fixes<47>-Footnote-42306014
Ref: Bug Fixes<47>-Footnote-52306071
Node: pytest 4 6 3 2019-06-112306128
Ref: changelog pytest-4-6-3-2019-06-112306261
Ref: 7632306261
Node: Bug Fixes<48>2306364
Ref: changelog id2292306437
Ref: 7642306437
Ref: Bug Fixes<48>-Footnote-12306965
Ref: Bug Fixes<48>-Footnote-22307022
Ref: Bug Fixes<48>-Footnote-32307079
Ref: Bug Fixes<48>-Footnote-42307134
Node: pytest 4 6 2 2019-06-032307191
Ref: changelog pytest-4-6-2-2019-06-032307324
Ref: 7652307324
Node: Bug Fixes<49>2307427
Ref: changelog id2302307500
Ref: 7662307500
Ref: Bug Fixes<49>-Footnote-12307922
Ref: Bug Fixes<49>-Footnote-22307979
Ref: Bug Fixes<49>-Footnote-32308036
Node: pytest 4 6 1 2019-06-022308093
Ref: changelog pytest-4-6-1-2019-06-022308226
Ref: 7672308226
Node: Bug Fixes<50>2308329
Ref: changelog id2312308402
Ref: 7682308402
Ref: Bug Fixes<50>-Footnote-12308672
Ref: Bug Fixes<50>-Footnote-22308729
Node: pytest 4 6 0 2019-05-312308786
Ref: changelog pytest-4-6-0-2019-05-312308919
Ref: 7692308919
Node: Important<2>2309129
Ref: changelog id2322309222
Ref: 76a2309222
Ref: Important<2>-Footnote-12309448
Node: Features<13>2309516
Ref: changelog id2342309631
Ref: 76b2309631
Ref: Features<13>-Footnote-12310733
Ref: Features<13>-Footnote-22310790
Ref: Features<13>-Footnote-32310847
Ref: Features<13>-Footnote-42310904
Ref: Features<13>-Footnote-52310961
Ref: Features<13>-Footnote-62311018
Ref: Features<13>-Footnote-72311075
Ref: Features<13>-Footnote-82311132
Node: Bug Fixes<51>2311189
Ref: changelog id2352311318
Ref: 76c2311318
Ref: Bug Fixes<51>-Footnote-12312649
Ref: Bug Fixes<51>-Footnote-22312706
Ref: Bug Fixes<51>-Footnote-32312763
Ref: Bug Fixes<51>-Footnote-42312820
Ref: Bug Fixes<51>-Footnote-52312877
Ref: Bug Fixes<51>-Footnote-62312934
Ref: Bug Fixes<51>-Footnote-72312991
Ref: Bug Fixes<51>-Footnote-82313048
Ref: Bug Fixes<51>-Footnote-92313105
Node: Improved Documentation<13>2313162
Ref: changelog id2362313270
Ref: 76d2313270
Ref: Improved Documentation<13>-Footnote-12313472
Node: pytest 4 5 0 2019-05-112313529
Ref: changelog pytest-4-5-0-2019-05-112313662
Ref: 76e2313662
Node: Features<14>2313903
Ref: changelog id2372313997
Ref: 76f2313997
Ref: Features<14>-Footnote-12317140
Ref: Features<14>-Footnote-22317197
Ref: Features<14>-Footnote-32317254
Ref: Features<14>-Footnote-42317311
Ref: Features<14>-Footnote-52317368
Ref: Features<14>-Footnote-62317425
Ref: Features<14>-Footnote-72317482
Ref: Features<14>-Footnote-82317539
Ref: Features<14>-Footnote-92317596
Ref: Features<14>-Footnote-102317653
Ref: Features<14>-Footnote-112317711
Ref: Features<14>-Footnote-122317769
Ref: Features<14>-Footnote-132317827
Ref: Features<14>-Footnote-142317885
Ref: Features<14>-Footnote-152317943
Node: Bug Fixes<52>2318001
Ref: changelog id2382318130
Ref: 7702318130
Ref: Bug Fixes<52>-Footnote-12318631
Ref: Bug Fixes<52>-Footnote-22318688
Ref: Bug Fixes<52>-Footnote-32318745
Node: Improved Documentation<14>2318802
Ref: changelog id2392318947
Ref: 7712318947
Ref: Improved Documentation<14>-Footnote-12319140
Node: Trivial/Internal Changes<17>2319197
Ref: changelog id2402319320
Ref: 7722319320
Ref: Trivial/Internal Changes<17>-Footnote-12320542
Ref: Trivial/Internal Changes<17>-Footnote-22320599
Ref: Trivial/Internal Changes<17>-Footnote-32320656
Ref: Trivial/Internal Changes<17>-Footnote-42320698
Ref: Trivial/Internal Changes<17>-Footnote-52320755
Ref: Trivial/Internal Changes<17>-Footnote-62320812
Ref: Trivial/Internal Changes<17>-Footnote-72320869
Ref: Trivial/Internal Changes<17>-Footnote-82320926
Ref: Trivial/Internal Changes<17>-Footnote-92321065
Node: pytest 4 4 2 2019-05-082321122
Ref: changelog pytest-4-4-2-2019-05-082321255
Ref: 7732321255
Node: Bug Fixes<53>2321470
Ref: changelog id2412321578
Ref: 7742321578
Ref: Bug Fixes<53>-Footnote-12322170
Ref: Bug Fixes<53>-Footnote-22322227
Ref: Bug Fixes<53>-Footnote-32322284
Node: Improved Documentation<15>2322341
Ref: changelog id2422322486
Ref: 7752322486
Ref: Improved Documentation<15>-Footnote-12322888
Ref: Improved Documentation<15>-Footnote-22322945
Node: Trivial/Internal Changes<18>2323002
Ref: changelog id2432323125
Ref: 7762323125
Ref: Trivial/Internal Changes<18>-Footnote-12323329
Node: pytest 4 4 1 2019-04-152323386
Ref: changelog pytest-4-4-1-2019-04-152323519
Ref: 7772323519
Node: Bug Fixes<54>2323622
Ref: changelog id2442323695
Ref: 7782323695
Ref: Bug Fixes<54>-Footnote-12324257
Ref: Bug Fixes<54>-Footnote-22324314
Ref: Bug Fixes<54>-Footnote-32324371
Ref: Bug Fixes<54>-Footnote-42324428
Node: pytest 4 4 0 2019-03-292324485
Ref: changelog pytest-4-4-0-2019-03-292324618
Ref: 7792324618
Node: Features<15>2324859
Ref: changelog id2452324953
Ref: 77a2324953
Ref: Features<15>-Footnote-12328161
Ref: Features<15>-Footnote-22328218
Ref: Features<15>-Footnote-32328275
Ref: Features<15>-Footnote-42328332
Ref: Features<15>-Footnote-52328389
Ref: Features<15>-Footnote-62328429
Ref: Features<15>-Footnote-72328486
Ref: Features<15>-Footnote-82328543
Ref: Features<15>-Footnote-92328600
Ref: Features<15>-Footnote-102328654
Ref: Features<15>-Footnote-112328712
Ref: Features<15>-Footnote-122328770
Ref: Features<15>-Footnote-132328828
Ref: Features<15>-Footnote-142328886
Ref: Features<15>-Footnote-152328944
Ref: Features<15>-Footnote-162329002
Ref: Features<15>-Footnote-172329060
Node: Bug Fixes<55>2329118
Ref: changelog id2462329247
Ref: 77b2329247
Ref: Bug Fixes<55>-Footnote-12330562
Ref: Bug Fixes<55>-Footnote-22330619
Ref: Bug Fixes<55>-Footnote-32330676
Ref: Bug Fixes<55>-Footnote-42330733
Ref: Bug Fixes<55>-Footnote-52330790
Ref: Bug Fixes<55>-Footnote-62330847
Ref: Bug Fixes<55>-Footnote-72330904
Ref: Bug Fixes<55>-Footnote-82330944
Ref: Bug Fixes<55>-Footnote-92331001
Ref: Bug Fixes<55>-Footnote-102331058
Ref: Bug Fixes<55>-Footnote-112331116
Node: Improved Documentation<16>2331174
Ref: changelog id2472331319
Ref: 77c2331319
Ref: Improved Documentation<16>-Footnote-12331526
Node: Trivial/Internal Changes<19>2331583
Ref: changelog id2482331706
Ref: 77d2331706
Ref: Trivial/Internal Changes<19>-Footnote-12333030
Ref: Trivial/Internal Changes<19>-Footnote-22333087
Ref: Trivial/Internal Changes<19>-Footnote-32333144
Ref: Trivial/Internal Changes<19>-Footnote-42333201
Ref: Trivial/Internal Changes<19>-Footnote-52333258
Ref: Trivial/Internal Changes<19>-Footnote-62333315
Ref: Trivial/Internal Changes<19>-Footnote-72333372
Ref: Trivial/Internal Changes<19>-Footnote-82333429
Node: pytest 4 3 1 2019-03-112333486
Ref: changelog pytest-4-3-1-2019-03-112333619
Ref: 77e2333619
Node: Bug Fixes<56>2333780
Ref: changelog id2492333890
Ref: 77f2333890
Ref: Bug Fixes<56>-Footnote-12334358
Ref: Bug Fixes<56>-Footnote-22334415
Ref: Bug Fixes<56>-Footnote-32334472
Node: Trivial/Internal Changes<20>2334529
Ref: changelog id2502334639
Ref: 7802334639
Ref: Trivial/Internal Changes<20>-Footnote-12334809
Node: pytest 4 3 0 2019-02-162334866
Ref: changelog pytest-4-3-0-2019-02-162334999
Ref: 7812334999
Node: Deprecations<10>2335162
Ref: changelog id2512335259
Ref: 7822335259
Ref: Deprecations<10>-Footnote-12335506
Node: Features<16>2335563
Ref: changelog id2522335682
Ref: 7832335682
Ref: Features<16>-Footnote-12336564
Ref: Features<16>-Footnote-22336621
Ref: Features<16>-Footnote-32336678
Ref: Features<16>-Footnote-42336735
Node: Bug Fixes<57>2336792
Ref: changelog id2532336886
Ref: 7842336886
Ref: Bug Fixes<57>-Footnote-12337156
Ref: Bug Fixes<57>-Footnote-22337213
Node: pytest 4 2 1 2019-02-122337270
Ref: changelog pytest-4-2-1-2019-02-122337403
Ref: 7852337403
Node: Bug Fixes<58>2337618
Ref: changelog id2542337726
Ref: 7862337726
Ref: Bug Fixes<58>-Footnote-12338922
Ref: Bug Fixes<58>-Footnote-22338979
Ref: Bug Fixes<58>-Footnote-32339036
Ref: Bug Fixes<58>-Footnote-42339093
Ref: Bug Fixes<58>-Footnote-52339150
Ref: Bug Fixes<58>-Footnote-62339207
Ref: Bug Fixes<58>-Footnote-72339264
Ref: Bug Fixes<58>-Footnote-82339321
Ref: Bug Fixes<58>-Footnote-92339378
Node: Improved Documentation<17>2339434
Ref: changelog id2552339579
Ref: 7872339579
Ref: Improved Documentation<17>-Footnote-12340072
Ref: Improved Documentation<17>-Footnote-22340129
Ref: Improved Documentation<17>-Footnote-32340186
Node: Trivial/Internal Changes<21>2340243
Ref: changelog id2562340366
Ref: 7882340366
Ref: Trivial/Internal Changes<21>-Footnote-12340591
Node: pytest 4 2 0 2019-01-302340648
Ref: changelog pytest-4-2-0-2019-01-302340781
Ref: 7892340781
Node: Features<17>2340968
Ref: changelog id2572341062
Ref: 78a2341062
Ref: Features<17>-Footnote-12341960
Ref: Features<17>-Footnote-22342017
Ref: Features<17>-Footnote-32342073
Ref: Features<17>-Footnote-42342130
Ref: Features<17>-Footnote-52342187
Ref: Features<17>-Footnote-62342244
Node: Bug Fixes<59>2342301
Ref: changelog id2582342432
Ref: 78b2342432
Ref: Bug Fixes<59>-Footnote-12344093
Ref: Bug Fixes<59>-Footnote-22344150
Ref: Bug Fixes<59>-Footnote-32344207
Ref: Bug Fixes<59>-Footnote-42344264
Ref: Bug Fixes<59>-Footnote-52344321
Ref: Bug Fixes<59>-Footnote-62344378
Ref: Bug Fixes<59>-Footnote-72344435
Ref: Bug Fixes<59>-Footnote-82344492
Ref: Bug Fixes<59>-Footnote-92344549
Ref: Bug Fixes<59>-Footnote-102344606
Node: Trivial/Internal Changes<22>2344664
Ref: changelog id2592344774
Ref: 78c2344774
Ref: Trivial/Internal Changes<22>-Footnote-12345289
Ref: Trivial/Internal Changes<22>-Footnote-22345346
Ref: Trivial/Internal Changes<22>-Footnote-32345409
Ref: Trivial/Internal Changes<22>-Footnote-42345466
Node: pytest 4 1 1 2019-01-122345523
Ref: changelog pytest-4-1-1-2019-01-122345656
Ref: 78d2345656
Node: Bug Fixes<60>2345871
Ref: changelog id2602345979
Ref: 78e2345979
Ref: Bug Fixes<60>-Footnote-12346403
Ref: Bug Fixes<60>-Footnote-22346460
Ref: Bug Fixes<60>-Footnote-32346517
Ref: Bug Fixes<60>-Footnote-42346574
Node: Improved Documentation<18>2346631
Ref: changelog id2612346776
Ref: 78f2346776
Ref: Improved Documentation<18>-Footnote-12347083
Node: Trivial/Internal Changes<23>2347140
Ref: changelog id2622347263
Ref: 7902347263
Ref: Trivial/Internal Changes<23>-Footnote-12347433
Node: pytest 4 1 0 2019-01-052347490
Ref: changelog pytest-4-1-0-2019-01-052347623
Ref: 7912347623
Node: Removals<3>2347923
Ref: changelog id2632348019
Ref: 7922348019
Ref: Removals<3>-Footnote-12351845
Ref: Removals<3>-Footnote-22351902
Ref: Removals<3>-Footnote-32351959
Ref: Removals<3>-Footnote-42352016
Ref: Removals<3>-Footnote-52352073
Ref: Removals<3>-Footnote-62352130
Ref: Removals<3>-Footnote-72352187
Ref: Removals<3>-Footnote-82352244
Ref: Removals<3>-Footnote-92352301
Ref: Removals<3>-Footnote-102352358
Ref: Removals<3>-Footnote-112352416
Ref: Removals<3>-Footnote-122352474
Ref: Removals<3>-Footnote-132352532
Ref: Removals<3>-Footnote-142352590
Ref: Removals<3>-Footnote-152352648
Ref: Removals<3>-Footnote-162352706
Ref: Removals<3>-Footnote-172352764
Node: Deprecations<11>2352821
Ref: changelog id2642352938
Ref: 7932352938
Ref: Deprecations<11>-Footnote-12353917
Ref: Deprecations<11>-Footnote-22353974
Ref: Deprecations<11>-Footnote-32354031
Ref: Deprecations<11>-Footnote-42354088
Node: Features<18>2354145
Ref: changelog id2652354264
Ref: 7942354264
Ref: Features<18>-Footnote-12357039
Ref: Features<18>-Footnote-22357096
Ref: Features<18>-Footnote-32357153
Ref: Features<18>-Footnote-42357194
Ref: Features<18>-Footnote-52357273
Ref: Features<18>-Footnote-62357319
Ref: Features<18>-Footnote-72357376
Ref: Features<18>-Footnote-82357422
Ref: Features<18>-Footnote-92357479
Ref: Features<18>-Footnote-102357536
Ref: Features<18>-Footnote-112357594
Ref: Features<18>-Footnote-122357652
Ref: Features<18>-Footnote-132357710
Ref: Features<18>-Footnote-142357768
Node: Bug Fixes<61>2357826
Ref: changelog id2662357955
Ref: 7952357955
Ref: Bug Fixes<61>-Footnote-12358551
Ref: Bug Fixes<61>-Footnote-22358608
Ref: Bug Fixes<61>-Footnote-32358665
Ref: Bug Fixes<61>-Footnote-42358722
Ref: Bug Fixes<61>-Footnote-52358779
Node: Improved Documentation<19>2358836
Ref: changelog id2672358981
Ref: 7962358981
Ref: Improved Documentation<19>-Footnote-12359354
Ref: Improved Documentation<19>-Footnote-22359411
Ref: Improved Documentation<19>-Footnote-32359468
Node: Trivial/Internal Changes<24>2359525
Ref: changelog id2682359648
Ref: 7972359648
Ref: Trivial/Internal Changes<24>-Footnote-12359936
Node: pytest 4 0 2 2018-12-132359993
Ref: changelog pytest-4-0-2-2018-12-132360126
Ref: 7982360126
Node: Bug Fixes<62>2360283
Ref: changelog id2692360391
Ref: 7992360391
Ref: Bug Fixes<62>-Footnote-12360956
Ref: Bug Fixes<62>-Footnote-22361013
Ref: Bug Fixes<62>-Footnote-32361070
Ref: Bug Fixes<62>-Footnote-42361127
Node: Improved Documentation<20>2361184
Ref: changelog id2702361292
Ref: 79a2361292
Ref: Improved Documentation<20>-Footnote-12361484
Node: pytest 4 0 1 2018-11-232361541
Ref: changelog pytest-4-0-1-2018-11-232361674
Ref: 79b2361674
Node: Bug Fixes<63>2361835
Ref: changelog id2712361945
Ref: 79c2361945
Ref: Bug Fixes<63>-Footnote-12362722
Ref: Bug Fixes<63>-Footnote-22362779
Ref: Bug Fixes<63>-Footnote-32362836
Ref: Bug Fixes<63>-Footnote-42362893
Ref: Bug Fixes<63>-Footnote-52362950
Ref: Bug Fixes<63>-Footnote-62363007
Ref: Bug Fixes<63>-Footnote-72363064
Node: Trivial/Internal Changes<25>2363121
Ref: changelog id2722363231
Ref: 79d2363231
Ref: Trivial/Internal Changes<25>-Footnote-12363534
Ref: Trivial/Internal Changes<25>-Footnote-22363591
Node: pytest 4 0 0 2018-11-132363648
Ref: changelog pytest-4-0-0-2018-11-132363782
Ref: 79e2363782
Node: Removals<4>2363936
Ref: changelog id2732364028
Ref: 79f2364028
Ref: Removals<4>-Footnote-12365992
Ref: Removals<4>-Footnote-22366049
Ref: Removals<4>-Footnote-32366106
Ref: Removals<4>-Footnote-42366163
Node: Features<19>2366220
Ref: changelog id2742366334
Ref: 7a02366334
Ref: Features<19>-Footnote-12366588
Node: Bug Fixes<64>2366645
Ref: changelog id2752366739
Ref: 7a12366739
Ref: Bug Fixes<64>-Footnote-12366906
Node: pytest 3 10 1 2018-11-112366963
Ref: changelog pytest-3-10-1-2018-11-112367098
Ref: 7a22367098
Node: Bug Fixes<65>2367261
Ref: changelog id2762367372
Ref: 7a32367372
Ref: Bug Fixes<65>-Footnote-12368179
Ref: Bug Fixes<65>-Footnote-22368236
Ref: Bug Fixes<65>-Footnote-32368293
Ref: Bug Fixes<65>-Footnote-42368350
Ref: Bug Fixes<65>-Footnote-52368407
Ref: Bug Fixes<65>-Footnote-62368464
Ref: Bug Fixes<65>-Footnote-72368521
Node: Trivial/Internal Changes<26>2368578
Ref: changelog id2772368689
Ref: 7a42368689
Ref: Trivial/Internal Changes<26>-Footnote-12368890
Node: pytest 3 10 0 2018-11-032368947
Ref: changelog pytest-3-10-0-2018-11-032369082
Ref: 7a52369082
Node: Features<20>2369325
Ref: changelog id2782369420
Ref: 7a62369420
Ref: Features<20>-Footnote-12370357
Ref: Features<20>-Footnote-22370414
Ref: Features<20>-Footnote-32370471
Ref: Features<20>-Footnote-42370528
Node: Bug Fixes<66>2370585
Ref: changelog id2792370715
Ref: 7a72370715
Ref: Bug Fixes<66>-Footnote-12371543
Ref: Bug Fixes<66>-Footnote-22371600
Ref: Bug Fixes<66>-Footnote-32371657
Ref: Bug Fixes<66>-Footnote-42371714
Ref: Bug Fixes<66>-Footnote-52371771
Ref: Bug Fixes<66>-Footnote-62371827
Node: Improved Documentation<21>2371884
Ref: changelog id2802372030
Ref: 7a82372030
Ref: Improved Documentation<21>-Footnote-12372266
Node: Trivial/Internal Changes<27>2372323
Ref: changelog id2812372447
Ref: 7a92372447
Ref: Trivial/Internal Changes<27>-Footnote-12373003
Ref: Trivial/Internal Changes<27>-Footnote-22373060
Ref: Trivial/Internal Changes<27>-Footnote-32373117
Node: pytest 3 9 3 2018-10-272373174
Ref: changelog pytest-3-9-3-2018-10-272373308
Ref: 7aa2373308
Node: Bug Fixes<67>2373523
Ref: changelog id2822373631
Ref: 7ab2373631
Ref: Bug Fixes<67>-Footnote-12374194
Ref: Bug Fixes<67>-Footnote-22374251
Ref: Bug Fixes<67>-Footnote-32374308
Ref: Bug Fixes<67>-Footnote-42374365
Node: Improved Documentation<22>2374422
Ref: changelog id2832374567
Ref: 7ac2374567
Ref: Improved Documentation<22>-Footnote-12374803
Node: Trivial/Internal Changes<28>2374860
Ref: changelog id2842374983
Ref: 7ad2374983
Ref: Trivial/Internal Changes<28>-Footnote-12375369
Ref: Trivial/Internal Changes<28>-Footnote-22375426
Ref: Trivial/Internal Changes<28>-Footnote-32375483
Node: pytest 3 9 2 2018-10-222375540
Ref: changelog pytest-3-9-2-2018-10-222375673
Ref: 7ae2375673
Node: Bug Fixes<68>2375776
Ref: changelog id2852375849
Ref: 7af2375849
Ref: Bug Fixes<68>-Footnote-12376901
Ref: Bug Fixes<68>-Footnote-22376958
Ref: Bug Fixes<68>-Footnote-32377015
Ref: Bug Fixes<68>-Footnote-42377072
Ref: Bug Fixes<68>-Footnote-52377129
Ref: Bug Fixes<68>-Footnote-62377186
Ref: Bug Fixes<68>-Footnote-72377243
Ref: Bug Fixes<68>-Footnote-82377300
Node: pytest 3 9 1 2018-10-162377357
Ref: changelog pytest-3-9-1-2018-10-162377538
Ref: 7b02377538
Node: Features<21>2377639
Ref: changelog id2862377711
Ref: 7b12377711
Ref: Features<21>-Footnote-12377981
Node: pytest 3 9 0 2018-10-15 - not published due to a release automation bug2378038
Ref: changelog pytest-3-9-0-2018-10-15-not-published-due-to-a-release-automation-bug2378219
Ref: 7b22378219
Node: Deprecations<12>2378590
Ref: changelog id2872378735
Ref: 7b32378735
Ref: Deprecations<12>-Footnote-12380337
Ref: Deprecations<12>-Footnote-22380394
Node: Features<22>2380451
Ref: changelog id2882380618
Ref: 7b42380618
Ref: Features<22>-Footnote-12382760
Ref: Features<22>-Footnote-22382817
Ref: Features<22>-Footnote-32382874
Ref: Features<22>-Footnote-42382931
Ref: Features<22>-Footnote-52382988
Ref: Features<22>-Footnote-62383045
Ref: Features<22>-Footnote-72383102
Ref: Features<22>-Footnote-82383159
Ref: Features<22>-Footnote-92383216
Ref: Features<22>-Footnote-102383273
Node: Bug Fixes<69>2383331
Ref: changelog id2892383508
Ref: 7b52383508
Ref: Bug Fixes<69>-Footnote-12384801
Ref: Bug Fixes<69>-Footnote-22384858
Ref: Bug Fixes<69>-Footnote-32384915
Ref: Bug Fixes<69>-Footnote-42384972
Ref: Bug Fixes<69>-Footnote-52385029
Ref: Bug Fixes<69>-Footnote-62385086
Ref: Bug Fixes<69>-Footnote-72385143
Ref: Bug Fixes<69>-Footnote-82385200
Ref: Bug Fixes<69>-Footnote-92385257
Node: Improved Documentation<23>2385314
Ref: changelog id2902385507
Ref: 7b62385507
Ref: Improved Documentation<23>-Footnote-12386124
Ref: Improved Documentation<23>-Footnote-22386181
Ref: Improved Documentation<23>-Footnote-32386238
Ref: Improved Documentation<23>-Footnote-42386295
Node: Trivial/Internal Changes<29>2386352
Ref: changelog id2912386523
Ref: 7b72386523
Ref: Trivial/Internal Changes<29>-Footnote-12386994
Ref: Trivial/Internal Changes<29>-Footnote-22387051
Ref: Trivial/Internal Changes<29>-Footnote-32387108
Ref: Trivial/Internal Changes<29>-Footnote-42387165
Node: pytest 3 8 2 2018-10-022387222
Ref: changelog pytest-3-8-2-2018-10-022387403
Ref: 7b82387403
Node: Deprecations and Removals<2>2387619
Ref: changelog deprecations-and-removals2387729
Ref: 7b92387729
Ref: Deprecations and Removals<2>-Footnote-12388553
Node: Bug Fixes<70>2388610
Ref: changelog id2922388755
Ref: 7ba2388755
Ref: Bug Fixes<70>-Footnote-12389981
Ref: Bug Fixes<70>-Footnote-22390038
Ref: Bug Fixes<70>-Footnote-32390095
Ref: Bug Fixes<70>-Footnote-42390152
Ref: Bug Fixes<70>-Footnote-52390209
Ref: Bug Fixes<70>-Footnote-62390266
Node: Improved Documentation<24>2390323
Ref: changelog id2932390431
Ref: 7bb2390431
Ref: Improved Documentation<24>-Footnote-12390599
Node: pytest 3 8 1 2018-09-222390656
Ref: changelog pytest-3-8-1-2018-09-222390789
Ref: 7bc2390789
Node: Bug Fixes<71>2391004
Ref: changelog id2942391112
Ref: 7bd2391112
Ref: Bug Fixes<71>-Footnote-12392291
Ref: Bug Fixes<71>-Footnote-22392348
Ref: Bug Fixes<71>-Footnote-32392405
Ref: Bug Fixes<71>-Footnote-42392462
Ref: Bug Fixes<71>-Footnote-52392519
Ref: Bug Fixes<71>-Footnote-62392576
Node: Improved Documentation<25>2392633
Ref: changelog id2952392778
Ref: 7be2392778
Ref: Improved Documentation<25>-Footnote-12393190
Node: Trivial/Internal Changes<30>2393247
Ref: changelog id2962393370
Ref: 7bf2393370
Ref: Trivial/Internal Changes<30>-Footnote-12393639
Ref: Trivial/Internal Changes<30>-Footnote-22393696
Node: pytest 3 8 0 2018-09-052393753
Ref: changelog pytest-3-8-0-2018-09-052393886
Ref: 7c02393886
Node: Deprecations and Removals<3>2394186
Ref: changelog id2972394295
Ref: 7c12394295
Ref: Deprecations and Removals<3>-Footnote-12394913
Ref: Deprecations and Removals<3>-Footnote-22394970
Node: Features<23>2395027
Ref: changelog id2982395158
Ref: 7c22395158
Ref: Features<23>-Footnote-12396466
Ref: Features<23>-Footnote-22396523
Ref: Features<23>-Footnote-32396580
Ref: Features<23>-Footnote-42396668
Ref: Features<23>-Footnote-52396725
Ref: Features<23>-Footnote-62396782
Ref: Features<23>-Footnote-72396839
Node: Bug Fixes<72>2396896
Ref: changelog id2992397025
Ref: 7c32397025
Ref: Bug Fixes<72>-Footnote-12397407
Ref: Bug Fixes<72>-Footnote-22397464
Ref: Bug Fixes<72>-Footnote-32397521
Node: Improved Documentation<26>2397578
Ref: changelog id3002397723
Ref: 7c42397723
Ref: Improved Documentation<26>-Footnote-12398112
Ref: Improved Documentation<26>-Footnote-22398169
Node: Trivial/Internal Changes<31>2398226
Ref: changelog id3012398349
Ref: 7c52398349
Ref: Trivial/Internal Changes<31>-Footnote-12398629
Node: pytest 3 7 4 2018-08-292398686
Ref: changelog pytest-3-7-4-2018-08-292398819
Ref: 7c62398819
Node: Bug Fixes<73>2398976
Ref: changelog id3022399084
Ref: 7c72399084
Ref: Bug Fixes<73>-Footnote-12399576
Ref: Bug Fixes<73>-Footnote-22399633
Ref: Bug Fixes<73>-Footnote-32399690
Ref: Bug Fixes<73>-Footnote-42399747
Node: Improved Documentation<27>2399804
Ref: changelog id3032399912
Ref: 7c82399912
Ref: Improved Documentation<27>-Footnote-12400054
Node: pytest 3 7 3 2018-08-262400111
Ref: changelog pytest-3-7-3-2018-08-262400244
Ref: 7c92400244
Node: Bug Fixes<74>2400459
Ref: changelog id3042400567
Ref: 7ca2400567
Ref: Bug Fixes<74>-Footnote-12401724
Ref: Bug Fixes<74>-Footnote-22401781
Ref: Bug Fixes<74>-Footnote-32401838
Ref: Bug Fixes<74>-Footnote-42401895
Ref: Bug Fixes<74>-Footnote-52401952
Ref: Bug Fixes<74>-Footnote-62402009
Ref: Bug Fixes<74>-Footnote-72402066
Ref: Bug Fixes<74>-Footnote-82402123
Node: Improved Documentation<28>2402180
Ref: changelog id3052402325
Ref: 7cb2402325
Ref: Improved Documentation<28>-Footnote-12402663
Ref: Improved Documentation<28>-Footnote-22402720
Ref: Improved Documentation<28>-Footnote-32402777
Node: Trivial/Internal Changes<32>2402834
Ref: changelog id3062402957
Ref: 7cc2402957
Ref: Trivial/Internal Changes<32>-Footnote-12403255
Ref: Trivial/Internal Changes<32>-Footnote-22403312
Ref: Trivial/Internal Changes<32>-Footnote-32403369
Node: pytest 3 7 2 2018-08-162403425
Ref: changelog pytest-3-7-2-2018-08-162403558
Ref: 7cd2403558
Node: Bug Fixes<75>2403715
Ref: changelog id3072403823
Ref: 7ce2403823
Ref: Bug Fixes<75>-Footnote-12404755
Ref: Bug Fixes<75>-Footnote-22404812
Ref: Bug Fixes<75>-Footnote-32404869
Ref: Bug Fixes<75>-Footnote-42404926
Ref: Bug Fixes<75>-Footnote-52404983
Ref: Bug Fixes<75>-Footnote-62405040
Ref: Bug Fixes<75>-Footnote-72405097
Ref: Bug Fixes<75>-Footnote-82405154
Node: Improved Documentation<29>2405211
Ref: changelog id3082405319
Ref: 7cf2405319
Ref: Improved Documentation<29>-Footnote-12405522
Node: pytest 3 7 1 2018-08-022405579
Ref: changelog pytest-3-7-1-2018-08-022405712
Ref: 7d02405712
Node: Bug Fixes<76>2405815
Ref: changelog id3092405888
Ref: 7d12405888
Ref: Bug Fixes<76>-Footnote-12407003
Ref: Bug Fixes<76>-Footnote-22407060
Ref: Bug Fixes<76>-Footnote-32407117
Ref: Bug Fixes<76>-Footnote-42407174
Ref: Bug Fixes<76>-Footnote-52407231
Ref: Bug Fixes<76>-Footnote-62407288
Ref: Bug Fixes<76>-Footnote-72407345
Ref: Bug Fixes<76>-Footnote-82407402
Node: pytest 3 7 0 2018-07-302407459
Ref: changelog pytest-3-7-0-2018-07-302407592
Ref: 7d22407592
Node: Deprecations and Removals<4>2407892
Ref: changelog id3102408001
Ref: 7d32408001
Ref: Deprecations and Removals<4>-Footnote-12408410
Ref: Deprecations and Removals<4>-Footnote-22408467
Node: Features<24>2408524
Ref: changelog id3112408655
Ref: 7d42408655
Ref: Features<24>-Footnote-12409541
Ref: Features<24>-Footnote-22409598
Ref: Features<24>-Footnote-32409655
Ref: Features<24>-Footnote-42409712
Ref: Features<24>-Footnote-52409769
Node: Bug Fixes<77>2409826
Ref: changelog id3122409955
Ref: 7d52409955
Ref: Bug Fixes<77>-Footnote-12410584
Ref: Bug Fixes<77>-Footnote-22410641
Ref: Bug Fixes<77>-Footnote-32410698
Node: Improved Documentation<30>2410754
Ref: changelog id3132410899
Ref: 7d62410899
Ref: Improved Documentation<30>-Footnote-12411267
Node: Trivial/Internal Changes<33>2411324
Ref: changelog id3142411447
Ref: 7d72411447
Ref: Trivial/Internal Changes<33>-Footnote-12411681
Node: pytest 3 6 4 2018-07-282411738
Ref: changelog pytest-3-6-4-2018-07-282411871
Ref: 7d82411871
Node: Bug Fixes<78>2412086
Ref: changelog id3152412194
Ref: 7d92412194
Ref: Bug Fixes<78>-Footnote-12412416
Node: Improved Documentation<31>2412472
Ref: changelog id3162412617
Ref: 7da2412617
Ref: Improved Documentation<31>-Footnote-12412848
Node: Trivial/Internal Changes<34>2412905
Ref: changelog id3172413028
Ref: 7db2413028
Ref: Trivial/Internal Changes<34>-Footnote-12413430
Ref: Trivial/Internal Changes<34>-Footnote-22413487
Ref: Trivial/Internal Changes<34>-Footnote-32413544
Ref: Trivial/Internal Changes<34>-Footnote-42413601
Node: pytest 3 6 3 2018-07-042413658
Ref: changelog pytest-3-6-3-2018-07-042413791
Ref: 7dc2413791
Node: Bug Fixes<79>2414006
Ref: changelog id3182414114
Ref: 7dd2414114
Ref: Bug Fixes<79>-Footnote-12414766
Ref: Bug Fixes<79>-Footnote-22414823
Ref: Bug Fixes<79>-Footnote-32414880
Ref: Bug Fixes<79>-Footnote-42414937
Ref: Bug Fixes<79>-Footnote-52414994
Node: Improved Documentation<32>2415051
Ref: changelog id3192415196
Ref: 7de2415196
Ref: Improved Documentation<32>-Footnote-12415417
Node: Trivial/Internal Changes<35>2415474
Ref: changelog id3202415597
Ref: 7df2415597
Ref: Trivial/Internal Changes<35>-Footnote-12416039
Ref: Trivial/Internal Changes<35>-Footnote-22416096
Ref: Trivial/Internal Changes<35>-Footnote-32416153
Node: pytest 3 6 2 2018-06-202416210
Ref: changelog pytest-3-6-2-2018-06-202416343
Ref: 7e02416343
Node: Bug Fixes<80>2416558
Ref: changelog id3212416666
Ref: 7e12416666
Ref: Bug Fixes<80>-Footnote-12417236
Ref: Bug Fixes<80>-Footnote-22417293
Ref: Bug Fixes<80>-Footnote-32417350
Ref: Bug Fixes<80>-Footnote-42417407
Node: Improved Documentation<33>2417464
Ref: changelog id3222417609
Ref: 7e22417609
Ref: Improved Documentation<33>-Footnote-12417779
Node: Trivial/Internal Changes<36>2417836
Ref: changelog id3232417959
Ref: 7e32417959
Ref: Trivial/Internal Changes<36>-Footnote-12418480
Ref: Trivial/Internal Changes<36>-Footnote-22418537
Ref: Trivial/Internal Changes<36>-Footnote-32418594
Ref: Trivial/Internal Changes<36>-Footnote-42418651
Node: pytest 3 6 1 2018-06-052418708
Ref: changelog pytest-3-6-1-2018-06-052418841
Ref: 7e42418841
Node: Bug Fixes<81>2419056
Ref: changelog id3242419164
Ref: 7e52419164
Ref: Bug Fixes<81>-Footnote-12419609
Ref: Bug Fixes<81>-Footnote-22419666
Ref: Bug Fixes<81>-Footnote-32419723
Node: Improved Documentation<34>2419780
Ref: changelog id3252419925
Ref: 7e62419925
Ref: Improved Documentation<34>-Footnote-12420135
Node: Trivial/Internal Changes<37>2420192
Ref: changelog id3262420315
Ref: 7e72420315
Ref: Trivial/Internal Changes<37>-Footnote-12420848
Ref: Trivial/Internal Changes<37>-Footnote-22420905
Ref: Trivial/Internal Changes<37>-Footnote-32420962
Ref: Trivial/Internal Changes<37>-Footnote-42421019
Node: pytest 3 6 0 2018-05-232421076
Ref: changelog pytest-3-6-0-2018-05-232421209
Ref: 7e82421209
Node: Features<25>2421450
Ref: changelog id3272421544
Ref: 7e92421544
Ref: Features<25>-Footnote-12423223
Ref: Features<25>-Footnote-22423280
Ref: Features<25>-Footnote-32423337
Ref: Features<25>-Footnote-42423394
Ref: Features<25>-Footnote-52423451
Ref: Features<25>-Footnote-62423508
Node: Bug Fixes<82>2423565
Ref: changelog id3282423694
Ref: 7ea2423694
Ref: Bug Fixes<82>-Footnote-12424279
Ref: Bug Fixes<82>-Footnote-22424336
Ref: Bug Fixes<82>-Footnote-32424393
Node: Improved Documentation<35>2424450
Ref: changelog id3292424595
Ref: 7eb2424595
Ref: Improved Documentation<35>-Footnote-12424823
Node: Trivial/Internal Changes<38>2424880
Ref: changelog id3302425003
Ref: 7ec2425003
Ref: Trivial/Internal Changes<38>-Footnote-12425838
Ref: Trivial/Internal Changes<38>-Footnote-22425895
Ref: Trivial/Internal Changes<38>-Footnote-32425952
Ref: Trivial/Internal Changes<38>-Footnote-42426009
Ref: Trivial/Internal Changes<38>-Footnote-52426066
Node: pytest 3 5 1 2018-04-232426123
Ref: changelog pytest-3-5-1-2018-04-232426256
Ref: 7ed2426256
Node: Bug Fixes<83>2426471
Ref: changelog id3312426579
Ref: 7ee2426579
Ref: Bug Fixes<83>-Footnote-12427270
Ref: Bug Fixes<83>-Footnote-22427327
Ref: Bug Fixes<83>-Footnote-32427384
Node: Improved Documentation<36>2427441
Ref: changelog id3322427586
Ref: 7ef2427586
Ref: Improved Documentation<36>-Footnote-12427822
Node: Trivial/Internal Changes<39>2427879
Ref: changelog id3332428002
Ref: 7f02428002
Ref: Trivial/Internal Changes<39>-Footnote-12428840
Ref: Trivial/Internal Changes<39>-Footnote-22428897
Ref: Trivial/Internal Changes<39>-Footnote-32428954
Ref: Trivial/Internal Changes<39>-Footnote-42429011
Ref: Trivial/Internal Changes<39>-Footnote-52429068
Node: pytest 3 5 0 2018-03-212429125
Ref: changelog pytest-3-5-0-2018-03-212429258
Ref: 7f12429258
Node: Deprecations and Removals<5>2429558
Ref: changelog id3342429667
Ref: 7f22429667
Ref: Deprecations and Removals<5>-Footnote-12430146
Ref: Deprecations and Removals<5>-Footnote-22430203
Node: Features<26>2430260
Ref: changelog id3352430391
Ref: 7f32430391
Ref: Features<26>-Footnote-12433658
Ref: Features<26>-Footnote-22433715
Ref: Features<26>-Footnote-32433772
Ref: Features<26>-Footnote-42433829
Ref: Features<26>-Footnote-52433886
Ref: Features<26>-Footnote-62433943
Ref: Features<26>-Footnote-72434000
Ref: Features<26>-Footnote-82434057
Ref: Features<26>-Footnote-92434114
Ref: Features<26>-Footnote-102434171
Ref: Features<26>-Footnote-112434229
Ref: Features<26>-Footnote-122434287
Ref: Features<26>-Footnote-132434345
Ref: Features<26>-Footnote-142434403
Ref: Features<26>-Footnote-152434461
Ref: Features<26>-Footnote-162434519
Ref: Features<26>-Footnote-172434577
Node: Bug Fixes<84>2434635
Ref: changelog id3362434764
Ref: 7f42434764
Ref: Bug Fixes<84>-Footnote-12435316
Ref: Bug Fixes<84>-Footnote-22435373
Ref: Bug Fixes<84>-Footnote-32435430
Node: Improved Documentation<37>2435487
Ref: changelog id3372435632
Ref: 7f52435632
Ref: Improved Documentation<37>-Footnote-12435803
Node: Trivial/Internal Changes<40>2435860
Ref: changelog id3382435983
Ref: 7f62435983
Ref: Trivial/Internal Changes<40>-Footnote-12437136
Ref: Trivial/Internal Changes<40>-Footnote-22437193
Ref: Trivial/Internal Changes<40>-Footnote-32437250
Ref: Trivial/Internal Changes<40>-Footnote-42437307
Ref: Trivial/Internal Changes<40>-Footnote-52437358
Ref: Trivial/Internal Changes<40>-Footnote-62437415
Ref: Trivial/Internal Changes<40>-Footnote-72437472
Ref: Trivial/Internal Changes<40>-Footnote-82437529
Ref: Trivial/Internal Changes<40>-Footnote-92437586
Ref: Trivial/Internal Changes<40>-Footnote-102437643
Ref: Trivial/Internal Changes<40>-Footnote-112437701
Node: pytest 3 4 2 2018-03-042437759
Ref: changelog pytest-3-4-2-2018-03-042437892
Ref: 7f72437892
Node: Bug Fixes<85>2438107
Ref: changelog id3392438215
Ref: 7f82438215
Ref: Bug Fixes<85>-Footnote-12438807
Ref: Bug Fixes<85>-Footnote-22438864
Ref: Bug Fixes<85>-Footnote-32438921
Ref: Bug Fixes<85>-Footnote-42438978
Ref: Bug Fixes<85>-Footnote-52439035
Node: Improved Documentation<38>2439092
Ref: changelog id3402439237
Ref: 7f92439237
Ref: Improved Documentation<38>-Footnote-12439396
Node: Trivial/Internal Changes<41>2439453
Ref: changelog id3412439576
Ref: 7fa2439576
Ref: Trivial/Internal Changes<41>-Footnote-12439732
Node: pytest 3 4 1 2018-02-202439789
Ref: changelog pytest-3-4-1-2018-02-202439922
Ref: 7fb2439922
Node: Bug Fixes<86>2440137
Ref: changelog id3422440245
Ref: 7fc2440245
Ref: Bug Fixes<86>-Footnote-12441604
Ref: Bug Fixes<86>-Footnote-22441661
Ref: Bug Fixes<86>-Footnote-32441718
Ref: Bug Fixes<86>-Footnote-42441775
Ref: Bug Fixes<86>-Footnote-52441832
Ref: Bug Fixes<86>-Footnote-62441889
Ref: Bug Fixes<86>-Footnote-72441946
Node: Improved Documentation<39>2442002
Ref: changelog id3432442147
Ref: 7fd2442147
Ref: Improved Documentation<39>-Footnote-12442364
Node: Trivial/Internal Changes<42>2442421
Ref: changelog id3442442544
Ref: 7fe2442544
Ref: Trivial/Internal Changes<42>-Footnote-12442989
Ref: Trivial/Internal Changes<42>-Footnote-22443046
Ref: Trivial/Internal Changes<42>-Footnote-32443103
Node: pytest 3 4 0 2018-01-302443159
Ref: changelog pytest-3-4-0-2018-01-302443292
Ref: 7ff2443292
Node: Deprecations and Removals<6>2443592
Ref: changelog id3452443701
Ref: 8002443701
Ref: Deprecations and Removals<6>-Footnote-12443988
Node: Features<27>2444045
Ref: changelog id3462444176
Ref: 8012444176
Ref: Features<27>-Footnote-12445973
Ref: Features<27>-Footnote-22446030
Ref: Features<27>-Footnote-32446087
Ref: Features<27>-Footnote-42446144
Ref: Features<27>-Footnote-52446201
Ref: Features<27>-Footnote-62446258
Ref: Features<27>-Footnote-72446315
Ref: Features<27>-Footnote-82446372
Ref: Features<27>-Footnote-92446429
Node: Bug Fixes<87>2446486
Ref: changelog id3472446615
Ref: 8022446615
Ref: Bug Fixes<87>-Footnote-12447729
Ref: Bug Fixes<87>-Footnote-22447786
Ref: Bug Fixes<87>-Footnote-32447843
Ref: Bug Fixes<87>-Footnote-42447900
Ref: Bug Fixes<87>-Footnote-52447957
Node: Improved Documentation<40>2448014
Ref: changelog id3482448159
Ref: 8032448159
Ref: Improved Documentation<40>-Footnote-12449090
Ref: Improved Documentation<40>-Footnote-22449147
Ref: Improved Documentation<40>-Footnote-32449204
Ref: Improved Documentation<40>-Footnote-42449261
Ref: Improved Documentation<40>-Footnote-52449318
Ref: Improved Documentation<40>-Footnote-62449375
Ref: Improved Documentation<40>-Footnote-72449432
Node: Trivial/Internal Changes<43>2449489
Ref: changelog id3492449612
Ref: 8042449612
Ref: Trivial/Internal Changes<43>-Footnote-12450272
Ref: Trivial/Internal Changes<43>-Footnote-22450329
Ref: Trivial/Internal Changes<43>-Footnote-32450386
Ref: Trivial/Internal Changes<43>-Footnote-42450443
Node: pytest 3 3 2 2017-12-252450500
Ref: changelog pytest-3-3-2-2017-12-252450633
Ref: 8052450633
Node: Bug Fixes<88>2450848
Ref: changelog id3502450956
Ref: 8062450956
Ref: Bug Fixes<88>-Footnote-12451501
Ref: Bug Fixes<88>-Footnote-22451558
Ref: Bug Fixes<88>-Footnote-32451615
Ref: Bug Fixes<88>-Footnote-42451672
Node: Improved Documentation<41>2451729
Ref: changelog id3512451874
Ref: 8072451874
Ref: Improved Documentation<41>-Footnote-12452071
Node: Trivial/Internal Changes<44>2452128
Ref: changelog id3522452251
Ref: 8082452251
Ref: Trivial/Internal Changes<44>-Footnote-12452515
Ref: Trivial/Internal Changes<44>-Footnote-22452572
Ref: Trivial/Internal Changes<44>-Footnote-32452629
Node: pytest 3 3 1 2017-12-052452686
Ref: changelog pytest-3-3-1-2017-12-052452819
Ref: 8092452819
Node: Bug Fixes<89>2453034
Ref: changelog id3532453142
Ref: 80a2453142
Ref: Bug Fixes<89>-Footnote-12453978
Ref: Bug Fixes<89>-Footnote-22454035
Ref: Bug Fixes<89>-Footnote-32454092
Ref: Bug Fixes<89>-Footnote-42454149
Ref: Bug Fixes<89>-Footnote-52454206
Ref: Bug Fixes<89>-Footnote-62454263
Node: Improved Documentation<42>2454320
Ref: changelog id3542454465
Ref: 80b2454465
Ref: Improved Documentation<42>-Footnote-12454640
Node: Trivial/Internal Changes<45>2454697
Ref: changelog id3552454820
Ref: 80c2454820
Ref: Trivial/Internal Changes<45>-Footnote-12455002
Node: pytest 3 3 0 2017-11-232455059
Ref: changelog pytest-3-3-0-2017-11-232455192
Ref: 80d2455192
Node: Deprecations and Removals<7>2455438
Ref: changelog id3562455547
Ref: 80e2455547
Ref: Deprecations and Removals<7>-Footnote-12457297
Ref: Deprecations and Removals<7>-Footnote-22457354
Ref: Deprecations and Removals<7>-Footnote-32457411
Ref: Deprecations and Removals<7>-Footnote-42457468
Ref: Deprecations and Removals<7>-Footnote-52457525
Ref: Deprecations and Removals<7>-Footnote-62457582
Node: Features<28>2457639
Ref: changelog id3572457770
Ref: 80f2457770
Ref: Features<28>-Footnote-12460136
Ref: Features<28>-Footnote-22460193
Ref: Features<28>-Footnote-32460250
Ref: Features<28>-Footnote-42460307
Ref: Features<28>-Footnote-52460364
Ref: Features<28>-Footnote-62460421
Ref: Features<28>-Footnote-72460471
Ref: Features<28>-Footnote-82460505
Ref: Features<28>-Footnote-92460562
Ref: Features<28>-Footnote-102460619
Ref: Features<28>-Footnote-112460677
Ref: Features<28>-Footnote-122460735
Ref: Features<28>-Footnote-132460793
Ref: Features<28>-Footnote-142460851
Node: Bug Fixes<90>2460908
Ref: changelog id3582461039
Ref: 8102461039
Ref: Bug Fixes<90>-Footnote-12462943
Ref: Bug Fixes<90>-Footnote-22463000
Ref: Bug Fixes<90>-Footnote-32463057
Ref: Bug Fixes<90>-Footnote-42463114
Ref: Bug Fixes<90>-Footnote-52463171
Ref: Bug Fixes<90>-Footnote-62463228
Ref: Bug Fixes<90>-Footnote-72463285
Ref: Bug Fixes<90>-Footnote-82463342
Ref: Bug Fixes<90>-Footnote-92463399
Ref: Bug Fixes<90>-Footnote-102463456
Node: Trivial/Internal Changes<46>2463514
Ref: changelog id3592463624
Ref: 8112463624
Ref: Trivial/Internal Changes<46>-Footnote-12464764
Ref: Trivial/Internal Changes<46>-Footnote-22464804
Ref: Trivial/Internal Changes<46>-Footnote-32464861
Ref: Trivial/Internal Changes<46>-Footnote-42464918
Ref: Trivial/Internal Changes<46>-Footnote-52464975
Ref: Trivial/Internal Changes<46>-Footnote-62465032
Ref: Trivial/Internal Changes<46>-Footnote-72465089
Ref: Trivial/Internal Changes<46>-Footnote-82465146
Ref: Trivial/Internal Changes<46>-Footnote-92465203
Ref: Trivial/Internal Changes<46>-Footnote-102465260
Node: pytest 3 2 5 2017-11-152465318
Ref: changelog pytest-3-2-5-2017-11-152465451
Ref: 8122465451
Node: Bug Fixes<91>2465554
Ref: changelog id3602465627
Ref: 8132465627
Ref: Bug Fixes<91>-Footnote-12465838
Node: pytest 3 2 4 2017-11-132465895
Ref: changelog pytest-3-2-4-2017-11-132466028
Ref: 8142466028
Node: Bug Fixes<92>2466185
Ref: changelog id3612466293
Ref: 8152466293
Ref: Bug Fixes<92>-Footnote-12467043
Ref: Bug Fixes<92>-Footnote-22467100
Ref: Bug Fixes<92>-Footnote-32467157
Ref: Bug Fixes<92>-Footnote-42467214
Ref: Bug Fixes<92>-Footnote-52467271
Node: Improved Documentation<43>2467328
Ref: changelog id3622467436
Ref: 8162467436
Ref: Improved Documentation<43>-Footnote-12468214
Ref: Improved Documentation<43>-Footnote-22468271
Ref: Improved Documentation<43>-Footnote-32468328
Ref: Improved Documentation<43>-Footnote-42468385
Ref: Improved Documentation<43>-Footnote-52468442
Ref: Improved Documentation<43>-Footnote-62468499
Ref: Improved Documentation<43>-Footnote-72468555
Node: pytest 3 2 3 2017-10-032468611
Ref: changelog pytest-3-2-3-2017-10-032468744
Ref: 8172468744
Node: Bug Fixes<93>2468959
Ref: changelog id3632469067
Ref: 8182469067
Ref: Bug Fixes<93>-Footnote-12469549
Ref: Bug Fixes<93>-Footnote-22469606
Ref: Bug Fixes<93>-Footnote-32469663
Node: Improved Documentation<44>2469720
Ref: changelog id3642469865
Ref: 8192469865
Ref: Improved Documentation<44>-Footnote-12470252
Ref: Improved Documentation<44>-Footnote-22470309
Node: Trivial/Internal Changes<47>2470366
Ref: changelog id3652470489
Ref: 81a2470489
Ref: Trivial/Internal Changes<47>-Footnote-12470842
Ref: Trivial/Internal Changes<47>-Footnote-22470899
Node: pytest 3 2 2 2017-09-062470956
Ref: changelog pytest-3-2-2-2017-09-062471089
Ref: 81b2471089
Node: Bug Fixes<94>2471304
Ref: changelog id3662471412
Ref: 81c2471412
Ref: Bug Fixes<94>-Footnote-12471939
Ref: Bug Fixes<94>-Footnote-22471996
Ref: Bug Fixes<94>-Footnote-32472053
Ref: Bug Fixes<94>-Footnote-42472110
Node: Improved Documentation<45>2472167
Ref: changelog id3672472312
Ref: 81d2472312
Ref: Improved Documentation<45>-Footnote-12472903
Ref: Improved Documentation<45>-Footnote-22472960
Node: Trivial/Internal Changes<48>2473017
Ref: changelog id3682473140
Ref: 81e2473140
Ref: Trivial/Internal Changes<48>-Footnote-12473496
Ref: Trivial/Internal Changes<48>-Footnote-22473553
Ref: Trivial/Internal Changes<48>-Footnote-32473610
Node: pytest 3 2 1 2017-08-082473667
Ref: changelog pytest-3-2-1-2017-08-082473800
Ref: 81f2473800
Node: Bug Fixes<95>2473957
Ref: changelog id3692474065
Ref: 8202474065
Ref: Bug Fixes<95>-Footnote-12474783
Ref: Bug Fixes<95>-Footnote-22474840
Ref: Bug Fixes<95>-Footnote-32474897
Ref: Bug Fixes<95>-Footnote-42474954
Node: Improved Documentation<46>2475011
Ref: changelog id3702475119
Ref: 8212475119
Ref: Improved Documentation<46>-Footnote-12475314
Node: pytest 3 2 0 2017-07-302475371
Ref: changelog pytest-3-2-0-2017-07-302475504
Ref: 8222475504
Node: Deprecations and Removals<8>2475804
Ref: changelog id3712475913
Ref: 8232475913
Ref: Deprecations and Removals<8>-Footnote-12476688
Ref: Deprecations and Removals<8>-Footnote-22476745
Ref: Deprecations and Removals<8>-Footnote-32476802
Node: Features<29>2476859
Ref: changelog id3722476990
Ref: 8242476990
Ref: Features<29>-Footnote-12479670
Ref: Features<29>-Footnote-22479727
Ref: Features<29>-Footnote-32479784
Ref: Features<29>-Footnote-42479841
Ref: Features<29>-Footnote-52479898
Ref: Features<29>-Footnote-62479955
Ref: Features<29>-Footnote-72480012
Ref: Features<29>-Footnote-82480069
Ref: Features<29>-Footnote-92480126
Ref: Features<29>-Footnote-102480183
Ref: Features<29>-Footnote-112480241
Ref: Features<29>-Footnote-122480284
Ref: Features<29>-Footnote-132480342
Node: Bug Fixes<96>2480399
Ref: changelog id3732480528
Ref: 8252480528
Ref: Bug Fixes<96>-Footnote-12481549
Ref: Bug Fixes<96>-Footnote-22481606
Ref: Bug Fixes<96>-Footnote-32481663
Ref: Bug Fixes<96>-Footnote-42481720
Ref: Bug Fixes<96>-Footnote-52481777
Ref: Bug Fixes<96>-Footnote-62481834
Ref: Bug Fixes<96>-Footnote-72481891
Ref: Bug Fixes<96>-Footnote-82481953
Ref: Bug Fixes<96>-Footnote-92482010
Node: Improved Documentation<47>2482066
Ref: changelog id3742482211
Ref: 8262482211
Ref: Improved Documentation<47>-Footnote-12482487
Ref: Improved Documentation<47>-Footnote-22482544
Node: Trivial/Internal Changes<49>2482600
Ref: changelog id3752482723
Ref: 8272482723
Ref: Trivial/Internal Changes<49>-Footnote-12483982
Ref: Trivial/Internal Changes<49>-Footnote-22484039
Ref: Trivial/Internal Changes<49>-Footnote-32484096
Ref: Trivial/Internal Changes<49>-Footnote-42484153
Ref: Trivial/Internal Changes<49>-Footnote-52484210
Ref: Trivial/Internal Changes<49>-Footnote-62484267
Ref: Trivial/Internal Changes<49>-Footnote-72484324
Ref: Trivial/Internal Changes<49>-Footnote-82484381
Ref: Trivial/Internal Changes<49>-Footnote-92484438
Ref: Trivial/Internal Changes<49>-Footnote-102484495
Node: pytest 3 1 3 2017-07-032484553
Ref: changelog pytest-3-1-3-2017-07-032484686
Ref: 8282484686
Node: Bug Fixes<97>2484903
Ref: changelog id3762485011
Ref: 8292485011
Ref: Bug Fixes<97>-Footnote-12486021
Ref: Bug Fixes<97>-Footnote-22486078
Ref: Bug Fixes<97>-Footnote-32486135
Ref: Bug Fixes<97>-Footnote-42486192
Ref: Bug Fixes<97>-Footnote-52486249
Ref: Bug Fixes<97>-Footnote-62486306
Node: Improved Documentation<48>2486363
Ref: changelog id3772486508
Ref: 82a2486508
Ref: Improved Documentation<48>-Footnote-12486719
Node: Trivial/Internal Changes<50>2486776
Ref: changelog id3782486899
Ref: 82b2486899
Ref: Trivial/Internal Changes<50>-Footnote-12487190
Ref: Trivial/Internal Changes<50>-Footnote-22487247
Node: pytest 3 1 2 2017-06-082487304
Ref: changelog pytest-3-1-2-2017-06-082487437
Ref: 82c2487437
Node: Bug Fixes<98>2487596
Ref: changelog id3792487704
Ref: 82d2487704
Node: Improved Documentation<49>2488527
Ref: changelog id3802488635
Ref: 82e2488635
Node: pytest 3 1 1 2017-05-302488919
Ref: changelog pytest-3-1-1-2017-05-302489045
Ref: 82f2489045
Node: Bug Fixes<99>2489204
Ref: changelog id3812489312
Ref: 8302489312
Node: Improved Documentation<50>2490000
Ref: changelog id3822490108
Ref: 8312490108
Node: 3 1 0 2017-05-222490236
Ref: changelog id3832490355
Ref: 8322490355
Node: New Features<2>2490492
Ref: changelog new-features2490576
Ref: 8332490576
Ref: New Features<2>-Footnote-12491955
Ref: New Features<2>-Footnote-22491993
Ref: New Features<2>-Footnote-32492049
Ref: New Features<2>-Footnote-42492083
Ref: New Features<2>-Footnote-52492138
Ref: New Features<2>-Footnote-62492173
Ref: New Features<2>-Footnote-72492228
Ref: New Features<2>-Footnote-82492263
Node: Changes2492308
Ref: changelog changes2492415
Ref: 8342492415
Ref: Changes-Footnote-12495488
Ref: Changes-Footnote-22495533
Ref: Changes-Footnote-32495565
Ref: Changes-Footnote-42495622
Ref: Changes-Footnote-52495654
Ref: Changes-Footnote-62495685
Ref: Changes-Footnote-72495742
Ref: Changes-Footnote-82495778
Ref: Changes-Footnote-92495811
Ref: Changes-Footnote-102495866
Ref: Changes-Footnote-112495924
Ref: Changes-Footnote-122495961
Ref: Changes-Footnote-132496002
Ref: Changes-Footnote-142496058
Ref: Changes-Footnote-152496116
Ref: Changes-Footnote-162496174
Ref: Changes-Footnote-172496220
Ref: Changes-Footnote-182496278
Ref: Changes-Footnote-192496317
Ref: Changes-Footnote-202496357
Ref: Changes-Footnote-212496398
Ref: Changes-Footnote-222496440
Ref: Changes-Footnote-232496498
Ref: Changes-Footnote-242496531
Ref: Changes-Footnote-252496577
Ref: Changes-Footnote-262496635
Node: Bug Fixes<100>2496681
Ref: changelog id3842496764
Ref: 8352496764
Ref: Bug Fixes<100>-Footnote-12497893
Ref: Bug Fixes<100>-Footnote-22497950
Ref: Bug Fixes<100>-Footnote-32497986
Ref: Bug Fixes<100>-Footnote-42498043
Ref: Bug Fixes<100>-Footnote-52498078
Ref: Bug Fixes<100>-Footnote-62498117
Ref: Bug Fixes<100>-Footnote-72498174
Ref: Bug Fixes<100>-Footnote-82498208
Ref: Bug Fixes<100>-Footnote-92498246
Ref: Bug Fixes<100>-Footnote-102498303
Ref: Bug Fixes<100>-Footnote-112498346
Ref: Bug Fixes<100>-Footnote-122498404
Ref: Bug Fixes<100>-Footnote-132498444
Ref: Bug Fixes<100>-Footnote-142498502
Ref: Bug Fixes<100>-Footnote-152498543
Node: 3 0 7 2017-03-142498581
Ref: changelog id3852498693
Ref: 8362498693
Ref: 3 0 7 2017-03-14-Footnote-12500540
Ref: 3 0 7 2017-03-14-Footnote-22500597
Ref: 3 0 7 2017-03-14-Footnote-32500632
Ref: 3 0 7 2017-03-14-Footnote-42500668
Ref: 3 0 7 2017-03-14-Footnote-52500725
Ref: 3 0 7 2017-03-14-Footnote-62500756
Ref: 3 0 7 2017-03-14-Footnote-72500788
Ref: 3 0 7 2017-03-14-Footnote-82500845
Ref: 3 0 7 2017-03-14-Footnote-92500881
Ref: 3 0 7 2017-03-14-Footnote-102500938
Ref: 3 0 7 2017-03-14-Footnote-112500972
Ref: 3 0 7 2017-03-14-Footnote-122501011
Ref: 3 0 7 2017-03-14-Footnote-132501054
Ref: 3 0 7 2017-03-14-Footnote-142501112
Ref: 3 0 7 2017-03-14-Footnote-152501151
Ref: 3 0 7 2017-03-14-Footnote-162501190
Ref: 3 0 7 2017-03-14-Footnote-172501248
Ref: 3 0 7 2017-03-14-Footnote-182501284
Ref: 3 0 7 2017-03-14-Footnote-192501342
Ref: 3 0 7 2017-03-14-Footnote-202501377
Node: 3 0 6 2017-01-222501416
Ref: changelog id3862501528
Ref: 8372501528
Ref: 3 0 6 2017-01-22-Footnote-12503150
Ref: 3 0 6 2017-01-22-Footnote-22503207
Ref: 3 0 6 2017-01-22-Footnote-32503245
Ref: 3 0 6 2017-01-22-Footnote-42503290
Ref: 3 0 6 2017-01-22-Footnote-52503347
Ref: 3 0 6 2017-01-22-Footnote-62503383
Ref: 3 0 6 2017-01-22-Footnote-72503440
Ref: 3 0 6 2017-01-22-Footnote-82503478
Ref: 3 0 6 2017-01-22-Footnote-92503535
Ref: 3 0 6 2017-01-22-Footnote-102503570
Ref: 3 0 6 2017-01-22-Footnote-112503628
Ref: 3 0 6 2017-01-22-Footnote-122503667
Ref: 3 0 6 2017-01-22-Footnote-132503725
Ref: 3 0 6 2017-01-22-Footnote-142503771
Ref: 3 0 6 2017-01-22-Footnote-152503810
Ref: 3 0 6 2017-01-22-Footnote-162503868
Ref: 3 0 6 2017-01-22-Footnote-172503902
Node: 3 0 5 2016-12-052503936
Ref: changelog id3872504048
Ref: 8382504048
Ref: 3 0 5 2016-12-05-Footnote-12506756
Ref: 3 0 5 2016-12-05-Footnote-22506813
Ref: 3 0 5 2016-12-05-Footnote-32506849
Ref: 3 0 5 2016-12-05-Footnote-42506880
Ref: 3 0 5 2016-12-05-Footnote-52506937
Ref: 3 0 5 2016-12-05-Footnote-62506994
Ref: 3 0 5 2016-12-05-Footnote-72507025
Ref: 3 0 5 2016-12-05-Footnote-82507081
Ref: 3 0 5 2016-12-05-Footnote-92507120
Ref: 3 0 5 2016-12-05-Footnote-102507176
Ref: 3 0 5 2016-12-05-Footnote-112507216
Ref: 3 0 5 2016-12-05-Footnote-122507250
Ref: 3 0 5 2016-12-05-Footnote-132507282
Ref: 3 0 5 2016-12-05-Footnote-142507340
Ref: 3 0 5 2016-12-05-Footnote-152507381
Ref: 3 0 5 2016-12-05-Footnote-162507420
Ref: 3 0 5 2016-12-05-Footnote-172507478
Ref: 3 0 5 2016-12-05-Footnote-182507514
Ref: 3 0 5 2016-12-05-Footnote-192507572
Ref: 3 0 5 2016-12-05-Footnote-202507608
Ref: 3 0 5 2016-12-05-Footnote-212507647
Ref: 3 0 5 2016-12-05-Footnote-222507686
Ref: 3 0 5 2016-12-05-Footnote-232507744
Ref: 3 0 5 2016-12-05-Footnote-242507778
Ref: 3 0 5 2016-12-05-Footnote-252507817
Ref: 3 0 5 2016-12-05-Footnote-262507875
Ref: 3 0 5 2016-12-05-Footnote-272507910
Ref: 3 0 5 2016-12-05-Footnote-282507949
Ref: 3 0 5 2016-12-05-Footnote-292508007
Node: 3 0 4 2016-11-092508042
Ref: changelog id3882508154
Ref: 8392508154
Ref: 3 0 4 2016-11-09-Footnote-12510054
Ref: 3 0 4 2016-11-09-Footnote-22510111
Ref: 3 0 4 2016-11-09-Footnote-32510145
Ref: 3 0 4 2016-11-09-Footnote-42510183
Ref: 3 0 4 2016-11-09-Footnote-52510240
Ref: 3 0 4 2016-11-09-Footnote-62510277
Ref: 3 0 4 2016-11-09-Footnote-72510313
Ref: 3 0 4 2016-11-09-Footnote-82510351
Ref: 3 0 4 2016-11-09-Footnote-92510408
Ref: 3 0 4 2016-11-09-Footnote-102510446
Ref: 3 0 4 2016-11-09-Footnote-112510504
Ref: 3 0 4 2016-11-09-Footnote-122510543
Ref: 3 0 4 2016-11-09-Footnote-132510601
Ref: 3 0 4 2016-11-09-Footnote-142510647
Ref: 3 0 4 2016-11-09-Footnote-152510686
Ref: 3 0 4 2016-11-09-Footnote-162510743
Ref: 3 0 4 2016-11-09-Footnote-172510779
Ref: 3 0 4 2016-11-09-Footnote-182510816
Ref: 3 0 4 2016-11-09-Footnote-192510874
Ref: 3 0 4 2016-11-09-Footnote-202510911
Ref: 3 0 4 2016-11-09-Footnote-212510950
Ref: 3 0 4 2016-11-09-Footnote-222511008
Node: 3 0 3 2016-09-282511042
Ref: changelog id3892511154
Ref: 83a2511154
Ref: 3 0 3 2016-09-28-Footnote-12512156
Ref: 3 0 3 2016-09-28-Footnote-22512213
Ref: 3 0 3 2016-09-28-Footnote-32512248
Ref: 3 0 3 2016-09-28-Footnote-42512286
Ref: 3 0 3 2016-09-28-Footnote-52512343
Ref: 3 0 3 2016-09-28-Footnote-62512381
Ref: 3 0 3 2016-09-28-Footnote-72512438
Ref: 3 0 3 2016-09-28-Footnote-82512476
Ref: 3 0 3 2016-09-28-Footnote-92512533
Ref: 3 0 3 2016-09-28-Footnote-102512565
Ref: 3 0 3 2016-09-28-Footnote-112512622
Node: 3 0 2 2016-09-012512661
Ref: changelog id3902512773
Ref: 83b2512773
Ref: 3 0 2 2016-09-01-Footnote-12514216
Ref: 3 0 2 2016-09-01-Footnote-22514273
Ref: 3 0 2 2016-09-01-Footnote-32514306
Ref: 3 0 2 2016-09-01-Footnote-42514344
Ref: 3 0 2 2016-09-01-Footnote-52514378
Ref: 3 0 2 2016-09-01-Footnote-62514435
Ref: 3 0 2 2016-09-01-Footnote-72514467
Ref: 3 0 2 2016-09-01-Footnote-82514524
Ref: 3 0 2 2016-09-01-Footnote-92514558
Ref: 3 0 2 2016-09-01-Footnote-102514596
Ref: 3 0 2 2016-09-01-Footnote-112514652
Ref: 3 0 2 2016-09-01-Footnote-122514710
Ref: 3 0 2 2016-09-01-Footnote-132514743
Ref: 3 0 2 2016-09-01-Footnote-142514781
Node: 3 0 1 2016-08-232514839
Ref: changelog id3912514951
Ref: 83c2514951
Ref: 3 0 1 2016-08-23-Footnote-12515767
Ref: 3 0 1 2016-08-23-Footnote-22515824
Ref: 3 0 1 2016-08-23-Footnote-32515858
Ref: 3 0 1 2016-08-23-Footnote-42515898
Ref: 3 0 1 2016-08-23-Footnote-52515936
Ref: 3 0 1 2016-08-23-Footnote-62515993
Ref: 3 0 1 2016-08-23-Footnote-72516033
Ref: 3 0 1 2016-08-23-Footnote-82516070
Ref: 3 0 1 2016-08-23-Footnote-92516108
Ref: 3 0 1 2016-08-23-Footnote-102516165
Ref: 3 0 1 2016-08-23-Footnote-112516207
Ref: 3 0 1 2016-08-23-Footnote-122516246
Node: 3 0 0 2016-08-182516282
Ref: changelog id3922516394
Ref: 83d2516394
Ref: changelog release-3-0-02516394
Ref: 5492516394
Ref: 3 0 0 2016-08-18-Footnote-12533024
Ref: 3 0 0 2016-08-18-Footnote-22533056
Ref: 3 0 0 2016-08-18-Footnote-32533096
Ref: 3 0 0 2016-08-18-Footnote-42533151
Ref: 3 0 0 2016-08-18-Footnote-52533208
Ref: 3 0 0 2016-08-18-Footnote-62533248
Ref: 3 0 0 2016-08-18-Footnote-72533303
Ref: 3 0 0 2016-08-18-Footnote-82533360
Ref: 3 0 0 2016-08-18-Footnote-92533399
Ref: 3 0 0 2016-08-18-Footnote-102533455
Ref: 3 0 0 2016-08-18-Footnote-112533492
Ref: 3 0 0 2016-08-18-Footnote-122533548
Ref: 3 0 0 2016-08-18-Footnote-132533606
Ref: 3 0 0 2016-08-18-Footnote-142533648
Ref: 3 0 0 2016-08-18-Footnote-152533685
Ref: 3 0 0 2016-08-18-Footnote-162533741
Ref: 3 0 0 2016-08-18-Footnote-172533796
Ref: 3 0 0 2016-08-18-Footnote-182533833
Ref: 3 0 0 2016-08-18-Footnote-192533874
Ref: 3 0 0 2016-08-18-Footnote-202533911
Ref: 3 0 0 2016-08-18-Footnote-212533948
Ref: 3 0 0 2016-08-18-Footnote-222534004
Ref: 3 0 0 2016-08-18-Footnote-232534062
Ref: 3 0 0 2016-08-18-Footnote-242534097
Ref: 3 0 0 2016-08-18-Footnote-252534135
Ref: 3 0 0 2016-08-18-Footnote-262534191
Ref: 3 0 0 2016-08-18-Footnote-272534231
Ref: 3 0 0 2016-08-18-Footnote-282534287
Ref: 3 0 0 2016-08-18-Footnote-292534327
Ref: 3 0 0 2016-08-18-Footnote-302534383
Ref: 3 0 0 2016-08-18-Footnote-312534440
Ref: 3 0 0 2016-08-18-Footnote-322534477
Ref: 3 0 0 2016-08-18-Footnote-332534533
Ref: 3 0 0 2016-08-18-Footnote-342534574
Ref: 3 0 0 2016-08-18-Footnote-352534630
Ref: 3 0 0 2016-08-18-Footnote-362534666
Ref: 3 0 0 2016-08-18-Footnote-372534705
Ref: 3 0 0 2016-08-18-Footnote-382534743
Ref: 3 0 0 2016-08-18-Footnote-392534801
Ref: 3 0 0 2016-08-18-Footnote-402534841
Ref: 3 0 0 2016-08-18-Footnote-412534878
Ref: 3 0 0 2016-08-18-Footnote-422534934
Ref: 3 0 0 2016-08-18-Footnote-432534992
Ref: 3 0 0 2016-08-18-Footnote-442535024
Ref: 3 0 0 2016-08-18-Footnote-452535060
Ref: 3 0 0 2016-08-18-Footnote-462535096
Ref: 3 0 0 2016-08-18-Footnote-472535135
Ref: 3 0 0 2016-08-18-Footnote-482535172
Ref: 3 0 0 2016-08-18-Footnote-492535208
Ref: 3 0 0 2016-08-18-Footnote-502535243
Ref: 3 0 0 2016-08-18-Footnote-512535275
Ref: 3 0 0 2016-08-18-Footnote-522535311
Ref: 3 0 0 2016-08-18-Footnote-532535369
Ref: 3 0 0 2016-08-18-Footnote-542535405
Ref: 3 0 0 2016-08-18-Footnote-552535441
Ref: 3 0 0 2016-08-18-Footnote-562535476
Ref: 3 0 0 2016-08-18-Footnote-572535515
Ref: 3 0 0 2016-08-18-Footnote-582535548
Ref: 3 0 0 2016-08-18-Footnote-592535586
Ref: 3 0 0 2016-08-18-Footnote-602535642
Ref: 3 0 0 2016-08-18-Footnote-612535680
Ref: 3 0 0 2016-08-18-Footnote-622535738
Ref: 3 0 0 2016-08-18-Footnote-632535776
Ref: 3 0 0 2016-08-18-Footnote-642535832
Ref: 3 0 0 2016-08-18-Footnote-652535867
Ref: 3 0 0 2016-08-18-Footnote-662535923
Ref: 3 0 0 2016-08-18-Footnote-672535979
Ref: 3 0 0 2016-08-18-Footnote-682536016
Ref: 3 0 0 2016-08-18-Footnote-692536055
Ref: 3 0 0 2016-08-18-Footnote-702536113
Ref: 3 0 0 2016-08-18-Footnote-712536150
Ref: 3 0 0 2016-08-18-Footnote-722536189
Ref: 3 0 0 2016-08-18-Footnote-732536225
Ref: 3 0 0 2016-08-18-Footnote-742536281
Ref: 3 0 0 2016-08-18-Footnote-752536317
Ref: 3 0 0 2016-08-18-Footnote-762536373
Ref: 3 0 0 2016-08-18-Footnote-772536407
Ref: 3 0 0 2016-08-18-Footnote-782536446
Ref: 3 0 0 2016-08-18-Footnote-792536482
Ref: 3 0 0 2016-08-18-Footnote-802536538
Ref: 3 0 0 2016-08-18-Footnote-812536596
Ref: 3 0 0 2016-08-18-Footnote-822536654
Ref: 3 0 0 2016-08-18-Footnote-832536691
Ref: 3 0 0 2016-08-18-Footnote-842536747
Ref: 3 0 0 2016-08-18-Footnote-852536784
Ref: 3 0 0 2016-08-18-Footnote-862536821
Ref: 3 0 0 2016-08-18-Footnote-872536879
Ref: 3 0 0 2016-08-18-Footnote-882536915
Ref: 3 0 0 2016-08-18-Footnote-892536971
Ref: 3 0 0 2016-08-18-Footnote-902537004
Ref: 3 0 0 2016-08-18-Footnote-912537039
Ref: 3 0 0 2016-08-18-Footnote-922537078
Ref: 3 0 0 2016-08-18-Footnote-932537136
Ref: 3 0 0 2016-08-18-Footnote-942537174
Ref: 3 0 0 2016-08-18-Footnote-952537230
Ref: 3 0 0 2016-08-18-Footnote-962537267
Ref: 3 0 0 2016-08-18-Footnote-972537323
Ref: 3 0 0 2016-08-18-Footnote-982537360
Ref: 3 0 0 2016-08-18-Footnote-992537418
Ref: 3 0 0 2016-08-18-Footnote-1002537455
Ref: 3 0 0 2016-08-18-Footnote-1012537493
Ref: 3 0 0 2016-08-18-Footnote-1022537552
Ref: 3 0 0 2016-08-18-Footnote-1032537592
Ref: 3 0 0 2016-08-18-Footnote-1042537648
Ref: 3 0 0 2016-08-18-Footnote-1052537688
Ref: 3 0 0 2016-08-18-Footnote-1062537745
Ref: 3 0 0 2016-08-18-Footnote-1072537785
Ref: 3 0 0 2016-08-18-Footnote-1082537842
Ref: 3 0 0 2016-08-18-Footnote-1092537884
Ref: 3 0 0 2016-08-18-Footnote-1102537922
Ref: 3 0 0 2016-08-18-Footnote-1112537979
Ref: 3 0 0 2016-08-18-Footnote-1122538038
Ref: 3 0 0 2016-08-18-Footnote-1132538096
Ref: 3 0 0 2016-08-18-Footnote-1142538155
Ref: 3 0 0 2016-08-18-Footnote-1152538214
Ref: 3 0 0 2016-08-18-Footnote-1162538273
Ref: 3 0 0 2016-08-18-Footnote-1172538310
Ref: 3 0 0 2016-08-18-Footnote-1182538348
Ref: 3 0 0 2016-08-18-Footnote-1192538388
Ref: 3 0 0 2016-08-18-Footnote-1202538426
Ref: 3 0 0 2016-08-18-Footnote-1212538485
Ref: 3 0 0 2016-08-18-Footnote-1222538523
Ref: 3 0 0 2016-08-18-Footnote-1232538561
Ref: 3 0 0 2016-08-18-Footnote-1242538620
Ref: 3 0 0 2016-08-18-Footnote-1252538659
Ref: 3 0 0 2016-08-18-Footnote-1262538699
Ref: 3 0 0 2016-08-18-Footnote-1272538758
Ref: 3 0 0 2016-08-18-Footnote-1282538796
Ref: 3 0 0 2016-08-18-Footnote-1292538855
Ref: 3 0 0 2016-08-18-Footnote-1302538902
Ref: 3 0 0 2016-08-18-Footnote-1312538960
Ref: 3 0 0 2016-08-18-Footnote-1322539000
Ref: 3 0 0 2016-08-18-Footnote-1332539058
Ref: 3 0 0 2016-08-18-Footnote-1342539095
Ref: 3 0 0 2016-08-18-Footnote-1352539132
Ref: 3 0 0 2016-08-18-Footnote-1362539170
Ref: 3 0 0 2016-08-18-Footnote-1372539229
Ref: 3 0 0 2016-08-18-Footnote-1382539288
Ref: 3 0 0 2016-08-18-Footnote-1392539324
Ref: 3 0 0 2016-08-18-Footnote-1402539362
Ref: 3 0 0 2016-08-18-Footnote-1412539420
Ref: 3 0 0 2016-08-18-Footnote-1422539459
Ref: 3 0 0 2016-08-18-Footnote-1432539501
Ref: 3 0 0 2016-08-18-Footnote-1442539560
Ref: 3 0 0 2016-08-18-Footnote-1452539600
Ref: 3 0 0 2016-08-18-Footnote-1462539642
Ref: 3 0 0 2016-08-18-Footnote-1472539680
Ref: 3 0 0 2016-08-18-Footnote-1482539737
Ref: 3 0 0 2016-08-18-Footnote-1492539773
Ref: 3 0 0 2016-08-18-Footnote-1502539812
Ref: 3 0 0 2016-08-18-Footnote-1512539869
Ref: 3 0 0 2016-08-18-Footnote-1522539928
Ref: 3 0 0 2016-08-18-Footnote-1532539970
Ref: 3 0 0 2016-08-18-Footnote-1542540028
Ref: 3 0 0 2016-08-18-Footnote-1552540070
Ref: 3 0 0 2016-08-18-Footnote-1562540127
Ref: 3 0 0 2016-08-18-Footnote-1572540165
Node: 2 9 2 2016-05-312540202
Ref: changelog id3932540314
Ref: 83e2540314
Ref: 2 9 2 2016-05-31-Footnote-12541484
Ref: 2 9 2 2016-05-31-Footnote-22541540
Ref: 2 9 2 2016-05-31-Footnote-32541585
Ref: 2 9 2 2016-05-31-Footnote-42541621
Ref: 2 9 2 2016-05-31-Footnote-52541678
Ref: 2 9 2 2016-05-31-Footnote-62541714
Ref: 2 9 2 2016-05-31-Footnote-72541769
Ref: 2 9 2 2016-05-31-Footnote-82541810
Ref: 2 9 2 2016-05-31-Footnote-92541865
Ref: 2 9 2 2016-05-31-Footnote-102541901
Ref: 2 9 2 2016-05-31-Footnote-112541947
Ref: 2 9 2 2016-05-31-Footnote-122541984
Node: 2 9 1 2016-03-172542022
Ref: changelog id3942542134
Ref: 83f2542134
Ref: 2 9 1 2016-03-17-Footnote-12543185
Ref: 2 9 1 2016-03-17-Footnote-22543223
Ref: 2 9 1 2016-03-17-Footnote-32543280
Ref: 2 9 1 2016-03-17-Footnote-42543318
Ref: 2 9 1 2016-03-17-Footnote-52543374
Ref: 2 9 1 2016-03-17-Footnote-62543410
Ref: 2 9 1 2016-03-17-Footnote-72543465
Ref: 2 9 1 2016-03-17-Footnote-82543521
Ref: 2 9 1 2016-03-17-Footnote-92543557
Ref: 2 9 1 2016-03-17-Footnote-102543595
Ref: 2 9 1 2016-03-17-Footnote-112543653
Ref: 2 9 1 2016-03-17-Footnote-122543710
Node: 2 9 0 2016-02-292543767
Ref: changelog id3952543879
Ref: 8402543879
Ref: 2 9 0 2016-02-29-Footnote-12548213
Ref: 2 9 0 2016-02-29-Footnote-22548256
Ref: 2 9 0 2016-02-29-Footnote-32548311
Ref: 2 9 0 2016-02-29-Footnote-42548342
Ref: 2 9 0 2016-02-29-Footnote-52548380
Ref: 2 9 0 2016-02-29-Footnote-62548420
Ref: 2 9 0 2016-02-29-Footnote-72548455
Ref: 2 9 0 2016-02-29-Footnote-82548493
Ref: 2 9 0 2016-02-29-Footnote-92548548
Ref: 2 9 0 2016-02-29-Footnote-102548586
Ref: 2 9 0 2016-02-29-Footnote-112548621
Ref: 2 9 0 2016-02-29-Footnote-122548660
Ref: 2 9 0 2016-02-29-Footnote-132548716
Ref: 2 9 0 2016-02-29-Footnote-142548774
Ref: 2 9 0 2016-02-29-Footnote-152548808
Ref: 2 9 0 2016-02-29-Footnote-162548854
Ref: 2 9 0 2016-02-29-Footnote-172548912
Ref: 2 9 0 2016-02-29-Footnote-182548950
Ref: 2 9 0 2016-02-29-Footnote-192548989
Ref: 2 9 0 2016-02-29-Footnote-202549028
Ref: 2 9 0 2016-02-29-Footnote-212549084
Ref: 2 9 0 2016-02-29-Footnote-222549125
Ref: 2 9 0 2016-02-29-Footnote-232549169
Ref: 2 9 0 2016-02-29-Footnote-242549227
Ref: 2 9 0 2016-02-29-Footnote-252549262
Ref: 2 9 0 2016-02-29-Footnote-262549319
Ref: 2 9 0 2016-02-29-Footnote-272549377
Ref: 2 9 0 2016-02-29-Footnote-282549416
Ref: 2 9 0 2016-02-29-Footnote-292549453
Ref: 2 9 0 2016-02-29-Footnote-302549511
Ref: 2 9 0 2016-02-29-Footnote-312549545
Ref: 2 9 0 2016-02-29-Footnote-322549583
Node: 2 8 7 2016-01-242549641
Ref: changelog id3962549753
Ref: 8412549753
Node: 2 8 6 2016-01-212549873
Ref: changelog id3972549985
Ref: 8422549985
Node: 2 8 5 2015-12-112551270
Ref: changelog id3982551382
Ref: 8432551382
Node: 2 8 4 2015-12-062551999
Ref: changelog id3992552111
Ref: 8442552111
Node: 2 8 3 2015-11-182553040
Ref: changelog id4002553152
Ref: 8452553152
Node: 2 8 2 2015-10-072554252
Ref: changelog id4012554364
Ref: 8462554364
Node: 2 8 1 2015-09-292555246
Ref: changelog id4022555358
Ref: 8472555358
Node: 2 8 0 2015-09-182557576
Ref: changelog id4032557688
Ref: 8482557688
Ref: 2 8 0 2015-09-18-Footnote-12567109
Node: 2 7 3 2015-09-152567151
Ref: changelog id4042567263
Ref: 8492567263
Node: 2 7 2 2015-06-232569309
Ref: changelog id4052569421
Ref: 84a2569421
Node: 2 7 1 2015-05-192570550
Ref: changelog id4062570662
Ref: 84b2570662
Node: 2 7 0 2015-03-262572108
Ref: changelog id4072572220
Ref: 84c2572220
Node: 2 6 4 2014-10-242575551
Ref: changelog id4082575663
Ref: 84d2575663
Node: 2 6 3 2014-09-242576649
Ref: changelog id4092576761
Ref: 84e2576761
Node: 2 6 2 2014-09-052577910
Ref: changelog id4102578022
Ref: 84f2578022
Node: 2 6 1 2014-08-072579092
Ref: changelog id4112579191
Ref: 8502579191
Node: 2 62580587
Ref: changelog id4122580686
Ref: 8512580686
Node: 2 5 2 2014-01-292585191
Ref: changelog id4132585290
Ref: 8522585290
Node: 2 5 1 2013-12-172586400
Ref: changelog id4142586512
Ref: 8532586512
Node: 2 5 0 2013-12-122587216
Ref: changelog id4152587328
Ref: 8542587328
Ref: 2 5 0 2013-12-12-Footnote-12593525
Ref: 2 5 0 2013-12-12-Footnote-22593567
Node: 2 4 2 2013-10-042593609
Ref: changelog id4162593721
Ref: 8552593721
Node: 2 4 1 2013-10-022594999
Ref: changelog id4172595098
Ref: 8562595098
Node: 2 42595709
Ref: changelog id4182595808
Ref: 8572595808
Node: 2 3 5 2013-04-302603281
Ref: changelog id4192603380
Ref: 8582603380
Node: 2 3 4 2012-11-202605750
Ref: changelog id4202605862
Ref: 8592605862
Node: 2 3 3 2012-11-062607015
Ref: changelog id4212607127
Ref: 85a2607127
Node: 2 3 2 2012-10-252608392
Ref: changelog id4222608504
Ref: 85b2608504
Node: 2 3 1 2012-10-202609649
Ref: changelog id4232609761
Ref: 85c2609761
Node: 2 3 0 2012-10-192610234
Ref: changelog id4242610346
Ref: 85d2610346
Node: 2 2 4 2012-05-222614045
Ref: changelog id4252614157
Ref: 85e2614157
Node: 2 2 3 2012-02-052615020
Ref: changelog id4262615132
Ref: 85f2615132
Node: 2 2 2 2012-02-052615244
Ref: changelog id4272615356
Ref: 8602615356
Node: 2 2 1 2011-12-162616391
Ref: changelog id4282616503
Ref: 8612616503
Node: 2 2 0 2011-11-182617438
Ref: changelog id4292617550
Ref: 8622617550
Node: 2 1 3 2011-10-182619556
Ref: changelog id4302619668
Ref: 8632619668
Node: 2 1 2 2011-09-242620090
Ref: changelog id4312620191
Ref: 8642620191
Node: 2 1 12620716
Ref: changelog id4322620817
Ref: 8652620817
Node: 2 1 0 2011-07-092621510
Ref: changelog id4332621611
Ref: 8662621611
Node: 2 0 3 2011-05-112622706
Ref: changelog id4342622818
Ref: 8672622818
Node: 2 0 2 2011-03-092623514
Ref: changelog id4352623626
Ref: 8682623626
Node: 2 0 1 2011-02-072625810
Ref: changelog id4362625922
Ref: 8692625922
Node: 2 0 0 2010-11-252628608
Ref: changelog id4372628720
Ref: 86a2628720
Node: 1 3 4 2010-09-142631446
Ref: changelog id4382631558
Ref: 86b2631558
Node: 1 3 3 2010-07-302631990
Ref: changelog id4392632102
Ref: 86c2632102
Node: 1 3 2 2010-07-082632806
Ref: changelog id4402632918
Ref: 86d2632918
Node: 1 3 1 2010-05-252636389
Ref: changelog id4412636501
Ref: 86e2636501
Node: 1 3 0 2010-05-052639606
Ref: changelog id4422639718
Ref: 86f2639718
Node: 1 2 0 2010-01-182642518
Ref: changelog id4432642630
Ref: 8702642630
Node: 1 1 1 2009-11-242644593
Ref: changelog id4442644705
Ref: 8712644705
Node: 1 1 0 2009-11-052648290
Ref: changelog id4452648391
Ref: 8722648391
Node: 1 0 32649131
Ref: changelog id4462649232
Ref: 8732649232
Node: 1 0 2 2009-08-272652366
Ref: changelog id4472652467
Ref: 8742652467
Node: 1 0 1 2009-08-192652711
Ref: changelog id4482652823
Ref: 8752652823
Node: 1 0 0 2009-08-042654133
Ref: changelog id4492654247
Ref: 8762654247
Node: 1 0 0b9 2009-07-312654419
Ref: changelog b9-2009-07-312654535
Ref: 8772654535
Node: 1 0 0b8 2009-07-222655891
Ref: changelog b8-2009-07-222655998
Ref: 8782655998
Node: 1 0 0b72657079
Ref: changelog b72657186
Ref: 8792657186
Node: 1 0 0b3 2009-06-192657991
Ref: changelog b3-2009-06-192658087
Ref: 87a2658087
Node: 1 0 0b12658540
Ref: changelog b12658634
Ref: 87b2658634
Node: 0 9 22659247
Ref: changelog id4502659328
Ref: 87c2659328
Node: 0 9 12660336
Ref: changelog id4512660401
Ref: 87d2660401
Node: Index2663323
Ref: 4892723878
Ref: contents toc2723908

End Tag Table


Local Variables:
coding: utf-8
End:
